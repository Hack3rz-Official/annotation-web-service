[{"_id":{"language":"JAVA","lexingTokens":[32,102,65,102,65,102,63,25,102,65,102,65,102,65,102,63,25,102,65,102,65,102,65,102,63,25,102,65,102,65,102,65,102,63,25,102,65,102,65,102,65,102,65,102,63,25,102,65,102,65,102,65,102,63,25,102,65,102,65,102,65,102,63,25,102,65,102,65,102,65,102,63,25,102,65,102,65,102,63,25,102,65,102,65,102,63,25,102,65,102,65,102,63,25,102,65,102,65,102,65,102,63,106,103,102,57,55,58,103,102,35,9,102,59,35,38,102,102,63,33,102,102,63,103,102,35,48,102,57,102,102,64,102,102,58,59,102,102,66,102,65,102,57,102,58,63,102,102,66,102,65,102,57,55,58,63,3,102,66,55,65,102,57,102,58,63,22,57,55,65,102,57,102,58,78,102,58,59,102,66,31,102,57,102,58,63,102,65,102,57,102,58,63,102,65,102,57,53,58,63,31,102,57,57,58,89,59,102,102,66,102,65,102,57,55,58,63,22,57,102,76,56,58,59,102,65,102,57,102,65,102,57,102,58,64,102,58,63,102,65,102,57,31,102,68,67,57,55,64,56,58,58,63,60,15,59,102,65,102,57,31,102,68,67,57,55,64,55,58,58,63,60,102,65,102,57,53,58,63,60,58,65,102,57,58,63,60,15,22,57,55,65,102,57,102,58,77,102,76,56,58,59,102,65,102,57,53,58,63,102,65,102,57,58,63,60,15,22,57,55,65,102,57,102,58,77,102,76,56,58,59,102,65,102,57,58,63,60,60,103,102,35,48,102,57,102,102,58,59,102,65,102,57,53,58,63,102,65,102,57,58,63,60,60,-1]},"sourceCode":"package org.spiderflow.websocket;\n\nimport com.alibaba.fastjson.JSON;\nimport com.alibaba.fastjson.JSONObject;\nimport org.spiderflow.core.Spider;\nimport org.spiderflow.core.utils.SpiderFlowUtils;\nimport org.spiderflow.model.SpiderWebSocketContext;\nimport org.spiderflow.model.WebSocketEvent;\nimport org.springframework.stereotype.Component;\n\nimport javax.websocket.OnClose;\nimport javax.websocket.OnMessage;\nimport javax.websocket.Session;\nimport javax.websocket.server.ServerEndpoint;\n\n/**\n * WebSocket通讯编辑服务\n *\n * @author Administrator\n */\n@ServerEndpoint(\"/ws\")\n@Component\npublic class WebSocketEditorServer {\n\n    public static Spider spider;\n\n    private SpiderWebSocketContext context;\n\n    @OnMessage\n    public void onMessage(String message, Session session) {\n        JSONObject event = JSON.parseObject(message);\n        String eventType = event.getString(\"eventType\");\n        boolean isDebug = \"debug\".equalsIgnoreCase(eventType);\n        if (\"test\".equalsIgnoreCase(eventType) || isDebug) {\n            context = new SpiderWebSocketContext(session);\n            context.setDebug(isDebug);\n            context.setRunning(true);\n            new Thread(() -> {\n                String xml = event.getString(\"message\");\n                if (xml != null) {\n                    spider.runWithTest(SpiderFlowUtils.loadXMLFromString(xml), context);\n                    context.write(new WebSocketEvent<>(\"finish\", null));\n                } else {\n                    context.write(new WebSocketEvent<>(\"error\", \"xml不正确！\"));\n                }\n                context.setRunning(false);\n            }).start();\n        } else if (\"stop\".equals(eventType) && context != null) {\n            context.setRunning(false);\n            context.stop();\n        } else if(\"resume\".equalsIgnoreCase(eventType) && context != null){\n            context.resume();\n        }\n    }\n\n    @OnClose\n    public void onClose(Session session) {\n        context.setRunning(false);\n        context.stop();\n    }\n}\n","highlightingTokens":[1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,4,11,11,0,3,0,11,11,1,1,5,0,1,1,8,7,0,1,8,7,0,11,11,1,1,6,0,8,7,0,8,7,0,0,8,7,0,0,0,9,0,0,0,0,8,7,0,0,0,9,0,3,0,0,1,7,0,3,0,9,0,0,0,0,1,0,3,0,9,0,0,0,0,0,0,0,0,0,1,8,0,0,0,0,0,0,9,0,0,0,0,0,0,9,0,2,0,0,1,8,0,0,0,0,0,8,7,0,0,0,9,0,3,0,0,1,0,0,0,2,0,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,0,9,0,1,8,0,0,0,3,0,2,0,0,0,0,1,0,0,0,9,0,1,8,0,0,0,3,0,3,0,0,0,0,0,0,9,0,2,0,0,0,0,0,9,0,0,0,0,1,1,0,3,0,9,0,0,0,0,0,0,2,0,0,0,0,9,0,2,0,0,0,0,9,0,0,0,0,1,1,0,3,0,9,0,0,0,0,0,0,2,0,0,0,0,9,0,0,0,0,0,11,11,1,1,6,0,8,7,0,0,0,0,9,0,2,0,0,0,0,9,0,0,0,0,0,0],"highlightingCode":"<!DOCTYPE html>\n<html>\n<style>\n.ANY {\n    color: black;\n    font-weight: normal;\n    font-style: normal;\n}\n.KEYWORD {\n    color: blue;\n    font-weight: bold;\n    font-style: normal;\n}\n.LITERAL {\n    color: lightskyblue;\n    font-weight: bold;\n    font-style: normal;\n}\n.CHAR_STRING_LITERAL {\n    color: darkgoldenrod;\n    font-weight: normal;\n    font-style: normal;\n}\n.COMMENT {\n    color: grey;\n    font-weight: normal;\n    font-style: italic;\n}\n.CLASS_DECLARATOR {\n    color: crimson;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_DECLARATOR {\n    color: fuchsia;\n    font-weight: bold;\n    font-style: normal;\n}\n.VARIABLE_DECLARATOR {\n    color: purple;\n    font-weight: bold;\n    font-style: normal;\n}\n.TYPE_IDENTIFIER {\n    color: darkgreen;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_IDENTIFIER {\n    color: dodgerblue;\n    font-weight: normal;\n    font-style: normal;\n}\n.FIELD_IDENTIFIER {\n    color: coral;\n    font-weight: normal;\n    font-style: normal;\n}\n.ANNOTATION_DECLARATOR {\n    color: lightslategray;\n    font-weight: lighter;\n    font-style: italic;\n}\n</style>\n<pre>\n<code class=\"KEYWORD\">package</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">spiderflow</code><code class=\"ANY\">.</code><code class=\"ANY\">websocket</code><code class=\"ANY\">;</code>\n\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">alibaba</code><code class=\"ANY\">.</code><code class=\"ANY\">fastjson</code><code class=\"ANY\">.</code><code class=\"ANY\">JSON</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">alibaba</code><code class=\"ANY\">.</code><code class=\"ANY\">fastjson</code><code class=\"ANY\">.</code><code class=\"ANY\">JSONObject</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">spiderflow</code><code class=\"ANY\">.</code><code class=\"ANY\">core</code><code class=\"ANY\">.</code><code class=\"ANY\">Spider</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">spiderflow</code><code class=\"ANY\">.</code><code class=\"ANY\">core</code><code class=\"ANY\">.</code><code class=\"ANY\">utils</code><code class=\"ANY\">.</code><code class=\"ANY\">SpiderFlowUtils</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">spiderflow</code><code class=\"ANY\">.</code><code class=\"ANY\">model</code><code class=\"ANY\">.</code><code class=\"ANY\">SpiderWebSocketContext</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">spiderflow</code><code class=\"ANY\">.</code><code class=\"ANY\">model</code><code class=\"ANY\">.</code><code class=\"ANY\">WebSocketEvent</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">springframework</code><code class=\"ANY\">.</code><code class=\"ANY\">stereotype</code><code class=\"ANY\">.</code><code class=\"ANY\">Component</code><code class=\"ANY\">;</code>\n\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">javax</code><code class=\"ANY\">.</code><code class=\"ANY\">websocket</code><code class=\"ANY\">.</code><code class=\"ANY\">OnClose</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">javax</code><code class=\"ANY\">.</code><code class=\"ANY\">websocket</code><code class=\"ANY\">.</code><code class=\"ANY\">OnMessage</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">javax</code><code class=\"ANY\">.</code><code class=\"ANY\">websocket</code><code class=\"ANY\">.</code><code class=\"ANY\">Session</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">javax</code><code class=\"ANY\">.</code><code class=\"ANY\">websocket</code><code class=\"ANY\">.</code><code class=\"ANY\">server</code><code class=\"ANY\">.</code><code class=\"ANY\">ServerEndpoint</code><code class=\"ANY\">;</code>\n\n<code class=\"COMMENT\">/**\n * WebSocket通讯编辑服务\n *\n * @author Administrator\n */</code>\n<code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">ServerEndpoint</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"/ws\"</code><code class=\"ANY\">)</code>\n<code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">Component</code>\n<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">WebSocketEditorServer</code> <code class=\"ANY\">{</code>\n\n    <code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"TYPE_IDENTIFIER\">Spider</code> <code class=\"VARIABLE_DECLARATOR\">spider</code><code class=\"ANY\">;</code>\n\n    <code class=\"KEYWORD\">private</code> <code class=\"TYPE_IDENTIFIER\">SpiderWebSocketContext</code> <code class=\"VARIABLE_DECLARATOR\">context</code><code class=\"ANY\">;</code>\n\n    <code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">OnMessage</code>\n    <code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">void</code> <code class=\"FUNCTION_DECLARATOR\">onMessage</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">message</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">Session</code> <code class=\"VARIABLE_DECLARATOR\">session</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n        <code class=\"TYPE_IDENTIFIER\">JSONObject</code> <code class=\"VARIABLE_DECLARATOR\">event</code> <code class=\"ANY\">=</code> <code class=\"ANY\">JSON</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">parseObject</code><code class=\"ANY\">(</code><code class=\"ANY\">message</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n        <code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">eventType</code> <code class=\"ANY\">=</code> <code class=\"ANY\">event</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getString</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"eventType\"</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n        <code class=\"KEYWORD\">boolean</code> <code class=\"VARIABLE_DECLARATOR\">isDebug</code> <code class=\"ANY\">=</code> <code class=\"CHAR_STRING_LITERAL\">\"debug\"</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">equalsIgnoreCase</code><code class=\"ANY\">(</code><code class=\"ANY\">eventType</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n        <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"test\"</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">equalsIgnoreCase</code><code class=\"ANY\">(</code><code class=\"ANY\">eventType</code><code class=\"ANY\">)</code> <code class=\"ANY\">||</code> <code class=\"ANY\">isDebug</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n            <code class=\"ANY\">context</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">new</code> <code class=\"TYPE_IDENTIFIER\">SpiderWebSocketContext</code><code class=\"ANY\">(</code><code class=\"ANY\">session</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n            <code class=\"ANY\">context</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">setDebug</code><code class=\"ANY\">(</code><code class=\"ANY\">isDebug</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n            <code class=\"ANY\">context</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">setRunning</code><code class=\"ANY\">(</code><code class=\"LITERAL\">true</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n            <code class=\"KEYWORD\">new</code> <code class=\"TYPE_IDENTIFIER\">Thread</code><code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">-></code> <code class=\"ANY\">{</code>\n                <code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">xml</code> <code class=\"ANY\">=</code> <code class=\"ANY\">event</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getString</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"message\"</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n                <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">xml</code> <code class=\"ANY\">!=</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n                    <code class=\"ANY\">spider</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">runWithTest</code><code class=\"ANY\">(</code><code class=\"ANY\">SpiderFlowUtils</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">loadXMLFromString</code><code class=\"ANY\">(</code><code class=\"ANY\">xml</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"ANY\">context</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n                    <code class=\"ANY\">context</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">write</code><code class=\"ANY\">(</code><code class=\"KEYWORD\">new</code> <code class=\"TYPE_IDENTIFIER\">WebSocketEvent</code><code class=\"ANY\"><</code><code class=\"ANY\">></code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"finish\"</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n                <code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"ANY\">{</code>\n                    <code class=\"ANY\">context</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">write</code><code class=\"ANY\">(</code><code class=\"KEYWORD\">new</code> <code class=\"TYPE_IDENTIFIER\">WebSocketEvent</code><code class=\"ANY\"><</code><code class=\"ANY\">></code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"error\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"xml不正确！\"</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n                <code class=\"ANY\">}</code>\n                <code class=\"ANY\">context</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">setRunning</code><code class=\"ANY\">(</code><code class=\"LITERAL\">false</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n            <code class=\"ANY\">}</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">start</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n        <code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"stop\"</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">equals</code><code class=\"ANY\">(</code><code class=\"ANY\">eventType</code><code class=\"ANY\">)</code> <code class=\"ANY\">&&</code> <code class=\"ANY\">context</code> <code class=\"ANY\">!=</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n            <code class=\"ANY\">context</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">setRunning</code><code class=\"ANY\">(</code><code class=\"LITERAL\">false</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n            <code class=\"ANY\">context</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">stop</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n        <code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"resume\"</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">equalsIgnoreCase</code><code class=\"ANY\">(</code><code class=\"ANY\">eventType</code><code class=\"ANY\">)</code> <code class=\"ANY\">&&</code> <code class=\"ANY\">context</code> <code class=\"ANY\">!=</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">)</code><code class=\"ANY\">{</code>\n            <code class=\"ANY\">context</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">resume</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n        <code class=\"ANY\">}</code>\n    <code class=\"ANY\">}</code>\n\n    <code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">OnClose</code>\n    <code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">void</code> <code class=\"FUNCTION_DECLARATOR\">onClose</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Session</code> <code class=\"VARIABLE_DECLARATOR\">session</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n        <code class=\"ANY\">context</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">setRunning</code><code class=\"ANY\">(</code><code class=\"LITERAL\">false</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n        <code class=\"ANY\">context</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">stop</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n    <code class=\"ANY\">}</code>\n<code class=\"ANY\">}</code>\n\n</pre>\n</html>"},{"_id":{"language":"JAVA","lexingTokens},"sourceCode":"\npackage org.spiderflow.core.expression.parsing;\n\nimport org.apache.commons.lang3.StringUtils;\nimport org.apache.commons.lang3.exception.ExceptionUtils;\nimport org.spiderflow.core.expression.ExpressionError;\nimport org.spiderflow.core.expression.ExpressionError.TemplateException;\nimport org.spiderflow.core.expression.ExpressionTemplate;\nimport org.spiderflow.core.expression.ExpressionTemplateContext;\nimport org.spiderflow.core.expression.interpreter.AstInterpreter;\nimport org.spiderflow.core.expression.interpreter.JavaReflection;\nimport org.spiderflow.core.expression.interpreter.Reflection;\nimport org.spiderflow.core.script.ScriptManager;\nimport org.spiderflow.expression.DynamicMethod;\n\nimport javax.xml.transform.Source;\nimport java.io.IOException;\nimport java.lang.reflect.Array;\nimport java.lang.reflect.InvocationTargetException;\nimport java.util.*;\n\n\n/** Templates are parsed into an abstract syntax tree (AST) nodes by a Parser. This class contains all AST node types. */\npublic abstract class Ast {\n\n\t/** Base class for all AST nodes. A node minimally stores the {@link Span} that references its location in the\n\t * {@link Source}. **/\n\tpublic abstract static class Node {\n\t\tprivate final Span span;\n\n\t\tpublic Node (Span span) {\n\t\t\tthis.span = span;\n\t\t}\n\n\t\t/** Returns the {@link Span} referencing this node's location in the {@link Source}. **/\n\t\tpublic Span getSpan () {\n\t\t\treturn span;\n\t\t}\n\n\t\t@Override\n\t\tpublic String toString () {\n\t\t\treturn span.getText();\n\t\t}\n\n\t\tpublic abstract Object evaluate (ExpressionTemplate template, ExpressionTemplateContext context) throws IOException;\n\t}\n\n\t/** A text node represents an \"un-templated\" span in the source that should be emitted verbatim. **/\n\tpublic static class Text extends Node {\n\t\tprivate final String content;\n\n\t\tpublic Text (Span text) {\n\t\t\tsuper(text);\n\t\t\tString unescapedValue = text.getText();\n\t\t\tStringBuilder builder = new StringBuilder();\n\n\t\t\tCharacterStream stream = new CharacterStream(unescapedValue);\n\t\t\twhile (stream.hasMore()) {\n\t\t\t\tif (stream.match(\"\\\\{\", true)) {\n\t\t\t\t\tbuilder.append('{');\n\t\t\t\t} else if (stream.match(\"\\\\}\", true)) {\n\t\t\t\t\tbuilder.append('}');\n\t\t\t\t} else {\n\t\t\t\t\tbuilder.append(stream.consume());\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontent = builder.toString();\n\t\t}\n\n\t\t/** Returns the UTF-8 representation of this text node. **/\n\t\tpublic String getContent () {\n\t\t\treturn content;\n\t\t}\n\n\t\t@Override\n\t\tpublic Object evaluate (ExpressionTemplate template, ExpressionTemplateContext context) throws IOException {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/** All expressions are subclasses of this node type. Expressions are separated into unary operations (!, -), binary operations\n\t * (+, -, *, /, etc.) and ternary operations (?:). */\n\tpublic abstract static class Expression extends Node {\n\t\tpublic Expression (Span span) {\n\t\t\tsuper(span);\n\t\t}\n\t}\n\n\t/** An unary operation node represents a logical or numerical negation. **/\n\tpublic static class UnaryOperation extends Expression {\n\n\t\tpublic static enum UnaryOperator {\n\t\t\tNot, Negate, Positive;\n\n\t\t\tpublic static UnaryOperator getOperator (Token op) {\n\t\t\t\tif (op.getType() == TokenType.Not) {\n\t\t\t\t\treturn UnaryOperator.Not;\n\t\t\t\t}\n\t\t\t\tif (op.getType() == TokenType.Plus) {\n\t\t\t\t\treturn UnaryOperator.Positive;\n\t\t\t\t}\n\t\t\t\tif (op.getType() == TokenType.Minus) {\n\t\t\t\t\treturn UnaryOperator.Negate;\n\t\t\t\t}\n\t\t\t\tExpressionError.error(\"Unknown unary operator \" + op + \".\", op.getSpan());\n\t\t\t\treturn null; // not reached\n\t\t\t}\n\t\t}\n\n\t\tprivate final UnaryOperator operator;\n\t\tprivate final Expression operand;\n\n\t\tpublic UnaryOperation (Token operator, Expression operand) {\n\t\t\tsuper(operator.getSpan());\n\t\t\tthis.operator = UnaryOperator.getOperator(operator);\n\t\t\tthis.operand = operand;\n\t\t}\n\n\t\tpublic UnaryOperator getOperator () {\n\t\t\treturn operator;\n\t\t}\n\n\t\tpublic Expression getOperand () {\n\t\t\treturn operand;\n\t\t}\n\n\t\t@Override\n\t\tpublic Object evaluate (ExpressionTemplate template, ExpressionTemplateContext context) throws IOException {\n\t\t\tObject operand = getOperand().evaluate(template, context);\n\n\t\t\tif (getOperator() == UnaryOperator.Negate) {\n\t\t\t\tif (operand instanceof Integer) {\n\t\t\t\t\treturn -(Integer)operand;\n\t\t\t\t} else if (operand instanceof Float) {\n\t\t\t\t\treturn -(Float)operand;\n\t\t\t\t} else if (operand instanceof Double) {\n\t\t\t\t\treturn -(Double)operand;\n\t\t\t\t} else if (operand instanceof Byte) {\n\t\t\t\t\treturn -(Byte)operand;\n\t\t\t\t} else if (operand instanceof Short) {\n\t\t\t\t\treturn -(Short)operand;\n\t\t\t\t} else if (operand instanceof Long) {\n\t\t\t\t\treturn -(Long)operand;\n\t\t\t\t} else {\n\t\t\t\t\tExpressionError.error(\"Operand of operator '\" + getOperator().name() + \"' must be a number, got \" + operand, getSpan());\n\t\t\t\t\treturn null; // never reached\n\t\t\t\t}\n\t\t\t} else if (getOperator() == UnaryOperator.Not) {\n\t\t\t\tif (!(operand instanceof Boolean)) {\n\t\t\t\t\tExpressionError.error(\"Operand of operator '\" + getOperator().name() + \"' must be a boolean\", getSpan());\n\t\t\t\t}\n\t\t\t\treturn !(Boolean)operand;\n\t\t\t} else {\n\t\t\t\treturn operand;\n\t\t\t}\n\t\t}\n\t}\n\n\t/** A binary operation represents arithmetic operators, like addition or division, comparison operators, like less than or\n\t * equals, logical operators, like and, or an assignment. **/\n\tpublic static class BinaryOperation extends Expression {\n\n\t\tpublic static enum BinaryOperator {\n\t\t\tAddition, Subtraction, Multiplication, Division, Modulo, Equal, NotEqual, Less, LessEqual, Greater, GreaterEqual, And, Or, Xor, Assignment;\n\n\t\t\tpublic static BinaryOperator getOperator (Token op) {\n\t\t\t\tif (op.getType() == TokenType.Plus) {\n\t\t\t\t\treturn BinaryOperator.Addition;\n\t\t\t\t}\n\t\t\t\tif (op.getType() == TokenType.Minus) {\n\t\t\t\t\treturn BinaryOperator.Subtraction;\n\t\t\t\t}\n\t\t\t\tif (op.getType() == TokenType.Asterisk) {\n\t\t\t\t\treturn BinaryOperator.Multiplication;\n\t\t\t\t}\n\t\t\t\tif (op.getType() == TokenType.ForwardSlash) {\n\t\t\t\t\treturn BinaryOperator.Division;\n\t\t\t\t}\n\t\t\t\tif (op.getType() == TokenType.Percentage) {\n\t\t\t\t\treturn BinaryOperator.Modulo;\n\t\t\t\t}\n\t\t\t\tif (op.getType() == TokenType.Equal) {\n\t\t\t\t\treturn BinaryOperator.Equal;\n\t\t\t\t}\n\t\t\t\tif (op.getType() == TokenType.NotEqual) {\n\t\t\t\t\treturn BinaryOperator.NotEqual;\n\t\t\t\t}\n\t\t\t\tif (op.getType() == TokenType.Less) {\n\t\t\t\t\treturn BinaryOperator.Less;\n\t\t\t\t}\n\t\t\t\tif (op.getType() == TokenType.LessEqual) {\n\t\t\t\t\treturn BinaryOperator.LessEqual;\n\t\t\t\t}\n\t\t\t\tif (op.getType() == TokenType.Greater) {\n\t\t\t\t\treturn BinaryOperator.Greater;\n\t\t\t\t}\n\t\t\t\tif (op.getType() == TokenType.GreaterEqual) {\n\t\t\t\t\treturn BinaryOperator.GreaterEqual;\n\t\t\t\t}\n\t\t\t\tif (op.getType() == TokenType.And) {\n\t\t\t\t\treturn BinaryOperator.And;\n\t\t\t\t}\n\t\t\t\tif (op.getType() == TokenType.Or) {\n\t\t\t\t\treturn BinaryOperator.Or;\n\t\t\t\t}\n\t\t\t\tif (op.getType() == TokenType.Xor) {\n\t\t\t\t\treturn BinaryOperator.Xor;\n\t\t\t\t}\n\t\t\t\tif (op.getType() == TokenType.Assignment) {\n\t\t\t\t\treturn BinaryOperator.Assignment;\n\t\t\t\t}\n\t\t\t\tExpressionError.error(\"Unknown binary operator \" + op + \".\", op.getSpan());\n\t\t\t\treturn null; // not reached\n\t\t\t}\n\t\t}\n\n\t\tprivate final Expression leftOperand;\n\t\tprivate final BinaryOperator operator;\n\t\tprivate final Expression rightOperand;\n\n\t\tpublic BinaryOperation (Expression leftOperand, Token operator, Expression rightOperand) {\n\t\t\tsuper(operator.getSpan());\n\t\t\tthis.leftOperand = leftOperand;\n\t\t\tthis.operator = BinaryOperator.getOperator(operator);\n\t\t\tthis.rightOperand = rightOperand;\n\t\t}\n\n\t\tpublic Expression getLeftOperand () {\n\t\t\treturn leftOperand;\n\t\t}\n\n\t\tpublic BinaryOperator getOperator () {\n\t\t\treturn operator;\n\t\t}\n\n\t\tpublic Expression getRightOperand () {\n\t\t\treturn rightOperand;\n\t\t}\n\n\t\tprivate Object evaluateAddition (Object left, Object right) {\n\t\t\tif (left instanceof String || right instanceof String) {\n\t\t\t\treturn left.toString() + right.toString();\n\t\t\t}\n\t\t\tif (left instanceof Double || right instanceof Double) {\n\t\t\t\treturn ((Number)left).doubleValue() + ((Number)right).doubleValue();\n\t\t\t}\n\t\t\tif (left instanceof Float || right instanceof Float) {\n\t\t\t\treturn ((Number)left).floatValue() + ((Number)right).floatValue();\n\t\t\t}\n\t\t\tif (left instanceof Long || right instanceof Long) {\n\t\t\t\treturn ((Number)left).longValue() + ((Number)right).longValue();\n\t\t\t}\n\t\t\tif (left instanceof Integer || right instanceof Integer) {\n\t\t\t\treturn ((Number)left).intValue() + ((Number)right).intValue();\n\t\t\t}\n\t\t\tif (left instanceof Short || right instanceof Short) {\n\t\t\t\treturn ((Number)left).shortValue() + ((Number)right).shortValue();\n\t\t\t}\n\t\t\tif (left instanceof Byte || right instanceof Byte) {\n\t\t\t\treturn ((Number)left).byteValue() + ((Number)right).byteValue();\n\t\t\t}\n\n\t\t\tExpressionError.error(\"Operands for addition operator must be numbers or strings, got \" + left + \", \" + right + \".\", getSpan());\n\t\t\treturn null; // never reached\n\t\t}\n\n\t\tprivate Object evaluateSubtraction (Object left, Object right) {\n\t\t\tif (left instanceof Double || right instanceof Double) {\n\t\t\t\treturn ((Number)left).doubleValue() - ((Number)right).doubleValue();\n\t\t\t} else if (left instanceof Float || right instanceof Float) {\n\t\t\t\treturn ((Number)left).floatValue() - ((Number)right).floatValue();\n\t\t\t} else if (left instanceof Long || right instanceof Long) {\n\t\t\t\treturn ((Number)left).longValue() - ((Number)right).longValue();\n\t\t\t} else if (left instanceof Integer || right instanceof Integer) {\n\t\t\t\treturn ((Number)left).intValue() - ((Number)right).intValue();\n\t\t\t} else if (left instanceof Short || right instanceof Short) {\n\t\t\t\treturn ((Number)left).shortValue() - ((Number)right).shortValue();\n\t\t\t} else if (left instanceof Byte || right instanceof Byte) {\n\t\t\t\treturn ((Number)left).byteValue() - ((Number)right).byteValue();\n\t\t\t} else {\n\t\t\t\tExpressionError.error(\"Operands for subtraction operator must be numbers\" + left + \", \" + right + \".\", getSpan());\n\t\t\t\treturn null; // never reached\n\t\t\t}\n\t\t}\n\n\t\tprivate Object evaluateMultiplication (Object left, Object right) {\n\t\t\tif (left instanceof Double || right instanceof Double) {\n\t\t\t\treturn ((Number)left).doubleValue() * ((Number)right).doubleValue();\n\t\t\t} else if (left instanceof Float || right instanceof Float) {\n\t\t\t\treturn ((Number)left).floatValue() * ((Number)right).floatValue();\n\t\t\t} else if (left instanceof Long || right instanceof Long) {\n\t\t\t\treturn ((Number)left).longValue() * ((Number)right).longValue();\n\t\t\t} else if (left instanceof Integer || right instanceof Integer) {\n\t\t\t\treturn ((Number)left).intValue() * ((Number)right).intValue();\n\t\t\t} else if (left instanceof Short || right instanceof Short) {\n\t\t\t\treturn ((Number)left).shortValue() * ((Number)right).shortValue();\n\t\t\t} else if (left instanceof Byte || right instanceof Byte) {\n\t\t\t\treturn ((Number)left).byteValue() * ((Number)right).byteValue();\n\t\t\t} else {\n\t\t\t\tExpressionError.error(\"Operands for multiplication operator must be numbers\" + left + \", \" + right + \".\", getSpan());\n\t\t\t\treturn null; // never reached\n\t\t\t}\n\t\t}\n\n\t\tprivate Object evaluateDivision (Object left, Object right) {\n\t\t\tif (left instanceof Double || right instanceof Double) {\n\t\t\t\treturn ((Number)left).doubleValue() / ((Number)right).doubleValue();\n\t\t\t} else if (left instanceof Float || right instanceof Float) {\n\t\t\t\treturn ((Number)left).floatValue() / ((Number)right).floatValue();\n\t\t\t} else if (left instanceof Long || right instanceof Long) {\n\t\t\t\treturn ((Number)left).longValue() / ((Number)right).longValue();\n\t\t\t} else if (left instanceof Integer || right instanceof Integer) {\n\t\t\t\treturn ((Number)left).intValue() / ((Number)right).intValue();\n\t\t\t} else if (left instanceof Short || right instanceof Short) {\n\t\t\t\treturn ((Number)left).shortValue() / ((Number)right).shortValue();\n\t\t\t} else if (left instanceof Byte || right instanceof Byte) {\n\t\t\t\treturn ((Number)left).byteValue() / ((Number)right).byteValue();\n\t\t\t} else {\n\t\t\t\tExpressionError.error(\"Operands for division operator must be numbers\" + left + \", \" + right + \".\", getSpan());\n\t\t\t\treturn null; // never reached\n\t\t\t}\n\t\t}\n\n\t\tprivate Object evaluateModulo (Object left, Object right) {\n\t\t\tif (left instanceof Double || right instanceof Double) {\n\t\t\t\treturn ((Number)left).doubleValue() % ((Number)right).doubleValue();\n\t\t\t} else if (left instanceof Float || right instanceof Float) {\n\t\t\t\treturn ((Number)left).floatValue() % ((Number)right).floatValue();\n\t\t\t} else if (left instanceof Long || right instanceof Long) {\n\t\t\t\treturn ((Number)left).longValue() % ((Number)right).longValue();\n\t\t\t} else if (left instanceof Integer || right instanceof Integer) {\n\t\t\t\treturn ((Number)left).intValue() % ((Number)right).intValue();\n\t\t\t} else if (left instanceof Short || right instanceof Short) {\n\t\t\t\treturn ((Number)left).shortValue() % ((Number)right).shortValue();\n\t\t\t} else if (left instanceof Byte || right instanceof Byte) {\n\t\t\t\treturn ((Number)left).byteValue() % ((Number)right).byteValue();\n\t\t\t} else {\n\t\t\t\tExpressionError.error(\"Operands for modulo operator must be numbers\" + left + \", \" + right + \".\", getSpan());\n\t\t\t\treturn null; // never reached\n\t\t\t}\n\t\t}\n\n\t\tprivate boolean evaluateLess (Object left, Object right) {\n\t\t\tif (left instanceof Double || right instanceof Double) {\n\t\t\t\treturn ((Number)left).doubleValue() < ((Number)right).doubleValue();\n\t\t\t} else if (left instanceof Float || right instanceof Float) {\n\t\t\t\treturn ((Number)left).floatValue() < ((Number)right).floatValue();\n\t\t\t} else if (left instanceof Long || right instanceof Long) {\n\t\t\t\treturn ((Number)left).longValue() < ((Number)right).longValue();\n\t\t\t} else if (left instanceof Integer || right instanceof Integer) {\n\t\t\t\treturn ((Number)left).intValue() < ((Number)right).intValue();\n\t\t\t} else if (left instanceof Short || right instanceof Short) {\n\t\t\t\treturn ((Number)left).shortValue() < ((Number)right).shortValue();\n\t\t\t} else if (left instanceof Byte || right instanceof Byte) {\n\t\t\t\treturn ((Number)left).byteValue() < ((Number)right).byteValue();\n\t\t\t} else {\n\t\t\t\tExpressionError.error(\"Operands for less operator must be numbers\" + left + \", \" + right + \".\", getSpan());\n\t\t\t\treturn false; // never reached\n\t\t\t}\n\t\t}\n\n\t\tprivate Object evaluateLessEqual (Object left, Object right) {\n\t\t\tif (left instanceof Double || right instanceof Double) {\n\t\t\t\treturn ((Number)left).doubleValue() <= ((Number)right).doubleValue();\n\t\t\t} else if (left instanceof Float || right instanceof Float) {\n\t\t\t\treturn ((Number)left).floatValue() <= ((Number)right).floatValue();\n\t\t\t} else if (left instanceof Long || right instanceof Long) {\n\t\t\t\treturn ((Number)left).longValue() <= ((Number)right).longValue();\n\t\t\t} else if (left instanceof Integer || right instanceof Integer) {\n\t\t\t\treturn ((Number)left).intValue() <= ((Number)right).intValue();\n\t\t\t} else if (left instanceof Short || right instanceof Short) {\n\t\t\t\treturn ((Number)left).shortValue() <= ((Number)right).shortValue();\n\t\t\t} else if (left instanceof Byte || right instanceof Byte) {\n\t\t\t\treturn ((Number)left).byteValue() <= ((Number)right).byteValue();\n\t\t\t} else {\n\t\t\t\tExpressionError.error(\"Operands for less/equal operator must be numbers\" + left + \", \" + right + \".\", getSpan());\n\t\t\t\treturn null; // never reached\n\t\t\t}\n\t\t}\n\n\t\tprivate Object evaluateGreater (Object left, Object right) {\n\t\t\tif (left instanceof Double || right instanceof Double) {\n\t\t\t\treturn ((Number)left).doubleValue() > ((Number)right).doubleValue();\n\t\t\t} else if (left instanceof Float || right instanceof Float) {\n\t\t\t\treturn ((Number)left).floatValue() > ((Number)right).floatValue();\n\t\t\t} else if (left instanceof Long || right instanceof Long) {\n\t\t\t\treturn ((Number)left).longValue() > ((Number)right).longValue();\n\t\t\t} else if (left instanceof Integer || right instanceof Integer) {\n\t\t\t\treturn ((Number)left).intValue() > ((Number)right).intValue();\n\t\t\t} else if (left instanceof Short || right instanceof Short) {\n\t\t\t\treturn ((Number)left).shortValue() > ((Number)right).shortValue();\n\t\t\t} else if (left instanceof Byte || right instanceof Byte) {\n\t\t\t\treturn ((Number)left).byteValue() > ((Number)right).byteValue();\n\t\t\t} else {\n\t\t\t\tExpressionError.error(\"Operands for greater operator must be numbers\" + left + \", \" + right + \".\", getSpan());\n\t\t\t\treturn null; // never reached\n\t\t\t}\n\t\t}\n\n\t\tprivate Object evaluateGreaterEqual (Object left, Object right) {\n\t\t\tif (left instanceof Double || right instanceof Double) {\n\t\t\t\treturn ((Number)left).doubleValue() >= ((Number)right).doubleValue();\n\t\t\t} else if (left instanceof Float || right instanceof Float) {\n\t\t\t\treturn ((Number)left).floatValue() >= ((Number)right).floatValue();\n\t\t\t} else if (left instanceof Long || right instanceof Long) {\n\t\t\t\treturn ((Number)left).longValue() >= ((Number)right).longValue();\n\t\t\t} else if (left instanceof Integer || right instanceof Integer) {\n\t\t\t\treturn ((Number)left).intValue() >= ((Number)right).intValue();\n\t\t\t} else if (left instanceof Short || right instanceof Short) {\n\t\t\t\treturn ((Number)left).shortValue() >= ((Number)right).shortValue();\n\t\t\t} else if (left instanceof Byte || right instanceof Byte) {\n\t\t\t\treturn ((Number)left).byteValue() >= ((Number)right).byteValue();\n\t\t\t} else {\n\t\t\t\tExpressionError.error(\"Operands for greater/equal operator must be numbers\" + left + \", \" + right + \".\", getSpan());\n\t\t\t\treturn null; // never reached\n\t\t\t}\n\t\t}\n\n\t\tprivate Object evaluateAnd (Object left, ExpressionTemplate template, ExpressionTemplateContext context) throws IOException {\n\t\t\tif (!(left instanceof Boolean)) {\n\t\t\t\tExpressionError.error(\"Left operand must be a boolean, got \" + left + \".\", getLeftOperand().getSpan());\n\t\t\t}\n\t\t\tif (!(Boolean)left) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tObject right = getRightOperand().evaluate(template, context);\n\t\t\tif (!(right instanceof Boolean)) {\n\t\t\t\tExpressionError.error(\"Right operand must be a boolean, got \" + right + \".\", getRightOperand().getSpan());\n\t\t\t}\n\t\t\treturn (Boolean)left && (Boolean)right;\n\t\t}\n\n\t\tprivate Object evaluateOr (Object left, ExpressionTemplate template, ExpressionTemplateContext context) throws IOException {\n\t\t\tif (!(left instanceof Boolean)) {\n\t\t\t\tExpressionError.error(\"Left operand must be a boolean, got \" + left + \".\", getLeftOperand().getSpan());\n\t\t\t}\n\t\t\tif ((Boolean)left) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tObject right = getRightOperand().evaluate(template, context);\n\t\t\tif (!(right instanceof Boolean)) {\n\t\t\t\tExpressionError.error(\"Right operand must be a boolean, got \" + right + \".\", getRightOperand().getSpan());\n\t\t\t}\n\t\t\treturn (Boolean)left || (Boolean)right;\n\t\t}\n\n\t\tprivate Object evaluateXor (Object left, Object right) {\n\t\t\tif (!(left instanceof Boolean)) {\n\t\t\t\tExpressionError.error(\"Left operand must be a boolean, got \" + left + \".\", getLeftOperand().getSpan());\n\t\t\t}\n\t\t\tif (!(right instanceof Boolean)) {\n\t\t\t\tExpressionError.error(\"Right operand must be a boolean, got \" + right + \".\", getRightOperand().getSpan());\n\t\t\t}\n\t\t\treturn (Boolean)left ^ (Boolean)right;\n\t\t}\n\n\t\tprivate Object evaluateEqual (Object left, Object right) {\n\t\t\tif (left != null) {\n\t\t\t\treturn left.equals(right);\n\t\t\t}\n\t\t\tif (right != null) {\n\t\t\t\treturn right.equals(left);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tprivate Object evaluateNotEqual (Object left, Object right) {\n\t\t\treturn !(Boolean)evaluateEqual(left, right);\n\t\t}\n\n\t\t@Override\n\t\tpublic Object evaluate (ExpressionTemplate template, ExpressionTemplateContext context) throws IOException {\n\t\t\tif (getOperator() == BinaryOperator.Assignment) {\n\t\t\t\tif (!(getLeftOperand() instanceof VariableAccess)) {\n\t\t\t\t\tExpressionError.error(\"Can only assign to top-level variables in context.\", getLeftOperand().getSpan());\n\t\t\t\t}\n\t\t\t\tObject value = getRightOperand().evaluate(template, context);\n\t\t\t\tcontext.set(((VariableAccess)getLeftOperand()).getVariableName().getText(), value);\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tObject left = getLeftOperand().evaluate(template, context);\n\t\t\tObject right = getOperator() == BinaryOperator.And || getOperator() == BinaryOperator.Or ? null : getRightOperand().evaluate(template, context);\n\n\t\t\tswitch (getOperator()) {\n\t\t\tcase Addition:\n\t\t\t\treturn evaluateAddition(left, right);\n\t\t\tcase Subtraction:\n\t\t\t\treturn evaluateSubtraction(left, right);\n\t\t\tcase Multiplication:\n\t\t\t\treturn evaluateMultiplication(left, right);\n\t\t\tcase Division:\n\t\t\t\treturn evaluateDivision(left, right);\n\t\t\tcase Modulo:\n\t\t\t\treturn evaluateModulo(left, right);\n\t\t\tcase Less:\n\t\t\t\treturn evaluateLess(left, right);\n\t\t\tcase LessEqual:\n\t\t\t\treturn evaluateLessEqual(left, right);\n\t\t\tcase Greater:\n\t\t\t\treturn evaluateGreater(left, right);\n\t\t\tcase GreaterEqual:\n\t\t\t\treturn evaluateGreaterEqual(left, right);\n\t\t\tcase Equal:\n\t\t\t\treturn evaluateEqual(left, right);\n\t\t\tcase NotEqual:\n\t\t\t\treturn evaluateNotEqual(left, right);\n\t\t\tcase And:\n\t\t\t\treturn evaluateAnd(left, template, context);\n\t\t\tcase Or:\n\t\t\t\treturn evaluateOr(left, template, context);\n\t\t\tcase Xor:\n\t\t\t\treturn evaluateXor(left, right);\n\t\t\tdefault:\n\t\t\t\tExpressionError.error(\"Binary operator \" + getOperator().name() + \" not implemented\", getSpan());\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\n\t/** A ternary operation is an abbreviated if/then/else operation, and equivalent to the the ternary operator in Java. **/\n\tpublic static class TernaryOperation extends Expression {\n\t\tprivate final Expression condition;\n\t\tprivate final Expression trueExpression;\n\t\tprivate final Expression falseExpression;\n\n\t\tpublic TernaryOperation (Expression condition, Expression trueExpression, Expression falseExpression) {\n\t\t\tsuper(new Span(condition.getSpan(), falseExpression.getSpan()));\n\t\t\tthis.condition = condition;\n\t\t\tthis.trueExpression = trueExpression;\n\t\t\tthis.falseExpression = falseExpression;\n\t\t}\n\n\t\tpublic Expression getCondition () {\n\t\t\treturn condition;\n\t\t}\n\n\t\tpublic Expression getTrueExpression () {\n\t\t\treturn trueExpression;\n\t\t}\n\n\t\tpublic Expression getFalseExpression () {\n\t\t\treturn falseExpression;\n\t\t}\n\n\t\t@Override\n\t\tpublic Object evaluate (ExpressionTemplate template, ExpressionTemplateContext context) throws IOException {\n\t\t\tObject condition = getCondition().evaluate(template, context);\n\t\t\tif (!(condition instanceof Boolean)) {\n\t\t\t\tExpressionError.error(\"Condition of ternary operator must be a boolean, got \" + condition + \".\", getSpan());\n\t\t\t}\n\t\t\treturn ((Boolean)condition) ? getTrueExpression().evaluate(template, context) : getFalseExpression().evaluate(template, context);\n\t\t}\n\t}\n\n\t/** A null literal, with the single value <code>null</code> **/\n\tpublic static class NullLiteral extends Expression {\n\t\tpublic NullLiteral (Span span) {\n\t\t\tsuper(span);\n\t\t}\n\n\t\t@Override\n\t\tpublic Object evaluate (ExpressionTemplate template, ExpressionTemplateContext context) throws IOException {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/** A boolean literal, with the values <code>true</code> and <code>false</code> **/\n\tpublic static class BooleanLiteral extends Expression {\n\t\tprivate final Boolean value;\n\n\t\tpublic BooleanLiteral (Span literal) {\n\t\t\tsuper(literal);\n\t\t\tthis.value = Boolean.parseBoolean(literal.getText());\n\t\t}\n\n\t\tpublic Boolean getValue () {\n\t\t\treturn value;\n\t\t}\n\n\t\t@Override\n\t\tpublic Object evaluate (ExpressionTemplate template, ExpressionTemplateContext context) throws IOException {\n\t\t\treturn value;\n\t\t}\n\t}\n\n\t/** A double precision floating point literal. Must be marked with the <code>d</code> suffix, e.g. \"1.0d\". **/\n\tpublic static class DoubleLiteral extends Expression {\n\t\tprivate final Double value;\n\n\t\tpublic DoubleLiteral (Span literal) {\n\t\t\tsuper(literal);\n\t\t\tthis.value = Double.parseDouble(literal.getText().substring(0, literal.getText().length() - 1));\n\t\t}\n\n\t\tpublic Double getValue () {\n\t\t\treturn value;\n\t\t}\n\n\t\t@Override\n\t\tpublic Object evaluate (ExpressionTemplate template, ExpressionTemplateContext context) throws IOException {\n\t\t\treturn value;\n\t\t}\n\t}\n\n\t/** A single precision floating point literla. May be optionally marked with the <code>f</code> suffix, e.g. \"1.0f\". **/\n\tpublic static class FloatLiteral extends Expression {\n\t\tprivate final Float value;\n\n\t\tpublic FloatLiteral (Span literal) {\n\t\t\tsuper(literal);\n\t\t\tString text = literal.getText();\n\t\t\tif (text.charAt(text.length() - 1) == 'f') {\n\t\t\t\ttext = text.substring(0, text.length() - 1);\n\t\t\t}\n\t\t\tthis.value = Float.parseFloat(text);\n\t\t}\n\n\t\tpublic Float getValue () {\n\t\t\treturn value;\n\t\t}\n\n\t\t@Override\n\t\tpublic Object evaluate (ExpressionTemplate template, ExpressionTemplateContext context) throws IOException {\n\t\t\treturn value;\n\t\t}\n\t}\n\n\t/** A byte literal. Must be marked with the <code>b</code> suffix, e.g. \"123b\". **/\n\tpublic static class ByteLiteral extends Expression {\n\t\tprivate final Byte value;\n\n\t\tpublic ByteLiteral (Span literal) {\n\t\t\tsuper(literal);\n\t\t\tthis.value = Byte.parseByte(literal.getText().substring(0, literal.getText().length() - 1));\n\t\t}\n\n\t\tpublic Byte getValue () {\n\t\t\treturn value;\n\t\t}\n\n\t\t@Override\n\t\tpublic Object evaluate (ExpressionTemplate template, ExpressionTemplateContext context) throws IOException {\n\t\t\treturn value;\n\t\t}\n\t}\n\n\t/** A short literal. Must be marked with the <code>s</code> suffix, e.g. \"123s\". **/\n\tpublic static class ShortLiteral extends Expression {\n\t\tprivate final Short value;\n\n\t\tpublic ShortLiteral (Span literal) {\n\t\t\tsuper(literal);\n\t\t\tthis.value = Short.parseShort(literal.getText().substring(0, literal.getText().length() - 1));\n\t\t}\n\n\t\tpublic Short getValue () {\n\t\t\treturn value;\n\t\t}\n\n\t\t@Override\n\t\tpublic Object evaluate (ExpressionTemplate template, ExpressionTemplateContext context) throws IOException {\n\t\t\treturn value;\n\t\t}\n\t}\n\n\t/** An integer literal. **/\n\tpublic static class IntegerLiteral extends Expression {\n\t\tprivate final Integer value;\n\n\t\tpublic IntegerLiteral (Span literal) {\n\t\t\tsuper(literal);\n\t\t\tthis.value = Integer.parseInt(literal.getText());\n\t\t}\n\n\t\tpublic Integer getValue () {\n\t\t\treturn value;\n\t\t}\n\n\t\t@Override\n\t\tpublic Object evaluate (ExpressionTemplate template, ExpressionTemplateContext context) throws IOException {\n\t\t\treturn value;\n\t\t}\n\t}\n\n\t/** A long integer literal. Must be marked with the <code>l</code> suffix, e.g. \"123l\". **/\n\tpublic static class LongLiteral extends Expression {\n\t\tprivate final Long value;\n\n\t\tpublic LongLiteral (Span literal) {\n\t\t\tsuper(literal);\n\t\t\tthis.value = Long.parseLong(literal.getText().substring(0, literal.getText().length() - 1));\n\t\t}\n\n\t\tpublic Long getValue () {\n\t\t\treturn value;\n\t\t}\n\n\t\t@Override\n\t\tpublic Object evaluate (ExpressionTemplate template, ExpressionTemplateContext context) throws IOException {\n\t\t\treturn value;\n\t\t}\n\t}\n\n\t/** A character literal, enclosed in single quotes. Supports escape sequences \\n, \\r,\\t, \\' and \\\\. **/\n\tpublic static class CharacterLiteral extends Expression {\n\t\tprivate final Character value;\n\n\t\tpublic CharacterLiteral (Span literal) {\n\t\t\tsuper(literal);\n\n\t\t\tString text = literal.getText();\n\t\t\tif (text.length() > 3) {\n\t\t\t\tif (text.charAt(2) == 'n') {\n\t\t\t\t\tvalue = '\\n';\n\t\t\t\t} else if (text.charAt(2) == 'r') {\n\t\t\t\t\tvalue = '\\r';\n\t\t\t\t} else if (text.charAt(2) == 't') {\n\t\t\t\t\tvalue = '\\t';\n\t\t\t\t} else if (text.charAt(2) == '\\\\') {\n\t\t\t\t\tvalue = '\\\\';\n\t\t\t\t} else if (text.charAt(2) == '\\'') {\n\t\t\t\t\tvalue = '\\'';\n\t\t\t\t} else {\n\t\t\t\t\tExpressionError.error(\"Unknown escape sequence '\" + literal.getText() + \"'.\", literal);\n\t\t\t\t\tvalue = 0; // never reached\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.value = literal.getText().charAt(1);\n\t\t\t}\n\t\t}\n\n\t\tpublic Character getValue () {\n\t\t\treturn value;\n\t\t}\n\n\t\t@Override\n\t\tpublic Object evaluate (ExpressionTemplate template, ExpressionTemplateContext context) throws IOException {\n\t\t\treturn value;\n\t\t}\n\t}\n\n\t/** A string literal, enclosed in double quotes. Supports escape sequences \\n, \\r, \\t, \\\" and \\\\. **/\n\tpublic static class StringLiteral extends Expression {\n\t\tprivate final String value;\n\n\t\tpublic StringLiteral (Span literal) {\n\t\t\tsuper(literal);\n\t\t\tString text = getSpan().getText();\n\t\t\tString unescapedValue = text.substring(1, text.length() - 1);\n\t\t\tStringBuilder builder = new StringBuilder();\n\n\t\t\tCharacterStream stream = new CharacterStream(unescapedValue);\n\t\t\twhile (stream.hasMore()) {\n\t\t\t\tif (stream.match(\"\\\\\\\\\", true)) {\n\t\t\t\t\tbuilder.append('\\\\');\n\t\t\t\t} else if (stream.match(\"\\\\n\", true)) {\n\t\t\t\t\tbuilder.append('\\n');\n\t\t\t\t} else if (stream.match(\"\\\\r\", true)) {\n\t\t\t\t\tbuilder.append('\\r');\n\t\t\t\t} else if (stream.match(\"\\\\t\", true)) {\n\t\t\t\t\tbuilder.append('\\t');\n\t\t\t\t} else if (stream.match(\"\\\\\\\"\", true)) {\n\t\t\t\t\tbuilder.append('\"');\n\t\t\t\t} else {\n\t\t\t\t\tbuilder.append(stream.consume());\n\t\t\t\t}\n\t\t\t}\n\t\t\tvalue = builder.toString();\n\t\t}\n\n\t\t/** Returns the literal without quotes **/\n\t\tpublic String getValue () {\n\t\t\treturn value;\n\t\t}\n\n\t\t@Override\n\t\tpublic Object evaluate (ExpressionTemplate template, ExpressionTemplateContext context) throws IOException {\n\t\t\treturn value;\n\t\t}\n\t}\n\n\t/** Represents a top-level variable access by name. E.g. in the expression \"a + 1\", <code>a</code> would be encoded as a\n\t * VariableAccess node. Variables can be both read (in expressions) and written to (in assignments). Variable values are looked\n\t * up and written to a {@link ExpressionTemplateContext}. **/\n\tpublic static class VariableAccess extends Expression {\n\t\tpublic VariableAccess (Span name) {\n\t\t\tsuper(name);\n\t\t}\n\n\t\tpublic Span getVariableName () {\n\t\t\treturn getSpan();\n\t\t}\n\n\t\t@Override\n\t\tpublic Object evaluate (ExpressionTemplate template, ExpressionTemplateContext context) throws IOException {\n\t\t\tObject value = context.get(getSpan().getText());\n\t\t\t//if (value == null) ExpressionError.error(\"找不到变量'\" + getSpan().getText() + \"'或变量值为null\", getSpan());\n\t\t\treturn value;\n\t\t}\n\t}\n\n\t/** Represents a map or array element access of the form <code>mapOrArray[keyOrIndex]</code>. Maps and arrays may only be read\n\t * from. **/\n\tpublic static class MapOrArrayAccess extends Expression {\n\t\tprivate final Expression mapOrArray;\n\t\tprivate final Expression keyOrIndex;\n\n\t\tpublic MapOrArrayAccess (Span span, Expression mapOrArray, Expression keyOrIndex) {\n\t\t\tsuper(span);\n\t\t\tthis.mapOrArray = mapOrArray;\n\t\t\tthis.keyOrIndex = keyOrIndex;\n\t\t}\n\n\t\t/** Returns an expression that must evaluate to a map or array. **/\n\t\tpublic Expression getMapOrArray () {\n\t\t\treturn mapOrArray;\n\t\t}\n\n\t\t/** Returns an expression that is used as the key or index to fetch a map or array element. **/\n\t\tpublic Expression getKeyOrIndex () {\n\t\t\treturn keyOrIndex;\n\t\t}\n\n\t\t@SuppressWarnings(\"rawtypes\")\n\t\t@Override\n\t\tpublic Object evaluate (ExpressionTemplate template, ExpressionTemplateContext context) throws IOException {\n\t\t\tObject mapOrArray = getMapOrArray().evaluate(template, context);\n\t\t\tif (mapOrArray == null) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tObject keyOrIndex = getKeyOrIndex().evaluate(template, context);\n\t\t\tif (keyOrIndex == null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (mapOrArray instanceof Map) {\n\t\t\t\treturn ((Map)mapOrArray).get(keyOrIndex);\n\t\t\t} else if (mapOrArray instanceof List) {\n\t\t\t\tif (!(keyOrIndex instanceof Number)) {\n\t\t\t\t\tExpressionError.error(\"List index must be an integer, but was \" + keyOrIndex.getClass().getSimpleName(), getKeyOrIndex().getSpan());\n\t\t\t\t}\n\t\t\t\tint index = ((Number)keyOrIndex).intValue();\n\t\t\t\treturn ((List)mapOrArray).get(index);\n\t\t\t} else {\n\t\t\t\tif (!(keyOrIndex instanceof Number)) {\n\t\t\t\t\tExpressionError.error(\"Array index must be an integer, but was \" + keyOrIndex.getClass().getSimpleName(), getKeyOrIndex().getSpan());\n\t\t\t\t}\n\t\t\t\tint index = ((Number)keyOrIndex).intValue();\n\t\t\t\tif (mapOrArray instanceof int[]) {\n\t\t\t\t\treturn ((int[])mapOrArray)[index];\n\t\t\t\t} else if (mapOrArray instanceof float[]) {\n\t\t\t\t\treturn ((float[])mapOrArray)[index];\n\t\t\t\t} else if (mapOrArray instanceof double[]) {\n\t\t\t\t\treturn ((double[])mapOrArray)[index];\n\t\t\t\t} else if (mapOrArray instanceof boolean[]) {\n\t\t\t\t\treturn ((boolean[])mapOrArray)[index];\n\t\t\t\t} else if (mapOrArray instanceof char[]) {\n\t\t\t\t\treturn ((char[])mapOrArray)[index];\n\t\t\t\t} else if (mapOrArray instanceof short[]) {\n\t\t\t\t\treturn ((short[])mapOrArray)[index];\n\t\t\t\t} else if (mapOrArray instanceof long[]) {\n\t\t\t\t\treturn ((long[])mapOrArray)[index];\n\t\t\t\t} else if (mapOrArray instanceof byte[]) {\n\t\t\t\t\treturn ((byte[])mapOrArray)[index];\n\t\t\t\t} else if (mapOrArray instanceof String) {\n\t\t\t\t\treturn Character.toString(((String)mapOrArray).charAt(index));\n\t\t\t\t} else {\n\t\t\t\t\treturn ((Object[])mapOrArray)[index];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/** Represents an access of a member (field or method or entry in a map) of the form <code>object.member</code>. Members may\n\t * only be read from. **/\n\tpublic static class MemberAccess extends Expression {\n\t\tprivate final Expression object;\n\t\tprivate final Span name;\n\t\tprivate Object cachedMember;\n\n\t\tpublic MemberAccess (Expression object, Span name) {\n\t\t\tsuper(name);\n\t\t\tthis.object = object;\n\t\t\tthis.name = name;\n\t\t}\n\n\t\t/** Returns the object on which to access the member. **/\n\t\tpublic Expression getObject () {\n\t\t\treturn object;\n\t\t}\n\n\t\t/** The name of the member. **/\n\t\tpublic Span getName () {\n\t\t\treturn name;\n\t\t}\n\n\t\t/** Returns the cached member descriptor as returned by {@link Reflection#getField(Object, String)} or\n\t\t * {@link Reflection#getMethod(Object, String, Object...)}. See {@link #setCachedMember(Object)}. **/\n\t\tpublic Object getCachedMember () {\n\t\t\treturn cachedMember;\n\t\t}\n\n\t\t/** Sets the member descriptor as returned by {@link Reflection#getField(Object, String)} or\n\t\t * {@link Reflection#getMethod(Object, String, Object...)} for faster member lookups. Called by {@link AstInterpreter} the\n\t\t * first time this node is evaluated. Subsequent evaluations can use the cached descriptor, avoiding a costly reflective\n\t\t * lookup. **/\n\t\tpublic void setCachedMember (Object cachedMember) {\n\t\t\tthis.cachedMember = cachedMember;\n\t\t}\n\n\t\t@SuppressWarnings(\"rawtypes\")\n\t\t@Override\n\t\tpublic Object evaluate (ExpressionTemplate template, ExpressionTemplateContext context) throws IOException {\n\t\t\tObject object = getObject().evaluate(template, context);\n\t\t\tif (object == null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// special case for array.length\n\t\t\tif (object.getClass().isArray() && getName().getText().equals(\"length\")) {\n\t\t\t\treturn Array.getLength(object);\n\t\t\t}\n\n\t\t\t// special case for map, allows to do map.key instead of map[key]\n\t\t\tif (object instanceof Map) {\n\t\t\t\tMap map = (Map)object;\n\t\t\t\treturn map.get(getName().getText());\n\t\t\t}\n\n\t\t\tObject field = getCachedMember();\n\t\t\tif (field != null) {\n\t\t\t\ttry {\n\t\t\t\t\treturn Reflection.getInstance().getFieldValue(object, field);\n\t\t\t\t} catch (Throwable t) {\n\t\t\t\t\t// fall through\n\t\t\t\t}\n\t\t\t}\n\t\t\tString text = getName().getText();\n\t\t\tfield = Reflection.getInstance().getField(object, text);\n\t\t\tif (field == null) {\n\t\t\t\tString methodName = null;\n\t\t\t\tif(text.length() > 1){\n\t\t\t\t\tmethodName = text.substring(0,1).toUpperCase() + text.substring(1);\n\t\t\t\t}else{\n\t\t\t\t\tmethodName = text.toUpperCase();\n\t\t\t\t}\n\t\t\t\tMemberAccess access = new MemberAccess(this.object, new Span(\"get\" + methodName));\n\t\t\t\tMethodCall methodCall = new MethodCall(getName(),access, Collections.emptyList());\n\t\t\t\ttry {\n\t\t\t\t\treturn methodCall.evaluate(template, context);\n\t\t\t\t} catch (TemplateException e) {\n\t\t\t\t\tif(ExceptionUtils.indexOfThrowable(e, InvocationTargetException.class) > -1){\n\t\t\t\t\t\tExpressionError.error(String.format(\"在%s中调用方法get%s发生异常\"\n\t\t\t\t\t\t\t\t,object.getClass()\n\t\t\t\t\t\t\t\t,methodName), getSpan(),e);\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\taccess = new MemberAccess(this.object, new Span(\"is\" + methodName));\n\t\t\t\t\tmethodCall = new MethodCall(getName(),access, Collections.emptyList());\n\t\t\t\t\ttry {\n\t\t\t\t\t\treturn methodCall.evaluate(template, context);\n\t\t\t\t\t} catch (TemplateException e1) {\n\t\t\t\t\t\tif(ExceptionUtils.indexOfThrowable(e1, InvocationTargetException.class) > -1){\n\t\t\t\t\t\t\tExpressionError.error(String.format(\"在%s中调用方法is%s发生异常\"\n\t\t\t\t\t\t\t\t\t,object.getClass()\n\t\t\t\t\t\t\t\t\t,methodName), getSpan(),e);\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tExpressionError.error(String.format(\"在%s中找不到属性%s或者方法get%s、方法is%s\"\n\t\t\t\t\t\t\t\t,object.getClass()\n\t\t\t\t\t\t\t\t,getName().getText()\n\t\t\t\t\t\t\t\t,methodName\n\t\t\t\t\t\t\t\t,methodName), getSpan());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetCachedMember(field);\n\t\t\treturn Reflection.getInstance().getFieldValue(object, field);\n\t\t}\n\t}\n\n\t/** Represents a call to a top-level function. A function may either be a {@link FunctionalInterface} stored in a\n\t * {@link ExpressionTemplateContext}, or a {@link Macro} defined in a template. */\n\tpublic static class FunctionCall extends Expression {\n\t\tprivate final Expression function;\n\t\tprivate final List<Expression> arguments;\n\t\tprivate Object cachedFunction;\n\t\tprivate final ThreadLocal<Object[]> cachedArguments;\n\n\t\tpublic FunctionCall (Span span, Expression function, List<Expression> arguments) {\n\t\t\tsuper(span);\n\t\t\tthis.function = function;\n\t\t\tthis.arguments = arguments;\n\t\t\tthis.cachedArguments = new ThreadLocal<Object[]>();\n\t\t}\n\n\t\t/** Return the expression that must evaluate to a {@link FunctionalInterface} or a {@link Macro}. **/\n\t\tpublic Expression getFunction () {\n\t\t\treturn function;\n\t\t}\n\n\t\t/** Returns the list of expressions to be passed to the function as arguments. **/\n\t\tpublic List<Expression> getArguments () {\n\t\t\treturn arguments;\n\t\t}\n\n\t\t/** Returns the cached \"function\" descriptor as returned by {@link Reflection#getMethod(Object, String, Object...)} or the\n\t\t * {@link Macro}. See {@link #setCachedFunction(Object)}. **/\n\t\tpublic Object getCachedFunction () {\n\t\t\treturn cachedFunction;\n\t\t}\n\n\t\t/** Sets the \"function\" descriptor as returned by {@link Reflection#getMethod(Object, String, Object...)} for faster\n\t\t * lookups, or the {@link Macro} to be called. Called by {@link AstInterpreter} the first time this node is evaluated.\n\t\t * Subsequent evaluations can use the cached descriptor, avoiding a costly reflective lookup. **/\n\t\tpublic void setCachedFunction (Object cachedFunction) {\n\t\t\tthis.cachedFunction = cachedFunction;\n\t\t}\n\n\t\t/** Returns a scratch buffer to store arguments in when calling the function in {@link AstInterpreter}. Avoids generating\n\t\t * garbage. **/\n\t\tpublic Object[] getCachedArguments () {\n\t\t\tObject[] args = cachedArguments.get();\n\t\t\tif (args == null) {\n\t\t\t\targs = new Object[arguments.size()];\n\t\t\t\tcachedArguments.set(args);\n\t\t\t}\n\t\t\treturn args;\n\t\t}\n\n\t\t/** Must be invoked when this node is done evaluating so we don't leak memory **/\n\t\tpublic void clearCachedArguments () {\n\t\t\tObject[] args = getCachedArguments();\n\t\t\tfor (int i = 0; i < args.length; i++) {\n\t\t\t\targs[i] = null;\n\t\t\t}\n\t\t}\n\n\t\t@Override\n\t\tpublic Object evaluate (ExpressionTemplate template, ExpressionTemplateContext context) throws IOException {\n\t\t\ttry {\n\t\t\t\tObject[] argumentValues = getCachedArguments();\n\t\t\t\tList<Expression> arguments = getArguments();\n\t\t\t\tfor (int i = 0, n = argumentValues.length; i < n; i++) {\n\t\t\t\t\tExpression expr = arguments.get(i);\n\t\t\t\t\targumentValues[i] = expr.evaluate(template, context);\n\t\t\t\t}\n\n\t\t\t\t// This is a special case to handle template level macros. If a call to a macro is\n\t\t\t\t// made, evaluating the function expression will result in an exception, as the\n\t\t\t\t// function name can't be found in the context. Instead we need to manually check\n\t\t\t\t// if the function expression is a VariableAccess and if so, if it can be found\n\t\t\t\t// in the context.\n\t\t\t\tObject function = null;\n\t\t\t\tif (getFunction() instanceof VariableAccess) {\n\t\t\t\t\tVariableAccess varAccess = (VariableAccess)getFunction();\n\t\t\t\t\tfunction = context.get(varAccess.getVariableName().getText());\n\t\t\t\t} else {\n\t\t\t\t\tfunction = getFunction().evaluate(template, context);\n\t\t\t\t}\n\n\t\t\t\tif (function != null) {\n\t\t\t\t\tObject method = getCachedFunction();\n\t\t\t\t\tif (method != null) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\treturn Reflection.getInstance().callMethod(function, method, argumentValues);\n\t\t\t\t\t\t} catch (Throwable t) {\n\t\t\t\t\t\t\t// fall through\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tmethod = Reflection.getInstance().getMethod(function, null, argumentValues);\n\t\t\t\t\tif (method == null) {\n\t\t\t\t\t\tExpressionError.error(\"Couldn't find function.\", getSpan());\n\t\t\t\t\t}\n\t\t\t\t\tsetCachedFunction(method);\n\t\t\t\t\ttry {\n\t\t\t\t\t\treturn Reflection.getInstance().callMethod(function, method, argumentValues);\n\t\t\t\t\t} catch (Throwable t) {\n\t\t\t\t\t\tExpressionError.error(t.getMessage(), getSpan(), t);\n\t\t\t\t\t\treturn null; // never reached\n\t\t\t\t\t}\n\t\t\t\t} else if(ScriptManager.containsFunction(getFunction().getSpan().getText())){\n\t\t\t\t\ttry {\n\t\t\t\t\t\treturn ScriptManager.eval(context,getFunction().getSpan().getText(),argumentValues);\n\t\t\t\t\t} catch (Throwable t) {\n\t\t\t\t\t\tExpressionError.error(t.getMessage(), getSpan(), t);\n\t\t\t\t\t\treturn null; // never reached\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tExpressionError.error(\"Couldn't find function \" + getFunction(), getSpan());\n\t\t\t\t\treturn null; // never reached\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tclearCachedArguments();\n\t\t\t}\n\t\t}\n\t}\n\n\t/** Represents a call to a method of the form <code>object.method(a, b, c)</code>. **/\n\tpublic static class MethodCall extends Expression {\n\t\tprivate final MemberAccess method;\n\t\tprivate final List<Expression> arguments;\n\t\tprivate Object cachedMethod;\n\t\tprivate final ThreadLocal<Object[]> cachedArguments;\n\n\t\tpublic MethodCall (Span span, MemberAccess method, List<Expression> arguments) {\n\t\t\tsuper(span);\n\t\t\tthis.method = method;\n\t\t\tthis.arguments = arguments;\n\t\t\tthis.cachedArguments = new ThreadLocal<Object[]>();\n\t\t}\n\n\t\t/** Returns the object on which to call the method. **/\n\t\tpublic Expression getObject () {\n\t\t\treturn method.getObject();\n\t\t}\n\n\t\t/** Returns the method to call. **/\n\t\tpublic MemberAccess getMethod () {\n\t\t\treturn method;\n\t\t}\n\n\t\t/** Returns the list of expressions to be passed to the function as arguments. **/\n\t\tpublic List<Expression> getArguments () {\n\t\t\treturn arguments;\n\t\t}\n\n\t\t/** Returns the cached member descriptor as returned by {@link Reflection#getMethod(Object, String, Object...)}. See\n\t\t * {@link #setCachedMember(Object)}. **/\n\t\tpublic Object getCachedMethod () {\n\t\t\treturn cachedMethod;\n\t\t}\n\n\t\t/** Sets the method descriptor as returned by {@link Reflection#getMethod(Object, String, Object...)} for faster lookups.\n\t\t * Called by {@link AstInterpreter} the first time this node is evaluated. Subsequent evaluations can use the cached\n\t\t * descriptor, avoiding a costly reflective lookup. **/\n\t\tpublic void setCachedMethod (Object cachedMethod) {\n\t\t\tthis.cachedMethod = cachedMethod;\n\t\t}\n\n\t\t/** Returns a scratch buffer to store arguments in when calling the function in {@link AstInterpreter}. Avoids generating\n\t\t * garbage. **/\n\t\tpublic Object[] getCachedArguments () {\n\t\t\tObject[] args = cachedArguments.get();\n\t\t\tif (args == null) {\n\t\t\t\targs = new Object[arguments.size()];\n\t\t\t\tcachedArguments.set(args);\n\t\t\t}\n\t\t\treturn args;\n\t\t}\n\n\t\t/** Must be invoked when this node is done evaluating so we don't leak memory **/\n\t\tpublic void clearCachedArguments () {\n\t\t\tObject[] args = getCachedArguments();\n\t\t\tfor (int i = 0; i < args.length; i++) {\n\t\t\t\targs[i] = null;\n\t\t\t}\n\t\t}\n\n\t\t@Override\n\t\tpublic Object evaluate (ExpressionTemplate template, ExpressionTemplateContext context) throws IOException {\n\t\t\ttry {\n\t\t\t\tObject object = getObject().evaluate(template, context);\n\t\t\t\tif (object == null) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tObject[] argumentValues = getCachedArguments();\n\t\t\t\tList<Expression> arguments = getArguments();\n\t\t\t\tfor (int i = 0, n = argumentValues.length; i < n; i++) {\n\t\t\t\t\tExpression expr = arguments.get(i);\n\t\t\t\t\targumentValues[i] = expr.evaluate(template, context);\n\t\t\t\t}\n\t\t\t\tif(object instanceof DynamicMethod){\n\t\t\t\t\ttry {\n\t\t\t\t\t\tObject method = DynamicMethod.class.getDeclaredMethod(\"execute\", String.class,List.class);\n\t\t\t\t\t\tObject[] newArgumentValues = new Object[]{getMethod().getName().getText(),Arrays.asList(argumentValues)};\n\t\t\t\t\t\treturn Reflection.getInstance().callMethod(object, method, newArgumentValues);\n\t\t\t\t\t} catch (Throwable t) {\n\t\t\t\t\t\tExpressionError.error(t.getMessage(), getSpan(), t);\n\t\t\t\t\t\treturn null; // never reached\n\t\t\t\t\t} \n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Otherwise try to find a corresponding method or field pointing to a lambda.\n\t\t\t\tObject method = getCachedMethod();\n\t\t\t\tif (method != null) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\treturn Reflection.getInstance().callMethod(object, method, argumentValues);\n\t\t\t\t\t} catch (Throwable t) {\n\t\t\t\t\t\t// fall through\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tmethod = Reflection.getInstance().getMethod(object, getMethod().getName().getText(), argumentValues);\n\t\t\t\tif (method != null) {\n\t\t\t\t\t// found the method on the object, call it\n\t\t\t\t\tsetCachedMethod(method);\n\t\t\t\t\ttry {\n\t\t\t\t\t\treturn Reflection.getInstance().callMethod(object, method, argumentValues);\n\t\t\t\t\t} catch (Throwable t) {\n\t\t\t\t\t\tExpressionError.error(t.getMessage(), getSpan(), t);\n\t\t\t\t\t\treturn null; // never reached\n\t\t\t\t\t}\n\t\t\t\t} \n\t\t\t\tmethod = Reflection.getInstance().getExtensionMethod(object, getMethod().getName().getText(), argumentValues);\n\t\t\t\tif(method != null){\n\t\t\t\t\ttry {\n\t\t\t\t\t\tint argumentLength = argumentValues == null ? 0 : argumentValues.length;\n\t\t\t\t\t\tObject[] parameters = new Object[argumentLength + 1];\n\t\t\t\t\t\tif(argumentLength > 0){\n\t\t\t\t\t\t\tfor (int i = 0; i < argumentLength; i++) {\n\t\t\t\t\t\t\t\tparameters[i + 1] = argumentValues[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tparameters[0] = object;\n\t\t\t\t\t\tif(object.getClass().isArray()){\n\t\t\t\t\t\t\tObject[] objs = new Object[Array.getLength(object)];\n\t\t\t\t\t\t\tfor (int i = 0,len = objs.length; i < len; i++) {\n\t\t\t\t\t\t\t\tArray.set(objs, i, Array.get(object, i));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tparameters[0] = objs;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn Reflection.getInstance().callMethod(object, method, parameters);\n\t\t\t\t\t} catch (Throwable t) {\n\t\t\t\t\t\tExpressionError.error(t.getMessage(), getSpan(), t);\n\t\t\t\t\t\t// fall through\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}else {\n\t\t\t\t\t// didn't find the method on the object, try to find a field pointing to a lambda\n\t\t\t\t\tObject field = Reflection.getInstance().getField(object, getMethod().getName().getText());\n\t\t\t\t\tif (field == null){\n\t\t\t\t\t\tExpressionError.error(\"在'\" + object.getClass() + \"'中找不到方法 \" + getMethod().getName().getText() + \"(\" + StringUtils.join(JavaReflection.getStringTypes(argumentValues),\",\") + \")\",\n\t\t\t\t\t\t\tgetSpan());\n\t\t\t\t\t}\n\t\t\t\t\tObject function = Reflection.getInstance().getFieldValue(object, field);\n\t\t\t\t\tmethod = Reflection.getInstance().getMethod(function, null, argumentValues);\n\t\t\t\t\tif (method == null){\n\t\t\t\t\t\tExpressionError.error(\"在'\" + object.getClass() + \"'中找不到方法 \" + getMethod().getName().getText() + \"(\"+ StringUtils.join(JavaReflection.getStringTypes(argumentValues),\",\") +\")\",\n\t\t\t\t\t\t\t\tgetSpan());\n\t\t\t\t\t} \n\t\t\t\t\ttry {\n\t\t\t\t\t\treturn Reflection.getInstance().callMethod(function, method, argumentValues);\n\t\t\t\t\t} catch (Throwable t) {\n\t\t\t\t\t\tExpressionError.error(t.getMessage(), getSpan(), t);\n\t\t\t\t\t\treturn null; // never reached\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tclearCachedArguments();\n\t\t\t}\n\t\t}\n\t}\n\n\t/** Represents a map literal of the form <code>{ key: value, key2: value, ... }</code> which can be nested. */\n\tpublic static class MapLiteral extends Expression {\n\t\tprivate final List<Token> keys;\n\t\tprivate final List<Expression> values;\n\n\t\tpublic MapLiteral (Span span, List<Token> keys, List<Expression> values) {\n\t\t\tsuper(span);\n\t\t\tthis.keys = keys;\n\t\t\tthis.values = values;\n\t\t}\n\n\t\tpublic List<Token> getKeys () {\n\t\t\treturn keys;\n\t\t}\n\n\t\tpublic List<Expression> getValues () {\n\t\t\treturn values;\n\t\t}\n\n\t\t@Override\n\t\tpublic Object evaluate (ExpressionTemplate template, ExpressionTemplateContext context) throws IOException {\n\t\t\tMap<String, Object> map = new HashMap<>();\n\t\t\tfor (int i = 0, n = keys.size(); i < n; i++) {\n\t\t\t\tObject value = values.get(i).evaluate(template, context);\n\t\t\t\tToken tokenKey = keys.get(i);\n\t\t\t\tString key = tokenKey.getSpan().getText();\n\t\t\t\tif(tokenKey.getType() == TokenType.StringLiteral){\n\t\t\t\t\tkey = (String) new StringLiteral(tokenKey.getSpan()).evaluate(template, context);\n\t\t\t\t}else if(key != null && key.startsWith(\"$\")){\n\t\t\t\t\tObject objKey = context.get(key.substring(1));\n\t\t\t\t\tif(objKey != null){\n\t\t\t\t\t\tkey = objKey.toString();\n\t\t\t\t\t}else{\n\t\t\t\t\t\tkey = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tmap.put(key, value);\n\t\t\t}\n\t\t\treturn map;\n\t\t}\n\t}\n\n\t/** Represents a list literal of the form <code>[ value, value2, value3, ...]</code> which can be nested. */\n\tpublic static class ListLiteral extends Expression {\n\t\tpublic final List<Expression> values;\n\n\t\tpublic ListLiteral (Span span, List<Expression> values) {\n\t\t\tsuper(span);\n\t\t\tthis.values = values;\n\t\t}\n\n\t\tpublic List<Expression> getValues () {\n\t\t\treturn values;\n\t\t}\n\n\t\t@Override\n\t\tpublic Object evaluate (ExpressionTemplate template, ExpressionTemplateContext context) throws IOException {\n\t\t\tList<Object> list = new ArrayList<>();\n\t\t\tfor (int i = 0, n = values.size(); i < n; i++) {\n\t\t\t\tlist.add(values.get(i).evaluate(template, context));\n\t\t\t}\n\t\t\treturn list;\n\t\t}\n\t}\n\n}\n","highlightingTokens":[1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,4,1,1,1,5,0,4,1,1,1,1,5,0,1,1,8,7,0,1,6,0,8,7,0,0,1,0,10,0,0,0,0,4,1,8,6,0,0,0,1,0,0,0,11,11,1,8,6,0,0,0,1,0,0,9,0,0,0,0,1,1,8,6,0,8,7,0,8,7,0,1,8,0,0,4,1,1,1,5,1,8,0,1,1,8,7,0,1,6,0,8,7,0,0,1,0,0,0,0,8,7,0,0,0,9,0,0,0,8,7,0,1,8,0,0,0,8,7,0,1,8,0,0,0,0,1,0,0,0,9,0,0,0,0,1,0,0,0,9,0,3,0,2,0,0,0,0,0,9,0,3,0,0,0,1,1,0,0,0,9,0,3,0,2,0,0,0,0,0,9,0,3,0,0,0,1,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,4,1,8,6,0,0,0,1,0,0,0,11,11,1,8,6,0,8,7,0,8,7,0,1,8,0,1,2,0,0,0,4,1,1,1,1,5,1,8,0,1,6,0,8,7,0,0,1,0,0,0,0,0,0,4,1,1,1,5,1,8,0,1,1,1,5,0,5,0,5,0,5,0,1,1,8,6,0,8,7,0,0,1,0,0,0,9,0,0,0,0,0,10,0,0,1,0,0,10,0,0,1,0,0,0,9,0,0,0,0,0,10,0,0,1,0,0,10,0,0,1,0,0,0,9,0,0,0,0,0,10,0,0,1,0,0,10,0,0,0,0,9,0,3,0,0,0,3,0,0,0,9,0,0,0,0,1,2,0,4,0,0,1,1,8,7,0,1,1,8,7,0,1,6,0,8,7,0,8,7,0,0,1,0,0,0,9,0,0,0,0,1,0,10,0,0,0,9,0,0,0,0,1,0,10,0,0,0,0,1,8,6,0,0,0,1,0,0,0,1,8,6,0,0,0,1,0,0,0,11,11,1,8,6,0,8,7,0,8,7,0,1,8,0,8,7,0,9,0,0,0,9,0,0,0,0,0,0,1,0,9,0,0,0,0,0,10,0,0,1,0,0,1,8,0,0,1,0,0,8,0,0,0,0,1,1,0,0,1,8,0,0,1,0,0,8,0,0,0,0,1,1,0,0,1,8,0,0,1,0,0,8,0,0,0,0,1,1,0,0,1,8,0,0,1,0,0,8,0,0,0,0,1,1,0,0,1,8,0,0,1,0,0,8,0,0,0,0,1,1,0,0,1,8,0,0,1,0,0,8,0,0,0,0,1,0,0,0,9,0,3,0,9,0,0,0,9,0,0,0,3,0,0,0,9,0,0,0,0,1,2,0,4,0,0,1,1,0,9,0,0,0,0,0,10,0,0,1,0,0,0,0,1,8,0,0,0,0,0,9,0,3,0,9,0,0,0,9,0,0,0,3,0,9,0,0,0,0,0,1,0,0,8,0,0,0,0,1,0,1,0,0,0,0,0,4,1,1,1,5,1,8,0,1,1,1,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,1,1,8,6,0,8,7,0,0,1,0,0,0,9,0,0,0,0,0,10,0,0,1,0,0,10,0,0,1,0,0,0,9,0,0,0,0,0,10,0,0,1,0,0,10,0,0,1,0,0,0,9,0,0,0,0,0,10,0,0,1,0,0,10,0,0,1,0,0,0,9,0,0,0,0,0,10,0,0,1,0,0,10,0,0,1,0,0,0,9,0,0,0,0,0,10,0,0,1,0,0,10,0,0,1,0,0,0,9,0,0,0,0,0,10,0,0,1,0,0,10,0,0,1,0,0,0,9,0,0,0,0,0,10,0,0,1,0,0,10,0,0,1,0,0,0,9,0,0,0,0,0,10,0,0,1,0,0,10,0,0,1,0,0,0,9,0,0,0,0,0,10,0,0,1,0,0,10,0,0,1,0,0,0,9,0,0,0,0,0,10,0,0,1,0,0,10,0,0,1,0,0,0,9,0,0,0,0,0,10,0,0,1,0,0,10,0,0,1,0,0,0,9,0,0,0,0,0,10,0,0,1,0,0,10,0,0,1,0,0,0,9,0,0,0,0,0,10,0,0,1,0,0,10,0,0,1,0,0,0,9,0,0,0,0,0,10,0,0,1,0,0,10,0,0,1,0,0,0,9,0,0,0,0,0,10,0,0,1,0,0,10,0,0,0,0,9,0,3,0,0,0,3,0,0,0,9,0,0,0,0,1,2,0,4,0,0,1,1,8,7,0,1,1,8,7,0,1,1,8,7,0,1,6,0,8,7,0,8,7,0,8,7,0,0,1,0,0,0,9,0,0,0,0,1,0,10,0,0,0,1,0,10,0,0,0,9,0,0,0,0,1,0,10,0,0,0,0,1,8,6,0,0,0,1,0,0,0,1,8,6,0,0,0,1,0,0,0,1,8,6,0,0,0,1,0,0,0,1,8,6,0,8,7,0,8,7,0,0,1,0,0,1,8,0,0,1,8,0,0,1,0,0,9,0,0,0,0,0,9,0,0,0,0,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,0,0,9,0,3,0,0,0,3,0,0,0,3,0,9,0,0,0,0,1,2,0,4,0,1,8,6,0,8,7,0,8,7,0,0,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,0,0,0,9,0,3,0,0,0,3,0,0,0,3,0,9,0,0,0,0,1,2,0,4,0,0,1,8,6,0,8,7,0,8,7,0,0,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,0,0,0,9,0,3,0,0,0,3,0,0,0,3,0,9,0,0,0,0,1,2,0,4,0,0,1,8,6,0,8,7,0,8,7,0,0,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,0,0,0,9,0,3,0,0,0,3,0,0,0,3,0,9,0,0,0,0,1,2,0,4,0,0,1,8,6,0,8,7,0,8,7,0,0,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,0,0,0,9,0,3,0,0,0,3,0,0,0,3,0,9,0,0,0,0,1,2,0,4,0,0,1,1,6,0,8,7,0,8,7,0,0,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,0,0,0,9,0,3,0,0,0,3,0,0,0,3,0,9,0,0,0,0,1,2,0,4,0,0,1,8,6,0,8,7,0,8,7,0,0,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,0,0,0,9,0,3,0,0,0,3,0,0,0,3,0,9,0,0,0,0,1,2,0,4,0,0,1,8,6,0,8,7,0,8,7,0,0,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,0,0,0,9,0,3,0,0,0,3,0,0,0,3,0,9,0,0,0,0,1,2,0,4,0,0,1,8,6,0,8,7,0,8,7,0,0,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,1,0,0,1,8,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,9,0,0,0,0,1,0,0,0,9,0,3,0,0,0,3,0,0,0,3,0,9,0,0,0,0,1,2,0,4,0,0,1,8,6,0,8,7,0,8,7,0,8,7,0,1,8,0,1,0,0,0,0,1,8,0,0,0,0,0,9,0,3,0,0,0,3,0,9,0,0,0,9,0,0,0,0,0,1,0,0,0,8,0,0,0,0,1,2,0,0,8,7,0,9,0,0,0,9,0,0,0,0,0,0,1,0,0,0,0,1,8,0,0,0,0,0,9,0,3,0,0,0,3,0,9,0,0,0,9,0,0,0,0,0,1,0,8,0,0,0,0,8,0,0,0,0,1,8,6,0,8,7,0,8,7,0,8,7,0,1,8,0,1,0,0,0,0,1,8,0,0,0,0,0,9,0,3,0,0,0,3,0,9,0,0,0,9,0,0,0,0,0,1,0,0,8,0,0,0,0,1,2,0,0,8,7,0,9,0,0,0,9,0,0,0,0,0,0,1,0,0,0,0,1,8,0,0,0,0,0,9,0,3,0,0,0,3,0,9,0,0,0,9,0,0,0,0,0,1,0,8,0,0,0,0,8,0,0,0,0,1,8,6,0,8,7,0,8,7,0,0,1,0,0,0,0,1,8,0,0,0,0,0,9,0,3,0,0,0,3,0,9,0,0,0,9,0,0,0,0,0,1,0,0,0,0,1,8,0,0,0,0,0,9,0,3,0,0,0,3,0,9,0,0,0,9,0,0,0,0,0,1,0,8,0,0,0,0,8,0,0,0,0,1,8,6,0,8,7,0,8,7,0,0,1,0,0,0,2,0,0,1,0,0,9,0,0,0,0,0,1,0,0,0,2,0,0,1,0,0,9,0,0,0,0,0,1,2,0,0,1,8,6,0,8,7,0,8,7,0,0,1,0,0,8,0,9,0,0,0,0,0,0,0,11,11,1,8,6,0,8,7,0,8,7,0,1,8,0,1,0,9,0,0,0,0,0,10,0,0,1,0,0,0,9,0,0,1,8,0,0,0,0,0,9,0,3,0,9,0,0,0,9,0,0,0,0,0,8,7,0,9,0,0,0,9,0,0,0,0,0,0,0,0,9,0,0,0,8,0,9,0,0,0,0,9,0,0,0,9,0,0,0,0,0,0,1,2,0,0,8,7,0,9,0,0,0,9,0,0,0,0,0,0,8,7,0,9,0,0,0,0,0,10,0,9,0,0,0,0,0,10,0,2,0,9,0,0,0,9,0,0,0,0,0,0,1,0,9,0,0,0,0,1,0,0,1,9,0,0,0,0,0,0,1,0,0,1,9,0,0,0,0,0,0,1,0,0,1,9,0,0,0,0,0,0,1,0,0,1,9,0,0,0,0,0,0,1,0,0,1,9,0,0,0,0,0,0,1,0,0,1,9,0,0,0,0,0,0,1,0,0,1,9,0,0,0,0,0,0,1,0,0,1,9,0,0,0,0,0,0,1,0,0,1,9,0,0,0,0,0,0,1,0,0,1,9,0,0,0,0,0,0,1,0,0,1,9,0,0,0,0,0,0,1,0,0,1,9,0,0,0,0,0,0,0,0,1,0,0,1,9,0,0,0,0,0,0,0,0,1,0,0,1,9,0,0,0,0,0,0,1,0,0,0,9,0,3,0,9,0,0,0,9,0,0,0,3,0,9,0,0,0,0,1,2,0,0,0,0,4,1,1,1,5,1,8,0,1,1,8,7,0,1,1,8,7,0,1,1,8,7,0,1,6,0,8,7,0,8,7,0,8,7,0,0,1,0,1,8,0,0,0,9,0,0,0,0,0,9,0,0,0,0,0,1,0,10,0,0,0,1,0,10,0,0,0,1,0,10,0,0,0,0,1,8,6,0,0,0,1,0,0,0,1,8,6,0,0,0,1,0,0,0,1,8,6,0,0,0,1,0,0,0,11,11,1,8,6,0,8,7,0,8,7,0,1,8,0,8,7,0,9,0,0,0,9,0,0,0,0,0,0,1,0,0,0,0,1,8,0,0,0,0,0,9,0,3,0,0,0,3,0,9,0,0,0,0,0,1,0,0,8,0,0,0,0,9,0,0,0,9,0,0,0,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,4,1,1,1,5,1,8,0,1,6,0,8,7,0,0,1,0,0,0,0,0,11,11,1,8,6,0,8,7,0,8,7,0,1,8,0,1,2,0,0,0,4,1,1,1,5,1,8,0,1,1,8,7,0,1,6,0,8,7,0,0,1,0,0,0,0,1,0,10,0,0,0,9,0,0,0,9,0,0,0,0,0,1,8,6,0,0,0,1,0,0,0,11,11,1,8,6,0,8,7,0,8,7,0,1,8,0,1,0,0,0,0,4,1,1,1,5,1,8,0,1,1,8,7,0,1,6,0,8,7,0,0,1,0,0,0,0,1,0,10,0,0,0,9,0,0,0,9,0,0,0,9,0,2,0,0,0,9,0,0,0,9,0,0,0,2,0,0,0,0,1,8,6,0,0,0,1,0,0,0,11,11,1,8,6,0,8,7,0,8,7,0,1,8,0,1,0,0,0,0,4,1,1,1,5,1,8,0,1,1,8,7,0,1,6,0,8,7,0,0,1,0,0,0,0,8,7,0,0,0,9,0,0,0,1,0,0,0,9,0,0,0,9,0,0,0,2,0,0,3,0,0,0,0,0,0,9,0,2,0,0,0,9,0,0,0,2,0,0,0,1,0,10,0,0,0,9,0,0,0,0,0,1,8,6,0,0,0,1,0,0,0,11,11,1,8,6,0,8,7,0,8,7,0,1,8,0,1,0,0,0,0,4,1,1,1,5,1,8,0,1,1,8,7,0,1,6,0,8,7,0,0,1,0,0,0,0,1,0,10,0,0,0,9,0,0,0,9,0,0,0,9,0,2,0,0,0,9,0,0,0,9,0,0,0,2,0,0,0,0,1,8,6,0,0,0,1,0,0,0,11,11,1,8,6,0,8,7,0,8,7,0,1,8,0,1,0,0,0,0,4,1,1,1,5,1,8,0,1,1,8,7,0,1,6,0,8,7,0,0,1,0,0,0,0,1,0,10,0,0,0,9,0,0,0,9,0,0,0,9,0,2,0,0,0,9,0,0,0,9,0,0,0,2,0,0,0,0,1,8,6,0,0,0,1,0,0,0,11,11,1,8,6,0,8,7,0,8,7,0,1,8,0,1,0,0,0,0,4,1,1,1,5,1,8,0,1,1,8,7,0,1,6,0,8,7,0,0,1,0,0,0,0,1,0,10,0,0,0,9,0,0,0,9,0,0,0,0,0,1,8,6,0,0,0,1,0,0,0,11,11,1,8,6,0,8,7,0,8,7,0,1,8,0,1,0,0,0,0,4,1,1,1,5,1,8,0,1,1,8,7,0,1,6,0,8,7,0,0,1,0,0,0,0,1,0,10,0,0,0,9,0,0,0,9,0,0,0,9,0,2,0,0,0,9,0,0,0,9,0,0,0,2,0,0,0,0,1,8,6,0,0,0,1,0,0,0,11,11,1,8,6,0,8,7,0,8,7,0,1,8,0,1,0,0,0,0,4,1,1,1,5,1,8,0,1,1,8,7,0,1,6,0,8,7,0,0,1,0,0,0,0,8,7,0,0,0,9,0,0,0,1,0,0,0,9,0,0,0,2,0,0,1,0,0,0,9,0,2,0,0,3,0,0,0,0,3,0,0,1,1,0,0,0,9,0,2,0,0,3,0,0,0,0,3,0,0,1,1,0,0,0,9,0,2,0,0,3,0,0,0,0,3,0,0,1,1,0,0,0,9,0,2,0,0,3,0,0,0,0,3,0,0,1,1,0,0,0,9,0,2,0,0,3,0,0,0,0,3,0,0,1,0,0,0,9,0,3,0,0,0,9,0,0,0,3,0,0,0,0,0,0,2,0,4,0,0,1,0,1,0,10,0,0,0,9,0,0,0,9,0,2,0,0,0,0,1,8,6,0,0,0,1,0,0,0,11,11,1,8,6,0,8,7,0,8,7,0,1,8,0,1,0,0,0,0,4,1,1,1,5,1,8,0,1,1,8,7,0,1,6,0,8,7,0,0,1,0,0,0,0,8,7,0,9,0,0,0,9,0,0,0,8,7,0,0,0,9,0,2,0,0,0,9,0,0,0,2,0,0,8,7,0,1,8,0,0,0,8,7,0,1,8,0,0,0,0,1,0,0,0,9,0,0,0,0,1,0,0,0,9,0,3,0,2,0,0,0,0,0,9,0,3,0,0,0,1,1,0,0,0,9,0,3,0,2,0,0,0,0,0,9,0,3,0,0,0,1,1,0,0,0,9,0,3,0,2,0,0,0,0,0,9,0,3,0,0,0,1,1,0,0,0,9,0,3,0,2,0,0,0,0,0,9,0,3,0,0,0,1,1,0,0,0,9,0,3,0,2,0,0,0,0,0,9,0,3,0,0,0,1,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,4,1,8,6,0,0,0,1,0,0,0,11,11,1,8,6,0,8,7,0,8,7,0,1,8,0,1,0,0,0,0,4,1,1,1,5,1,8,0,1,6,0,8,7,0,0,1,0,0,0,0,0,1,8,6,0,0,0,1,9,0,0,0,0,11,11,1,8,6,0,8,7,0,8,7,0,1,8,0,8,7,0,0,0,9,0,9,0,0,0,9,0,0,0,0,4,1,0,0,0,0,4,1,1,1,5,1,8,0,1,1,8,7,0,1,1,8,7,0,1,6,0,8,7,0,8,7,0,8,7,0,0,1,0,0,0,0,1,0,10,0,0,0,1,0,10,0,0,0,0,4,1,8,6,0,0,0,1,0,0,0,4,1,8,6,0,0,0,1,0,0,0,11,11,0,3,0,11,11,1,8,6,0,8,7,0,8,7,0,1,8,0,8,7,0,9,0,0,0,9,0,0,0,0,0,0,1,0,0,0,2,0,0,1,2,0,0,8,7,0,9,0,0,0,9,0,0,0,0,0,0,1,0,0,0,2,0,0,1,2,0,0,1,0,0,1,8,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,1,1,0,0,1,8,0,0,1,0,0,0,0,1,8,0,0,0,0,0,9,0,3,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,0,0,1,7,0,0,0,8,0,0,0,0,9,0,0,0,1,0,0,8,0,0,0,0,9,0,0,0,0,0,1,0,1,0,0,0,0,1,8,0,0,0,0,0,9,0,3,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,0,0,1,7,0,0,0,8,0,0,0,0,9,0,0,0,1,0,0,1,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,8,0,0,1,0,0,9,0,0,0,8,0,0,0,0,9,0,0,0,0,0,0,1,0,1,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,1,1,5,1,8,0,1,1,8,7,0,1,1,8,7,0,1,8,7,0,1,6,0,8,7,0,8,7,0,0,1,0,0,0,0,1,0,10,0,0,0,1,0,10,0,0,0,0,4,1,8,6,0,0,0,1,0,0,0,4,1,8,6,0,0,0,1,0,0,0,4,1,8,6,0,0,0,1,0,0,0,4,1,1,6,0,8,7,0,0,1,0,10,0,0,0,0,11,11,0,3,0,11,11,1,8,6,0,8,7,0,8,7,0,1,8,0,8,7,0,9,0,0,0,9,0,0,0,0,0,0,1,0,0,0,2,0,0,1,2,0,0,4,1,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,3,0,0,0,1,0,0,9,0,0,0,0,0,4,1,0,0,1,8,0,0,8,7,0,0,8,0,0,0,1,0,0,9,0,9,0,0,0,9,0,0,0,0,0,8,7,0,9,0,0,0,1,0,0,0,2,0,0,1,0,1,0,0,9,0,0,0,9,0,0,0,0,0,0,0,1,0,0,7,0,0,4,0,0,8,7,0,9,0,0,0,9,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,0,0,0,1,0,0,0,2,0,0,8,7,0,2,0,1,0,0,0,9,0,0,0,2,0,0,0,0,0,0,9,0,2,0,2,0,0,9,0,0,0,0,0,9,0,2,0,0,0,1,0,0,0,0,0,9,0,0,0,0,8,7,0,1,8,0,1,0,10,0,1,8,0,3,0,0,0,0,0,8,7,0,1,8,0,9,0,0,0,0,0,0,0,9,0,0,0,0,1,0,1,0,0,9,0,0,0,0,0,0,0,1,0,0,7,0,0,1,0,0,0,9,0,0,0,0,0,1,0,0,0,2,0,0,0,0,9,0,0,0,9,0,3,0,0,0,9,0,0,0,0,0,0,9,0,0,0,0,0,0,1,2,0,0,0,0,1,8,0,1,0,10,0,1,8,0,3,0,0,0,0,0,0,0,1,8,0,9,0,0,0,0,0,0,0,9,0,0,0,0,1,0,1,0,0,9,0,0,0,0,0,0,0,1,0,0,7,0,0,1,0,0,0,9,0,0,0,0,0,1,0,0,0,2,0,0,0,0,9,0,0,0,9,0,3,0,0,0,9,0,0,0,0,0,0,9,0,0,0,0,0,0,1,2,0,0,0,0,9,0,0,0,9,0,3,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,9,0,0,0,0,1,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,4,1,1,1,5,1,8,0,1,1,8,7,0,1,1,8,0,8,0,7,0,1,8,7,0,1,1,8,0,8,0,0,0,7,0,1,6,0,8,7,0,8,7,0,8,0,8,0,7,0,0,1,0,0,0,0,1,0,10,0,0,0,1,0,10,0,0,0,1,0,10,0,1,8,0,8,0,0,0,0,0,0,0,4,1,8,6,0,0,0,1,0,0,0,4,1,8,0,8,0,6,0,0,0,1,0,0,0,4,1,8,6,0,0,0,1,0,0,0,4,1,1,6,0,8,7,0,0,1,0,10,0,0,0,0,4,1,8,0,0,6,0,0,0,8,0,0,7,0,0,0,9,0,0,0,1,0,0,0,2,0,0,0,0,1,8,0,0,0,9,0,0,0,0,0,0,9,0,0,0,0,0,1,0,0,0,4,1,1,6,0,0,0,8,0,0,7,0,9,0,0,0,1,0,1,7,0,2,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,2,0,0,0,11,11,1,8,6,0,8,7,0,8,7,0,1,8,0,1,0,8,0,0,7,0,9,0,0,0,8,0,8,0,7,0,9,0,0,0,1,0,1,7,0,2,0,7,0,0,0,10,0,0,0,0,0,0,0,0,0,8,7,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,4,4,4,4,4,8,7,0,2,0,1,0,9,0,0,1,8,0,0,8,7,0,0,8,0,9,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,0,0,1,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,1,0,0,0,2,0,0,8,7,0,9,0,0,0,1,0,0,0,2,0,0,1,0,1,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,0,1,0,0,7,0,0,4,0,0,0,0,0,0,9,0,0,0,9,0,0,0,2,0,0,0,0,1,0,0,0,2,0,0,0,0,9,0,3,0,9,0,0,0,0,0,9,0,0,0,0,1,0,1,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,0,1,0,0,7,0,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,0,0,0,1,2,0,4,0,0,1,1,0,0,0,9,0,9,0,0,0,9,0,0,0,9,0,0,0,0,0,1,0,1,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,1,0,0,7,0,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,0,0,0,1,2,0,4,0,0,1,0,0,0,9,0,3,0,9,0,0,0,9,0,0,0,0,1,2,0,4,0,0,1,0,9,0,0,0,0,0,0,4,1,1,1,5,1,8,0,1,1,8,7,0,1,1,8,0,8,0,7,0,1,8,7,0,1,1,8,0,8,0,0,0,7,0,1,6,0,8,7,0,8,7,0,8,0,8,0,7,0,0,1,0,0,0,0,1,0,10,0,0,0,1,0,10,0,0,0,1,0,10,0,1,8,0,8,0,0,0,0,0,0,0,4,1,8,6,0,0,0,1,0,0,9,0,0,0,0,4,1,8,6,0,0,0,1,0,0,0,4,1,8,0,8,0,6,0,0,0,1,0,0,0,4,1,8,6,0,0,0,1,0,0,0,4,1,1,6,0,8,7,0,0,1,0,10,0,0,0,0,4,1,8,0,0,6,0,0,0,8,0,0,7,0,0,0,9,0,0,0,1,0,0,0,2,0,0,0,0,1,8,0,0,0,9,0,0,0,0,0,0,9,0,0,0,0,0,1,0,0,0,4,1,1,6,0,0,0,8,0,0,7,0,9,0,0,0,1,0,1,7,0,2,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,2,0,0,0,11,11,1,8,6,0,8,7,0,8,7,0,1,8,0,1,0,8,7,0,9,0,0,0,9,0,0,0,0,0,0,1,0,0,0,2,0,0,1,2,0,0,8,0,0,7,0,9,0,0,0,8,0,8,0,7,0,9,0,0,0,1,0,1,7,0,2,0,7,0,0,0,10,0,0,0,0,0,0,0,0,0,8,7,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,1,0,0,1,8,0,0,1,0,8,7,0,0,0,1,0,9,0,3,0,0,0,1,0,0,0,1,0,0,8,0,0,7,0,1,8,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,0,0,9,0,0,0,0,0,1,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,0,1,0,0,7,0,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,0,0,0,1,2,0,4,0,0,4,8,7,0,9,0,0,0,1,0,0,0,2,0,0,1,0,1,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,0,1,0,0,7,0,0,4,0,0,0,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,0,0,0,1,0,0,0,2,0,0,4,9,0,0,0,0,1,0,1,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,0,1,0,0,7,0,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,0,0,0,1,2,0,4,0,0,0,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,0,0,0,1,0,0,0,2,0,0,1,0,1,7,0,0,0,2,0,2,0,0,0,10,0,8,0,0,7,0,1,8,0,0,0,2,0,0,1,0,0,0,2,0,0,1,0,1,7,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,1,0,0,0,9,0,0,0,9,0,0,0,0,8,0,0,7,0,1,8,0,0,0,9,0,0,0,0,0,1,0,1,7,0,2,0,7,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,1,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,0,1,0,0,7,0,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,0,0,0,4,1,2,0,0,0,1,0,4,8,7,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,0,1,0,0,0,2,0,0,0,0,9,0,3,0,0,0,9,0,0,0,3,0,9,0,0,0,9,0,0,0,9,0,0,0,3,0,0,0,9,0,0,0,9,0,0,0,0,3,0,0,3,0,9,0,0,0,0,0,8,7,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,2,0,0,0,0,1,0,0,0,2,0,0,0,0,9,0,3,0,0,0,9,0,0,0,3,0,9,0,0,0,9,0,0,0,9,0,0,0,3,0,0,0,9,0,0,0,9,0,0,0,0,3,0,0,3,0,9,0,0,0,0,0,1,0,1,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,0,1,0,0,7,0,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,0,0,0,1,2,0,4,0,0,0,1,0,9,0,0,0,0,0,0,4,1,1,1,5,1,8,0,1,1,8,0,8,0,7,0,1,1,8,0,8,0,7,0,1,6,0,8,7,0,8,0,8,0,7,0,8,0,8,0,7,0,0,1,0,0,0,0,1,0,10,0,0,0,1,0,10,0,0,0,0,1,8,0,8,0,6,0,0,0,1,0,0,0,1,8,0,8,0,6,0,0,0,1,0,0,0,11,11,1,8,6,0,8,7,0,8,7,0,1,8,0,8,0,8,0,8,0,7,0,1,8,0,0,0,0,0,1,0,1,7,0,2,0,7,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,8,7,0,0,0,9,0,0,0,0,9,0,0,0,0,0,0,8,7,0,0,0,9,0,0,0,0,8,7,0,0,0,9,0,0,0,9,0,0,0,1,0,0,0,9,0,0,0,0,0,10,0,0,0,0,0,8,0,1,8,0,0,0,9,0,0,0,0,9,0,0,0,0,0,0,0,1,1,0,0,0,2,0,0,0,9,0,3,0,0,0,8,7,0,0,0,9,0,0,0,9,0,2,0,0,0,1,0,0,0,2,0,0,0,0,0,0,9,0,0,0,0,1,0,0,0,2,0,0,0,0,0,9,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,1,5,1,8,0,1,1,8,0,8,0,7,0,1,6,0,8,7,0,8,0,8,0,7,0,0,1,0,0,0,0,1,0,10,0,0,0,0,1,8,0,8,0,6,0,0,0,1,0,0,0,11,11,1,8,6,0,8,7,0,8,7,0,1,8,0,8,0,8,0,7,0,1,8,0,0,0,0,0,1,0,1,7,0,2,0,7,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,0,9,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0],"highlightingCode":"<!DOCTYPE html>\n<html>\n<style>\n.ANY {\n    color: black;\n    font-weight: normal;\n    font-style: normal;\n}\n.KEYWORD {\n    color: blue;\n    font-weight: bold;\n    font-style: normal;\n}\n.LITERAL {\n    color: lightskyblue;\n    font-weight: bold;\n    font-style: normal;\n}\n.CHAR_STRING_LITERAL {\n    color: darkgoldenrod;\n    font-weight: normal;\n    font-style: normal;\n}\n.COMMENT {\n    color: grey;\n    font-weight: normal;\n    font-style: italic;\n}\n.CLASS_DECLARATOR {\n    color: crimson;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_DECLARATOR {\n    color: fuchsia;\n    font-weight: bold;\n    font-style: normal;\n}\n.VARIABLE_DECLARATOR {\n    color: purple;\n    font-weight: bold;\n    font-style: normal;\n}\n.TYPE_IDENTIFIER {\n    color: darkgreen;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_IDENTIFIER {\n    color: dodgerblue;\n    font-weight: normal;\n    font-style: normal;\n}\n.FIELD_IDENTIFIER {\n    color: coral;\n    font-weight: normal;\n    font-style: normal;\n}\n.ANNOTATION_DECLARATOR {\n    color: lightslategray;\n    font-weight: lighter;\n    font-style: italic;\n}\n</style>\n<pre>\n\n<code class=\"KEYWORD\">package</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">spiderflow</code><code class=\"ANY\">.</code><code class=\"ANY\">core</code><code class=\"ANY\">.</code><code class=\"ANY\">expression</code><code class=\"ANY\">.</code><code class=\"ANY\">parsing</code><code class=\"ANY\">;</code>\n\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">apache</code><code class=\"ANY\">.</code><code class=\"ANY\">commons</code><code class=\"ANY\">.</code><code class=\"ANY\">lang3</code><code class=\"ANY\">.</code><code class=\"ANY\">StringUtils</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">apache</code><code class=\"ANY\">.</code><code class=\"ANY\">commons</code><code class=\"ANY\">.</code><code class=\"ANY\">lang3</code><code class=\"ANY\">.</code><code class=\"ANY\">exception</code><code class=\"ANY\">.</code><code class=\"ANY\">ExceptionUtils</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">spiderflow</code><code class=\"ANY\">.</code><code class=\"ANY\">core</code><code class=\"ANY\">.</code><code class=\"ANY\">expression</code><code class=\"ANY\">.</code><code class=\"ANY\">ExpressionError</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">spiderflow</code><code class=\"ANY\">.</code><code class=\"ANY\">core</code><code class=\"ANY\">.</code><code class=\"ANY\">expression</code><code class=\"ANY\">.</code><code class=\"ANY\">ExpressionError</code><code class=\"ANY\">.</code><code class=\"ANY\">TemplateException</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">spiderflow</code><code class=\"ANY\">.</code><code class=\"ANY\">core</code><code class=\"ANY\">.</code><code class=\"ANY\">expression</code><code class=\"ANY\">.</code><code class=\"ANY\">ExpressionTemplate</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">spiderflow</code><code class=\"ANY\">.</code><code class=\"ANY\">core</code><code class=\"ANY\">.</code><code class=\"ANY\">expression</code><code class=\"ANY\">.</code><code class=\"ANY\">ExpressionTemplateContext</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">spiderflow</code><code class=\"ANY\">.</code><code class=\"ANY\">core</code><code class=\"ANY\">.</code><code class=\"ANY\">expression</code><code class=\"ANY\">.</code><code class=\"ANY\">interpreter</code><code class=\"ANY\">.</code><code class=\"ANY\">AstInterpreter</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">spiderflow</code><code class=\"ANY\">.</code><code class=\"ANY\">core</code><code class=\"ANY\">.</code><code class=\"ANY\">expression</code><code class=\"ANY\">.</code><code class=\"ANY\">interpreter</code><code class=\"ANY\">.</code><code class=\"ANY\">JavaReflection</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">spiderflow</code><code class=\"ANY\">.</code><code class=\"ANY\">core</code><code class=\"ANY\">.</code><code class=\"ANY\">expression</code><code class=\"ANY\">.</code><code class=\"ANY\">interpreter</code><code class=\"ANY\">.</code><code class=\"ANY\">Reflection</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">spiderflow</code><code class=\"ANY\">.</code><code class=\"ANY\">core</code><code class=\"ANY\">.</code><code class=\"ANY\">script</code><code class=\"ANY\">.</code><code class=\"ANY\">ScriptManager</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">spiderflow</code><code class=\"ANY\">.</code><code class=\"ANY\">expression</code><code class=\"ANY\">.</code><code class=\"ANY\">DynamicMethod</code><code class=\"ANY\">;</code>\n\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">javax</code><code class=\"ANY\">.</code><code class=\"ANY\">xml</code><code class=\"ANY\">.</code><code class=\"ANY\">transform</code><code class=\"ANY\">.</code><code class=\"ANY\">Source</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">java</code><code class=\"ANY\">.</code><code class=\"ANY\">io</code><code class=\"ANY\">.</code><code class=\"ANY\">IOException</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">java</code><code class=\"ANY\">.</code><code class=\"ANY\">lang</code><code class=\"ANY\">.</code><code class=\"ANY\">reflect</code><code class=\"ANY\">.</code><code class=\"ANY\">Array</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">java</code><code class=\"ANY\">.</code><code class=\"ANY\">lang</code><code class=\"ANY\">.</code><code class=\"ANY\">reflect</code><code class=\"ANY\">.</code><code class=\"ANY\">InvocationTargetException</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">java</code><code class=\"ANY\">.</code><code class=\"ANY\">util</code><code class=\"ANY\">.</code><code class=\"ANY\">*</code><code class=\"ANY\">;</code>\n\n\n<code class=\"COMMENT\">/** Templates are parsed into an abstract syntax tree (AST) nodes by a Parser. This class contains all AST node types. */</code>\n<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">abstract</code> <code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">Ast</code> <code class=\"ANY\">{</code>\n\n\t<code class=\"COMMENT\">/** Base class for all AST nodes. A node minimally stores the {@link Span} that references its location in the\n\t * {@link Source}. **/</code>\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">abstract</code> <code class=\"KEYWORD\">static</code> <code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">Node</code> <code class=\"ANY\">{</code>\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">Span</code> <code class=\"VARIABLE_DECLARATOR\">span</code><code class=\"ANY\">;</code>\n\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"FUNCTION_DECLARATOR\">Node</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Span</code> <code class=\"VARIABLE_DECLARATOR\">span</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">span</code> <code class=\"ANY\">=</code> <code class=\"ANY\">span</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"COMMENT\">/** Returns the {@link Span} referencing this node's location in the {@link Source}. **/</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Span</code> <code class=\"FUNCTION_DECLARATOR\">getSpan</code> <code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">span</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">Override</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"FUNCTION_DECLARATOR\">toString</code> <code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">span</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getText</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">abstract</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"FUNCTION_DECLARATOR\">evaluate</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">ExpressionTemplate</code> <code class=\"VARIABLE_DECLARATOR\">template</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">ExpressionTemplateContext</code> <code class=\"VARIABLE_DECLARATOR\">context</code><code class=\"ANY\">)</code> <code class=\"KEYWORD\">throws</code> <code class=\"TYPE_IDENTIFIER\">IOException</code><code class=\"ANY\">;</code>\n\t<code class=\"ANY\">}</code>\n\n\t<code class=\"COMMENT\">/** A text node represents an \"un-templated\" span in the source that should be emitted verbatim. **/</code>\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">Text</code> <code class=\"KEYWORD\">extends</code> <code class=\"TYPE_IDENTIFIER\">Node</code> <code class=\"ANY\">{</code>\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">content</code><code class=\"ANY\">;</code>\n\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"FUNCTION_DECLARATOR\">Text</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Span</code> <code class=\"VARIABLE_DECLARATOR\">text</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">super</code><code class=\"ANY\">(</code><code class=\"ANY\">text</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">unescapedValue</code> <code class=\"ANY\">=</code> <code class=\"ANY\">text</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getText</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"TYPE_IDENTIFIER\">StringBuilder</code> <code class=\"VARIABLE_DECLARATOR\">builder</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">new</code> <code class=\"TYPE_IDENTIFIER\">StringBuilder</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\n\t\t\t<code class=\"TYPE_IDENTIFIER\">CharacterStream</code> <code class=\"VARIABLE_DECLARATOR\">stream</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">new</code> <code class=\"TYPE_IDENTIFIER\">CharacterStream</code><code class=\"ANY\">(</code><code class=\"ANY\">unescapedValue</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">while</code> <code class=\"ANY\">(</code><code class=\"ANY\">stream</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">hasMore</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">stream</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">match</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"\\\\{\"</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">true</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"ANY\">builder</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">append</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">'{'</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">stream</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">match</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"\\\\}\"</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">true</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"ANY\">builder</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">append</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">'}'</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"ANY\">builder</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">append</code><code class=\"ANY\">(</code><code class=\"ANY\">stream</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">consume</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"ANY\">content</code> <code class=\"ANY\">=</code> <code class=\"ANY\">builder</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">toString</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"COMMENT\">/** Returns the UTF-8 representation of this text node. **/</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"FUNCTION_DECLARATOR\">getContent</code> <code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">content</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">Override</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"FUNCTION_DECLARATOR\">evaluate</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">ExpressionTemplate</code> <code class=\"VARIABLE_DECLARATOR\">template</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">ExpressionTemplateContext</code> <code class=\"VARIABLE_DECLARATOR\">context</code><code class=\"ANY\">)</code> <code class=\"KEYWORD\">throws</code> <code class=\"TYPE_IDENTIFIER\">IOException</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\t<code class=\"ANY\">}</code>\n\n\t<code class=\"COMMENT\">/** All expressions are subclasses of this node type. Expressions are separated into unary operations (!, -), binary operations\n\t * (+, -, *, /, etc.) and ternary operations (?:). */</code>\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">abstract</code> <code class=\"KEYWORD\">static</code> <code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">Expression</code> <code class=\"KEYWORD\">extends</code> <code class=\"TYPE_IDENTIFIER\">Node</code> <code class=\"ANY\">{</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"FUNCTION_DECLARATOR\">Expression</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Span</code> <code class=\"VARIABLE_DECLARATOR\">span</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">super</code><code class=\"ANY\">(</code><code class=\"ANY\">span</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\t<code class=\"ANY\">}</code>\n\n\t<code class=\"COMMENT\">/** An unary operation node represents a logical or numerical negation. **/</code>\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">UnaryOperation</code> <code class=\"KEYWORD\">extends</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"ANY\">{</code>\n\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"KEYWORD\">enum</code> <code class=\"CLASS_DECLARATOR\">UnaryOperator</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"CLASS_DECLARATOR\">Not</code><code class=\"ANY\">,</code> <code class=\"CLASS_DECLARATOR\">Negate</code><code class=\"ANY\">,</code> <code class=\"CLASS_DECLARATOR\">Positive</code><code class=\"ANY\">;</code>\n\n\t\t\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"TYPE_IDENTIFIER\">UnaryOperator</code> <code class=\"FUNCTION_DECLARATOR\">getOperator</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Token</code> <code class=\"VARIABLE_DECLARATOR\">op</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">op</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getType</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"ANY\">TokenType</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">Not</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">UnaryOperator</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">Not</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">op</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getType</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"ANY\">TokenType</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">Plus</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">UnaryOperator</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">Positive</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">op</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getType</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"ANY\">TokenType</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">Minus</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">UnaryOperator</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">Negate</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t<code class=\"ANY\">ExpressionError</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Unknown unary operator \"</code> <code class=\"ANY\">+</code> <code class=\"ANY\">op</code> <code class=\"ANY\">+</code> <code class=\"CHAR_STRING_LITERAL\">\".\"</code><code class=\"ANY\">,</code> <code class=\"ANY\">op</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">;</code> <code class=\"COMMENT\">// not reached</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">UnaryOperator</code> <code class=\"VARIABLE_DECLARATOR\">operator</code><code class=\"ANY\">;</code>\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"VARIABLE_DECLARATOR\">operand</code><code class=\"ANY\">;</code>\n\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"FUNCTION_DECLARATOR\">UnaryOperation</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Token</code> <code class=\"VARIABLE_DECLARATOR\">operator</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"VARIABLE_DECLARATOR\">operand</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">super</code><code class=\"ANY\">(</code><code class=\"ANY\">operator</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">operator</code> <code class=\"ANY\">=</code> <code class=\"ANY\">UnaryOperator</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getOperator</code><code class=\"ANY\">(</code><code class=\"ANY\">operator</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">operand</code> <code class=\"ANY\">=</code> <code class=\"ANY\">operand</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">UnaryOperator</code> <code class=\"FUNCTION_DECLARATOR\">getOperator</code> <code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">operator</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"FUNCTION_DECLARATOR\">getOperand</code> <code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">operand</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">Override</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"FUNCTION_DECLARATOR\">evaluate</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">ExpressionTemplate</code> <code class=\"VARIABLE_DECLARATOR\">template</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">ExpressionTemplateContext</code> <code class=\"VARIABLE_DECLARATOR\">context</code><code class=\"ANY\">)</code> <code class=\"KEYWORD\">throws</code> <code class=\"TYPE_IDENTIFIER\">IOException</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">operand</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">getOperand</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">evaluate</code><code class=\"ANY\">(</code><code class=\"ANY\">template</code><code class=\"ANY\">,</code> <code class=\"ANY\">context</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\n\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">getOperator</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"ANY\">UnaryOperator</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">Negate</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">operand</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Integer</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">-</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Integer</code><code class=\"ANY\">)</code><code class=\"ANY\">operand</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">operand</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Float</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">-</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Float</code><code class=\"ANY\">)</code><code class=\"ANY\">operand</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">operand</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Double</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">-</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Double</code><code class=\"ANY\">)</code><code class=\"ANY\">operand</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">operand</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Byte</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">-</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Byte</code><code class=\"ANY\">)</code><code class=\"ANY\">operand</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">operand</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Short</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">-</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Short</code><code class=\"ANY\">)</code><code class=\"ANY\">operand</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">operand</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Long</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">-</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Long</code><code class=\"ANY\">)</code><code class=\"ANY\">operand</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"ANY\">ExpressionError</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Operand of operator '\"</code> <code class=\"ANY\">+</code> <code class=\"FUNCTION_IDENTIFIER\">getOperator</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">name</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">+</code> <code class=\"CHAR_STRING_LITERAL\">\"' must be a number, got \"</code> <code class=\"ANY\">+</code> <code class=\"ANY\">operand</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">;</code> <code class=\"COMMENT\">// never reached</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">getOperator</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"ANY\">UnaryOperator</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">Not</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">!</code><code class=\"ANY\">(</code><code class=\"ANY\">operand</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Boolean</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"ANY\">ExpressionError</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Operand of operator '\"</code> <code class=\"ANY\">+</code> <code class=\"FUNCTION_IDENTIFIER\">getOperator</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">name</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">+</code> <code class=\"CHAR_STRING_LITERAL\">\"' must be a boolean\"</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">!</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Boolean</code><code class=\"ANY\">)</code><code class=\"ANY\">operand</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">operand</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t<code class=\"ANY\">}</code>\n\t<code class=\"ANY\">}</code>\n\n\t<code class=\"COMMENT\">/** A binary operation represents arithmetic operators, like addition or division, comparison operators, like less than or\n\t * equals, logical operators, like and, or an assignment. **/</code>\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">BinaryOperation</code> <code class=\"KEYWORD\">extends</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"ANY\">{</code>\n\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"KEYWORD\">enum</code> <code class=\"CLASS_DECLARATOR\">BinaryOperator</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"CLASS_DECLARATOR\">Addition</code><code class=\"ANY\">,</code> <code class=\"CLASS_DECLARATOR\">Subtraction</code><code class=\"ANY\">,</code> <code class=\"CLASS_DECLARATOR\">Multiplication</code><code class=\"ANY\">,</code> <code class=\"CLASS_DECLARATOR\">Division</code><code class=\"ANY\">,</code> <code class=\"CLASS_DECLARATOR\">Modulo</code><code class=\"ANY\">,</code> <code class=\"CLASS_DECLARATOR\">Equal</code><code class=\"ANY\">,</code> <code class=\"CLASS_DECLARATOR\">NotEqual</code><code class=\"ANY\">,</code> <code class=\"CLASS_DECLARATOR\">Less</code><code class=\"ANY\">,</code> <code class=\"CLASS_DECLARATOR\">LessEqual</code><code class=\"ANY\">,</code> <code class=\"CLASS_DECLARATOR\">Greater</code><code class=\"ANY\">,</code> <code class=\"CLASS_DECLARATOR\">GreaterEqual</code><code class=\"ANY\">,</code> <code class=\"CLASS_DECLARATOR\">And</code><code class=\"ANY\">,</code> <code class=\"CLASS_DECLARATOR\">Or</code><code class=\"ANY\">,</code> <code class=\"CLASS_DECLARATOR\">Xor</code><code class=\"ANY\">,</code> <code class=\"CLASS_DECLARATOR\">Assignment</code><code class=\"ANY\">;</code>\n\n\t\t\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"TYPE_IDENTIFIER\">BinaryOperator</code> <code class=\"FUNCTION_DECLARATOR\">getOperator</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Token</code> <code class=\"VARIABLE_DECLARATOR\">op</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">op</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getType</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"ANY\">TokenType</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">Plus</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">BinaryOperator</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">Addition</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">op</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getType</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"ANY\">TokenType</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">Minus</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">BinaryOperator</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">Subtraction</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">op</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getType</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"ANY\">TokenType</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">Asterisk</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">BinaryOperator</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">Multiplication</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">op</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getType</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"ANY\">TokenType</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ForwardSlash</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">BinaryOperator</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">Division</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">op</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getType</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"ANY\">TokenType</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">Percentage</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">BinaryOperator</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">Modulo</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">op</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getType</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"ANY\">TokenType</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">Equal</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">BinaryOperator</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">Equal</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">op</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getType</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"ANY\">TokenType</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">NotEqual</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">BinaryOperator</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">NotEqual</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">op</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getType</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"ANY\">TokenType</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">Less</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">BinaryOperator</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">Less</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">op</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getType</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"ANY\">TokenType</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">LessEqual</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">BinaryOperator</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">LessEqual</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">op</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getType</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"ANY\">TokenType</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">Greater</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">BinaryOperator</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">Greater</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">op</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getType</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"ANY\">TokenType</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">GreaterEqual</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">BinaryOperator</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">GreaterEqual</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">op</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getType</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"ANY\">TokenType</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">And</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">BinaryOperator</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">And</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">op</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getType</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"ANY\">TokenType</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">Or</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">BinaryOperator</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">Or</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">op</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getType</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"ANY\">TokenType</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">Xor</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">BinaryOperator</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">Xor</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">op</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getType</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"ANY\">TokenType</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">Assignment</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">BinaryOperator</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">Assignment</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t<code class=\"ANY\">ExpressionError</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Unknown binary operator \"</code> <code class=\"ANY\">+</code> <code class=\"ANY\">op</code> <code class=\"ANY\">+</code> <code class=\"CHAR_STRING_LITERAL\">\".\"</code><code class=\"ANY\">,</code> <code class=\"ANY\">op</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">;</code> <code class=\"COMMENT\">// not reached</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"VARIABLE_DECLARATOR\">leftOperand</code><code class=\"ANY\">;</code>\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">BinaryOperator</code> <code class=\"VARIABLE_DECLARATOR\">operator</code><code class=\"ANY\">;</code>\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"VARIABLE_DECLARATOR\">rightOperand</code><code class=\"ANY\">;</code>\n\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"FUNCTION_DECLARATOR\">BinaryOperation</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"VARIABLE_DECLARATOR\">leftOperand</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">Token</code> <code class=\"VARIABLE_DECLARATOR\">operator</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"VARIABLE_DECLARATOR\">rightOperand</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">super</code><code class=\"ANY\">(</code><code class=\"ANY\">operator</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">leftOperand</code> <code class=\"ANY\">=</code> <code class=\"ANY\">leftOperand</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">operator</code> <code class=\"ANY\">=</code> <code class=\"ANY\">BinaryOperator</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getOperator</code><code class=\"ANY\">(</code><code class=\"ANY\">operator</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">rightOperand</code> <code class=\"ANY\">=</code> <code class=\"ANY\">rightOperand</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"FUNCTION_DECLARATOR\">getLeftOperand</code> <code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">leftOperand</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">BinaryOperator</code> <code class=\"FUNCTION_DECLARATOR\">getOperator</code> <code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">operator</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"FUNCTION_DECLARATOR\">getRightOperand</code> <code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">rightOperand</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"FUNCTION_DECLARATOR\">evaluateAddition</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">left</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">right</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">String</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">left</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">toString</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">+</code> <code class=\"ANY\">right</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">toString</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Double</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Double</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">doubleValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">+</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">doubleValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Float</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Float</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">floatValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">+</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">floatValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Long</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Long</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">longValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">+</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">longValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Integer</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Integer</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">intValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">+</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">intValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Short</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Short</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">shortValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">+</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">shortValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Byte</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Byte</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">byteValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">+</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">byteValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code>\n\n\t\t\t<code class=\"ANY\">ExpressionError</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Operands for addition operator must be numbers or strings, got \"</code> <code class=\"ANY\">+</code> <code class=\"ANY\">left</code> <code class=\"ANY\">+</code> <code class=\"CHAR_STRING_LITERAL\">\", \"</code> <code class=\"ANY\">+</code> <code class=\"ANY\">right</code> <code class=\"ANY\">+</code> <code class=\"CHAR_STRING_LITERAL\">\".\"</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">;</code> <code class=\"COMMENT\">// never reached</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"FUNCTION_DECLARATOR\">evaluateSubtraction</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">left</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">right</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Double</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Double</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">doubleValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">-</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">doubleValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Float</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Float</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">floatValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">-</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">floatValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Long</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Long</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">longValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">-</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">longValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Integer</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Integer</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">intValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">-</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">intValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Short</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Short</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">shortValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">-</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">shortValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Byte</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Byte</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">byteValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">-</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">byteValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"ANY\">ExpressionError</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Operands for subtraction operator must be numbers\"</code> <code class=\"ANY\">+</code> <code class=\"ANY\">left</code> <code class=\"ANY\">+</code> <code class=\"CHAR_STRING_LITERAL\">\", \"</code> <code class=\"ANY\">+</code> <code class=\"ANY\">right</code> <code class=\"ANY\">+</code> <code class=\"CHAR_STRING_LITERAL\">\".\"</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">;</code> <code class=\"COMMENT\">// never reached</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"FUNCTION_DECLARATOR\">evaluateMultiplication</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">left</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">right</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Double</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Double</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">doubleValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">*</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">doubleValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Float</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Float</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">floatValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">*</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">floatValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Long</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Long</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">longValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">*</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">longValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Integer</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Integer</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">intValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">*</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">intValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Short</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Short</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">shortValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">*</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">shortValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Byte</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Byte</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">byteValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">*</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">byteValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"ANY\">ExpressionError</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Operands for multiplication operator must be numbers\"</code> <code class=\"ANY\">+</code> <code class=\"ANY\">left</code> <code class=\"ANY\">+</code> <code class=\"CHAR_STRING_LITERAL\">\", \"</code> <code class=\"ANY\">+</code> <code class=\"ANY\">right</code> <code class=\"ANY\">+</code> <code class=\"CHAR_STRING_LITERAL\">\".\"</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">;</code> <code class=\"COMMENT\">// never reached</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"FUNCTION_DECLARATOR\">evaluateDivision</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">left</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">right</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Double</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Double</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">doubleValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">/</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">doubleValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Float</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Float</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">floatValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">/</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">floatValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Long</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Long</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">longValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">/</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">longValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Integer</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Integer</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">intValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">/</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">intValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Short</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Short</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">shortValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">/</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">shortValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Byte</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Byte</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">byteValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">/</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">byteValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"ANY\">ExpressionError</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Operands for division operator must be numbers\"</code> <code class=\"ANY\">+</code> <code class=\"ANY\">left</code> <code class=\"ANY\">+</code> <code class=\"CHAR_STRING_LITERAL\">\", \"</code> <code class=\"ANY\">+</code> <code class=\"ANY\">right</code> <code class=\"ANY\">+</code> <code class=\"CHAR_STRING_LITERAL\">\".\"</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">;</code> <code class=\"COMMENT\">// never reached</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"FUNCTION_DECLARATOR\">evaluateModulo</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">left</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">right</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Double</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Double</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">doubleValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">%</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">doubleValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Float</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Float</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">floatValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">%</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">floatValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Long</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Long</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">longValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">%</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">longValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Integer</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Integer</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">intValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">%</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">intValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Short</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Short</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">shortValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">%</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">shortValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Byte</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Byte</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">byteValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">%</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">byteValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"ANY\">ExpressionError</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Operands for modulo operator must be numbers\"</code> <code class=\"ANY\">+</code> <code class=\"ANY\">left</code> <code class=\"ANY\">+</code> <code class=\"CHAR_STRING_LITERAL\">\", \"</code> <code class=\"ANY\">+</code> <code class=\"ANY\">right</code> <code class=\"ANY\">+</code> <code class=\"CHAR_STRING_LITERAL\">\".\"</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">;</code> <code class=\"COMMENT\">// never reached</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"KEYWORD\">boolean</code> <code class=\"FUNCTION_DECLARATOR\">evaluateLess</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">left</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">right</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Double</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Double</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">doubleValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\"><</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">doubleValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Float</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Float</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">floatValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\"><</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">floatValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Long</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Long</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">longValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\"><</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">longValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Integer</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Integer</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">intValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\"><</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">intValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Short</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Short</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">shortValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\"><</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">shortValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Byte</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Byte</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">byteValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\"><</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">byteValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"ANY\">ExpressionError</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Operands for less operator must be numbers\"</code> <code class=\"ANY\">+</code> <code class=\"ANY\">left</code> <code class=\"ANY\">+</code> <code class=\"CHAR_STRING_LITERAL\">\", \"</code> <code class=\"ANY\">+</code> <code class=\"ANY\">right</code> <code class=\"ANY\">+</code> <code class=\"CHAR_STRING_LITERAL\">\".\"</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">false</code><code class=\"ANY\">;</code> <code class=\"COMMENT\">// never reached</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"FUNCTION_DECLARATOR\">evaluateLessEqual</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">left</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">right</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Double</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Double</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">doubleValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\"><=</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">doubleValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Float</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Float</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">floatValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\"><=</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">floatValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Long</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Long</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">longValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\"><=</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">longValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Integer</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Integer</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">intValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\"><=</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">intValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Short</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Short</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">shortValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\"><=</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">shortValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Byte</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Byte</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">byteValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\"><=</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">byteValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"ANY\">ExpressionError</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Operands for less/equal operator must be numbers\"</code> <code class=\"ANY\">+</code> <code class=\"ANY\">left</code> <code class=\"ANY\">+</code> <code class=\"CHAR_STRING_LITERAL\">\", \"</code> <code class=\"ANY\">+</code> <code class=\"ANY\">right</code> <code class=\"ANY\">+</code> <code class=\"CHAR_STRING_LITERAL\">\".\"</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">;</code> <code class=\"COMMENT\">// never reached</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"FUNCTION_DECLARATOR\">evaluateGreater</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">left</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">right</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Double</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Double</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">doubleValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">></code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">doubleValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Float</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Float</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">floatValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">></code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">floatValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Long</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Long</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">longValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">></code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">longValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Integer</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Integer</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">intValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">></code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">intValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Short</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Short</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">shortValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">></code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">shortValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Byte</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Byte</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">byteValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">></code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">byteValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"ANY\">ExpressionError</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Operands for greater operator must be numbers\"</code> <code class=\"ANY\">+</code> <code class=\"ANY\">left</code> <code class=\"ANY\">+</code> <code class=\"CHAR_STRING_LITERAL\">\", \"</code> <code class=\"ANY\">+</code> <code class=\"ANY\">right</code> <code class=\"ANY\">+</code> <code class=\"CHAR_STRING_LITERAL\">\".\"</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">;</code> <code class=\"COMMENT\">// never reached</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"FUNCTION_DECLARATOR\">evaluateGreaterEqual</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">left</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">right</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Double</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Double</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">doubleValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">>=</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">doubleValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Float</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Float</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">floatValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">>=</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">floatValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Long</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Long</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">longValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">>=</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">longValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Integer</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Integer</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">intValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">>=</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">intValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Short</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Short</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">shortValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">>=</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">shortValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Byte</code> <code class=\"ANY\">||</code> <code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Byte</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">byteValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">>=</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">byteValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"ANY\">ExpressionError</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Operands for greater/equal operator must be numbers\"</code> <code class=\"ANY\">+</code> <code class=\"ANY\">left</code> <code class=\"ANY\">+</code> <code class=\"CHAR_STRING_LITERAL\">\", \"</code> <code class=\"ANY\">+</code> <code class=\"ANY\">right</code> <code class=\"ANY\">+</code> <code class=\"CHAR_STRING_LITERAL\">\".\"</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">;</code> <code class=\"COMMENT\">// never reached</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"FUNCTION_DECLARATOR\">evaluateAnd</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">left</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">ExpressionTemplate</code> <code class=\"VARIABLE_DECLARATOR\">template</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">ExpressionTemplateContext</code> <code class=\"VARIABLE_DECLARATOR\">context</code><code class=\"ANY\">)</code> <code class=\"KEYWORD\">throws</code> <code class=\"TYPE_IDENTIFIER\">IOException</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">!</code><code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Boolean</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"ANY\">ExpressionError</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Left operand must be a boolean, got \"</code> <code class=\"ANY\">+</code> <code class=\"ANY\">left</code> <code class=\"ANY\">+</code> <code class=\"CHAR_STRING_LITERAL\">\".\"</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">getLeftOperand</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">!</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Boolean</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">false</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">right</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">getRightOperand</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">evaluate</code><code class=\"ANY\">(</code><code class=\"ANY\">template</code><code class=\"ANY\">,</code> <code class=\"ANY\">context</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">!</code><code class=\"ANY\">(</code><code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Boolean</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"ANY\">ExpressionError</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Right operand must be a boolean, got \"</code> <code class=\"ANY\">+</code> <code class=\"ANY\">right</code> <code class=\"ANY\">+</code> <code class=\"CHAR_STRING_LITERAL\">\".\"</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">getRightOperand</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Boolean</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code> <code class=\"ANY\">&&</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Boolean</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"FUNCTION_DECLARATOR\">evaluateOr</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">left</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">ExpressionTemplate</code> <code class=\"VARIABLE_DECLARATOR\">template</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">ExpressionTemplateContext</code> <code class=\"VARIABLE_DECLARATOR\">context</code><code class=\"ANY\">)</code> <code class=\"KEYWORD\">throws</code> <code class=\"TYPE_IDENTIFIER\">IOException</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">!</code><code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Boolean</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"ANY\">ExpressionError</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Left operand must be a boolean, got \"</code> <code class=\"ANY\">+</code> <code class=\"ANY\">left</code> <code class=\"ANY\">+</code> <code class=\"CHAR_STRING_LITERAL\">\".\"</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">getLeftOperand</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Boolean</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">true</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">right</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">getRightOperand</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">evaluate</code><code class=\"ANY\">(</code><code class=\"ANY\">template</code><code class=\"ANY\">,</code> <code class=\"ANY\">context</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">!</code><code class=\"ANY\">(</code><code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Boolean</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"ANY\">ExpressionError</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Right operand must be a boolean, got \"</code> <code class=\"ANY\">+</code> <code class=\"ANY\">right</code> <code class=\"ANY\">+</code> <code class=\"CHAR_STRING_LITERAL\">\".\"</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">getRightOperand</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Boolean</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code> <code class=\"ANY\">||</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Boolean</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"FUNCTION_DECLARATOR\">evaluateXor</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">left</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">right</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">!</code><code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Boolean</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"ANY\">ExpressionError</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Left operand must be a boolean, got \"</code> <code class=\"ANY\">+</code> <code class=\"ANY\">left</code> <code class=\"ANY\">+</code> <code class=\"CHAR_STRING_LITERAL\">\".\"</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">getLeftOperand</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">!</code><code class=\"ANY\">(</code><code class=\"ANY\">right</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Boolean</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"ANY\">ExpressionError</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Right operand must be a boolean, got \"</code> <code class=\"ANY\">+</code> <code class=\"ANY\">right</code> <code class=\"ANY\">+</code> <code class=\"CHAR_STRING_LITERAL\">\".\"</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">getRightOperand</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Boolean</code><code class=\"ANY\">)</code><code class=\"ANY\">left</code> <code class=\"ANY\">^</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Boolean</code><code class=\"ANY\">)</code><code class=\"ANY\">right</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"FUNCTION_DECLARATOR\">evaluateEqual</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">left</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">right</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">left</code> <code class=\"ANY\">!=</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">left</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">equals</code><code class=\"ANY\">(</code><code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">right</code> <code class=\"ANY\">!=</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">right</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">equals</code><code class=\"ANY\">(</code><code class=\"ANY\">left</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">true</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"FUNCTION_DECLARATOR\">evaluateNotEqual</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">left</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">right</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">!</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Boolean</code><code class=\"ANY\">)</code><code class=\"FUNCTION_IDENTIFIER\">evaluateEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">left</code><code class=\"ANY\">,</code> <code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">Override</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"FUNCTION_DECLARATOR\">evaluate</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">ExpressionTemplate</code> <code class=\"VARIABLE_DECLARATOR\">template</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">ExpressionTemplateContext</code> <code class=\"VARIABLE_DECLARATOR\">context</code><code class=\"ANY\">)</code> <code class=\"KEYWORD\">throws</code> <code class=\"TYPE_IDENTIFIER\">IOException</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">getOperator</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"ANY\">BinaryOperator</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">Assignment</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">!</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">getLeftOperand</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">VariableAccess</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"ANY\">ExpressionError</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Can only assign to top-level variables in context.\"</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">getLeftOperand</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t<code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">value</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">getRightOperand</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">evaluate</code><code class=\"ANY\">(</code><code class=\"ANY\">template</code><code class=\"ANY\">,</code> <code class=\"ANY\">context</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">context</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">set</code><code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">VariableAccess</code><code class=\"ANY\">)</code><code class=\"FUNCTION_IDENTIFIER\">getLeftOperand</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getVariableName</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getText</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"ANY\">value</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code>\n\n\t\t\t<code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">left</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">getLeftOperand</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">evaluate</code><code class=\"ANY\">(</code><code class=\"ANY\">template</code><code class=\"ANY\">,</code> <code class=\"ANY\">context</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">right</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">getOperator</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"ANY\">BinaryOperator</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">And</code> <code class=\"ANY\">||</code> <code class=\"FUNCTION_IDENTIFIER\">getOperator</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"ANY\">BinaryOperator</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">Or</code> <code class=\"ANY\">?</code> <code class=\"LITERAL\">null</code> <code class=\"ANY\">:</code> <code class=\"FUNCTION_IDENTIFIER\">getRightOperand</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">evaluate</code><code class=\"ANY\">(</code><code class=\"ANY\">template</code><code class=\"ANY\">,</code> <code class=\"ANY\">context</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\n\t\t\t<code class=\"KEYWORD\">switch</code> <code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">getOperator</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">case</code> <code class=\"ANY\">Addition</code><code class=\"ANY\">:</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"FUNCTION_IDENTIFIER\">evaluateAddition</code><code class=\"ANY\">(</code><code class=\"ANY\">left</code><code class=\"ANY\">,</code> <code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">case</code> <code class=\"ANY\">Subtraction</code><code class=\"ANY\">:</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"FUNCTION_IDENTIFIER\">evaluateSubtraction</code><code class=\"ANY\">(</code><code class=\"ANY\">left</code><code class=\"ANY\">,</code> <code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">case</code> <code class=\"ANY\">Multiplication</code><code class=\"ANY\">:</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"FUNCTION_IDENTIFIER\">evaluateMultiplication</code><code class=\"ANY\">(</code><code class=\"ANY\">left</code><code class=\"ANY\">,</code> <code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">case</code> <code class=\"ANY\">Division</code><code class=\"ANY\">:</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"FUNCTION_IDENTIFIER\">evaluateDivision</code><code class=\"ANY\">(</code><code class=\"ANY\">left</code><code class=\"ANY\">,</code> <code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">case</code> <code class=\"ANY\">Modulo</code><code class=\"ANY\">:</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"FUNCTION_IDENTIFIER\">evaluateModulo</code><code class=\"ANY\">(</code><code class=\"ANY\">left</code><code class=\"ANY\">,</code> <code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">case</code> <code class=\"ANY\">Less</code><code class=\"ANY\">:</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"FUNCTION_IDENTIFIER\">evaluateLess</code><code class=\"ANY\">(</code><code class=\"ANY\">left</code><code class=\"ANY\">,</code> <code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">case</code> <code class=\"ANY\">LessEqual</code><code class=\"ANY\">:</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"FUNCTION_IDENTIFIER\">evaluateLessEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">left</code><code class=\"ANY\">,</code> <code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">case</code> <code class=\"ANY\">Greater</code><code class=\"ANY\">:</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"FUNCTION_IDENTIFIER\">evaluateGreater</code><code class=\"ANY\">(</code><code class=\"ANY\">left</code><code class=\"ANY\">,</code> <code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">case</code> <code class=\"ANY\">GreaterEqual</code><code class=\"ANY\">:</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"FUNCTION_IDENTIFIER\">evaluateGreaterEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">left</code><code class=\"ANY\">,</code> <code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">case</code> <code class=\"ANY\">Equal</code><code class=\"ANY\">:</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"FUNCTION_IDENTIFIER\">evaluateEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">left</code><code class=\"ANY\">,</code> <code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">case</code> <code class=\"ANY\">NotEqual</code><code class=\"ANY\">:</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"FUNCTION_IDENTIFIER\">evaluateNotEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">left</code><code class=\"ANY\">,</code> <code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">case</code> <code class=\"ANY\">And</code><code class=\"ANY\">:</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"FUNCTION_IDENTIFIER\">evaluateAnd</code><code class=\"ANY\">(</code><code class=\"ANY\">left</code><code class=\"ANY\">,</code> <code class=\"ANY\">template</code><code class=\"ANY\">,</code> <code class=\"ANY\">context</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">case</code> <code class=\"ANY\">Or</code><code class=\"ANY\">:</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"FUNCTION_IDENTIFIER\">evaluateOr</code><code class=\"ANY\">(</code><code class=\"ANY\">left</code><code class=\"ANY\">,</code> <code class=\"ANY\">template</code><code class=\"ANY\">,</code> <code class=\"ANY\">context</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">case</code> <code class=\"ANY\">Xor</code><code class=\"ANY\">:</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"FUNCTION_IDENTIFIER\">evaluateXor</code><code class=\"ANY\">(</code><code class=\"ANY\">left</code><code class=\"ANY\">,</code> <code class=\"ANY\">right</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">default</code><code class=\"ANY\">:</code>\n\t\t\t\t<code class=\"ANY\">ExpressionError</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Binary operator \"</code> <code class=\"ANY\">+</code> <code class=\"FUNCTION_IDENTIFIER\">getOperator</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">name</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">+</code> <code class=\"CHAR_STRING_LITERAL\">\" not implemented\"</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t<code class=\"ANY\">}</code>\n\t<code class=\"ANY\">}</code>\n\n\t<code class=\"COMMENT\">/** A ternary operation is an abbreviated if/then/else operation, and equivalent to the the ternary operator in Java. **/</code>\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">TernaryOperation</code> <code class=\"KEYWORD\">extends</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"ANY\">{</code>\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"VARIABLE_DECLARATOR\">condition</code><code class=\"ANY\">;</code>\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"VARIABLE_DECLARATOR\">trueExpression</code><code class=\"ANY\">;</code>\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"VARIABLE_DECLARATOR\">falseExpression</code><code class=\"ANY\">;</code>\n\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"FUNCTION_DECLARATOR\">TernaryOperation</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"VARIABLE_DECLARATOR\">condition</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"VARIABLE_DECLARATOR\">trueExpression</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"VARIABLE_DECLARATOR\">falseExpression</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">super</code><code class=\"ANY\">(</code><code class=\"KEYWORD\">new</code> <code class=\"TYPE_IDENTIFIER\">Span</code><code class=\"ANY\">(</code><code class=\"ANY\">condition</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"ANY\">falseExpression</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">condition</code> <code class=\"ANY\">=</code> <code class=\"ANY\">condition</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">trueExpression</code> <code class=\"ANY\">=</code> <code class=\"ANY\">trueExpression</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">falseExpression</code> <code class=\"ANY\">=</code> <code class=\"ANY\">falseExpression</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"FUNCTION_DECLARATOR\">getCondition</code> <code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">condition</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"FUNCTION_DECLARATOR\">getTrueExpression</code> <code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">trueExpression</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"FUNCTION_DECLARATOR\">getFalseExpression</code> <code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">falseExpression</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">Override</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"FUNCTION_DECLARATOR\">evaluate</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">ExpressionTemplate</code> <code class=\"VARIABLE_DECLARATOR\">template</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">ExpressionTemplateContext</code> <code class=\"VARIABLE_DECLARATOR\">context</code><code class=\"ANY\">)</code> <code class=\"KEYWORD\">throws</code> <code class=\"TYPE_IDENTIFIER\">IOException</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">condition</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">getCondition</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">evaluate</code><code class=\"ANY\">(</code><code class=\"ANY\">template</code><code class=\"ANY\">,</code> <code class=\"ANY\">context</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">!</code><code class=\"ANY\">(</code><code class=\"ANY\">condition</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Boolean</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"ANY\">ExpressionError</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Condition of ternary operator must be a boolean, got \"</code> <code class=\"ANY\">+</code> <code class=\"ANY\">condition</code> <code class=\"ANY\">+</code> <code class=\"CHAR_STRING_LITERAL\">\".\"</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Boolean</code><code class=\"ANY\">)</code><code class=\"ANY\">condition</code><code class=\"ANY\">)</code> <code class=\"ANY\">?</code> <code class=\"FUNCTION_IDENTIFIER\">getTrueExpression</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">evaluate</code><code class=\"ANY\">(</code><code class=\"ANY\">template</code><code class=\"ANY\">,</code> <code class=\"ANY\">context</code><code class=\"ANY\">)</code> <code class=\"ANY\">:</code> <code class=\"FUNCTION_IDENTIFIER\">getFalseExpression</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">evaluate</code><code class=\"ANY\">(</code><code class=\"ANY\">template</code><code class=\"ANY\">,</code> <code class=\"ANY\">context</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\t<code class=\"ANY\">}</code>\n\n\t<code class=\"COMMENT\">/** A null literal, with the single value <code>null</code> **/</code>\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">NullLiteral</code> <code class=\"KEYWORD\">extends</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"ANY\">{</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"FUNCTION_DECLARATOR\">NullLiteral</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Span</code> <code class=\"VARIABLE_DECLARATOR\">span</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">super</code><code class=\"ANY\">(</code><code class=\"ANY\">span</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">Override</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"FUNCTION_DECLARATOR\">evaluate</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">ExpressionTemplate</code> <code class=\"VARIABLE_DECLARATOR\">template</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">ExpressionTemplateContext</code> <code class=\"VARIABLE_DECLARATOR\">context</code><code class=\"ANY\">)</code> <code class=\"KEYWORD\">throws</code> <code class=\"TYPE_IDENTIFIER\">IOException</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\t<code class=\"ANY\">}</code>\n\n\t<code class=\"COMMENT\">/** A boolean literal, with the values <code>true</code> and <code>false</code> **/</code>\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">BooleanLiteral</code> <code class=\"KEYWORD\">extends</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"ANY\">{</code>\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">Boolean</code> <code class=\"VARIABLE_DECLARATOR\">value</code><code class=\"ANY\">;</code>\n\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"FUNCTION_DECLARATOR\">BooleanLiteral</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Span</code> <code class=\"VARIABLE_DECLARATOR\">literal</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">super</code><code class=\"ANY\">(</code><code class=\"ANY\">literal</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">value</code> <code class=\"ANY\">=</code> <code class=\"ANY\">Boolean</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">parseBoolean</code><code class=\"ANY\">(</code><code class=\"ANY\">literal</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getText</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Boolean</code> <code class=\"FUNCTION_DECLARATOR\">getValue</code> <code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">value</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">Override</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"FUNCTION_DECLARATOR\">evaluate</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">ExpressionTemplate</code> <code class=\"VARIABLE_DECLARATOR\">template</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">ExpressionTemplateContext</code> <code class=\"VARIABLE_DECLARATOR\">context</code><code class=\"ANY\">)</code> <code class=\"KEYWORD\">throws</code> <code class=\"TYPE_IDENTIFIER\">IOException</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">value</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\t<code class=\"ANY\">}</code>\n\n\t<code class=\"COMMENT\">/** A double precision floating point literal. Must be marked with the <code>d</code> suffix, e.g. \"1.0d\". **/</code>\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">DoubleLiteral</code> <code class=\"KEYWORD\">extends</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"ANY\">{</code>\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">Double</code> <code class=\"VARIABLE_DECLARATOR\">value</code><code class=\"ANY\">;</code>\n\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"FUNCTION_DECLARATOR\">DoubleLiteral</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Span</code> <code class=\"VARIABLE_DECLARATOR\">literal</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">super</code><code class=\"ANY\">(</code><code class=\"ANY\">literal</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">value</code> <code class=\"ANY\">=</code> <code class=\"ANY\">Double</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">parseDouble</code><code class=\"ANY\">(</code><code class=\"ANY\">literal</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getText</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">substring</code><code class=\"ANY\">(</code><code class=\"LITERAL\">0</code><code class=\"ANY\">,</code> <code class=\"ANY\">literal</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getText</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">length</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">-</code> <code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Double</code> <code class=\"FUNCTION_DECLARATOR\">getValue</code> <code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">value</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">Override</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"FUNCTION_DECLARATOR\">evaluate</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">ExpressionTemplate</code> <code class=\"VARIABLE_DECLARATOR\">template</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">ExpressionTemplateContext</code> <code class=\"VARIABLE_DECLARATOR\">context</code><code class=\"ANY\">)</code> <code class=\"KEYWORD\">throws</code> <code class=\"TYPE_IDENTIFIER\">IOException</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">value</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\t<code class=\"ANY\">}</code>\n\n\t<code class=\"COMMENT\">/** A single precision floating point literla. May be optionally marked with the <code>f</code> suffix, e.g. \"1.0f\". **/</code>\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">FloatLiteral</code> <code class=\"KEYWORD\">extends</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"ANY\">{</code>\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">Float</code> <code class=\"VARIABLE_DECLARATOR\">value</code><code class=\"ANY\">;</code>\n\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"FUNCTION_DECLARATOR\">FloatLiteral</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Span</code> <code class=\"VARIABLE_DECLARATOR\">literal</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">super</code><code class=\"ANY\">(</code><code class=\"ANY\">literal</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">text</code> <code class=\"ANY\">=</code> <code class=\"ANY\">literal</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getText</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">text</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">charAt</code><code class=\"ANY\">(</code><code class=\"ANY\">text</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">length</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">-</code> <code class=\"LITERAL\">1</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"CHAR_STRING_LITERAL\">'f'</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"ANY\">text</code> <code class=\"ANY\">=</code> <code class=\"ANY\">text</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">substring</code><code class=\"ANY\">(</code><code class=\"LITERAL\">0</code><code class=\"ANY\">,</code> <code class=\"ANY\">text</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">length</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">-</code> <code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">value</code> <code class=\"ANY\">=</code> <code class=\"ANY\">Float</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">parseFloat</code><code class=\"ANY\">(</code><code class=\"ANY\">text</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Float</code> <code class=\"FUNCTION_DECLARATOR\">getValue</code> <code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">value</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">Override</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"FUNCTION_DECLARATOR\">evaluate</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">ExpressionTemplate</code> <code class=\"VARIABLE_DECLARATOR\">template</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">ExpressionTemplateContext</code> <code class=\"VARIABLE_DECLARATOR\">context</code><code class=\"ANY\">)</code> <code class=\"KEYWORD\">throws</code> <code class=\"TYPE_IDENTIFIER\">IOException</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">value</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\t<code class=\"ANY\">}</code>\n\n\t<code class=\"COMMENT\">/** A byte literal. Must be marked with the <code>b</code> suffix, e.g. \"123b\". **/</code>\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">ByteLiteral</code> <code class=\"KEYWORD\">extends</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"ANY\">{</code>\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">Byte</code> <code class=\"VARIABLE_DECLARATOR\">value</code><code class=\"ANY\">;</code>\n\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"FUNCTION_DECLARATOR\">ByteLiteral</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Span</code> <code class=\"VARIABLE_DECLARATOR\">literal</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">super</code><code class=\"ANY\">(</code><code class=\"ANY\">literal</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">value</code> <code class=\"ANY\">=</code> <code class=\"ANY\">Byte</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">parseByte</code><code class=\"ANY\">(</code><code class=\"ANY\">literal</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getText</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">substring</code><code class=\"ANY\">(</code><code class=\"LITERAL\">0</code><code class=\"ANY\">,</code> <code class=\"ANY\">literal</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getText</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">length</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">-</code> <code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Byte</code> <code class=\"FUNCTION_DECLARATOR\">getValue</code> <code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">value</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">Override</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"FUNCTION_DECLARATOR\">evaluate</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">ExpressionTemplate</code> <code class=\"VARIABLE_DECLARATOR\">template</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">ExpressionTemplateContext</code> <code class=\"VARIABLE_DECLARATOR\">context</code><code class=\"ANY\">)</code> <code class=\"KEYWORD\">throws</code> <code class=\"TYPE_IDENTIFIER\">IOException</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">value</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\t<code class=\"ANY\">}</code>\n\n\t<code class=\"COMMENT\">/** A short literal. Must be marked with the <code>s</code> suffix, e.g. \"123s\". **/</code>\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">ShortLiteral</code> <code class=\"KEYWORD\">extends</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"ANY\">{</code>\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">Short</code> <code class=\"VARIABLE_DECLARATOR\">value</code><code class=\"ANY\">;</code>\n\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"FUNCTION_DECLARATOR\">ShortLiteral</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Span</code> <code class=\"VARIABLE_DECLARATOR\">literal</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">super</code><code class=\"ANY\">(</code><code class=\"ANY\">literal</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">value</code> <code class=\"ANY\">=</code> <code class=\"ANY\">Short</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">parseShort</code><code class=\"ANY\">(</code><code class=\"ANY\">literal</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getText</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">substring</code><code class=\"ANY\">(</code><code class=\"LITERAL\">0</code><code class=\"ANY\">,</code> <code class=\"ANY\">literal</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getText</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">length</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">-</code> <code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Short</code> <code class=\"FUNCTION_DECLARATOR\">getValue</code> <code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">value</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">Override</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"FUNCTION_DECLARATOR\">evaluate</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">ExpressionTemplate</code> <code class=\"VARIABLE_DECLARATOR\">template</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">ExpressionTemplateContext</code> <code class=\"VARIABLE_DECLARATOR\">context</code><code class=\"ANY\">)</code> <code class=\"KEYWORD\">throws</code> <code class=\"TYPE_IDENTIFIER\">IOException</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">value</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\t<code class=\"ANY\">}</code>\n\n\t<code class=\"COMMENT\">/** An integer literal. **/</code>\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">IntegerLiteral</code> <code class=\"KEYWORD\">extends</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"ANY\">{</code>\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">Integer</code> <code class=\"VARIABLE_DECLARATOR\">value</code><code class=\"ANY\">;</code>\n\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"FUNCTION_DECLARATOR\">IntegerLiteral</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Span</code> <code class=\"VARIABLE_DECLARATOR\">literal</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">super</code><code class=\"ANY\">(</code><code class=\"ANY\">literal</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">value</code> <code class=\"ANY\">=</code> <code class=\"ANY\">Integer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">parseInt</code><code class=\"ANY\">(</code><code class=\"ANY\">literal</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getText</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Integer</code> <code class=\"FUNCTION_DECLARATOR\">getValue</code> <code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">value</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">Override</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"FUNCTION_DECLARATOR\">evaluate</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">ExpressionTemplate</code> <code class=\"VARIABLE_DECLARATOR\">template</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">ExpressionTemplateContext</code> <code class=\"VARIABLE_DECLARATOR\">context</code><code class=\"ANY\">)</code> <code class=\"KEYWORD\">throws</code> <code class=\"TYPE_IDENTIFIER\">IOException</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">value</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\t<code class=\"ANY\">}</code>\n\n\t<code class=\"COMMENT\">/** A long integer literal. Must be marked with the <code>l</code> suffix, e.g. \"123l\". **/</code>\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">LongLiteral</code> <code class=\"KEYWORD\">extends</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"ANY\">{</code>\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">Long</code> <code class=\"VARIABLE_DECLARATOR\">value</code><code class=\"ANY\">;</code>\n\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"FUNCTION_DECLARATOR\">LongLiteral</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Span</code> <code class=\"VARIABLE_DECLARATOR\">literal</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">super</code><code class=\"ANY\">(</code><code class=\"ANY\">literal</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">value</code> <code class=\"ANY\">=</code> <code class=\"ANY\">Long</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">parseLong</code><code class=\"ANY\">(</code><code class=\"ANY\">literal</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getText</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">substring</code><code class=\"ANY\">(</code><code class=\"LITERAL\">0</code><code class=\"ANY\">,</code> <code class=\"ANY\">literal</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getText</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">length</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">-</code> <code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Long</code> <code class=\"FUNCTION_DECLARATOR\">getValue</code> <code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">value</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">Override</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"FUNCTION_DECLARATOR\">evaluate</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">ExpressionTemplate</code> <code class=\"VARIABLE_DECLARATOR\">template</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">ExpressionTemplateContext</code> <code class=\"VARIABLE_DECLARATOR\">context</code><code class=\"ANY\">)</code> <code class=\"KEYWORD\">throws</code> <code class=\"TYPE_IDENTIFIER\">IOException</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">value</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\t<code class=\"ANY\">}</code>\n\n\t<code class=\"COMMENT\">/** A character literal, enclosed in single quotes. Supports escape sequences \\n, \\r,\\t, \\' and \\\\. **/</code>\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">CharacterLiteral</code> <code class=\"KEYWORD\">extends</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"ANY\">{</code>\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">Character</code> <code class=\"VARIABLE_DECLARATOR\">value</code><code class=\"ANY\">;</code>\n\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"FUNCTION_DECLARATOR\">CharacterLiteral</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Span</code> <code class=\"VARIABLE_DECLARATOR\">literal</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">super</code><code class=\"ANY\">(</code><code class=\"ANY\">literal</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\n\t\t\t<code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">text</code> <code class=\"ANY\">=</code> <code class=\"ANY\">literal</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getText</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">text</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">length</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">></code> <code class=\"LITERAL\">3</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">text</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">charAt</code><code class=\"ANY\">(</code><code class=\"LITERAL\">2</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"CHAR_STRING_LITERAL\">'n'</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"ANY\">value</code> <code class=\"ANY\">=</code> <code class=\"CHAR_STRING_LITERAL\">'\\n'</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">text</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">charAt</code><code class=\"ANY\">(</code><code class=\"LITERAL\">2</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"CHAR_STRING_LITERAL\">'r'</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"ANY\">value</code> <code class=\"ANY\">=</code> <code class=\"CHAR_STRING_LITERAL\">'\\r'</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">text</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">charAt</code><code class=\"ANY\">(</code><code class=\"LITERAL\">2</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"CHAR_STRING_LITERAL\">'t'</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"ANY\">value</code> <code class=\"ANY\">=</code> <code class=\"CHAR_STRING_LITERAL\">'\\t'</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">text</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">charAt</code><code class=\"ANY\">(</code><code class=\"LITERAL\">2</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"CHAR_STRING_LITERAL\">'\\\\'</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"ANY\">value</code> <code class=\"ANY\">=</code> <code class=\"CHAR_STRING_LITERAL\">'\\\\'</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">text</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">charAt</code><code class=\"ANY\">(</code><code class=\"LITERAL\">2</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"CHAR_STRING_LITERAL\">'\\''</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"ANY\">value</code> <code class=\"ANY\">=</code> <code class=\"CHAR_STRING_LITERAL\">'\\''</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"ANY\">ExpressionError</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Unknown escape sequence '\"</code> <code class=\"ANY\">+</code> <code class=\"ANY\">literal</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getText</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">+</code> <code class=\"CHAR_STRING_LITERAL\">\"'.\"</code><code class=\"ANY\">,</code> <code class=\"ANY\">literal</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"ANY\">value</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">0</code><code class=\"ANY\">;</code> <code class=\"COMMENT\">// never reached</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">value</code> <code class=\"ANY\">=</code> <code class=\"ANY\">literal</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getText</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">charAt</code><code class=\"ANY\">(</code><code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Character</code> <code class=\"FUNCTION_DECLARATOR\">getValue</code> <code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">value</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">Override</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"FUNCTION_DECLARATOR\">evaluate</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">ExpressionTemplate</code> <code class=\"VARIABLE_DECLARATOR\">template</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">ExpressionTemplateContext</code> <code class=\"VARIABLE_DECLARATOR\">context</code><code class=\"ANY\">)</code> <code class=\"KEYWORD\">throws</code> <code class=\"TYPE_IDENTIFIER\">IOException</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">value</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\t<code class=\"ANY\">}</code>\n\n\t<code class=\"COMMENT\">/** A string literal, enclosed in double quotes. Supports escape sequences \\n, \\r, \\t, \\\" and \\\\. **/</code>\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">StringLiteral</code> <code class=\"KEYWORD\">extends</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"ANY\">{</code>\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">value</code><code class=\"ANY\">;</code>\n\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"FUNCTION_DECLARATOR\">StringLiteral</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Span</code> <code class=\"VARIABLE_DECLARATOR\">literal</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">super</code><code class=\"ANY\">(</code><code class=\"ANY\">literal</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">text</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getText</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">unescapedValue</code> <code class=\"ANY\">=</code> <code class=\"ANY\">text</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">substring</code><code class=\"ANY\">(</code><code class=\"LITERAL\">1</code><code class=\"ANY\">,</code> <code class=\"ANY\">text</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">length</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">-</code> <code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"TYPE_IDENTIFIER\">StringBuilder</code> <code class=\"VARIABLE_DECLARATOR\">builder</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">new</code> <code class=\"TYPE_IDENTIFIER\">StringBuilder</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\n\t\t\t<code class=\"TYPE_IDENTIFIER\">CharacterStream</code> <code class=\"VARIABLE_DECLARATOR\">stream</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">new</code> <code class=\"TYPE_IDENTIFIER\">CharacterStream</code><code class=\"ANY\">(</code><code class=\"ANY\">unescapedValue</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">while</code> <code class=\"ANY\">(</code><code class=\"ANY\">stream</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">hasMore</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">stream</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">match</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"\\\\\\\\\"</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">true</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"ANY\">builder</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">append</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">'\\\\'</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">stream</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">match</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"\\\\n\"</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">true</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"ANY\">builder</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">append</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">'\\n'</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">stream</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">match</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"\\\\r\"</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">true</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"ANY\">builder</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">append</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">'\\r'</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">stream</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">match</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"\\\\t\"</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">true</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"ANY\">builder</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">append</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">'\\t'</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">stream</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">match</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"\\\\\\\"\"</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">true</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"ANY\">builder</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">append</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">'\"'</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"ANY\">builder</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">append</code><code class=\"ANY\">(</code><code class=\"ANY\">stream</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">consume</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"ANY\">value</code> <code class=\"ANY\">=</code> <code class=\"ANY\">builder</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">toString</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"COMMENT\">/** Returns the literal without quotes **/</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"FUNCTION_DECLARATOR\">getValue</code> <code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">value</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">Override</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"FUNCTION_DECLARATOR\">evaluate</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">ExpressionTemplate</code> <code class=\"VARIABLE_DECLARATOR\">template</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">ExpressionTemplateContext</code> <code class=\"VARIABLE_DECLARATOR\">context</code><code class=\"ANY\">)</code> <code class=\"KEYWORD\">throws</code> <code class=\"TYPE_IDENTIFIER\">IOException</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">value</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\t<code class=\"ANY\">}</code>\n\n\t<code class=\"COMMENT\">/** Represents a top-level variable access by name. E.g. in the expression \"a + 1\", <code>a</code> would be encoded as a\n\t * VariableAccess node. Variables can be both read (in expressions) and written to (in assignments). Variable values are looked\n\t * up and written to a {@link ExpressionTemplateContext}. **/</code>\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">VariableAccess</code> <code class=\"KEYWORD\">extends</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"ANY\">{</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"FUNCTION_DECLARATOR\">VariableAccess</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Span</code> <code class=\"VARIABLE_DECLARATOR\">name</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">super</code><code class=\"ANY\">(</code><code class=\"ANY\">name</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Span</code> <code class=\"FUNCTION_DECLARATOR\">getVariableName</code> <code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">Override</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"FUNCTION_DECLARATOR\">evaluate</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">ExpressionTemplate</code> <code class=\"VARIABLE_DECLARATOR\">template</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">ExpressionTemplateContext</code> <code class=\"VARIABLE_DECLARATOR\">context</code><code class=\"ANY\">)</code> <code class=\"KEYWORD\">throws</code> <code class=\"TYPE_IDENTIFIER\">IOException</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">value</code> <code class=\"ANY\">=</code> <code class=\"ANY\">context</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getText</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"COMMENT\">//if (value == null) ExpressionError.error(\"找不到变量'\" + getSpan().getText() + \"'或变量值为null\", getSpan());</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">value</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\t<code class=\"ANY\">}</code>\n\n\t<code class=\"COMMENT\">/** Represents a map or array element access of the form <code>mapOrArray[keyOrIndex]</code>. Maps and arrays may only be read\n\t * from. **/</code>\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">MapOrArrayAccess</code> <code class=\"KEYWORD\">extends</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"ANY\">{</code>\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"VARIABLE_DECLARATOR\">mapOrArray</code><code class=\"ANY\">;</code>\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"VARIABLE_DECLARATOR\">keyOrIndex</code><code class=\"ANY\">;</code>\n\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"FUNCTION_DECLARATOR\">MapOrArrayAccess</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Span</code> <code class=\"VARIABLE_DECLARATOR\">span</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"VARIABLE_DECLARATOR\">mapOrArray</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"VARIABLE_DECLARATOR\">keyOrIndex</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">super</code><code class=\"ANY\">(</code><code class=\"ANY\">span</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">mapOrArray</code> <code class=\"ANY\">=</code> <code class=\"ANY\">mapOrArray</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">keyOrIndex</code> <code class=\"ANY\">=</code> <code class=\"ANY\">keyOrIndex</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"COMMENT\">/** Returns an expression that must evaluate to a map or array. **/</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"FUNCTION_DECLARATOR\">getMapOrArray</code> <code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">mapOrArray</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"COMMENT\">/** Returns an expression that is used as the key or index to fetch a map or array element. **/</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"FUNCTION_DECLARATOR\">getKeyOrIndex</code> <code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">keyOrIndex</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">SuppressWarnings</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"rawtypes\"</code><code class=\"ANY\">)</code>\n\t\t<code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">Override</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"FUNCTION_DECLARATOR\">evaluate</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">ExpressionTemplate</code> <code class=\"VARIABLE_DECLARATOR\">template</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">ExpressionTemplateContext</code> <code class=\"VARIABLE_DECLARATOR\">context</code><code class=\"ANY\">)</code> <code class=\"KEYWORD\">throws</code> <code class=\"TYPE_IDENTIFIER\">IOException</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">mapOrArray</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">getMapOrArray</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">evaluate</code><code class=\"ANY\">(</code><code class=\"ANY\">template</code><code class=\"ANY\">,</code> <code class=\"ANY\">context</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">mapOrArray</code> <code class=\"ANY\">==</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">keyOrIndex</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">getKeyOrIndex</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">evaluate</code><code class=\"ANY\">(</code><code class=\"ANY\">template</code><code class=\"ANY\">,</code> <code class=\"ANY\">context</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">keyOrIndex</code> <code class=\"ANY\">==</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code>\n\n\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">mapOrArray</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Map</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Map</code><code class=\"ANY\">)</code><code class=\"ANY\">mapOrArray</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get</code><code class=\"ANY\">(</code><code class=\"ANY\">keyOrIndex</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">mapOrArray</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">!</code><code class=\"ANY\">(</code><code class=\"ANY\">keyOrIndex</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"ANY\">ExpressionError</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"List index must be an integer, but was \"</code> <code class=\"ANY\">+</code> <code class=\"ANY\">keyOrIndex</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getClass</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getSimpleName</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">getKeyOrIndex</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t<code class=\"KEYWORD\">int</code> <code class=\"VARIABLE_DECLARATOR\">index</code> <code class=\"ANY\">=</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">keyOrIndex</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">intValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\">)</code><code class=\"ANY\">mapOrArray</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get</code><code class=\"ANY\">(</code><code class=\"ANY\">index</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">!</code><code class=\"ANY\">(</code><code class=\"ANY\">keyOrIndex</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"ANY\">ExpressionError</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Array index must be an integer, but was \"</code> <code class=\"ANY\">+</code> <code class=\"ANY\">keyOrIndex</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getClass</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getSimpleName</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">getKeyOrIndex</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t<code class=\"KEYWORD\">int</code> <code class=\"VARIABLE_DECLARATOR\">index</code> <code class=\"ANY\">=</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Number</code><code class=\"ANY\">)</code><code class=\"ANY\">keyOrIndex</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">intValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">mapOrArray</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"KEYWORD\">int</code><code class=\"ANY\">[</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"KEYWORD\">int</code><code class=\"ANY\">[</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code><code class=\"ANY\">mapOrArray</code><code class=\"ANY\">)</code><code class=\"ANY\">[</code><code class=\"ANY\">index</code><code class=\"ANY\">]</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">mapOrArray</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"KEYWORD\">float</code><code class=\"ANY\">[</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"KEYWORD\">float</code><code class=\"ANY\">[</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code><code class=\"ANY\">mapOrArray</code><code class=\"ANY\">)</code><code class=\"ANY\">[</code><code class=\"ANY\">index</code><code class=\"ANY\">]</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">mapOrArray</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"KEYWORD\">double</code><code class=\"ANY\">[</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"KEYWORD\">double</code><code class=\"ANY\">[</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code><code class=\"ANY\">mapOrArray</code><code class=\"ANY\">)</code><code class=\"ANY\">[</code><code class=\"ANY\">index</code><code class=\"ANY\">]</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">mapOrArray</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"KEYWORD\">boolean</code><code class=\"ANY\">[</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"KEYWORD\">boolean</code><code class=\"ANY\">[</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code><code class=\"ANY\">mapOrArray</code><code class=\"ANY\">)</code><code class=\"ANY\">[</code><code class=\"ANY\">index</code><code class=\"ANY\">]</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">mapOrArray</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"KEYWORD\">char</code><code class=\"ANY\">[</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"KEYWORD\">char</code><code class=\"ANY\">[</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code><code class=\"ANY\">mapOrArray</code><code class=\"ANY\">)</code><code class=\"ANY\">[</code><code class=\"ANY\">index</code><code class=\"ANY\">]</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">mapOrArray</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"KEYWORD\">short</code><code class=\"ANY\">[</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"KEYWORD\">short</code><code class=\"ANY\">[</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code><code class=\"ANY\">mapOrArray</code><code class=\"ANY\">)</code><code class=\"ANY\">[</code><code class=\"ANY\">index</code><code class=\"ANY\">]</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">mapOrArray</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"KEYWORD\">long</code><code class=\"ANY\">[</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"KEYWORD\">long</code><code class=\"ANY\">[</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code><code class=\"ANY\">mapOrArray</code><code class=\"ANY\">)</code><code class=\"ANY\">[</code><code class=\"ANY\">index</code><code class=\"ANY\">]</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">mapOrArray</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"KEYWORD\">byte</code><code class=\"ANY\">[</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"KEYWORD\">byte</code><code class=\"ANY\">[</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code><code class=\"ANY\">mapOrArray</code><code class=\"ANY\">)</code><code class=\"ANY\">[</code><code class=\"ANY\">index</code><code class=\"ANY\">]</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">mapOrArray</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">String</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">Character</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">toString</code><code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">String</code><code class=\"ANY\">)</code><code class=\"ANY\">mapOrArray</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">charAt</code><code class=\"ANY\">(</code><code class=\"ANY\">index</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Object</code><code class=\"ANY\">[</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code><code class=\"ANY\">mapOrArray</code><code class=\"ANY\">)</code><code class=\"ANY\">[</code><code class=\"ANY\">index</code><code class=\"ANY\">]</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t<code class=\"ANY\">}</code>\n\t<code class=\"ANY\">}</code>\n\n\t<code class=\"COMMENT\">/** Represents an access of a member (field or method or entry in a map) of the form <code>object.member</code>. Members may\n\t * only be read from. **/</code>\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">MemberAccess</code> <code class=\"KEYWORD\">extends</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"ANY\">{</code>\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"VARIABLE_DECLARATOR\">object</code><code class=\"ANY\">;</code>\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">Span</code> <code class=\"VARIABLE_DECLARATOR\">name</code><code class=\"ANY\">;</code>\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">cachedMember</code><code class=\"ANY\">;</code>\n\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"FUNCTION_DECLARATOR\">MemberAccess</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"VARIABLE_DECLARATOR\">object</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">Span</code> <code class=\"VARIABLE_DECLARATOR\">name</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">super</code><code class=\"ANY\">(</code><code class=\"ANY\">name</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">object</code> <code class=\"ANY\">=</code> <code class=\"ANY\">object</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">name</code> <code class=\"ANY\">=</code> <code class=\"ANY\">name</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"COMMENT\">/** Returns the object on which to access the member. **/</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"FUNCTION_DECLARATOR\">getObject</code> <code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">object</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"COMMENT\">/** The name of the member. **/</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Span</code> <code class=\"FUNCTION_DECLARATOR\">getName</code> <code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">name</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"COMMENT\">/** Returns the cached member descriptor as returned by {@link Reflection#getField(Object, String)} or\n\t\t * {@link Reflection#getMethod(Object, String, Object...)}. See {@link #setCachedMember(Object)}. **/</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"FUNCTION_DECLARATOR\">getCachedMember</code> <code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">cachedMember</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"COMMENT\">/** Sets the member descriptor as returned by {@link Reflection#getField(Object, String)} or\n\t\t * {@link Reflection#getMethod(Object, String, Object...)} for faster member lookups. Called by {@link AstInterpreter} the\n\t\t * first time this node is evaluated. Subsequent evaluations can use the cached descriptor, avoiding a costly reflective\n\t\t * lookup. **/</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">void</code> <code class=\"FUNCTION_DECLARATOR\">setCachedMember</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">cachedMember</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">cachedMember</code> <code class=\"ANY\">=</code> <code class=\"ANY\">cachedMember</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">SuppressWarnings</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"rawtypes\"</code><code class=\"ANY\">)</code>\n\t\t<code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">Override</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"FUNCTION_DECLARATOR\">evaluate</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">ExpressionTemplate</code> <code class=\"VARIABLE_DECLARATOR\">template</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">ExpressionTemplateContext</code> <code class=\"VARIABLE_DECLARATOR\">context</code><code class=\"ANY\">)</code> <code class=\"KEYWORD\">throws</code> <code class=\"TYPE_IDENTIFIER\">IOException</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">object</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">getObject</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">evaluate</code><code class=\"ANY\">(</code><code class=\"ANY\">template</code><code class=\"ANY\">,</code> <code class=\"ANY\">context</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">object</code> <code class=\"ANY\">==</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code>\n\n\t\t\t<code class=\"COMMENT\">// special case for array.length</code>\n\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">object</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getClass</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isArray</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">&&</code> <code class=\"FUNCTION_IDENTIFIER\">getName</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getText</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">equals</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"length\"</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">Array</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getLength</code><code class=\"ANY\">(</code><code class=\"ANY\">object</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code>\n\n\t\t\t<code class=\"COMMENT\">// special case for map, allows to do map.key instead of map[key]</code>\n\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">object</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Map</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"TYPE_IDENTIFIER\">Map</code> <code class=\"VARIABLE_DECLARATOR\">map</code> <code class=\"ANY\">=</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Map</code><code class=\"ANY\">)</code><code class=\"ANY\">object</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">map</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">getName</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getText</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code>\n\n\t\t\t<code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">field</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">getCachedMember</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">field</code> <code class=\"ANY\">!=</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">try</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">Reflection</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getInstance</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getFieldValue</code><code class=\"ANY\">(</code><code class=\"ANY\">object</code><code class=\"ANY\">,</code> <code class=\"ANY\">field</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">catch</code> <code class=\"ANY\">(</code><code class=\"ANY\">Throwable</code> <code class=\"VARIABLE_DECLARATOR\">t</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"COMMENT\">// fall through</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">text</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">getName</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getText</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">field</code> <code class=\"ANY\">=</code> <code class=\"ANY\">Reflection</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getInstance</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getField</code><code class=\"ANY\">(</code><code class=\"ANY\">object</code><code class=\"ANY\">,</code> <code class=\"ANY\">text</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">field</code> <code class=\"ANY\">==</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">methodName</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"KEYWORD\">if</code><code class=\"ANY\">(</code><code class=\"ANY\">text</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">length</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">></code> <code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"ANY\">methodName</code> <code class=\"ANY\">=</code> <code class=\"ANY\">text</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">substring</code><code class=\"ANY\">(</code><code class=\"LITERAL\">0</code><code class=\"ANY\">,</code><code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">toUpperCase</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">+</code> <code class=\"ANY\">text</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">substring</code><code class=\"ANY\">(</code><code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code><code class=\"KEYWORD\">else</code><code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"ANY\">methodName</code> <code class=\"ANY\">=</code> <code class=\"ANY\">text</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">toUpperCase</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t<code class=\"TYPE_IDENTIFIER\">MemberAccess</code> <code class=\"VARIABLE_DECLARATOR\">access</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">new</code> <code class=\"TYPE_IDENTIFIER\">MemberAccess</code><code class=\"ANY\">(</code><code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">object</code><code class=\"ANY\">,</code> <code class=\"KEYWORD\">new</code> <code class=\"TYPE_IDENTIFIER\">Span</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"get\"</code> <code class=\"ANY\">+</code> <code class=\"ANY\">methodName</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"TYPE_IDENTIFIER\">MethodCall</code> <code class=\"VARIABLE_DECLARATOR\">methodCall</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">new</code> <code class=\"TYPE_IDENTIFIER\">MethodCall</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">getName</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">access</code><code class=\"ANY\">,</code> <code class=\"ANY\">Collections</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">emptyList</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"KEYWORD\">try</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">methodCall</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">evaluate</code><code class=\"ANY\">(</code><code class=\"ANY\">template</code><code class=\"ANY\">,</code> <code class=\"ANY\">context</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">catch</code> <code class=\"ANY\">(</code><code class=\"ANY\">TemplateException</code> <code class=\"VARIABLE_DECLARATOR\">e</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"KEYWORD\">if</code><code class=\"ANY\">(</code><code class=\"ANY\">ExceptionUtils</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">indexOfThrowable</code><code class=\"ANY\">(</code><code class=\"ANY\">e</code><code class=\"ANY\">,</code> <code class=\"ANY\">InvocationTargetException</code><code class=\"ANY\">.</code><code class=\"KEYWORD\">class</code><code class=\"ANY\">)</code> <code class=\"ANY\">></code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">{</code>\n\t\t\t\t\t\t<code class=\"ANY\">ExpressionError</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"ANY\">String</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">format</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"在%s中调用方法get%s发生异常\"</code>\n\t\t\t\t\t\t\t\t<code class=\"ANY\">,</code><code class=\"ANY\">object</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getClass</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\t\t\t\t\t\t\t\t<code class=\"ANY\">,</code><code class=\"ANY\">methodName</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">e</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t\t<code class=\"ANY\">access</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">new</code> <code class=\"TYPE_IDENTIFIER\">MemberAccess</code><code class=\"ANY\">(</code><code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">object</code><code class=\"ANY\">,</code> <code class=\"KEYWORD\">new</code> <code class=\"TYPE_IDENTIFIER\">Span</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"is\"</code> <code class=\"ANY\">+</code> <code class=\"ANY\">methodName</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"ANY\">methodCall</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">new</code> <code class=\"TYPE_IDENTIFIER\">MethodCall</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">getName</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">access</code><code class=\"ANY\">,</code> <code class=\"ANY\">Collections</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">emptyList</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"KEYWORD\">try</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">methodCall</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">evaluate</code><code class=\"ANY\">(</code><code class=\"ANY\">template</code><code class=\"ANY\">,</code> <code class=\"ANY\">context</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">catch</code> <code class=\"ANY\">(</code><code class=\"ANY\">TemplateException</code> <code class=\"VARIABLE_DECLARATOR\">e1</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t\t<code class=\"KEYWORD\">if</code><code class=\"ANY\">(</code><code class=\"ANY\">ExceptionUtils</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">indexOfThrowable</code><code class=\"ANY\">(</code><code class=\"ANY\">e1</code><code class=\"ANY\">,</code> <code class=\"ANY\">InvocationTargetException</code><code class=\"ANY\">.</code><code class=\"KEYWORD\">class</code><code class=\"ANY\">)</code> <code class=\"ANY\">></code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">{</code>\n\t\t\t\t\t\t\t<code class=\"ANY\">ExpressionError</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"ANY\">String</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">format</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"在%s中调用方法is%s发生异常\"</code>\n\t\t\t\t\t\t\t\t\t<code class=\"ANY\">,</code><code class=\"ANY\">object</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getClass</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\t\t\t\t\t\t\t\t\t<code class=\"ANY\">,</code><code class=\"ANY\">methodName</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">e</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">;</code>\n\t\t\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t\t\t<code class=\"ANY\">ExpressionError</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"ANY\">String</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">format</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"在%s中找不到属性%s或者方法get%s、方法is%s\"</code>\n\t\t\t\t\t\t\t\t<code class=\"ANY\">,</code><code class=\"ANY\">object</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getClass</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\t\t\t\t\t\t\t\t<code class=\"ANY\">,</code><code class=\"FUNCTION_IDENTIFIER\">getName</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getText</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\t\t\t\t\t\t\t\t<code class=\"ANY\">,</code><code class=\"ANY\">methodName</code>\n\t\t\t\t\t\t\t\t<code class=\"ANY\">,</code><code class=\"ANY\">methodName</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"FUNCTION_IDENTIFIER\">setCachedMember</code><code class=\"ANY\">(</code><code class=\"ANY\">field</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">Reflection</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getInstance</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getFieldValue</code><code class=\"ANY\">(</code><code class=\"ANY\">object</code><code class=\"ANY\">,</code> <code class=\"ANY\">field</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\t<code class=\"ANY\">}</code>\n\n\t<code class=\"COMMENT\">/** Represents a call to a top-level function. A function may either be a {@link FunctionalInterface} stored in a\n\t * {@link ExpressionTemplateContext}, or a {@link Macro} defined in a template. */</code>\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">FunctionCall</code> <code class=\"KEYWORD\">extends</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"ANY\">{</code>\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"VARIABLE_DECLARATOR\">function</code><code class=\"ANY\">;</code>\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Expression</code><code class=\"ANY\">></code> <code class=\"VARIABLE_DECLARATOR\">arguments</code><code class=\"ANY\">;</code>\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">cachedFunction</code><code class=\"ANY\">;</code>\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">ThreadLocal</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Object</code><code class=\"ANY\">[</code><code class=\"ANY\">]</code><code class=\"ANY\">></code> <code class=\"VARIABLE_DECLARATOR\">cachedArguments</code><code class=\"ANY\">;</code>\n\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"FUNCTION_DECLARATOR\">FunctionCall</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Span</code> <code class=\"VARIABLE_DECLARATOR\">span</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"VARIABLE_DECLARATOR\">function</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Expression</code><code class=\"ANY\">></code> <code class=\"VARIABLE_DECLARATOR\">arguments</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">super</code><code class=\"ANY\">(</code><code class=\"ANY\">span</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">function</code> <code class=\"ANY\">=</code> <code class=\"ANY\">function</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">arguments</code> <code class=\"ANY\">=</code> <code class=\"ANY\">arguments</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">cachedArguments</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">new</code> <code class=\"TYPE_IDENTIFIER\">ThreadLocal</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Object</code><code class=\"ANY\">[</code><code class=\"ANY\">]</code><code class=\"ANY\">></code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"COMMENT\">/** Return the expression that must evaluate to a {@link FunctionalInterface} or a {@link Macro}. **/</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"FUNCTION_DECLARATOR\">getFunction</code> <code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">function</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"COMMENT\">/** Returns the list of expressions to be passed to the function as arguments. **/</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Expression</code><code class=\"ANY\">></code> <code class=\"FUNCTION_DECLARATOR\">getArguments</code> <code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">arguments</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"COMMENT\">/** Returns the cached \"function\" descriptor as returned by {@link Reflection#getMethod(Object, String, Object...)} or the\n\t\t * {@link Macro}. See {@link #setCachedFunction(Object)}. **/</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"FUNCTION_DECLARATOR\">getCachedFunction</code> <code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">cachedFunction</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"COMMENT\">/** Sets the \"function\" descriptor as returned by {@link Reflection#getMethod(Object, String, Object...)} for faster\n\t\t * lookups, or the {@link Macro} to be called. Called by {@link AstInterpreter} the first time this node is evaluated.\n\t\t * Subsequent evaluations can use the cached descriptor, avoiding a costly reflective lookup. **/</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">void</code> <code class=\"FUNCTION_DECLARATOR\">setCachedFunction</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">cachedFunction</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">cachedFunction</code> <code class=\"ANY\">=</code> <code class=\"ANY\">cachedFunction</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"COMMENT\">/** Returns a scratch buffer to store arguments in when calling the function in {@link AstInterpreter}. Avoids generating\n\t\t * garbage. **/</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Object</code><code class=\"ANY\">[</code><code class=\"ANY\">]</code> <code class=\"FUNCTION_DECLARATOR\">getCachedArguments</code> <code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"TYPE_IDENTIFIER\">Object</code><code class=\"ANY\">[</code><code class=\"ANY\">]</code> <code class=\"VARIABLE_DECLARATOR\">args</code> <code class=\"ANY\">=</code> <code class=\"ANY\">cachedArguments</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">args</code> <code class=\"ANY\">==</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"ANY\">args</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">new</code> <code class=\"TYPE_IDENTIFIER\">Object</code><code class=\"ANY\">[</code><code class=\"ANY\">arguments</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">size</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">]</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">cachedArguments</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">set</code><code class=\"ANY\">(</code><code class=\"ANY\">args</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">args</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"COMMENT\">/** Must be invoked when this node is done evaluating so we don't leak memory **/</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">void</code> <code class=\"FUNCTION_DECLARATOR\">clearCachedArguments</code> <code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"TYPE_IDENTIFIER\">Object</code><code class=\"ANY\">[</code><code class=\"ANY\">]</code> <code class=\"VARIABLE_DECLARATOR\">args</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">getCachedArguments</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">for</code> <code class=\"ANY\">(</code><code class=\"KEYWORD\">int</code> <code class=\"VARIABLE_DECLARATOR\">i</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">0</code><code class=\"ANY\">;</code> <code class=\"ANY\">i</code> <code class=\"ANY\"><</code> <code class=\"ANY\">args</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">length</code><code class=\"ANY\">;</code> <code class=\"ANY\">i</code><code class=\"ANY\">++</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"ANY\">args</code><code class=\"ANY\">[</code><code class=\"ANY\">i</code><code class=\"ANY\">]</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">Override</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"FUNCTION_DECLARATOR\">evaluate</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">ExpressionTemplate</code> <code class=\"VARIABLE_DECLARATOR\">template</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">ExpressionTemplateContext</code> <code class=\"VARIABLE_DECLARATOR\">context</code><code class=\"ANY\">)</code> <code class=\"KEYWORD\">throws</code> <code class=\"TYPE_IDENTIFIER\">IOException</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">try</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"TYPE_IDENTIFIER\">Object</code><code class=\"ANY\">[</code><code class=\"ANY\">]</code> <code class=\"VARIABLE_DECLARATOR\">argumentValues</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">getCachedArguments</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Expression</code><code class=\"ANY\">></code> <code class=\"VARIABLE_DECLARATOR\">arguments</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">getArguments</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"KEYWORD\">for</code> <code class=\"ANY\">(</code><code class=\"KEYWORD\">int</code> <code class=\"VARIABLE_DECLARATOR\">i</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">0</code><code class=\"ANY\">,</code> <code class=\"VARIABLE_DECLARATOR\">n</code> <code class=\"ANY\">=</code> <code class=\"ANY\">argumentValues</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">length</code><code class=\"ANY\">;</code> <code class=\"ANY\">i</code> <code class=\"ANY\"><</code> <code class=\"ANY\">n</code><code class=\"ANY\">;</code> <code class=\"ANY\">i</code><code class=\"ANY\">++</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"VARIABLE_DECLARATOR\">expr</code> <code class=\"ANY\">=</code> <code class=\"ANY\">arguments</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get</code><code class=\"ANY\">(</code><code class=\"ANY\">i</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"ANY\">argumentValues</code><code class=\"ANY\">[</code><code class=\"ANY\">i</code><code class=\"ANY\">]</code> <code class=\"ANY\">=</code> <code class=\"ANY\">expr</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">evaluate</code><code class=\"ANY\">(</code><code class=\"ANY\">template</code><code class=\"ANY\">,</code> <code class=\"ANY\">context</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\n\t\t\t\t<code class=\"COMMENT\">// This is a special case to handle template level macros. If a call to a macro is</code>\n\t\t\t\t<code class=\"COMMENT\">// made, evaluating the function expression will result in an exception, as the</code>\n\t\t\t\t<code class=\"COMMENT\">// function name can't be found in the context. Instead we need to manually check</code>\n\t\t\t\t<code class=\"COMMENT\">// if the function expression is a VariableAccess and if so, if it can be found</code>\n\t\t\t\t<code class=\"COMMENT\">// in the context.</code>\n\t\t\t\t<code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">function</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">getFunction</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">VariableAccess</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"TYPE_IDENTIFIER\">VariableAccess</code> <code class=\"VARIABLE_DECLARATOR\">varAccess</code> <code class=\"ANY\">=</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">VariableAccess</code><code class=\"ANY\">)</code><code class=\"FUNCTION_IDENTIFIER\">getFunction</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"ANY\">function</code> <code class=\"ANY\">=</code> <code class=\"ANY\">context</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get</code><code class=\"ANY\">(</code><code class=\"ANY\">varAccess</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getVariableName</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getText</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"ANY\">function</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">getFunction</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">evaluate</code><code class=\"ANY\">(</code><code class=\"ANY\">template</code><code class=\"ANY\">,</code> <code class=\"ANY\">context</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\n\t\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">function</code> <code class=\"ANY\">!=</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">method</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">getCachedFunction</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">method</code> <code class=\"ANY\">!=</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t\t<code class=\"KEYWORD\">try</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">Reflection</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getInstance</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">callMethod</code><code class=\"ANY\">(</code><code class=\"ANY\">function</code><code class=\"ANY\">,</code> <code class=\"ANY\">method</code><code class=\"ANY\">,</code> <code class=\"ANY\">argumentValues</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">catch</code> <code class=\"ANY\">(</code><code class=\"ANY\">Throwable</code> <code class=\"VARIABLE_DECLARATOR\">t</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t\t\t<code class=\"COMMENT\">// fall through</code>\n\t\t\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t\t<code class=\"ANY\">method</code> <code class=\"ANY\">=</code> <code class=\"ANY\">Reflection</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getInstance</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getMethod</code><code class=\"ANY\">(</code><code class=\"ANY\">function</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">,</code> <code class=\"ANY\">argumentValues</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">method</code> <code class=\"ANY\">==</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t\t<code class=\"ANY\">ExpressionError</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Couldn't find function.\"</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t\t<code class=\"FUNCTION_IDENTIFIER\">setCachedFunction</code><code class=\"ANY\">(</code><code class=\"ANY\">method</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"KEYWORD\">try</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">Reflection</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getInstance</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">callMethod</code><code class=\"ANY\">(</code><code class=\"ANY\">function</code><code class=\"ANY\">,</code> <code class=\"ANY\">method</code><code class=\"ANY\">,</code> <code class=\"ANY\">argumentValues</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">catch</code> <code class=\"ANY\">(</code><code class=\"ANY\">Throwable</code> <code class=\"VARIABLE_DECLARATOR\">t</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t\t<code class=\"ANY\">ExpressionError</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"ANY\">t</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getMessage</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"ANY\">t</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">;</code> <code class=\"COMMENT\">// never reached</code>\n\t\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code><code class=\"ANY\">(</code><code class=\"ANY\">ScriptManager</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">containsFunction</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">getFunction</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getText</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"KEYWORD\">try</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">ScriptManager</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">eval</code><code class=\"ANY\">(</code><code class=\"ANY\">context</code><code class=\"ANY\">,</code><code class=\"FUNCTION_IDENTIFIER\">getFunction</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getText</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">argumentValues</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">catch</code> <code class=\"ANY\">(</code><code class=\"ANY\">Throwable</code> <code class=\"VARIABLE_DECLARATOR\">t</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t\t<code class=\"ANY\">ExpressionError</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"ANY\">t</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getMessage</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"ANY\">t</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">;</code> <code class=\"COMMENT\">// never reached</code>\n\t\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"ANY\">ExpressionError</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Couldn't find function \"</code> <code class=\"ANY\">+</code> <code class=\"FUNCTION_IDENTIFIER\">getFunction</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">;</code> <code class=\"COMMENT\">// never reached</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">finally</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"FUNCTION_IDENTIFIER\">clearCachedArguments</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t<code class=\"ANY\">}</code>\n\t<code class=\"ANY\">}</code>\n\n\t<code class=\"COMMENT\">/** Represents a call to a method of the form <code>object.method(a, b, c)</code>. **/</code>\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">MethodCall</code> <code class=\"KEYWORD\">extends</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"ANY\">{</code>\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">MemberAccess</code> <code class=\"VARIABLE_DECLARATOR\">method</code><code class=\"ANY\">;</code>\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Expression</code><code class=\"ANY\">></code> <code class=\"VARIABLE_DECLARATOR\">arguments</code><code class=\"ANY\">;</code>\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">cachedMethod</code><code class=\"ANY\">;</code>\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">ThreadLocal</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Object</code><code class=\"ANY\">[</code><code class=\"ANY\">]</code><code class=\"ANY\">></code> <code class=\"VARIABLE_DECLARATOR\">cachedArguments</code><code class=\"ANY\">;</code>\n\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"FUNCTION_DECLARATOR\">MethodCall</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Span</code> <code class=\"VARIABLE_DECLARATOR\">span</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">MemberAccess</code> <code class=\"VARIABLE_DECLARATOR\">method</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Expression</code><code class=\"ANY\">></code> <code class=\"VARIABLE_DECLARATOR\">arguments</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">super</code><code class=\"ANY\">(</code><code class=\"ANY\">span</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">method</code> <code class=\"ANY\">=</code> <code class=\"ANY\">method</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">arguments</code> <code class=\"ANY\">=</code> <code class=\"ANY\">arguments</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">cachedArguments</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">new</code> <code class=\"TYPE_IDENTIFIER\">ThreadLocal</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Object</code><code class=\"ANY\">[</code><code class=\"ANY\">]</code><code class=\"ANY\">></code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"COMMENT\">/** Returns the object on which to call the method. **/</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"FUNCTION_DECLARATOR\">getObject</code> <code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">method</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getObject</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"COMMENT\">/** Returns the method to call. **/</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">MemberAccess</code> <code class=\"FUNCTION_DECLARATOR\">getMethod</code> <code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">method</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"COMMENT\">/** Returns the list of expressions to be passed to the function as arguments. **/</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Expression</code><code class=\"ANY\">></code> <code class=\"FUNCTION_DECLARATOR\">getArguments</code> <code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">arguments</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"COMMENT\">/** Returns the cached member descriptor as returned by {@link Reflection#getMethod(Object, String, Object...)}. See\n\t\t * {@link #setCachedMember(Object)}. **/</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"FUNCTION_DECLARATOR\">getCachedMethod</code> <code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">cachedMethod</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"COMMENT\">/** Sets the method descriptor as returned by {@link Reflection#getMethod(Object, String, Object...)} for faster lookups.\n\t\t * Called by {@link AstInterpreter} the first time this node is evaluated. Subsequent evaluations can use the cached\n\t\t * descriptor, avoiding a costly reflective lookup. **/</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">void</code> <code class=\"FUNCTION_DECLARATOR\">setCachedMethod</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">cachedMethod</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">cachedMethod</code> <code class=\"ANY\">=</code> <code class=\"ANY\">cachedMethod</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"COMMENT\">/** Returns a scratch buffer to store arguments in when calling the function in {@link AstInterpreter}. Avoids generating\n\t\t * garbage. **/</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Object</code><code class=\"ANY\">[</code><code class=\"ANY\">]</code> <code class=\"FUNCTION_DECLARATOR\">getCachedArguments</code> <code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"TYPE_IDENTIFIER\">Object</code><code class=\"ANY\">[</code><code class=\"ANY\">]</code> <code class=\"VARIABLE_DECLARATOR\">args</code> <code class=\"ANY\">=</code> <code class=\"ANY\">cachedArguments</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">args</code> <code class=\"ANY\">==</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"ANY\">args</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">new</code> <code class=\"TYPE_IDENTIFIER\">Object</code><code class=\"ANY\">[</code><code class=\"ANY\">arguments</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">size</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">]</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">cachedArguments</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">set</code><code class=\"ANY\">(</code><code class=\"ANY\">args</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">args</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"COMMENT\">/** Must be invoked when this node is done evaluating so we don't leak memory **/</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">void</code> <code class=\"FUNCTION_DECLARATOR\">clearCachedArguments</code> <code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"TYPE_IDENTIFIER\">Object</code><code class=\"ANY\">[</code><code class=\"ANY\">]</code> <code class=\"VARIABLE_DECLARATOR\">args</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">getCachedArguments</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">for</code> <code class=\"ANY\">(</code><code class=\"KEYWORD\">int</code> <code class=\"VARIABLE_DECLARATOR\">i</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">0</code><code class=\"ANY\">;</code> <code class=\"ANY\">i</code> <code class=\"ANY\"><</code> <code class=\"ANY\">args</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">length</code><code class=\"ANY\">;</code> <code class=\"ANY\">i</code><code class=\"ANY\">++</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"ANY\">args</code><code class=\"ANY\">[</code><code class=\"ANY\">i</code><code class=\"ANY\">]</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">Override</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"FUNCTION_DECLARATOR\">evaluate</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">ExpressionTemplate</code> <code class=\"VARIABLE_DECLARATOR\">template</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">ExpressionTemplateContext</code> <code class=\"VARIABLE_DECLARATOR\">context</code><code class=\"ANY\">)</code> <code class=\"KEYWORD\">throws</code> <code class=\"TYPE_IDENTIFIER\">IOException</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">try</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">object</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">getObject</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">evaluate</code><code class=\"ANY\">(</code><code class=\"ANY\">template</code><code class=\"ANY\">,</code> <code class=\"ANY\">context</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">object</code> <code class=\"ANY\">==</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\n\t\t\t\t<code class=\"TYPE_IDENTIFIER\">Object</code><code class=\"ANY\">[</code><code class=\"ANY\">]</code> <code class=\"VARIABLE_DECLARATOR\">argumentValues</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">getCachedArguments</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Expression</code><code class=\"ANY\">></code> <code class=\"VARIABLE_DECLARATOR\">arguments</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">getArguments</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"KEYWORD\">for</code> <code class=\"ANY\">(</code><code class=\"KEYWORD\">int</code> <code class=\"VARIABLE_DECLARATOR\">i</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">0</code><code class=\"ANY\">,</code> <code class=\"VARIABLE_DECLARATOR\">n</code> <code class=\"ANY\">=</code> <code class=\"ANY\">argumentValues</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">length</code><code class=\"ANY\">;</code> <code class=\"ANY\">i</code> <code class=\"ANY\"><</code> <code class=\"ANY\">n</code><code class=\"ANY\">;</code> <code class=\"ANY\">i</code><code class=\"ANY\">++</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"VARIABLE_DECLARATOR\">expr</code> <code class=\"ANY\">=</code> <code class=\"ANY\">arguments</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get</code><code class=\"ANY\">(</code><code class=\"ANY\">i</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"ANY\">argumentValues</code><code class=\"ANY\">[</code><code class=\"ANY\">i</code><code class=\"ANY\">]</code> <code class=\"ANY\">=</code> <code class=\"ANY\">expr</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">evaluate</code><code class=\"ANY\">(</code><code class=\"ANY\">template</code><code class=\"ANY\">,</code> <code class=\"ANY\">context</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t<code class=\"KEYWORD\">if</code><code class=\"ANY\">(</code><code class=\"ANY\">object</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">DynamicMethod</code><code class=\"ANY\">)</code><code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"KEYWORD\">try</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t\t<code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">method</code> <code class=\"ANY\">=</code> <code class=\"ANY\">DynamicMethod</code><code class=\"ANY\">.</code><code class=\"KEYWORD\">class</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getDeclaredMethod</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"execute\"</code><code class=\"ANY\">,</code> <code class=\"ANY\">String</code><code class=\"ANY\">.</code><code class=\"KEYWORD\">class</code><code class=\"ANY\">,</code><code class=\"ANY\">List</code><code class=\"ANY\">.</code><code class=\"KEYWORD\">class</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t\t<code class=\"TYPE_IDENTIFIER\">Object</code><code class=\"ANY\">[</code><code class=\"ANY\">]</code> <code class=\"VARIABLE_DECLARATOR\">newArgumentValues</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">new</code> <code class=\"TYPE_IDENTIFIER\">Object</code><code class=\"ANY\">[</code><code class=\"ANY\">]</code><code class=\"ANY\">{</code><code class=\"FUNCTION_IDENTIFIER\">getMethod</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getName</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getText</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">Arrays</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">asList</code><code class=\"ANY\">(</code><code class=\"ANY\">argumentValues</code><code class=\"ANY\">)</code><code class=\"ANY\">}</code><code class=\"ANY\">;</code>\n\t\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">Reflection</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getInstance</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">callMethod</code><code class=\"ANY\">(</code><code class=\"ANY\">object</code><code class=\"ANY\">,</code> <code class=\"ANY\">method</code><code class=\"ANY\">,</code> <code class=\"ANY\">newArgumentValues</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">catch</code> <code class=\"ANY\">(</code><code class=\"ANY\">Throwable</code> <code class=\"VARIABLE_DECLARATOR\">t</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t\t<code class=\"ANY\">ExpressionError</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"ANY\">t</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getMessage</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"ANY\">t</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">;</code> <code class=\"COMMENT\">// never reached</code>\n\t\t\t\t\t<code class=\"ANY\">}</code> \n\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t\n\t\t\t\t<code class=\"COMMENT\">// Otherwise try to find a corresponding method or field pointing to a lambda.</code>\n\t\t\t\t<code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">method</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">getCachedMethod</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">method</code> <code class=\"ANY\">!=</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"KEYWORD\">try</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">Reflection</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getInstance</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">callMethod</code><code class=\"ANY\">(</code><code class=\"ANY\">object</code><code class=\"ANY\">,</code> <code class=\"ANY\">method</code><code class=\"ANY\">,</code> <code class=\"ANY\">argumentValues</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">catch</code> <code class=\"ANY\">(</code><code class=\"ANY\">Throwable</code> <code class=\"VARIABLE_DECLARATOR\">t</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t\t<code class=\"COMMENT\">// fall through</code>\n\t\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t\n\t\t\t\t<code class=\"ANY\">method</code> <code class=\"ANY\">=</code> <code class=\"ANY\">Reflection</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getInstance</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getMethod</code><code class=\"ANY\">(</code><code class=\"ANY\">object</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">getMethod</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getName</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getText</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"ANY\">argumentValues</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">method</code> <code class=\"ANY\">!=</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"COMMENT\">// found the method on the object, call it</code>\n\t\t\t\t\t<code class=\"FUNCTION_IDENTIFIER\">setCachedMethod</code><code class=\"ANY\">(</code><code class=\"ANY\">method</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"KEYWORD\">try</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">Reflection</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getInstance</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">callMethod</code><code class=\"ANY\">(</code><code class=\"ANY\">object</code><code class=\"ANY\">,</code> <code class=\"ANY\">method</code><code class=\"ANY\">,</code> <code class=\"ANY\">argumentValues</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">catch</code> <code class=\"ANY\">(</code><code class=\"ANY\">Throwable</code> <code class=\"VARIABLE_DECLARATOR\">t</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t\t<code class=\"ANY\">ExpressionError</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"ANY\">t</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getMessage</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"ANY\">t</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">;</code> <code class=\"COMMENT\">// never reached</code>\n\t\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t<code class=\"ANY\">}</code> \n\t\t\t\t<code class=\"ANY\">method</code> <code class=\"ANY\">=</code> <code class=\"ANY\">Reflection</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getInstance</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getExtensionMethod</code><code class=\"ANY\">(</code><code class=\"ANY\">object</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">getMethod</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getName</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getText</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"ANY\">argumentValues</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"KEYWORD\">if</code><code class=\"ANY\">(</code><code class=\"ANY\">method</code> <code class=\"ANY\">!=</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">)</code><code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"KEYWORD\">try</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t\t<code class=\"KEYWORD\">int</code> <code class=\"VARIABLE_DECLARATOR\">argumentLength</code> <code class=\"ANY\">=</code> <code class=\"ANY\">argumentValues</code> <code class=\"ANY\">==</code> <code class=\"LITERAL\">null</code> <code class=\"ANY\">?</code> <code class=\"LITERAL\">0</code> <code class=\"ANY\">:</code> <code class=\"ANY\">argumentValues</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">length</code><code class=\"ANY\">;</code>\n\t\t\t\t\t\t<code class=\"TYPE_IDENTIFIER\">Object</code><code class=\"ANY\">[</code><code class=\"ANY\">]</code> <code class=\"VARIABLE_DECLARATOR\">parameters</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">new</code> <code class=\"TYPE_IDENTIFIER\">Object</code><code class=\"ANY\">[</code><code class=\"ANY\">argumentLength</code> <code class=\"ANY\">+</code> <code class=\"LITERAL\">1</code><code class=\"ANY\">]</code><code class=\"ANY\">;</code>\n\t\t\t\t\t\t<code class=\"KEYWORD\">if</code><code class=\"ANY\">(</code><code class=\"ANY\">argumentLength</code> <code class=\"ANY\">></code> <code class=\"LITERAL\">0</code><code class=\"ANY\">)</code><code class=\"ANY\">{</code>\n\t\t\t\t\t\t\t<code class=\"KEYWORD\">for</code> <code class=\"ANY\">(</code><code class=\"KEYWORD\">int</code> <code class=\"VARIABLE_DECLARATOR\">i</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">0</code><code class=\"ANY\">;</code> <code class=\"ANY\">i</code> <code class=\"ANY\"><</code> <code class=\"ANY\">argumentLength</code><code class=\"ANY\">;</code> <code class=\"ANY\">i</code><code class=\"ANY\">++</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t\t\t\t<code class=\"ANY\">parameters</code><code class=\"ANY\">[</code><code class=\"ANY\">i</code> <code class=\"ANY\">+</code> <code class=\"LITERAL\">1</code><code class=\"ANY\">]</code> <code class=\"ANY\">=</code> <code class=\"ANY\">argumentValues</code><code class=\"ANY\">[</code><code class=\"ANY\">i</code><code class=\"ANY\">]</code><code class=\"ANY\">;</code>\n\t\t\t\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t\t\t<code class=\"ANY\">parameters</code><code class=\"ANY\">[</code><code class=\"LITERAL\">0</code><code class=\"ANY\">]</code> <code class=\"ANY\">=</code> <code class=\"ANY\">object</code><code class=\"ANY\">;</code>\n\t\t\t\t\t\t<code class=\"KEYWORD\">if</code><code class=\"ANY\">(</code><code class=\"ANY\">object</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getClass</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isArray</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">{</code>\n\t\t\t\t\t\t\t<code class=\"TYPE_IDENTIFIER\">Object</code><code class=\"ANY\">[</code><code class=\"ANY\">]</code> <code class=\"VARIABLE_DECLARATOR\">objs</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">new</code> <code class=\"TYPE_IDENTIFIER\">Object</code><code class=\"ANY\">[</code><code class=\"ANY\">Array</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getLength</code><code class=\"ANY\">(</code><code class=\"ANY\">object</code><code class=\"ANY\">)</code><code class=\"ANY\">]</code><code class=\"ANY\">;</code>\n\t\t\t\t\t\t\t<code class=\"KEYWORD\">for</code> <code class=\"ANY\">(</code><code class=\"KEYWORD\">int</code> <code class=\"VARIABLE_DECLARATOR\">i</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">0</code><code class=\"ANY\">,</code><code class=\"VARIABLE_DECLARATOR\">len</code> <code class=\"ANY\">=</code> <code class=\"ANY\">objs</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">length</code><code class=\"ANY\">;</code> <code class=\"ANY\">i</code> <code class=\"ANY\"><</code> <code class=\"ANY\">len</code><code class=\"ANY\">;</code> <code class=\"ANY\">i</code><code class=\"ANY\">++</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t\t\t\t<code class=\"ANY\">Array</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">set</code><code class=\"ANY\">(</code><code class=\"ANY\">objs</code><code class=\"ANY\">,</code> <code class=\"ANY\">i</code><code class=\"ANY\">,</code> <code class=\"ANY\">Array</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get</code><code class=\"ANY\">(</code><code class=\"ANY\">object</code><code class=\"ANY\">,</code> <code class=\"ANY\">i</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t\t\t\t<code class=\"ANY\">parameters</code><code class=\"ANY\">[</code><code class=\"LITERAL\">0</code><code class=\"ANY\">]</code> <code class=\"ANY\">=</code> <code class=\"ANY\">objs</code><code class=\"ANY\">;</code>\n\t\t\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">Reflection</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getInstance</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">callMethod</code><code class=\"ANY\">(</code><code class=\"ANY\">object</code><code class=\"ANY\">,</code> <code class=\"ANY\">method</code><code class=\"ANY\">,</code> <code class=\"ANY\">parameters</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">catch</code> <code class=\"ANY\">(</code><code class=\"ANY\">Throwable</code> <code class=\"VARIABLE_DECLARATOR\">t</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t\t<code class=\"ANY\">ExpressionError</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"ANY\">t</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getMessage</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"ANY\">t</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t\t<code class=\"COMMENT\">// fall through</code>\n\t\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t<code class=\"ANY\">}</code><code class=\"KEYWORD\">else</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"COMMENT\">// didn't find the method on the object, try to find a field pointing to a lambda</code>\n\t\t\t\t\t<code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">field</code> <code class=\"ANY\">=</code> <code class=\"ANY\">Reflection</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getInstance</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getField</code><code class=\"ANY\">(</code><code class=\"ANY\">object</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">getMethod</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getName</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getText</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">field</code> <code class=\"ANY\">==</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">)</code><code class=\"ANY\">{</code>\n\t\t\t\t\t\t<code class=\"ANY\">ExpressionError</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"在'\"</code> <code class=\"ANY\">+</code> <code class=\"ANY\">object</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getClass</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">+</code> <code class=\"CHAR_STRING_LITERAL\">\"'中找不到方法 \"</code> <code class=\"ANY\">+</code> <code class=\"FUNCTION_IDENTIFIER\">getMethod</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getName</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getText</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">+</code> <code class=\"CHAR_STRING_LITERAL\">\"(\"</code> <code class=\"ANY\">+</code> <code class=\"ANY\">StringUtils</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">join</code><code class=\"ANY\">(</code><code class=\"ANY\">JavaReflection</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getStringTypes</code><code class=\"ANY\">(</code><code class=\"ANY\">argumentValues</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"CHAR_STRING_LITERAL\">\",\"</code><code class=\"ANY\">)</code> <code class=\"ANY\">+</code> <code class=\"CHAR_STRING_LITERAL\">\")\"</code><code class=\"ANY\">,</code>\n\t\t\t\t\t\t\t<code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t\t<code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">function</code> <code class=\"ANY\">=</code> <code class=\"ANY\">Reflection</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getInstance</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getFieldValue</code><code class=\"ANY\">(</code><code class=\"ANY\">object</code><code class=\"ANY\">,</code> <code class=\"ANY\">field</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"ANY\">method</code> <code class=\"ANY\">=</code> <code class=\"ANY\">Reflection</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getInstance</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getMethod</code><code class=\"ANY\">(</code><code class=\"ANY\">function</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">,</code> <code class=\"ANY\">argumentValues</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">method</code> <code class=\"ANY\">==</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">)</code><code class=\"ANY\">{</code>\n\t\t\t\t\t\t<code class=\"ANY\">ExpressionError</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"在'\"</code> <code class=\"ANY\">+</code> <code class=\"ANY\">object</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getClass</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">+</code> <code class=\"CHAR_STRING_LITERAL\">\"'中找不到方法 \"</code> <code class=\"ANY\">+</code> <code class=\"FUNCTION_IDENTIFIER\">getMethod</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getName</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getText</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">+</code> <code class=\"CHAR_STRING_LITERAL\">\"(\"</code><code class=\"ANY\">+</code> <code class=\"ANY\">StringUtils</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">join</code><code class=\"ANY\">(</code><code class=\"ANY\">JavaReflection</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getStringTypes</code><code class=\"ANY\">(</code><code class=\"ANY\">argumentValues</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"CHAR_STRING_LITERAL\">\",\"</code><code class=\"ANY\">)</code> <code class=\"ANY\">+</code><code class=\"CHAR_STRING_LITERAL\">\")\"</code><code class=\"ANY\">,</code>\n\t\t\t\t\t\t\t\t<code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"ANY\">}</code> \n\t\t\t\t\t<code class=\"KEYWORD\">try</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">Reflection</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getInstance</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">callMethod</code><code class=\"ANY\">(</code><code class=\"ANY\">function</code><code class=\"ANY\">,</code> <code class=\"ANY\">method</code><code class=\"ANY\">,</code> <code class=\"ANY\">argumentValues</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">catch</code> <code class=\"ANY\">(</code><code class=\"ANY\">Throwable</code> <code class=\"VARIABLE_DECLARATOR\">t</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t\t<code class=\"ANY\">ExpressionError</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"ANY\">t</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getMessage</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"ANY\">t</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">;</code> <code class=\"COMMENT\">// never reached</code>\n\t\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">finally</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"FUNCTION_IDENTIFIER\">clearCachedArguments</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t<code class=\"ANY\">}</code>\n\t<code class=\"ANY\">}</code>\n\n\t<code class=\"COMMENT\">/** Represents a map literal of the form <code>{ key: value, key2: value, ... }</code> which can be nested. */</code>\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">MapLiteral</code> <code class=\"KEYWORD\">extends</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"ANY\">{</code>\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Token</code><code class=\"ANY\">></code> <code class=\"VARIABLE_DECLARATOR\">keys</code><code class=\"ANY\">;</code>\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Expression</code><code class=\"ANY\">></code> <code class=\"VARIABLE_DECLARATOR\">values</code><code class=\"ANY\">;</code>\n\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"FUNCTION_DECLARATOR\">MapLiteral</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Span</code> <code class=\"VARIABLE_DECLARATOR\">span</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Token</code><code class=\"ANY\">></code> <code class=\"VARIABLE_DECLARATOR\">keys</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Expression</code><code class=\"ANY\">></code> <code class=\"VARIABLE_DECLARATOR\">values</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">super</code><code class=\"ANY\">(</code><code class=\"ANY\">span</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">keys</code> <code class=\"ANY\">=</code> <code class=\"ANY\">keys</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">values</code> <code class=\"ANY\">=</code> <code class=\"ANY\">values</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Token</code><code class=\"ANY\">></code> <code class=\"FUNCTION_DECLARATOR\">getKeys</code> <code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">keys</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Expression</code><code class=\"ANY\">></code> <code class=\"FUNCTION_DECLARATOR\">getValues</code> <code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">values</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">Override</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"FUNCTION_DECLARATOR\">evaluate</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">ExpressionTemplate</code> <code class=\"VARIABLE_DECLARATOR\">template</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">ExpressionTemplateContext</code> <code class=\"VARIABLE_DECLARATOR\">context</code><code class=\"ANY\">)</code> <code class=\"KEYWORD\">throws</code> <code class=\"TYPE_IDENTIFIER\">IOException</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"TYPE_IDENTIFIER\">Map</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">String</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">Object</code><code class=\"ANY\">></code> <code class=\"VARIABLE_DECLARATOR\">map</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">new</code> <code class=\"TYPE_IDENTIFIER\">HashMap</code><code class=\"ANY\"><</code><code class=\"ANY\">></code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">for</code> <code class=\"ANY\">(</code><code class=\"KEYWORD\">int</code> <code class=\"VARIABLE_DECLARATOR\">i</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">0</code><code class=\"ANY\">,</code> <code class=\"VARIABLE_DECLARATOR\">n</code> <code class=\"ANY\">=</code> <code class=\"ANY\">keys</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">size</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code> <code class=\"ANY\">i</code> <code class=\"ANY\"><</code> <code class=\"ANY\">n</code><code class=\"ANY\">;</code> <code class=\"ANY\">i</code><code class=\"ANY\">++</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">value</code> <code class=\"ANY\">=</code> <code class=\"ANY\">values</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get</code><code class=\"ANY\">(</code><code class=\"ANY\">i</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">evaluate</code><code class=\"ANY\">(</code><code class=\"ANY\">template</code><code class=\"ANY\">,</code> <code class=\"ANY\">context</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"TYPE_IDENTIFIER\">Token</code> <code class=\"VARIABLE_DECLARATOR\">tokenKey</code> <code class=\"ANY\">=</code> <code class=\"ANY\">keys</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get</code><code class=\"ANY\">(</code><code class=\"ANY\">i</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">key</code> <code class=\"ANY\">=</code> <code class=\"ANY\">tokenKey</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getText</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"KEYWORD\">if</code><code class=\"ANY\">(</code><code class=\"ANY\">tokenKey</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getType</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"ANY\">TokenType</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">StringLiteral</code><code class=\"ANY\">)</code><code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"ANY\">key</code> <code class=\"ANY\">=</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">String</code><code class=\"ANY\">)</code> <code class=\"KEYWORD\">new</code> <code class=\"TYPE_IDENTIFIER\">StringLiteral</code><code class=\"ANY\">(</code><code class=\"ANY\">tokenKey</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">evaluate</code><code class=\"ANY\">(</code><code class=\"ANY\">template</code><code class=\"ANY\">,</code> <code class=\"ANY\">context</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code><code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code><code class=\"ANY\">(</code><code class=\"ANY\">key</code> <code class=\"ANY\">!=</code> <code class=\"LITERAL\">null</code> <code class=\"ANY\">&&</code> <code class=\"ANY\">key</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">startsWith</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"$\"</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">objKey</code> <code class=\"ANY\">=</code> <code class=\"ANY\">context</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get</code><code class=\"ANY\">(</code><code class=\"ANY\">key</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">substring</code><code class=\"ANY\">(</code><code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"KEYWORD\">if</code><code class=\"ANY\">(</code><code class=\"ANY\">objKey</code> <code class=\"ANY\">!=</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">)</code><code class=\"ANY\">{</code>\n\t\t\t\t\t\t<code class=\"ANY\">key</code> <code class=\"ANY\">=</code> <code class=\"ANY\">objKey</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">toString</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"ANY\">}</code><code class=\"KEYWORD\">else</code><code class=\"ANY\">{</code>\n\t\t\t\t\t\t<code class=\"ANY\">key</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t<code class=\"ANY\">map</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">put</code><code class=\"ANY\">(</code><code class=\"ANY\">key</code><code class=\"ANY\">,</code> <code class=\"ANY\">value</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">map</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\t<code class=\"ANY\">}</code>\n\n\t<code class=\"COMMENT\">/** Represents a list literal of the form <code>[ value, value2, value3, ...]</code> which can be nested. */</code>\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">ListLiteral</code> <code class=\"KEYWORD\">extends</code> <code class=\"TYPE_IDENTIFIER\">Expression</code> <code class=\"ANY\">{</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Expression</code><code class=\"ANY\">></code> <code class=\"VARIABLE_DECLARATOR\">values</code><code class=\"ANY\">;</code>\n\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"FUNCTION_DECLARATOR\">ListLiteral</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Span</code> <code class=\"VARIABLE_DECLARATOR\">span</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Expression</code><code class=\"ANY\">></code> <code class=\"VARIABLE_DECLARATOR\">values</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">super</code><code class=\"ANY\">(</code><code class=\"ANY\">span</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">values</code> <code class=\"ANY\">=</code> <code class=\"ANY\">values</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Expression</code><code class=\"ANY\">></code> <code class=\"FUNCTION_DECLARATOR\">getValues</code> <code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">values</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">Override</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"FUNCTION_DECLARATOR\">evaluate</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">ExpressionTemplate</code> <code class=\"VARIABLE_DECLARATOR\">template</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">ExpressionTemplateContext</code> <code class=\"VARIABLE_DECLARATOR\">context</code><code class=\"ANY\">)</code> <code class=\"KEYWORD\">throws</code> <code class=\"TYPE_IDENTIFIER\">IOException</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Object</code><code class=\"ANY\">></code> <code class=\"VARIABLE_DECLARATOR\">list</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">new</code> <code class=\"TYPE_IDENTIFIER\">ArrayList</code><code class=\"ANY\"><</code><code class=\"ANY\">></code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">for</code> <code class=\"ANY\">(</code><code class=\"KEYWORD\">int</code> <code class=\"VARIABLE_DECLARATOR\">i</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">0</code><code class=\"ANY\">,</code> <code class=\"VARIABLE_DECLARATOR\">n</code> <code class=\"ANY\">=</code> <code class=\"ANY\">values</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">size</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code> <code class=\"ANY\">i</code> <code class=\"ANY\"><</code> <code class=\"ANY\">n</code><code class=\"ANY\">;</code> <code class=\"ANY\">i</code><code class=\"ANY\">++</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"ANY\">list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">add</code><code class=\"ANY\">(</code><code class=\"ANY\">values</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get</code><code class=\"ANY\">(</code><code class=\"ANY\">i</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">evaluate</code><code class=\"ANY\">(</code><code class=\"ANY\">template</code><code class=\"ANY\">,</code> <code class=\"ANY\">context</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">list</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\t<code class=\"ANY\">}</code>\n\n<code class=\"ANY\">}</code>\n\n</pre>\n</html>"},{"_id":{"language":"JAVA","lexingTokens":[32,102,65,102,65,102,63,25,102,65,102,65,102,63,25,102,65,102,65,102,63,25,102,65,102,65,102,63,35,9,102,59,35,38,68,102,64,102,67,102,68,102,64,102,67,102,57,102,68,102,64,102,67,102,64,102,102,64,102,102,58,59,102,68,102,64,102,67,102,66,31,102,68,67,57,102,58,63,102,65,102,57,102,64,102,58,63,36,102,63,60,35,38,68,102,64,102,67,102,68,102,64,102,67,102,57,102,102,64,102,102,58,59,102,68,102,64,102,67,102,66,31,102,68,67,57,58,63,102,65,102,57,102,64,102,58,63,36,102,63,60,35,38,68,102,64,102,67,102,68,102,64,102,67,102,57,102,68,102,64,102,67,102,64,102,68,102,67,102,64,102,68,102,67,102,58,59,102,68,102,64,102,67,102,66,31,102,68,67,57,102,58,63,22,57,102,76,56,77,102,76,56,77,102,65,102,57,58,73,102,65,102,57,58,58,59,27,102,66,102,65,102,57,58,63,21,57,27,102,66,51,63,102,68,102,63,102,79,58,59,102,65,102,57,102,65,102,57,51,58,64,102,65,102,57,51,58,58,63,60,60,36,102,63,60,60,-1]},"sourceCode":"package org.spiderflow.utils;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\npublic class Maps {\n\n\tpublic static <K,V> Map<K,V> add(Map<K,V> srcMap,K k,V v){\n\t\tHashMap<K, V> destMap = new HashMap<>(srcMap);\n\t\tdestMap.put(k, v);\n\t\treturn destMap;\n\t}\n\t\n\tpublic static <K,V> Map<K,V> newMap(K key,V value){\n\t\tHashMap<K, V> map = new HashMap<>();\n\t\tmap.put(key, value);\n\t\treturn map;\n\t}\n\t\n\tpublic static <K,V> Map<K,V> add(Map<K,V> srcMap,List<K> ks,List<V> vs){\n\t\tHashMap<K, V> destMap = new HashMap<>(srcMap);\n\t\tif(ks != null && vs != null && ks.size() == vs.size()){\n\t\t\tint size = ks.size();\n\t\t\tfor (int i = 0; i < size; i++) {\n\t\t\t\tdestMap.put(ks.get(0), vs.get(0));\n\t\t\t}\n\t\t}\n\t\treturn destMap;\n\t}\n}\n","highlightingTokens":[1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,5,0,1,1,0,8,0,8,0,8,0,8,0,8,0,6,0,8,0,8,0,8,0,7,0,8,7,0,8,7,0,0,8,0,8,0,8,0,7,0,1,8,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,1,0,0,0,1,1,0,8,0,8,0,8,0,8,0,8,0,6,0,8,7,0,8,7,0,0,8,0,8,0,8,0,7,0,1,8,0,0,0,0,0,0,0,9,0,0,0,0,0,0,1,0,0,0,1,1,0,8,0,8,0,8,0,8,0,8,0,6,0,8,0,8,0,8,0,7,0,8,0,8,0,7,0,8,0,8,0,7,0,0,8,0,8,0,8,0,7,0,1,8,0,0,0,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,9,0,0,0,0,0,9,0,0,0,0,1,7,0,0,0,9,0,0,0,1,0,1,7,0,2,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,9,0,2,0,0,0,0,9,0,2,0,0,0,0,0,1,0,0,0,0,0],"highlightingCode":"<!DOCTYPE html>\n<html>\n<style>\n.ANY {\n    color: black;\n    font-weight: normal;\n    font-style: normal;\n}\n.KEYWORD {\n    color: blue;\n    font-weight: bold;\n    font-style: normal;\n}\n.LITERAL {\n    color: lightskyblue;\n    font-weight: bold;\n    font-style: normal;\n}\n.CHAR_STRING_LITERAL {\n    color: darkgoldenrod;\n    font-weight: normal;\n    font-style: normal;\n}\n.COMMENT {\n    color: grey;\n    font-weight: normal;\n    font-style: italic;\n}\n.CLASS_DECLARATOR {\n    color: crimson;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_DECLARATOR {\n    color: fuchsia;\n    font-weight: bold;\n    font-style: normal;\n}\n.VARIABLE_DECLARATOR {\n    color: purple;\n    font-weight: bold;\n    font-style: normal;\n}\n.TYPE_IDENTIFIER {\n    color: darkgreen;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_IDENTIFIER {\n    color: dodgerblue;\n    font-weight: normal;\n    font-style: normal;\n}\n.FIELD_IDENTIFIER {\n    color: coral;\n    font-weight: normal;\n    font-style: normal;\n}\n.ANNOTATION_DECLARATOR {\n    color: lightslategray;\n    font-weight: lighter;\n    font-style: italic;\n}\n</style>\n<pre>\n<code class=\"KEYWORD\">package</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">spiderflow</code><code class=\"ANY\">.</code><code class=\"ANY\">utils</code><code class=\"ANY\">;</code>\n\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">java</code><code class=\"ANY\">.</code><code class=\"ANY\">util</code><code class=\"ANY\">.</code><code class=\"ANY\">HashMap</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">java</code><code class=\"ANY\">.</code><code class=\"ANY\">util</code><code class=\"ANY\">.</code><code class=\"ANY\">List</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">java</code><code class=\"ANY\">.</code><code class=\"ANY\">util</code><code class=\"ANY\">.</code><code class=\"ANY\">Map</code><code class=\"ANY\">;</code>\n\n<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">Maps</code> <code class=\"ANY\">{</code>\n\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">K</code><code class=\"ANY\">,</code><code class=\"TYPE_IDENTIFIER\">V</code><code class=\"ANY\">></code> <code class=\"TYPE_IDENTIFIER\">Map</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">K</code><code class=\"ANY\">,</code><code class=\"TYPE_IDENTIFIER\">V</code><code class=\"ANY\">></code> <code class=\"FUNCTION_DECLARATOR\">add</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Map</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">K</code><code class=\"ANY\">,</code><code class=\"TYPE_IDENTIFIER\">V</code><code class=\"ANY\">></code> <code class=\"VARIABLE_DECLARATOR\">srcMap</code><code class=\"ANY\">,</code><code class=\"TYPE_IDENTIFIER\">K</code> <code class=\"VARIABLE_DECLARATOR\">k</code><code class=\"ANY\">,</code><code class=\"TYPE_IDENTIFIER\">V</code> <code class=\"VARIABLE_DECLARATOR\">v</code><code class=\"ANY\">)</code><code class=\"ANY\">{</code>\n\t\t<code class=\"TYPE_IDENTIFIER\">HashMap</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">K</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">V</code><code class=\"ANY\">></code> <code class=\"VARIABLE_DECLARATOR\">destMap</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">new</code> <code class=\"TYPE_IDENTIFIER\">HashMap</code><code class=\"ANY\"><</code><code class=\"ANY\">></code><code class=\"ANY\">(</code><code class=\"ANY\">srcMap</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">destMap</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">put</code><code class=\"ANY\">(</code><code class=\"ANY\">k</code><code class=\"ANY\">,</code> <code class=\"ANY\">v</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">destMap</code><code class=\"ANY\">;</code>\n\t<code class=\"ANY\">}</code>\n\t\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">K</code><code class=\"ANY\">,</code><code class=\"TYPE_IDENTIFIER\">V</code><code class=\"ANY\">></code> <code class=\"TYPE_IDENTIFIER\">Map</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">K</code><code class=\"ANY\">,</code><code class=\"TYPE_IDENTIFIER\">V</code><code class=\"ANY\">></code> <code class=\"FUNCTION_DECLARATOR\">newMap</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">K</code> <code class=\"VARIABLE_DECLARATOR\">key</code><code class=\"ANY\">,</code><code class=\"TYPE_IDENTIFIER\">V</code> <code class=\"VARIABLE_DECLARATOR\">value</code><code class=\"ANY\">)</code><code class=\"ANY\">{</code>\n\t\t<code class=\"TYPE_IDENTIFIER\">HashMap</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">K</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">V</code><code class=\"ANY\">></code> <code class=\"VARIABLE_DECLARATOR\">map</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">new</code> <code class=\"TYPE_IDENTIFIER\">HashMap</code><code class=\"ANY\"><</code><code class=\"ANY\">></code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">map</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">put</code><code class=\"ANY\">(</code><code class=\"ANY\">key</code><code class=\"ANY\">,</code> <code class=\"ANY\">value</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">map</code><code class=\"ANY\">;</code>\n\t<code class=\"ANY\">}</code>\n\t\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">K</code><code class=\"ANY\">,</code><code class=\"TYPE_IDENTIFIER\">V</code><code class=\"ANY\">></code> <code class=\"TYPE_IDENTIFIER\">Map</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">K</code><code class=\"ANY\">,</code><code class=\"TYPE_IDENTIFIER\">V</code><code class=\"ANY\">></code> <code class=\"FUNCTION_DECLARATOR\">add</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Map</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">K</code><code class=\"ANY\">,</code><code class=\"TYPE_IDENTIFIER\">V</code><code class=\"ANY\">></code> <code class=\"VARIABLE_DECLARATOR\">srcMap</code><code class=\"ANY\">,</code><code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">K</code><code class=\"ANY\">></code> <code class=\"VARIABLE_DECLARATOR\">ks</code><code class=\"ANY\">,</code><code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">V</code><code class=\"ANY\">></code> <code class=\"VARIABLE_DECLARATOR\">vs</code><code class=\"ANY\">)</code><code class=\"ANY\">{</code>\n\t\t<code class=\"TYPE_IDENTIFIER\">HashMap</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">K</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">V</code><code class=\"ANY\">></code> <code class=\"VARIABLE_DECLARATOR\">destMap</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">new</code> <code class=\"TYPE_IDENTIFIER\">HashMap</code><code class=\"ANY\"><</code><code class=\"ANY\">></code><code class=\"ANY\">(</code><code class=\"ANY\">srcMap</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t<code class=\"KEYWORD\">if</code><code class=\"ANY\">(</code><code class=\"ANY\">ks</code> <code class=\"ANY\">!=</code> <code class=\"LITERAL\">null</code> <code class=\"ANY\">&&</code> <code class=\"ANY\">vs</code> <code class=\"ANY\">!=</code> <code class=\"LITERAL\">null</code> <code class=\"ANY\">&&</code> <code class=\"ANY\">ks</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">size</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"ANY\">vs</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">size</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">int</code> <code class=\"VARIABLE_DECLARATOR\">size</code> <code class=\"ANY\">=</code> <code class=\"ANY\">ks</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">size</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">for</code> <code class=\"ANY\">(</code><code class=\"KEYWORD\">int</code> <code class=\"VARIABLE_DECLARATOR\">i</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">0</code><code class=\"ANY\">;</code> <code class=\"ANY\">i</code> <code class=\"ANY\"><</code> <code class=\"ANY\">size</code><code class=\"ANY\">;</code> <code class=\"ANY\">i</code><code class=\"ANY\">++</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"ANY\">destMap</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">put</code><code class=\"ANY\">(</code><code class=\"ANY\">ks</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get</code><code class=\"ANY\">(</code><code class=\"LITERAL\">0</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"ANY\">vs</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get</code><code class=\"ANY\">(</code><code class=\"LITERAL\">0</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t<code class=\"ANY\">}</code>\n\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">destMap</code><code class=\"ANY\">;</code>\n\t<code class=\"ANY\">}</code>\n<code class=\"ANY\">}</code>\n\n</pre>\n</html>"},{"_id":{"language":"JAVA","lexingTokens},"sourceCode":"package org.spiderflow.core.executor.shape;\n\nimport org.apache.commons.lang3.StringUtils;\nimport org.apache.commons.lang3.exception.ExceptionUtils;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.spiderflow.Grammerable;\nimport org.spiderflow.context.SpiderContext;\nimport org.spiderflow.core.utils.DataSourceUtils;\nimport org.spiderflow.core.utils.ExpressionUtils;\nimport org.spiderflow.core.utils.ExtractUtils;\nimport org.spiderflow.executor.ShapeExecutor;\nimport org.spiderflow.model.Grammer;\nimport org.spiderflow.model.SpiderNode;\nimport org.springframework.jdbc.core.ArgumentPreparedStatementSetter;\nimport org.springframework.jdbc.core.JdbcTemplate;\nimport org.springframework.jdbc.support.GeneratedKeyHolder;\nimport org.springframework.jdbc.support.KeyHolder;\nimport org.springframework.stereotype.Component;\n\nimport java.lang.reflect.Array;\nimport java.sql.PreparedStatement;\nimport java.sql.Statement;\nimport java.util.*;\n\n/**\n * SQL执行器\n *\n * @author jmxd\n */\n@Component\npublic class ExecuteSQLExecutor implements ShapeExecutor, Grammerable {\n\n\tpublic static final String DATASOURCE_ID = \"datasourceId\";\n\n\tpublic static final String SQL = \"sql\";\n\n\tpublic static final String STATEMENT_TYPE = \"statementType\";\n\n\tpublic static final String STATEMENT_SELECT = \"select\";\n\n\tpublic static final String STATEMENT_SELECT_ONE = \"selectOne\";\n\n\tpublic static final String STATEMENT_SELECT_INT = \"selectInt\";\n\n\tpublic static final String STATEMENT_INSERT = \"insert\";\n\n\tpublic static final String STATEMENT_UPDATE = \"update\";\n\n\tpublic static final String STATEMENT_DELETE = \"delete\";\n\tpublic static final String SELECT_RESULT_STREAM = \"isStream\";\n\tpublic static final String STATEMENT_INSERT_PK = \"insertofPk\";\n\t\n\tprivate static final Logger logger = LoggerFactory.getLogger(ExecuteSQLExecutor.class);\n\n\t@Override\n\tpublic void execute(SpiderNode node, SpiderContext context, Map<String, Object> variables) {\n\t\tString dsId = node.getStringJsonValue(DATASOURCE_ID);\n\t\tString sql = node.getStringJsonValue(SQL);\n\t\tif (StringUtils.isBlank(dsId)) {\n\t\t\tlogger.warn(\"数据源ID为空！\");\n\t\t} else if (StringUtils.isBlank(sql)) {\n\t\t\tlogger.warn(\"sql为空！\");\n\t\t} else {\n\t\t\tJdbcTemplate template = new JdbcTemplate(DataSourceUtils.getDataSource(dsId));\n\t\t\t//把变量替换成占位符\n\t\t\tList<String> parameters = ExtractUtils.getMatchers(sql, \"#(.*?)#\", true);\n\t\t\tsql = sql.replaceAll(\"#(.*?)#\", \"?\");\n\t\t\ttry {\n\t\t\t\tObject sqlObject = ExpressionUtils.execute(sql, variables);\n\t\t\t\tif(sqlObject == null){\n\t\t\t\t\tlogger.warn(\"获取的sql为空！\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tsql = sqlObject.toString();\n\t\t\t\tcontext.pause(node.getNodeId(),\"common\",SQL,sql);\n\t\t\t} catch (Exception e) {\n\t\t\t\tlogger.error(\"获取sql出错,异常信息:{}\", e.getMessage(), e);\n\t\t\t\tExceptionUtils.wrapAndThrow(e);\n\t\t\t}\n\t\t\tint size = parameters.size();\n\t\t\tObject[] params = new Object[size];\n\t\t\tboolean hasList = false;\n\t\t\tint parameterSize = 0;\n\t\t\t//当参数中存在List或者数组时，认为是批量操作\n\t\t\tfor (int i = 0; i < size; i++) {\n\t\t\t\tObject parameter = ExpressionUtils.execute(parameters.get(i), variables);\n\t\t\t\tif (parameter != null) {\n\t\t\t\t\tif (parameter instanceof List) {\n\t\t\t\t\t\thasList = true;\n\t\t\t\t\t\tparameterSize = Math.max(parameterSize, ((List<?>) parameter).size());\n\t\t\t\t\t} else if (parameter.getClass().isArray()) {\n\t\t\t\t\t\thasList = true;\n\t\t\t\t\t\tparameterSize = Math.max(parameterSize, Array.getLength(parameter));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tparams[i] = parameter;\n\t\t\t}\n\t\t\tString statementType = node.getStringJsonValue(STATEMENT_TYPE);\n\t\t\tlogger.debug(\"执行sql：{}\", sql);\n\t\t\tif (STATEMENT_SELECT.equals(statementType)) {\n\t\t\t\tboolean isStream = \"1\".equals(node.getStringJsonValue(SELECT_RESULT_STREAM));\n\t\t\t\ttry {\n\t\t\t\t\tif (isStream) {\n\t\t\t\t\t\tvariables.put(\"rs\", template.queryForRowSet(sql, params));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvariables.put(\"rs\", template.queryForList(sql, params));\n\t\t\t\t\t}\n\t\t\t\t} catch (Exception e) {\n\t\t\t\t\tvariables.put(\"rs\", null);\n\t\t\t\t\tlogger.error(\"执行sql出错,异常信息:{}\", e.getMessage(), e);\n\t\t\t\t\tExceptionUtils.wrapAndThrow(e);\n\t\t\t\t}\n\t\t\t} else if (STATEMENT_SELECT_ONE.equals(statementType)) {\n\t\t\t\tMap<String, Object> rs;\n\t\t\t\ttry {\n\t\t\t\t\trs = template.queryForMap(sql, params);\n\t\t\t\t\tvariables.put(\"rs\", rs);\n\t\t\t\t} catch (Exception e) {\n\t\t\t\t\tvariables.put(\"rs\", null);\n\t\t\t\t\tlogger.error(\"执行sql出错,异常信息:{}\", e.getMessage(), e);\n\t\t\t\t\tExceptionUtils.wrapAndThrow(e);\n\t\t\t\t}\n\t\t\t} else if (STATEMENT_SELECT_INT.equals(statementType)) {\n\t\t\t\tInteger rs;\n\t\t\t\ttry {\n\t\t\t\t\trs = template.queryForObject(sql, params, Integer.class);\n\t\t\t\t\trs = rs == null ? 0 : rs;\n\t\t\t\t\tvariables.put(\"rs\", rs);\n\t\t\t\t} catch (Exception e) {\n\t\t\t\t\tvariables.put(\"rs\", 0);\n\t\t\t\t\tlogger.error(\"执行sql出错,异常信息:{}\", e.getMessage(), e);\n\t\t\t\t\tExceptionUtils.wrapAndThrow(e);\n\t\t\t\t}\n\t\t\t} else if (STATEMENT_UPDATE.equals(statementType) || STATEMENT_INSERT.equals(statementType) || STATEMENT_DELETE.equals(statementType)) {\n\t\t\t\ttry {\n\t\t\t\t\tint updateCount = 0;\n\t\t\t\t\tif (hasList) {\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t  批量操作时，将参数Object[]转化为List<Object[]>\n\t\t\t\t\t\t  当参数不为数组或List时，自动转为Object[]\n\t\t\t\t\t\t  当数组或List长度不足时，自动取最后一项补齐\n\t\t\t\t\t\t */\n\t\t\t\t\t\tint[] rs = template.batchUpdate(sql, convertParameters(params, parameterSize));\n\t\t\t\t\t\tif (rs.length > 0) {\n\t\t\t\t\t\t\tupdateCount = Arrays.stream(rs).sum();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tupdateCount = template.update(sql, params);\n\t\t\t\t\t}\n\t\t\t\t\tvariables.put(\"rs\", updateCount);\n\t\t\t\t} catch (Exception e) {\n\t\t\t\t\tlogger.error(\"执行sql出错,异常信息:{}\", e.getMessage(), e);\n\t\t\t\t\tvariables.put(\"rs\", -1);\n\t\t\t\t\tExceptionUtils.wrapAndThrow(e);\n\t\t\t\t}\n\t\t\t} else if(STATEMENT_INSERT_PK.equals(statementType)) {\n\t\t\t\ttry {\n\t\t\t\t\tKeyHolder keyHolder = new GeneratedKeyHolder();\n\t\t\t\t\tfinal String insertSQL = sql;\n\t\t\t\t\ttemplate.update(con -> {\n\t\t\t\t\t\tPreparedStatement ps = con.prepareStatement(insertSQL, Statement.RETURN_GENERATED_KEYS);\n\t\t\t\t\t\tnew ArgumentPreparedStatementSetter(params).setValues(ps);\n\t\t\t\t\t\treturn ps;\n\t\t\t\t\t}, keyHolder);\n\t\t\t\t\tvariables.put(\"rs\", keyHolder.getKey().intValue());\n\t\t\t\t} catch (Exception e) {\n\t\t\t\t\tlogger.error(\"执行sql出错,异常信息:{}\", e.getMessage(), e);\n\t\t\t\t\tvariables.put(\"rs\", -1);\n\t\t\t\t\tExceptionUtils.wrapAndThrow(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprivate List<Object[]> convertParameters(Object[] params, int length) {\n\t\tList<Object[]> result = new ArrayList<>(length);\n\t\tint size = params.length;\n\t\tfor (int i = 0; i < length; i++) {\n\t\t\tObject[] parameters = new Object[size];\n\t\t\tfor (int j = 0; j < size; j++) {\n\t\t\t\tparameters[j] = getValue(params[j], i);\n\t\t\t}\n\t\t\tresult.add(parameters);\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate Object getValue(Object object, int index) {\n\t\tif (object == null) {\n\t\t\treturn null;\n\t\t} else if (object instanceof List) {\n\t\t\tList<?> list = (List<?>) object;\n\t\t\tint size = list.size();\n\t\t\tif (size > 0) {\n\t\t\t\treturn list.get(Math.min(list.size() - 1, index));\n\t\t\t}\n\t\t} else if (object.getClass().isArray()) {\n\t\t\tint size = Array.getLength(object);\n\t\t\tif (size > 0) {\n\t\t\t\tArray.get(object, Math.min(-1, index));\n\t\t\t}\n\t\t} else {\n\t\t\treturn object;\n\t\t}\n\t\treturn null;\n\t}\n\n\t@Override\n\tpublic String supportShape() {\n\t\treturn \"executeSql\";\n\t}\n\n\t@Override\n\tpublic List<Grammer> grammers() {\n\t\tGrammer grammer = new Grammer();\n\t\tgrammer.setComment(\"执行SQL结果\");\n\t\tgrammer.setFunction(\"rs\");\n\t\tgrammer.setReturns(Arrays.asList(\"List<Map<String,Object>>\", \"int\"));\n\t\treturn Collections.singletonList(grammer);\n\t}\n\n\n}\n","highlightingTokens":[1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,4,11,11,1,1,5,1,8,0,8,0,1,1,1,8,7,0,3,0,1,1,1,8,7,0,3,0,1,1,1,8,7,0,3,0,1,1,1,8,7,0,3,0,1,1,1,8,7,0,3,0,1,1,1,8,7,0,3,0,1,1,1,8,7,0,3,0,1,1,1,8,7,0,3,0,1,1,1,8,7,0,3,0,1,1,1,8,7,0,3,0,1,1,1,8,7,0,3,0,1,1,1,8,7,0,0,0,9,0,0,0,1,0,0,11,11,1,1,6,0,8,7,0,8,7,0,8,0,8,0,8,0,7,0,0,8,7,0,0,0,9,0,0,0,0,8,7,0,0,0,9,0,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,9,0,3,0,0,0,1,1,0,0,0,9,0,0,0,0,0,0,0,9,0,3,0,0,0,1,0,8,7,0,1,8,0,0,0,9,0,0,0,0,0,4,8,0,8,0,7,0,0,0,9,0,0,0,3,0,2,0,0,0,0,0,0,9,0,3,0,3,0,0,1,0,8,7,0,0,0,9,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,9,0,3,0,0,1,0,0,0,0,0,0,9,0,0,0,0,0,9,0,0,0,9,0,0,0,3,0,0,0,0,0,0,0,1,0,0,7,0,0,0,0,9,0,3,0,0,0,9,0,0,0,0,0,0,0,0,9,0,0,0,0,0,1,7,0,0,0,9,0,0,0,8,0,0,7,0,1,8,0,0,0,0,1,7,0,2,0,1,7,0,2,0,4,1,0,1,7,0,2,0,0,0,0,0,0,0,0,0,8,7,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,1,0,0,0,2,0,0,1,0,0,1,8,0,0,0,0,2,0,0,0,0,0,9,0,0,0,0,0,8,0,0,0,0,0,0,0,9,0,0,0,0,0,1,1,0,0,0,9,0,0,0,9,0,0,0,0,0,0,2,0,0,0,0,0,9,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,7,0,0,0,9,0,0,0,0,0,0,9,0,3,0,0,0,0,1,0,0,0,9,0,0,0,0,0,1,7,0,3,0,9,0,0,0,9,0,0,0,0,0,1,0,1,0,0,0,0,0,0,9,0,3,0,0,0,9,0,0,0,0,0,0,0,0,1,0,0,0,9,0,3,0,0,0,9,0,0,0,0,0,0,0,0,0,1,0,0,7,0,0,0,0,9,0,3,0,2,0,0,0,0,9,0,3,0,0,0,9,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,1,1,0,0,0,9,0,0,0,0,0,8,0,8,0,8,0,7,0,1,0,0,0,0,0,9,0,0,0,0,0,0,0,0,9,0,3,0,0,0,0,0,1,0,0,7,0,0,0,0,9,0,3,0,2,0,0,0,0,9,0,3,0,0,0,9,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,1,1,0,0,0,9,0,0,0,0,0,8,7,0,1,0,0,0,0,0,9,0,0,0,0,0,0,0,1,0,0,0,0,0,0,2,0,2,0,0,0,0,0,9,0,3,0,0,0,0,0,1,0,0,7,0,0,0,0,9,0,3,0,2,0,0,0,0,9,0,3,0,0,0,9,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,1,1,0,0,0,9,0,0,0,0,0,0,9,0,0,0,0,0,0,9,0,0,0,0,0,1,0,1,7,0,2,0,1,0,0,0,0,4,1,0,0,7,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,1,0,0,0,10,0,2,0,0,0,0,0,0,9,0,0,0,0,9,0,0,0,0,0,1,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,9,0,3,0,0,0,0,0,1,0,0,7,0,0,0,0,9,0,3,0,0,0,9,0,0,0,0,0,0,0,0,9,0,3,0,0,2,0,0,0,0,9,0,0,0,0,0,0,1,1,0,0,0,9,0,0,0,0,0,1,0,8,7,0,1,8,0,0,0,1,8,7,0,0,0,0,0,9,0,0,0,0,8,7,0,0,0,9,0,0,0,0,0,10,0,0,1,8,0,0,0,0,9,0,0,0,0,1,0,0,0,0,0,0,0,0,0,9,0,3,0,0,0,9,0,0,0,9,0,0,0,0,0,1,0,0,7,0,0,0,0,9,0,3,0,0,0,9,0,0,0,0,0,0,0,0,9,0,3,0,0,2,0,0,0,0,9,0,0,0,0,0,0,0,0,1,8,0,8,0,0,0,6,0,8,0,0,7,0,1,7,0,0,8,0,8,0,0,0,7,0,1,8,0,0,0,0,0,0,1,7,0,0,0,10,0,1,0,1,7,0,2,0,0,0,0,0,0,0,0,0,8,0,0,7,0,1,8,0,0,0,0,1,0,1,7,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,1,0,0,0,1,8,6,0,8,7,0,1,7,0,0,1,0,0,0,2,0,0,1,2,0,0,1,1,0,0,1,8,0,0,8,0,0,0,7,0,0,8,0,0,0,0,0,0,1,7,0,0,0,9,0,0,0,1,0,0,0,2,0,0,1,0,0,9,0,0,0,9,0,0,0,9,0,0,0,2,0,0,0,0,0,0,0,1,1,0,0,0,9,0,0,0,9,0,0,0,0,1,7,0,0,0,9,0,0,0,0,1,0,0,0,2,0,0,0,0,9,0,0,0,0,0,9,0,0,2,0,0,0,0,0,0,0,1,0,1,0,0,0,1,2,0,0,11,11,1,8,6,0,0,0,1,3,0,0,11,11,1,8,0,8,0,6,0,0,0,8,7,0,1,8,0,0,0,0,0,9,0,3,0,0,0,0,9,0,3,0,0,0,0,9,0,0,0,9,0,3,0,3,0,0,0,1,0,0,9,0,0,0,0,0,0,0],"highlightingCode":"<!DOCTYPE html>\n<html>\n<style>\n.ANY {\n    color: black;\n    font-weight: normal;\n    font-style: normal;\n}\n.KEYWORD {\n    color: blue;\n    font-weight: bold;\n    font-style: normal;\n}\n.LITERAL {\n    color: lightskyblue;\n    font-weight: bold;\n    font-style: normal;\n}\n.CHAR_STRING_LITERAL {\n    color: darkgoldenrod;\n    font-weight: normal;\n    font-style: normal;\n}\n.COMMENT {\n    color: grey;\n    font-weight: normal;\n    font-style: italic;\n}\n.CLASS_DECLARATOR {\n    color: crimson;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_DECLARATOR {\n    color: fuchsia;\n    font-weight: bold;\n    font-style: normal;\n}\n.VARIABLE_DECLARATOR {\n    color: purple;\n    font-weight: bold;\n    font-style: normal;\n}\n.TYPE_IDENTIFIER {\n    color: darkgreen;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_IDENTIFIER {\n    color: dodgerblue;\n    font-weight: normal;\n    font-style: normal;\n}\n.FIELD_IDENTIFIER {\n    color: coral;\n    font-weight: normal;\n    font-style: normal;\n}\n.ANNOTATION_DECLARATOR {\n    color: lightslategray;\n    font-weight: lighter;\n    font-style: italic;\n}\n</style>\n<pre>\n<code class=\"KEYWORD\">package</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">spiderflow</code><code class=\"ANY\">.</code><code class=\"ANY\">core</code><code class=\"ANY\">.</code><code class=\"ANY\">executor</code><code class=\"ANY\">.</code><code class=\"ANY\">shape</code><code class=\"ANY\">;</code>\n\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">apache</code><code class=\"ANY\">.</code><code class=\"ANY\">commons</code><code class=\"ANY\">.</code><code class=\"ANY\">lang3</code><code class=\"ANY\">.</code><code class=\"ANY\">StringUtils</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">apache</code><code class=\"ANY\">.</code><code class=\"ANY\">commons</code><code class=\"ANY\">.</code><code class=\"ANY\">lang3</code><code class=\"ANY\">.</code><code class=\"ANY\">exception</code><code class=\"ANY\">.</code><code class=\"ANY\">ExceptionUtils</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">slf4j</code><code class=\"ANY\">.</code><code class=\"ANY\">Logger</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">slf4j</code><code class=\"ANY\">.</code><code class=\"ANY\">LoggerFactory</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">spiderflow</code><code class=\"ANY\">.</code><code class=\"ANY\">Grammerable</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">spiderflow</code><code class=\"ANY\">.</code><code class=\"ANY\">context</code><code class=\"ANY\">.</code><code class=\"ANY\">SpiderContext</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">spiderflow</code><code class=\"ANY\">.</code><code class=\"ANY\">core</code><code class=\"ANY\">.</code><code class=\"ANY\">utils</code><code class=\"ANY\">.</code><code class=\"ANY\">DataSourceUtils</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">spiderflow</code><code class=\"ANY\">.</code><code class=\"ANY\">core</code><code class=\"ANY\">.</code><code class=\"ANY\">utils</code><code class=\"ANY\">.</code><code class=\"ANY\">ExpressionUtils</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">spiderflow</code><code class=\"ANY\">.</code><code class=\"ANY\">core</code><code class=\"ANY\">.</code><code class=\"ANY\">utils</code><code class=\"ANY\">.</code><code class=\"ANY\">ExtractUtils</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">spiderflow</code><code class=\"ANY\">.</code><code class=\"ANY\">executor</code><code class=\"ANY\">.</code><code class=\"ANY\">ShapeExecutor</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">spiderflow</code><code class=\"ANY\">.</code><code class=\"ANY\">model</code><code class=\"ANY\">.</code><code class=\"ANY\">Grammer</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">spiderflow</code><code class=\"ANY\">.</code><code class=\"ANY\">model</code><code class=\"ANY\">.</code><code class=\"ANY\">SpiderNode</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">springframework</code><code class=\"ANY\">.</code><code class=\"ANY\">jdbc</code><code class=\"ANY\">.</code><code class=\"ANY\">core</code><code class=\"ANY\">.</code><code class=\"ANY\">ArgumentPreparedStatementSetter</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">springframework</code><code class=\"ANY\">.</code><code class=\"ANY\">jdbc</code><code class=\"ANY\">.</code><code class=\"ANY\">core</code><code class=\"ANY\">.</code><code class=\"ANY\">JdbcTemplate</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">springframework</code><code class=\"ANY\">.</code><code class=\"ANY\">jdbc</code><code class=\"ANY\">.</code><code class=\"ANY\">support</code><code class=\"ANY\">.</code><code class=\"ANY\">GeneratedKeyHolder</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">springframework</code><code class=\"ANY\">.</code><code class=\"ANY\">jdbc</code><code class=\"ANY\">.</code><code class=\"ANY\">support</code><code class=\"ANY\">.</code><code class=\"ANY\">KeyHolder</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">springframework</code><code class=\"ANY\">.</code><code class=\"ANY\">stereotype</code><code class=\"ANY\">.</code><code class=\"ANY\">Component</code><code class=\"ANY\">;</code>\n\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">java</code><code class=\"ANY\">.</code><code class=\"ANY\">lang</code><code class=\"ANY\">.</code><code class=\"ANY\">reflect</code><code class=\"ANY\">.</code><code class=\"ANY\">Array</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">java</code><code class=\"ANY\">.</code><code class=\"ANY\">sql</code><code class=\"ANY\">.</code><code class=\"ANY\">PreparedStatement</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">java</code><code class=\"ANY\">.</code><code class=\"ANY\">sql</code><code class=\"ANY\">.</code><code class=\"ANY\">Statement</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">java</code><code class=\"ANY\">.</code><code class=\"ANY\">util</code><code class=\"ANY\">.</code><code class=\"ANY\">*</code><code class=\"ANY\">;</code>\n\n<code class=\"COMMENT\">/**\n * SQL执行器\n *\n * @author jmxd\n */</code>\n<code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">Component</code>\n<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">ExecuteSQLExecutor</code> <code class=\"KEYWORD\">implements</code> <code class=\"TYPE_IDENTIFIER\">ShapeExecutor</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">Grammerable</code> <code class=\"ANY\">{</code>\n\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">DATASOURCE_ID</code> <code class=\"ANY\">=</code> <code class=\"CHAR_STRING_LITERAL\">\"datasourceId\"</code><code class=\"ANY\">;</code>\n\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">SQL</code> <code class=\"ANY\">=</code> <code class=\"CHAR_STRING_LITERAL\">\"sql\"</code><code class=\"ANY\">;</code>\n\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">STATEMENT_TYPE</code> <code class=\"ANY\">=</code> <code class=\"CHAR_STRING_LITERAL\">\"statementType\"</code><code class=\"ANY\">;</code>\n\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">STATEMENT_SELECT</code> <code class=\"ANY\">=</code> <code class=\"CHAR_STRING_LITERAL\">\"select\"</code><code class=\"ANY\">;</code>\n\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">STATEMENT_SELECT_ONE</code> <code class=\"ANY\">=</code> <code class=\"CHAR_STRING_LITERAL\">\"selectOne\"</code><code class=\"ANY\">;</code>\n\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">STATEMENT_SELECT_INT</code> <code class=\"ANY\">=</code> <code class=\"CHAR_STRING_LITERAL\">\"selectInt\"</code><code class=\"ANY\">;</code>\n\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">STATEMENT_INSERT</code> <code class=\"ANY\">=</code> <code class=\"CHAR_STRING_LITERAL\">\"insert\"</code><code class=\"ANY\">;</code>\n\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">STATEMENT_UPDATE</code> <code class=\"ANY\">=</code> <code class=\"CHAR_STRING_LITERAL\">\"update\"</code><code class=\"ANY\">;</code>\n\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">STATEMENT_DELETE</code> <code class=\"ANY\">=</code> <code class=\"CHAR_STRING_LITERAL\">\"delete\"</code><code class=\"ANY\">;</code>\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">SELECT_RESULT_STREAM</code> <code class=\"ANY\">=</code> <code class=\"CHAR_STRING_LITERAL\">\"isStream\"</code><code class=\"ANY\">;</code>\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">STATEMENT_INSERT_PK</code> <code class=\"ANY\">=</code> <code class=\"CHAR_STRING_LITERAL\">\"insertofPk\"</code><code class=\"ANY\">;</code>\n\t\n\t<code class=\"KEYWORD\">private</code> <code class=\"KEYWORD\">static</code> <code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">Logger</code> <code class=\"VARIABLE_DECLARATOR\">logger</code> <code class=\"ANY\">=</code> <code class=\"ANY\">LoggerFactory</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getLogger</code><code class=\"ANY\">(</code><code class=\"ANY\">ExecuteSQLExecutor</code><code class=\"ANY\">.</code><code class=\"KEYWORD\">class</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\n\t<code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">Override</code>\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">void</code> <code class=\"FUNCTION_DECLARATOR\">execute</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">SpiderNode</code> <code class=\"VARIABLE_DECLARATOR\">node</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">SpiderContext</code> <code class=\"VARIABLE_DECLARATOR\">context</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">Map</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">String</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">Object</code><code class=\"ANY\">></code> <code class=\"VARIABLE_DECLARATOR\">variables</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t<code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">dsId</code> <code class=\"ANY\">=</code> <code class=\"ANY\">node</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getStringJsonValue</code><code class=\"ANY\">(</code><code class=\"ANY\">DATASOURCE_ID</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t<code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">sql</code> <code class=\"ANY\">=</code> <code class=\"ANY\">node</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getStringJsonValue</code><code class=\"ANY\">(</code><code class=\"ANY\">SQL</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">StringUtils</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isBlank</code><code class=\"ANY\">(</code><code class=\"ANY\">dsId</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"ANY\">logger</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">warn</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"数据源ID为空！\"</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">StringUtils</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isBlank</code><code class=\"ANY\">(</code><code class=\"ANY\">sql</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"ANY\">logger</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">warn</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"sql为空！\"</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"TYPE_IDENTIFIER\">JdbcTemplate</code> <code class=\"VARIABLE_DECLARATOR\">template</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">new</code> <code class=\"TYPE_IDENTIFIER\">JdbcTemplate</code><code class=\"ANY\">(</code><code class=\"ANY\">DataSourceUtils</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getDataSource</code><code class=\"ANY\">(</code><code class=\"ANY\">dsId</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"COMMENT\">//把变量替换成占位符</code>\n\t\t\t<code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">String</code><code class=\"ANY\">></code> <code class=\"VARIABLE_DECLARATOR\">parameters</code> <code class=\"ANY\">=</code> <code class=\"ANY\">ExtractUtils</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getMatchers</code><code class=\"ANY\">(</code><code class=\"ANY\">sql</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"#(.*?)#\"</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">true</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">sql</code> <code class=\"ANY\">=</code> <code class=\"ANY\">sql</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">replaceAll</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"#(.*?)#\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"?\"</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">try</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">sqlObject</code> <code class=\"ANY\">=</code> <code class=\"ANY\">ExpressionUtils</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">execute</code><code class=\"ANY\">(</code><code class=\"ANY\">sql</code><code class=\"ANY\">,</code> <code class=\"ANY\">variables</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"KEYWORD\">if</code><code class=\"ANY\">(</code><code class=\"ANY\">sqlObject</code> <code class=\"ANY\">==</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">)</code><code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"ANY\">logger</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">warn</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"获取的sql为空！\"</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"KEYWORD\">return</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t<code class=\"ANY\">sql</code> <code class=\"ANY\">=</code> <code class=\"ANY\">sqlObject</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">toString</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">context</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">pause</code><code class=\"ANY\">(</code><code class=\"ANY\">node</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getNodeId</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"CHAR_STRING_LITERAL\">\"common\"</code><code class=\"ANY\">,</code><code class=\"ANY\">SQL</code><code class=\"ANY\">,</code><code class=\"ANY\">sql</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">catch</code> <code class=\"ANY\">(</code><code class=\"ANY\">Exception</code> <code class=\"VARIABLE_DECLARATOR\">e</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"ANY\">logger</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"获取sql出错,异常信息:{}\"</code><code class=\"ANY\">,</code> <code class=\"ANY\">e</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getMessage</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"ANY\">e</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">ExceptionUtils</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">wrapAndThrow</code><code class=\"ANY\">(</code><code class=\"ANY\">e</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"KEYWORD\">int</code> <code class=\"VARIABLE_DECLARATOR\">size</code> <code class=\"ANY\">=</code> <code class=\"ANY\">parameters</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">size</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"TYPE_IDENTIFIER\">Object</code><code class=\"ANY\">[</code><code class=\"ANY\">]</code> <code class=\"VARIABLE_DECLARATOR\">params</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">new</code> <code class=\"TYPE_IDENTIFIER\">Object</code><code class=\"ANY\">[</code><code class=\"ANY\">size</code><code class=\"ANY\">]</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">boolean</code> <code class=\"VARIABLE_DECLARATOR\">hasList</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">false</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">int</code> <code class=\"VARIABLE_DECLARATOR\">parameterSize</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">0</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"COMMENT\">//当参数中存在List或者数组时，认为是批量操作</code>\n\t\t\t<code class=\"KEYWORD\">for</code> <code class=\"ANY\">(</code><code class=\"KEYWORD\">int</code> <code class=\"VARIABLE_DECLARATOR\">i</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">0</code><code class=\"ANY\">;</code> <code class=\"ANY\">i</code> <code class=\"ANY\"><</code> <code class=\"ANY\">size</code><code class=\"ANY\">;</code> <code class=\"ANY\">i</code><code class=\"ANY\">++</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">parameter</code> <code class=\"ANY\">=</code> <code class=\"ANY\">ExpressionUtils</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">execute</code><code class=\"ANY\">(</code><code class=\"ANY\">parameters</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get</code><code class=\"ANY\">(</code><code class=\"ANY\">i</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"ANY\">variables</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">parameter</code> <code class=\"ANY\">!=</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">parameter</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t\t<code class=\"ANY\">hasList</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">true</code><code class=\"ANY\">;</code>\n\t\t\t\t\t\t<code class=\"ANY\">parameterSize</code> <code class=\"ANY\">=</code> <code class=\"ANY\">Math</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">max</code><code class=\"ANY\">(</code><code class=\"ANY\">parameterSize</code><code class=\"ANY\">,</code> <code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"ANY\">?</code><code class=\"ANY\">></code><code class=\"ANY\">)</code> <code class=\"ANY\">parameter</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">size</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">parameter</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getClass</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isArray</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t\t<code class=\"ANY\">hasList</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">true</code><code class=\"ANY\">;</code>\n\t\t\t\t\t\t<code class=\"ANY\">parameterSize</code> <code class=\"ANY\">=</code> <code class=\"ANY\">Math</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">max</code><code class=\"ANY\">(</code><code class=\"ANY\">parameterSize</code><code class=\"ANY\">,</code> <code class=\"ANY\">Array</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getLength</code><code class=\"ANY\">(</code><code class=\"ANY\">parameter</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t<code class=\"ANY\">params</code><code class=\"ANY\">[</code><code class=\"ANY\">i</code><code class=\"ANY\">]</code> <code class=\"ANY\">=</code> <code class=\"ANY\">parameter</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">statementType</code> <code class=\"ANY\">=</code> <code class=\"ANY\">node</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getStringJsonValue</code><code class=\"ANY\">(</code><code class=\"ANY\">STATEMENT_TYPE</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">logger</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">debug</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"执行sql：{}\"</code><code class=\"ANY\">,</code> <code class=\"ANY\">sql</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">STATEMENT_SELECT</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">equals</code><code class=\"ANY\">(</code><code class=\"ANY\">statementType</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">boolean</code> <code class=\"VARIABLE_DECLARATOR\">isStream</code> <code class=\"ANY\">=</code> <code class=\"CHAR_STRING_LITERAL\">\"1\"</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">equals</code><code class=\"ANY\">(</code><code class=\"ANY\">node</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getStringJsonValue</code><code class=\"ANY\">(</code><code class=\"ANY\">SELECT_RESULT_STREAM</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"KEYWORD\">try</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">isStream</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t\t<code class=\"ANY\">variables</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">put</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"rs\"</code><code class=\"ANY\">,</code> <code class=\"ANY\">template</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">queryForRowSet</code><code class=\"ANY\">(</code><code class=\"ANY\">sql</code><code class=\"ANY\">,</code> <code class=\"ANY\">params</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t\t<code class=\"ANY\">variables</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">put</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"rs\"</code><code class=\"ANY\">,</code> <code class=\"ANY\">template</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">queryForList</code><code class=\"ANY\">(</code><code class=\"ANY\">sql</code><code class=\"ANY\">,</code> <code class=\"ANY\">params</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">catch</code> <code class=\"ANY\">(</code><code class=\"ANY\">Exception</code> <code class=\"VARIABLE_DECLARATOR\">e</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"ANY\">variables</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">put</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"rs\"</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"ANY\">logger</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"执行sql出错,异常信息:{}\"</code><code class=\"ANY\">,</code> <code class=\"ANY\">e</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getMessage</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"ANY\">e</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"ANY\">ExceptionUtils</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">wrapAndThrow</code><code class=\"ANY\">(</code><code class=\"ANY\">e</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">STATEMENT_SELECT_ONE</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">equals</code><code class=\"ANY\">(</code><code class=\"ANY\">statementType</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"TYPE_IDENTIFIER\">Map</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">String</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">Object</code><code class=\"ANY\">></code> <code class=\"VARIABLE_DECLARATOR\">rs</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"KEYWORD\">try</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"ANY\">rs</code> <code class=\"ANY\">=</code> <code class=\"ANY\">template</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">queryForMap</code><code class=\"ANY\">(</code><code class=\"ANY\">sql</code><code class=\"ANY\">,</code> <code class=\"ANY\">params</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"ANY\">variables</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">put</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"rs\"</code><code class=\"ANY\">,</code> <code class=\"ANY\">rs</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">catch</code> <code class=\"ANY\">(</code><code class=\"ANY\">Exception</code> <code class=\"VARIABLE_DECLARATOR\">e</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"ANY\">variables</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">put</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"rs\"</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"ANY\">logger</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"执行sql出错,异常信息:{}\"</code><code class=\"ANY\">,</code> <code class=\"ANY\">e</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getMessage</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"ANY\">e</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"ANY\">ExceptionUtils</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">wrapAndThrow</code><code class=\"ANY\">(</code><code class=\"ANY\">e</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">STATEMENT_SELECT_INT</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">equals</code><code class=\"ANY\">(</code><code class=\"ANY\">statementType</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"TYPE_IDENTIFIER\">Integer</code> <code class=\"VARIABLE_DECLARATOR\">rs</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"KEYWORD\">try</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"ANY\">rs</code> <code class=\"ANY\">=</code> <code class=\"ANY\">template</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">queryForObject</code><code class=\"ANY\">(</code><code class=\"ANY\">sql</code><code class=\"ANY\">,</code> <code class=\"ANY\">params</code><code class=\"ANY\">,</code> <code class=\"ANY\">Integer</code><code class=\"ANY\">.</code><code class=\"KEYWORD\">class</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"ANY\">rs</code> <code class=\"ANY\">=</code> <code class=\"ANY\">rs</code> <code class=\"ANY\">==</code> <code class=\"LITERAL\">null</code> <code class=\"ANY\">?</code> <code class=\"LITERAL\">0</code> <code class=\"ANY\">:</code> <code class=\"ANY\">rs</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"ANY\">variables</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">put</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"rs\"</code><code class=\"ANY\">,</code> <code class=\"ANY\">rs</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">catch</code> <code class=\"ANY\">(</code><code class=\"ANY\">Exception</code> <code class=\"VARIABLE_DECLARATOR\">e</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"ANY\">variables</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">put</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"rs\"</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">0</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"ANY\">logger</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"执行sql出错,异常信息:{}\"</code><code class=\"ANY\">,</code> <code class=\"ANY\">e</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getMessage</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"ANY\">e</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"ANY\">ExceptionUtils</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">wrapAndThrow</code><code class=\"ANY\">(</code><code class=\"ANY\">e</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">STATEMENT_UPDATE</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">equals</code><code class=\"ANY\">(</code><code class=\"ANY\">statementType</code><code class=\"ANY\">)</code> <code class=\"ANY\">||</code> <code class=\"ANY\">STATEMENT_INSERT</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">equals</code><code class=\"ANY\">(</code><code class=\"ANY\">statementType</code><code class=\"ANY\">)</code> <code class=\"ANY\">||</code> <code class=\"ANY\">STATEMENT_DELETE</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">equals</code><code class=\"ANY\">(</code><code class=\"ANY\">statementType</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">try</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"KEYWORD\">int</code> <code class=\"VARIABLE_DECLARATOR\">updateCount</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">0</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">hasList</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t\t<code class=\"COMMENT\">/*\n\t\t\t\t\t\t  批量操作时，将参数Object[]转化为List<Object[]>\n\t\t\t\t\t\t  当参数不为数组或List时，自动转为Object[]\n\t\t\t\t\t\t  当数组或List长度不足时，自动取最后一项补齐\n\t\t\t\t\t\t */</code>\n\t\t\t\t\t\t<code class=\"KEYWORD\">int</code><code class=\"ANY\">[</code><code class=\"ANY\">]</code> <code class=\"VARIABLE_DECLARATOR\">rs</code> <code class=\"ANY\">=</code> <code class=\"ANY\">template</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">batchUpdate</code><code class=\"ANY\">(</code><code class=\"ANY\">sql</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">convertParameters</code><code class=\"ANY\">(</code><code class=\"ANY\">params</code><code class=\"ANY\">,</code> <code class=\"ANY\">parameterSize</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">rs</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">length</code> <code class=\"ANY\">></code> <code class=\"LITERAL\">0</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t\t\t<code class=\"ANY\">updateCount</code> <code class=\"ANY\">=</code> <code class=\"ANY\">Arrays</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">stream</code><code class=\"ANY\">(</code><code class=\"ANY\">rs</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">sum</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t\t<code class=\"ANY\">updateCount</code> <code class=\"ANY\">=</code> <code class=\"ANY\">template</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">update</code><code class=\"ANY\">(</code><code class=\"ANY\">sql</code><code class=\"ANY\">,</code> <code class=\"ANY\">params</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t\t<code class=\"ANY\">variables</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">put</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"rs\"</code><code class=\"ANY\">,</code> <code class=\"ANY\">updateCount</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">catch</code> <code class=\"ANY\">(</code><code class=\"ANY\">Exception</code> <code class=\"VARIABLE_DECLARATOR\">e</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"ANY\">logger</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"执行sql出错,异常信息:{}\"</code><code class=\"ANY\">,</code> <code class=\"ANY\">e</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getMessage</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"ANY\">e</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"ANY\">variables</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">put</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"rs\"</code><code class=\"ANY\">,</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"ANY\">ExceptionUtils</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">wrapAndThrow</code><code class=\"ANY\">(</code><code class=\"ANY\">e</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code><code class=\"ANY\">(</code><code class=\"ANY\">STATEMENT_INSERT_PK</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">equals</code><code class=\"ANY\">(</code><code class=\"ANY\">statementType</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">try</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"TYPE_IDENTIFIER\">KeyHolder</code> <code class=\"VARIABLE_DECLARATOR\">keyHolder</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">new</code> <code class=\"TYPE_IDENTIFIER\">GeneratedKeyHolder</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">insertSQL</code> <code class=\"ANY\">=</code> <code class=\"ANY\">sql</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"ANY\">template</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">update</code><code class=\"ANY\">(</code><code class=\"ANY\">con</code> <code class=\"ANY\">-></code> <code class=\"ANY\">{</code>\n\t\t\t\t\t\t<code class=\"TYPE_IDENTIFIER\">PreparedStatement</code> <code class=\"VARIABLE_DECLARATOR\">ps</code> <code class=\"ANY\">=</code> <code class=\"ANY\">con</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">prepareStatement</code><code class=\"ANY\">(</code><code class=\"ANY\">insertSQL</code><code class=\"ANY\">,</code> <code class=\"ANY\">Statement</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">RETURN_GENERATED_KEYS</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t\t<code class=\"KEYWORD\">new</code> <code class=\"TYPE_IDENTIFIER\">ArgumentPreparedStatementSetter</code><code class=\"ANY\">(</code><code class=\"ANY\">params</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">setValues</code><code class=\"ANY\">(</code><code class=\"ANY\">ps</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">ps</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"ANY\">}</code><code class=\"ANY\">,</code> <code class=\"ANY\">keyHolder</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"ANY\">variables</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">put</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"rs\"</code><code class=\"ANY\">,</code> <code class=\"ANY\">keyHolder</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getKey</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">intValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">catch</code> <code class=\"ANY\">(</code><code class=\"ANY\">Exception</code> <code class=\"VARIABLE_DECLARATOR\">e</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"ANY\">logger</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"执行sql出错,异常信息:{}\"</code><code class=\"ANY\">,</code> <code class=\"ANY\">e</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getMessage</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"ANY\">e</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"ANY\">variables</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">put</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"rs\"</code><code class=\"ANY\">,</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"ANY\">ExceptionUtils</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">wrapAndThrow</code><code class=\"ANY\">(</code><code class=\"ANY\">e</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t<code class=\"ANY\">}</code>\n\t<code class=\"ANY\">}</code>\n\t<code class=\"KEYWORD\">private</code> <code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Object</code><code class=\"ANY\">[</code><code class=\"ANY\">]</code><code class=\"ANY\">></code> <code class=\"FUNCTION_DECLARATOR\">convertParameters</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Object</code><code class=\"ANY\">[</code><code class=\"ANY\">]</code> <code class=\"VARIABLE_DECLARATOR\">params</code><code class=\"ANY\">,</code> <code class=\"KEYWORD\">int</code> <code class=\"VARIABLE_DECLARATOR\">length</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t<code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Object</code><code class=\"ANY\">[</code><code class=\"ANY\">]</code><code class=\"ANY\">></code> <code class=\"VARIABLE_DECLARATOR\">result</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">new</code> <code class=\"TYPE_IDENTIFIER\">ArrayList</code><code class=\"ANY\"><</code><code class=\"ANY\">></code><code class=\"ANY\">(</code><code class=\"ANY\">length</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t<code class=\"KEYWORD\">int</code> <code class=\"VARIABLE_DECLARATOR\">size</code> <code class=\"ANY\">=</code> <code class=\"ANY\">params</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">length</code><code class=\"ANY\">;</code>\n\t\t<code class=\"KEYWORD\">for</code> <code class=\"ANY\">(</code><code class=\"KEYWORD\">int</code> <code class=\"VARIABLE_DECLARATOR\">i</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">0</code><code class=\"ANY\">;</code> <code class=\"ANY\">i</code> <code class=\"ANY\"><</code> <code class=\"ANY\">length</code><code class=\"ANY\">;</code> <code class=\"ANY\">i</code><code class=\"ANY\">++</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"TYPE_IDENTIFIER\">Object</code><code class=\"ANY\">[</code><code class=\"ANY\">]</code> <code class=\"VARIABLE_DECLARATOR\">parameters</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">new</code> <code class=\"TYPE_IDENTIFIER\">Object</code><code class=\"ANY\">[</code><code class=\"ANY\">size</code><code class=\"ANY\">]</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">for</code> <code class=\"ANY\">(</code><code class=\"KEYWORD\">int</code> <code class=\"VARIABLE_DECLARATOR\">j</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">0</code><code class=\"ANY\">;</code> <code class=\"ANY\">j</code> <code class=\"ANY\"><</code> <code class=\"ANY\">size</code><code class=\"ANY\">;</code> <code class=\"ANY\">j</code><code class=\"ANY\">++</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"ANY\">parameters</code><code class=\"ANY\">[</code><code class=\"ANY\">j</code><code class=\"ANY\">]</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">getValue</code><code class=\"ANY\">(</code><code class=\"ANY\">params</code><code class=\"ANY\">[</code><code class=\"ANY\">j</code><code class=\"ANY\">]</code><code class=\"ANY\">,</code> <code class=\"ANY\">i</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"ANY\">result</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">add</code><code class=\"ANY\">(</code><code class=\"ANY\">parameters</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">result</code><code class=\"ANY\">;</code>\n\t<code class=\"ANY\">}</code>\n\n\t<code class=\"KEYWORD\">private</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"FUNCTION_DECLARATOR\">getValue</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">object</code><code class=\"ANY\">,</code> <code class=\"KEYWORD\">int</code> <code class=\"VARIABLE_DECLARATOR\">index</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">object</code> <code class=\"ANY\">==</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">object</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"ANY\">?</code><code class=\"ANY\">></code> <code class=\"VARIABLE_DECLARATOR\">list</code> <code class=\"ANY\">=</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"ANY\">?</code><code class=\"ANY\">></code><code class=\"ANY\">)</code> <code class=\"ANY\">object</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">int</code> <code class=\"VARIABLE_DECLARATOR\">size</code> <code class=\"ANY\">=</code> <code class=\"ANY\">list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">size</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">size</code> <code class=\"ANY\">></code> <code class=\"LITERAL\">0</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get</code><code class=\"ANY\">(</code><code class=\"ANY\">Math</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">min</code><code class=\"ANY\">(</code><code class=\"ANY\">list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">size</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">-</code> <code class=\"LITERAL\">1</code><code class=\"ANY\">,</code> <code class=\"ANY\">index</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">object</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getClass</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isArray</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">int</code> <code class=\"VARIABLE_DECLARATOR\">size</code> <code class=\"ANY\">=</code> <code class=\"ANY\">Array</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getLength</code><code class=\"ANY\">(</code><code class=\"ANY\">object</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">size</code> <code class=\"ANY\">></code> <code class=\"LITERAL\">0</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"ANY\">Array</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get</code><code class=\"ANY\">(</code><code class=\"ANY\">object</code><code class=\"ANY\">,</code> <code class=\"ANY\">Math</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">min</code><code class=\"ANY\">(</code><code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">,</code> <code class=\"ANY\">index</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t<code class=\"ANY\">}</code> <code class=\"KEYWORD\">else</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">object</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\t\t<code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">;</code>\n\t<code class=\"ANY\">}</code>\n\n\t<code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">Override</code>\n\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"FUNCTION_DECLARATOR\">supportShape</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t<code class=\"KEYWORD\">return</code> <code class=\"CHAR_STRING_LITERAL\">\"executeSql\"</code><code class=\"ANY\">;</code>\n\t<code class=\"ANY\">}</code>\n\n\t<code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">Override</code>\n\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Grammer</code><code class=\"ANY\">></code> <code class=\"FUNCTION_DECLARATOR\">grammers</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t<code class=\"TYPE_IDENTIFIER\">Grammer</code> <code class=\"VARIABLE_DECLARATOR\">grammer</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">new</code> <code class=\"TYPE_IDENTIFIER\">Grammer</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">grammer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">setComment</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"执行SQL结果\"</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">grammer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">setFunction</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"rs\"</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">grammer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">setReturns</code><code class=\"ANY\">(</code><code class=\"ANY\">Arrays</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">asList</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"List<Map<String,Object>>\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"int\"</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">Collections</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">singletonList</code><code class=\"ANY\">(</code><code class=\"ANY\">grammer</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t<code class=\"ANY\">}</code>\n\n\n<code class=\"ANY\">}</code>\n\n</pre>\n</html>"},{"_id":{"language":"JAVA","lexingTokens":[32,102,65,102,65,102,65,102,63,25,102,65,102,65,102,65,102,63,25,102,65,102,65,102,65,102,63,25,102,65,102,65,102,65,102,63,25,102,65,102,65,102,65,102,65,102,65,102,63,25,102,65,102,65,102,65,102,63,25,102,65,102,65,102,65,102,63,25,102,65,102,65,102,65,102,63,25,102,65,102,65,102,63,25,102,65,102,65,102,63,25,102,65,102,65,102,63,25,102,65,102,65,102,65,102,63,106,103,102,35,9,102,24,102,59,106,33,38,102,68,102,67,102,63,33,38,102,68,102,64,102,67,102,63,33,38,102,102,63,103,102,102,57,102,68,102,67,102,58,59,102,65,102,66,102,63,60,103,102,33,48,102,57,58,59,102,66,102,65,102,57,58,65,102,57,102,65,102,57,102,90,102,64,102,89,102,58,58,63,60,103,102,35,48,102,57,102,102,58,45,102,59,102,65,102,66,102,63,60,35,38,102,68,102,67,102,57,58,59,36,102,65,102,57,58,65,102,57,102,89,102,65,102,57,58,76,56,58,65,102,57,102,89,102,65,102,57,58,58,65,102,57,102,65,102,57,58,58,63,60,35,38,102,102,57,102,102,58,59,36,102,65,102,57,102,58,63,60,60,-1]},"sourceCode":"package org.spiderflow.core.utils;\n\nimport org.spiderflow.executor.ShapeExecutor;\nimport org.spiderflow.model.Shape;\nimport org.springframework.beans.BeansException;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.ApplicationContext;\nimport org.springframework.context.ApplicationContextAware;\nimport org.springframework.stereotype.Component;\n\nimport javax.annotation.PostConstruct;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.stream.Collectors;\n\n/**\n * Created on 2020-03-11\n *\n * @author Octopus\n */\n@Component\npublic class ExecutorsUtils implements ApplicationContextAware {\n\n    /**\n     * 节点执行器列表 当前爬虫的全部流程\n     */\n    private static List<ShapeExecutor> executors;\n\n    private static Map<String, ShapeExecutor> executorMap;\n\n    private static ApplicationContext applicationContext;\n\n    @Autowired\n    ExecutorsUtils(List<ShapeExecutor> executors){\n        ExecutorsUtils.executors = executors;\n    }\n\n    @PostConstruct\n    private void init() {\n        executorMap = executors.stream().collect(Collectors.toMap(ShapeExecutor::supportShape, v -> v));\n    }\n\n    @Override\n    public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {\n        ExecutorsUtils.applicationContext = applicationContext;\n    }\n\n    public static List<Shape> shapes(){\n        return executors.stream().filter(e-> e.shape() !=null).map(executor -> executor.shape()).collect(Collectors.toList());\n    }\n\n    public static ShapeExecutor get(String shape){\n        return executorMap.get(shape);\n    }\n}\n","highlightingTokens":[1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,4,11,11,1,1,5,1,8,0,4,1,1,8,0,8,0,7,0,1,1,8,0,8,0,8,0,7,0,1,1,8,7,0,11,11,6,0,8,0,8,0,7,0,0,0,0,10,0,0,0,0,11,11,1,1,6,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,11,11,1,1,6,0,8,7,0,1,8,0,0,0,10,0,0,0,0,1,1,8,0,8,0,6,0,0,0,1,0,0,9,0,0,0,9,0,0,0,0,0,9,0,0,0,2,0,0,9,0,0,0,0,0,9,0,0,0,0,9,0,0,0,9,0,0,0,0,0,1,1,8,6,0,8,7,0,0,1,0,0,9,0,0,0,0,0,0,0],"highlightingCode":"<!DOCTYPE html>\n<html>\n<style>\n.ANY {\n    color: black;\n    font-weight: normal;\n    font-style: normal;\n}\n.KEYWORD {\n    color: blue;\n    font-weight: bold;\n    font-style: normal;\n}\n.LITERAL {\n    color: lightskyblue;\n    font-weight: bold;\n    font-style: normal;\n}\n.CHAR_STRING_LITERAL {\n    color: darkgoldenrod;\n    font-weight: normal;\n    font-style: normal;\n}\n.COMMENT {\n    color: grey;\n    font-weight: normal;\n    font-style: italic;\n}\n.CLASS_DECLARATOR {\n    color: crimson;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_DECLARATOR {\n    color: fuchsia;\n    font-weight: bold;\n    font-style: normal;\n}\n.VARIABLE_DECLARATOR {\n    color: purple;\n    font-weight: bold;\n    font-style: normal;\n}\n.TYPE_IDENTIFIER {\n    color: darkgreen;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_IDENTIFIER {\n    color: dodgerblue;\n    font-weight: normal;\n    font-style: normal;\n}\n.FIELD_IDENTIFIER {\n    color: coral;\n    font-weight: normal;\n    font-style: normal;\n}\n.ANNOTATION_DECLARATOR {\n    color: lightslategray;\n    font-weight: lighter;\n    font-style: italic;\n}\n</style>\n<pre>\n<code class=\"KEYWORD\">package</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">spiderflow</code><code class=\"ANY\">.</code><code class=\"ANY\">core</code><code class=\"ANY\">.</code><code class=\"ANY\">utils</code><code class=\"ANY\">;</code>\n\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">spiderflow</code><code class=\"ANY\">.</code><code class=\"ANY\">executor</code><code class=\"ANY\">.</code><code class=\"ANY\">ShapeExecutor</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">spiderflow</code><code class=\"ANY\">.</code><code class=\"ANY\">model</code><code class=\"ANY\">.</code><code class=\"ANY\">Shape</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">springframework</code><code class=\"ANY\">.</code><code class=\"ANY\">beans</code><code class=\"ANY\">.</code><code class=\"ANY\">BeansException</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">springframework</code><code class=\"ANY\">.</code><code class=\"ANY\">beans</code><code class=\"ANY\">.</code><code class=\"ANY\">factory</code><code class=\"ANY\">.</code><code class=\"ANY\">annotation</code><code class=\"ANY\">.</code><code class=\"ANY\">Autowired</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">springframework</code><code class=\"ANY\">.</code><code class=\"ANY\">context</code><code class=\"ANY\">.</code><code class=\"ANY\">ApplicationContext</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">springframework</code><code class=\"ANY\">.</code><code class=\"ANY\">context</code><code class=\"ANY\">.</code><code class=\"ANY\">ApplicationContextAware</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">springframework</code><code class=\"ANY\">.</code><code class=\"ANY\">stereotype</code><code class=\"ANY\">.</code><code class=\"ANY\">Component</code><code class=\"ANY\">;</code>\n\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">javax</code><code class=\"ANY\">.</code><code class=\"ANY\">annotation</code><code class=\"ANY\">.</code><code class=\"ANY\">PostConstruct</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">java</code><code class=\"ANY\">.</code><code class=\"ANY\">util</code><code class=\"ANY\">.</code><code class=\"ANY\">List</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">java</code><code class=\"ANY\">.</code><code class=\"ANY\">util</code><code class=\"ANY\">.</code><code class=\"ANY\">Map</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">java</code><code class=\"ANY\">.</code><code class=\"ANY\">util</code><code class=\"ANY\">.</code><code class=\"ANY\">stream</code><code class=\"ANY\">.</code><code class=\"ANY\">Collectors</code><code class=\"ANY\">;</code>\n\n<code class=\"COMMENT\">/**\n * Created on 2020-03-11\n *\n * @author Octopus\n */</code>\n<code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">Component</code>\n<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">ExecutorsUtils</code> <code class=\"KEYWORD\">implements</code> <code class=\"TYPE_IDENTIFIER\">ApplicationContextAware</code> <code class=\"ANY\">{</code>\n\n    <code class=\"COMMENT\">/**\n     * 节点执行器列表 当前爬虫的全部流程\n     */</code>\n    <code class=\"KEYWORD\">private</code> <code class=\"KEYWORD\">static</code> <code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">ShapeExecutor</code><code class=\"ANY\">></code> <code class=\"VARIABLE_DECLARATOR\">executors</code><code class=\"ANY\">;</code>\n\n    <code class=\"KEYWORD\">private</code> <code class=\"KEYWORD\">static</code> <code class=\"TYPE_IDENTIFIER\">Map</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">String</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">ShapeExecutor</code><code class=\"ANY\">></code> <code class=\"VARIABLE_DECLARATOR\">executorMap</code><code class=\"ANY\">;</code>\n\n    <code class=\"KEYWORD\">private</code> <code class=\"KEYWORD\">static</code> <code class=\"TYPE_IDENTIFIER\">ApplicationContext</code> <code class=\"VARIABLE_DECLARATOR\">applicationContext</code><code class=\"ANY\">;</code>\n\n    <code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">Autowired</code>\n    <code class=\"FUNCTION_DECLARATOR\">ExecutorsUtils</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">ShapeExecutor</code><code class=\"ANY\">></code> <code class=\"VARIABLE_DECLARATOR\">executors</code><code class=\"ANY\">)</code><code class=\"ANY\">{</code>\n        <code class=\"ANY\">ExecutorsUtils</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">executors</code> <code class=\"ANY\">=</code> <code class=\"ANY\">executors</code><code class=\"ANY\">;</code>\n    <code class=\"ANY\">}</code>\n\n    <code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">PostConstruct</code>\n    <code class=\"KEYWORD\">private</code> <code class=\"KEYWORD\">void</code> <code class=\"FUNCTION_DECLARATOR\">init</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n        <code class=\"ANY\">executorMap</code> <code class=\"ANY\">=</code> <code class=\"ANY\">executors</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">stream</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">collect</code><code class=\"ANY\">(</code><code class=\"ANY\">Collectors</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">toMap</code><code class=\"ANY\">(</code><code class=\"ANY\">ShapeExecutor</code><code class=\"ANY\">::</code><code class=\"ANY\">supportShape</code><code class=\"ANY\">,</code> <code class=\"ANY\">v</code> <code class=\"ANY\">-></code> <code class=\"ANY\">v</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n    <code class=\"ANY\">}</code>\n\n    <code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">Override</code>\n    <code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">void</code> <code class=\"FUNCTION_DECLARATOR\">setApplicationContext</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">ApplicationContext</code> <code class=\"VARIABLE_DECLARATOR\">applicationContext</code><code class=\"ANY\">)</code> <code class=\"KEYWORD\">throws</code> <code class=\"TYPE_IDENTIFIER\">BeansException</code> <code class=\"ANY\">{</code>\n        <code class=\"ANY\">ExecutorsUtils</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">applicationContext</code> <code class=\"ANY\">=</code> <code class=\"ANY\">applicationContext</code><code class=\"ANY\">;</code>\n    <code class=\"ANY\">}</code>\n\n    <code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Shape</code><code class=\"ANY\">></code> <code class=\"FUNCTION_DECLARATOR\">shapes</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">{</code>\n        <code class=\"KEYWORD\">return</code> <code class=\"ANY\">executors</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">stream</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">filter</code><code class=\"ANY\">(</code><code class=\"ANY\">e</code><code class=\"ANY\">-></code> <code class=\"ANY\">e</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">shape</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">!=</code><code class=\"LITERAL\">null</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">map</code><code class=\"ANY\">(</code><code class=\"ANY\">executor</code> <code class=\"ANY\">-></code> <code class=\"ANY\">executor</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">shape</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">collect</code><code class=\"ANY\">(</code><code class=\"ANY\">Collectors</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">toList</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n    <code class=\"ANY\">}</code>\n\n    <code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"TYPE_IDENTIFIER\">ShapeExecutor</code> <code class=\"FUNCTION_DECLARATOR\">get</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">shape</code><code class=\"ANY\">)</code><code class=\"ANY\">{</code>\n        <code class=\"KEYWORD\">return</code> <code class=\"ANY\">executorMap</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get</code><code class=\"ANY\">(</code><code class=\"ANY\">shape</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n    <code class=\"ANY\">}</code>\n<code class=\"ANY\">}</code>\n\n</pre>\n</html>"},{"_id":{"language":"JAVA","lexingTokens},"sourceCode":"package org.spiderflow.controller;\n\nimport com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;\nimport com.baomidou.mybatisplus.core.metadata.IPage;\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\nimport org.apache.commons.lang3.StringUtils;\nimport org.spiderflow.core.model.DataSource;\nimport org.spiderflow.core.model.Function;\nimport org.spiderflow.core.service.FunctionService;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestParam;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\n@RequestMapping(\"/function\")\npublic class FunctionController {\n\n    @Autowired\n    private FunctionService functionService;\n\n    @RequestMapping(\"/list\")\n    public IPage<Function> list(@RequestParam(name = \"page\",defaultValue = \"1\")Integer page, @RequestParam(name = \"limit\",defaultValue = \"1\")Integer size,String name) {\n        QueryWrapper<Function> select = new QueryWrapper<Function>().select(\"id\", \"name\", \"parameter\", \"create_date\");\n        if(StringUtils.isNotBlank(name)){\n            select.like(\"name\",name);\n        }\n        select.orderByDesc(\"create_date\");\n        return functionService.page(new Page<Function>(page, size), select);\n    }\n\n    @RequestMapping(\"/save\")\n    public String save(Function function){\n        return functionService.saveFunction(function);\n    }\n\n    @RequestMapping(\"/get\")\n    public Function get(String id){\n        return functionService.getById(id);\n    }\n\n    @RequestMapping(\"/remove\")\n    public void remove(String id){\n        functionService.removeById(id);\n    }\n}\n","highlightingTokens":[1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,0,3,0,1,1,5,0,11,11,1,8,7,0,11,11,0,3,0,1,8,0,8,0,6,0,11,11,0,0,0,3,0,0,0,3,0,8,7,0,11,11,0,0,0,3,0,0,0,3,0,8,7,0,8,7,0,0,8,0,8,0,7,0,1,8,0,8,0,0,0,0,9,0,3,0,3,0,3,0,3,0,0,1,0,0,0,9,0,0,0,0,0,0,0,9,0,3,0,0,0,0,0,0,0,9,0,3,0,0,1,0,0,9,0,1,8,0,8,0,0,0,0,0,0,0,0,0,0,0,11,11,0,3,0,1,8,6,0,8,7,0,0,1,0,0,9,0,0,0,0,0,11,11,0,3,0,1,8,6,0,8,7,0,0,1,0,0,9,0,0,0,0,0,11,11,0,3,0,1,1,6,0,8,7,0,0,0,0,9,0,0,0,0,0,0,0],"highlightingCode":"<!DOCTYPE html>\n<html>\n<style>\n.ANY {\n    color: black;\n    font-weight: normal;\n    font-style: normal;\n}\n.KEYWORD {\n    color: blue;\n    font-weight: bold;\n    font-style: normal;\n}\n.LITERAL {\n    color: lightskyblue;\n    font-weight: bold;\n    font-style: normal;\n}\n.CHAR_STRING_LITERAL {\n    color: darkgoldenrod;\n    font-weight: normal;\n    font-style: normal;\n}\n.COMMENT {\n    color: grey;\n    font-weight: normal;\n    font-style: italic;\n}\n.CLASS_DECLARATOR {\n    color: crimson;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_DECLARATOR {\n    color: fuchsia;\n    font-weight: bold;\n    font-style: normal;\n}\n.VARIABLE_DECLARATOR {\n    color: purple;\n    font-weight: bold;\n    font-style: normal;\n}\n.TYPE_IDENTIFIER {\n    color: darkgreen;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_IDENTIFIER {\n    color: dodgerblue;\n    font-weight: normal;\n    font-style: normal;\n}\n.FIELD_IDENTIFIER {\n    color: coral;\n    font-weight: normal;\n    font-style: normal;\n}\n.ANNOTATION_DECLARATOR {\n    color: lightslategray;\n    font-weight: lighter;\n    font-style: italic;\n}\n</style>\n<pre>\n<code class=\"KEYWORD\">package</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">spiderflow</code><code class=\"ANY\">.</code><code class=\"ANY\">controller</code><code class=\"ANY\">;</code>\n\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">baomidou</code><code class=\"ANY\">.</code><code class=\"ANY\">mybatisplus</code><code class=\"ANY\">.</code><code class=\"ANY\">core</code><code class=\"ANY\">.</code><code class=\"ANY\">conditions</code><code class=\"ANY\">.</code><code class=\"ANY\">query</code><code class=\"ANY\">.</code><code class=\"ANY\">QueryWrapper</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">baomidou</code><code class=\"ANY\">.</code><code class=\"ANY\">mybatisplus</code><code class=\"ANY\">.</code><code class=\"ANY\">core</code><code class=\"ANY\">.</code><code class=\"ANY\">metadata</code><code class=\"ANY\">.</code><code class=\"ANY\">IPage</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">baomidou</code><code class=\"ANY\">.</code><code class=\"ANY\">mybatisplus</code><code class=\"ANY\">.</code><code class=\"ANY\">extension</code><code class=\"ANY\">.</code><code class=\"ANY\">plugins</code><code class=\"ANY\">.</code><code class=\"ANY\">pagination</code><code class=\"ANY\">.</code><code class=\"ANY\">Page</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">apache</code><code class=\"ANY\">.</code><code class=\"ANY\">commons</code><code class=\"ANY\">.</code><code class=\"ANY\">lang3</code><code class=\"ANY\">.</code><code class=\"ANY\">StringUtils</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">spiderflow</code><code class=\"ANY\">.</code><code class=\"ANY\">core</code><code class=\"ANY\">.</code><code class=\"ANY\">model</code><code class=\"ANY\">.</code><code class=\"ANY\">DataSource</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">spiderflow</code><code class=\"ANY\">.</code><code class=\"ANY\">core</code><code class=\"ANY\">.</code><code class=\"ANY\">model</code><code class=\"ANY\">.</code><code class=\"ANY\">Function</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">spiderflow</code><code class=\"ANY\">.</code><code class=\"ANY\">core</code><code class=\"ANY\">.</code><code class=\"ANY\">service</code><code class=\"ANY\">.</code><code class=\"ANY\">FunctionService</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">springframework</code><code class=\"ANY\">.</code><code class=\"ANY\">beans</code><code class=\"ANY\">.</code><code class=\"ANY\">factory</code><code class=\"ANY\">.</code><code class=\"ANY\">annotation</code><code class=\"ANY\">.</code><code class=\"ANY\">Autowired</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">springframework</code><code class=\"ANY\">.</code><code class=\"ANY\">web</code><code class=\"ANY\">.</code><code class=\"ANY\">bind</code><code class=\"ANY\">.</code><code class=\"ANY\">annotation</code><code class=\"ANY\">.</code><code class=\"ANY\">RequestMapping</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">springframework</code><code class=\"ANY\">.</code><code class=\"ANY\">web</code><code class=\"ANY\">.</code><code class=\"ANY\">bind</code><code class=\"ANY\">.</code><code class=\"ANY\">annotation</code><code class=\"ANY\">.</code><code class=\"ANY\">RequestParam</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">springframework</code><code class=\"ANY\">.</code><code class=\"ANY\">web</code><code class=\"ANY\">.</code><code class=\"ANY\">bind</code><code class=\"ANY\">.</code><code class=\"ANY\">annotation</code><code class=\"ANY\">.</code><code class=\"ANY\">RestController</code><code class=\"ANY\">;</code>\n\n<code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">RestController</code>\n<code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">RequestMapping</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"/function\"</code><code class=\"ANY\">)</code>\n<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">FunctionController</code> <code class=\"ANY\">{</code>\n\n    <code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">Autowired</code>\n    <code class=\"KEYWORD\">private</code> <code class=\"TYPE_IDENTIFIER\">FunctionService</code> <code class=\"VARIABLE_DECLARATOR\">functionService</code><code class=\"ANY\">;</code>\n\n    <code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">RequestMapping</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"/list\"</code><code class=\"ANY\">)</code>\n    <code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">IPage</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Function</code><code class=\"ANY\">></code> <code class=\"FUNCTION_DECLARATOR\">list</code><code class=\"ANY\">(</code><code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">RequestParam</code><code class=\"ANY\">(</code><code class=\"ANY\">name</code> <code class=\"ANY\">=</code> <code class=\"CHAR_STRING_LITERAL\">\"page\"</code><code class=\"ANY\">,</code><code class=\"ANY\">defaultValue</code> <code class=\"ANY\">=</code> <code class=\"CHAR_STRING_LITERAL\">\"1\"</code><code class=\"ANY\">)</code><code class=\"TYPE_IDENTIFIER\">Integer</code> <code class=\"VARIABLE_DECLARATOR\">page</code><code class=\"ANY\">,</code> <code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">RequestParam</code><code class=\"ANY\">(</code><code class=\"ANY\">name</code> <code class=\"ANY\">=</code> <code class=\"CHAR_STRING_LITERAL\">\"limit\"</code><code class=\"ANY\">,</code><code class=\"ANY\">defaultValue</code> <code class=\"ANY\">=</code> <code class=\"CHAR_STRING_LITERAL\">\"1\"</code><code class=\"ANY\">)</code><code class=\"TYPE_IDENTIFIER\">Integer</code> <code class=\"VARIABLE_DECLARATOR\">size</code><code class=\"ANY\">,</code><code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">name</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n        <code class=\"TYPE_IDENTIFIER\">QueryWrapper</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Function</code><code class=\"ANY\">></code> <code class=\"VARIABLE_DECLARATOR\">select</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">new</code> <code class=\"TYPE_IDENTIFIER\">QueryWrapper</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Function</code><code class=\"ANY\">></code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">select</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"id\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"name\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"parameter\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"create_date\"</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n        <code class=\"KEYWORD\">if</code><code class=\"ANY\">(</code><code class=\"ANY\">StringUtils</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isNotBlank</code><code class=\"ANY\">(</code><code class=\"ANY\">name</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">{</code>\n            <code class=\"ANY\">select</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">like</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"name\"</code><code class=\"ANY\">,</code><code class=\"ANY\">name</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n        <code class=\"ANY\">}</code>\n        <code class=\"ANY\">select</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">orderByDesc</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"create_date\"</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n        <code class=\"KEYWORD\">return</code> <code class=\"ANY\">functionService</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">page</code><code class=\"ANY\">(</code><code class=\"KEYWORD\">new</code> <code class=\"TYPE_IDENTIFIER\">Page</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Function</code><code class=\"ANY\">></code><code class=\"ANY\">(</code><code class=\"ANY\">page</code><code class=\"ANY\">,</code> <code class=\"ANY\">size</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"ANY\">select</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n    <code class=\"ANY\">}</code>\n\n    <code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">RequestMapping</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"/save\"</code><code class=\"ANY\">)</code>\n    <code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"FUNCTION_DECLARATOR\">save</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Function</code> <code class=\"VARIABLE_DECLARATOR\">function</code><code class=\"ANY\">)</code><code class=\"ANY\">{</code>\n        <code class=\"KEYWORD\">return</code> <code class=\"ANY\">functionService</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">saveFunction</code><code class=\"ANY\">(</code><code class=\"ANY\">function</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n    <code class=\"ANY\">}</code>\n\n    <code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">RequestMapping</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"/get\"</code><code class=\"ANY\">)</code>\n    <code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Function</code> <code class=\"FUNCTION_DECLARATOR\">get</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">{</code>\n        <code class=\"KEYWORD\">return</code> <code class=\"ANY\">functionService</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getById</code><code class=\"ANY\">(</code><code class=\"ANY\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n    <code class=\"ANY\">}</code>\n\n    <code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">RequestMapping</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"/remove\"</code><code class=\"ANY\">)</code>\n    <code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">void</code> <code class=\"FUNCTION_DECLARATOR\">remove</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">{</code>\n        <code class=\"ANY\">functionService</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">removeById</code><code class=\"ANY\">(</code><code class=\"ANY\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n    <code class=\"ANY\">}</code>\n<code class=\"ANY\">}</code>\n\n</pre>\n</html>"},{"_id":{"language":"JAVA","lexingTokens":[32,102,65,102,65,102,63,25,102,65,102,65,102,63,25,102,65,102,65,102,63,25,102,65,102,65,102,65,102,65,102,65,102,63,35,9,102,59,33,102,102,63,33,102,102,63,33,102,68,102,67,102,63,35,102,57,102,102,64,102,102,64,102,68,102,67,102,58,59,22,57,102,76,56,77,102,65,102,57,58,67,51,58,59,102,68,102,67,102,66,31,102,68,67,57,102,65,102,57,58,58,63,21,57,102,102,72,102,58,59,22,57,102,26,102,58,59,102,65,102,57,102,65,102,57,57,102,58,102,58,58,63,60,15,59,102,65,102,57,102,58,63,60,60,43,65,102,66,102,63,60,43,65,102,66,102,63,43,65,102,66,102,63,60,35,102,102,57,58,59,36,102,63,60,35,48,102,57,102,102,58,59,43,65,102,66,102,63,60,35,102,102,57,58,59,36,102,63,60,35,48,102,57,102,102,58,59,43,65,102,66,102,63,60,35,102,68,102,67,102,57,58,59,36,102,63,60,35,48,102,57,102,68,102,67,102,58,59,43,65,102,66,102,63,60,60,-1]},"sourceCode":"package org.spiderflow.model;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport org.apache.commons.lang3.exception.ExceptionUtils;\n\npublic class SpiderLog {\n\t\n\tprivate String level;\n\t\n\tprivate String message;\n\t\n\tprivate List<Object> variables;\n\n\tpublic SpiderLog(String level,String message, List<Object> variables) {\n\t\tif(variables != null && variables.size() > 0){\n\t\t\tList<Object> nVariables = new ArrayList<>(variables.size());\n\t\t\tfor (Object object : variables) {\n\t\t\t\tif(object instanceof Throwable){\n\t\t\t\t\tnVariables.add(ExceptionUtils.getStackTrace((Throwable) object));\n\t\t\t\t}else{\n\t\t\t\t\tnVariables.add(object);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.variables = nVariables;\n\t\t}\n\t\tthis.level = level;\n\t\tthis.message = message;\n\t}\n\n\tpublic String getLevel() {\n\t\treturn level;\n\t}\n\n\tpublic void setLevel(String level) {\n\t\tthis.level = level;\n\t}\n\n\tpublic String getMessage() {\n\t\treturn message;\n\t}\n\n\tpublic void setMessage(String message) {\n\t\tthis.message = message;\n\t}\n\n\tpublic List<Object> getVariables() {\n\t\treturn variables;\n\t}\n\n\tpublic void setVariables(List<Object> variables) {\n\t\tthis.variables = variables;\n\t}\n}\n","highlightingTokens":[1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,5,0,1,8,7,0,1,8,7,0,1,8,0,8,0,7,0,1,6,0,8,7,0,8,7,0,8,0,8,0,7,0,0,1,0,0,0,2,0,0,0,9,0,0,0,2,0,0,8,0,8,0,7,0,1,8,0,0,0,0,0,9,0,0,0,0,1,0,8,7,0,0,0,0,1,0,0,1,8,0,0,0,0,9,0,0,0,9,0,0,8,0,0,0,0,0,0,1,0,0,0,9,0,0,0,0,0,0,1,0,10,0,0,0,0,1,0,10,0,0,0,1,0,10,0,0,0,0,1,8,6,0,0,0,1,0,0,0,1,1,6,0,8,7,0,0,1,0,10,0,0,0,0,1,8,6,0,0,0,1,0,0,0,1,1,6,0,8,7,0,0,1,0,10,0,0,0,0,1,8,0,8,0,6,0,0,0,1,0,0,0,1,1,6,0,8,0,8,0,7,0,0,1,0,10,0,0,0,0,0,0],"highlightingCode":"<!DOCTYPE html>\n<html>\n<style>\n.ANY {\n    color: black;\n    font-weight: normal;\n    font-style: normal;\n}\n.KEYWORD {\n    color: blue;\n    font-weight: bold;\n    font-style: normal;\n}\n.LITERAL {\n    color: lightskyblue;\n    font-weight: bold;\n    font-style: normal;\n}\n.CHAR_STRING_LITERAL {\n    color: darkgoldenrod;\n    font-weight: normal;\n    font-style: normal;\n}\n.COMMENT {\n    color: grey;\n    font-weight: normal;\n    font-style: italic;\n}\n.CLASS_DECLARATOR {\n    color: crimson;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_DECLARATOR {\n    color: fuchsia;\n    font-weight: bold;\n    font-style: normal;\n}\n.VARIABLE_DECLARATOR {\n    color: purple;\n    font-weight: bold;\n    font-style: normal;\n}\n.TYPE_IDENTIFIER {\n    color: darkgreen;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_IDENTIFIER {\n    color: dodgerblue;\n    font-weight: normal;\n    font-style: normal;\n}\n.FIELD_IDENTIFIER {\n    color: coral;\n    font-weight: normal;\n    font-style: normal;\n}\n.ANNOTATION_DECLARATOR {\n    color: lightslategray;\n    font-weight: lighter;\n    font-style: italic;\n}\n</style>\n<pre>\n<code class=\"KEYWORD\">package</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">spiderflow</code><code class=\"ANY\">.</code><code class=\"ANY\">model</code><code class=\"ANY\">;</code>\n\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">java</code><code class=\"ANY\">.</code><code class=\"ANY\">util</code><code class=\"ANY\">.</code><code class=\"ANY\">ArrayList</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">java</code><code class=\"ANY\">.</code><code class=\"ANY\">util</code><code class=\"ANY\">.</code><code class=\"ANY\">List</code><code class=\"ANY\">;</code>\n\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">apache</code><code class=\"ANY\">.</code><code class=\"ANY\">commons</code><code class=\"ANY\">.</code><code class=\"ANY\">lang3</code><code class=\"ANY\">.</code><code class=\"ANY\">exception</code><code class=\"ANY\">.</code><code class=\"ANY\">ExceptionUtils</code><code class=\"ANY\">;</code>\n\n<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">SpiderLog</code> <code class=\"ANY\">{</code>\n\t\n\t<code class=\"KEYWORD\">private</code> <code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">level</code><code class=\"ANY\">;</code>\n\t\n\t<code class=\"KEYWORD\">private</code> <code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">message</code><code class=\"ANY\">;</code>\n\t\n\t<code class=\"KEYWORD\">private</code> <code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Object</code><code class=\"ANY\">></code> <code class=\"VARIABLE_DECLARATOR\">variables</code><code class=\"ANY\">;</code>\n\n\t<code class=\"KEYWORD\">public</code> <code class=\"FUNCTION_DECLARATOR\">SpiderLog</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">level</code><code class=\"ANY\">,</code><code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">message</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Object</code><code class=\"ANY\">></code> <code class=\"VARIABLE_DECLARATOR\">variables</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t<code class=\"KEYWORD\">if</code><code class=\"ANY\">(</code><code class=\"ANY\">variables</code> <code class=\"ANY\">!=</code> <code class=\"LITERAL\">null</code> <code class=\"ANY\">&&</code> <code class=\"ANY\">variables</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">size</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">></code> <code class=\"LITERAL\">0</code><code class=\"ANY\">)</code><code class=\"ANY\">{</code>\n\t\t\t<code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Object</code><code class=\"ANY\">></code> <code class=\"VARIABLE_DECLARATOR\">nVariables</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">new</code> <code class=\"TYPE_IDENTIFIER\">ArrayList</code><code class=\"ANY\"><</code><code class=\"ANY\">></code><code class=\"ANY\">(</code><code class=\"ANY\">variables</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">size</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">for</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">object</code> <code class=\"ANY\">:</code> <code class=\"ANY\">variables</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">if</code><code class=\"ANY\">(</code><code class=\"ANY\">object</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">Throwable</code><code class=\"ANY\">)</code><code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"ANY\">nVariables</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">add</code><code class=\"ANY\">(</code><code class=\"ANY\">ExceptionUtils</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getStackTrace</code><code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Throwable</code><code class=\"ANY\">)</code> <code class=\"ANY\">object</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code><code class=\"KEYWORD\">else</code><code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"ANY\">nVariables</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">add</code><code class=\"ANY\">(</code><code class=\"ANY\">object</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">variables</code> <code class=\"ANY\">=</code> <code class=\"ANY\">nVariables</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">level</code> <code class=\"ANY\">=</code> <code class=\"ANY\">level</code><code class=\"ANY\">;</code>\n\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">message</code> <code class=\"ANY\">=</code> <code class=\"ANY\">message</code><code class=\"ANY\">;</code>\n\t<code class=\"ANY\">}</code>\n\n\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"FUNCTION_DECLARATOR\">getLevel</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">level</code><code class=\"ANY\">;</code>\n\t<code class=\"ANY\">}</code>\n\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">void</code> <code class=\"FUNCTION_DECLARATOR\">setLevel</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">level</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">level</code> <code class=\"ANY\">=</code> <code class=\"ANY\">level</code><code class=\"ANY\">;</code>\n\t<code class=\"ANY\">}</code>\n\n\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"FUNCTION_DECLARATOR\">getMessage</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">message</code><code class=\"ANY\">;</code>\n\t<code class=\"ANY\">}</code>\n\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">void</code> <code class=\"FUNCTION_DECLARATOR\">setMessage</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">message</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">message</code> <code class=\"ANY\">=</code> <code class=\"ANY\">message</code><code class=\"ANY\">;</code>\n\t<code class=\"ANY\">}</code>\n\n\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Object</code><code class=\"ANY\">></code> <code class=\"FUNCTION_DECLARATOR\">getVariables</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">variables</code><code class=\"ANY\">;</code>\n\t<code class=\"ANY\">}</code>\n\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">void</code> <code class=\"FUNCTION_DECLARATOR\">setVariables</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Object</code><code class=\"ANY\">></code> <code class=\"VARIABLE_DECLARATOR\">variables</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">variables</code> <code class=\"ANY\">=</code> <code class=\"ANY\">variables</code><code class=\"ANY\">;</code>\n\t<code class=\"ANY\">}</code>\n<code class=\"ANY\">}</code>\n\n</pre>\n</html>"},{"_id":{"language":"JAVA","lexingTokens":[32,102,65,102,65,102,65,102,63,25,102,65,102,65,102,65,102,65,102,65,102,63,25,102,65,102,65,102,65,102,65,102,65,102,65,102,63,25,102,65,102,65,102,65,102,65,102,65,102,63,106,35,9,102,59,106,35,38,48,102,57,102,102,64,102,102,58,59,22,57,102,65,102,57,58,58,102,57,102,64,102,65,102,57,58,65,102,57,58,58,63,15,59,102,102,66,102,65,102,57,58,63,22,57,102,73,56,58,102,57,102,64,31,102,57,55,64,51,64,51,58,58,63,15,102,57,102,64,31,102,57,102,64,102,65,102,57,58,82,51,64,102,65,102,57,58,58,58,63,60,60,106,35,38,48,102,57,102,102,64,102,102,64,102,102,58,59,102,102,66,102,65,102,57,58,63,102,66,55,81,102,65,102,57,58,81,55,81,102,81,55,63,102,91,102,65,102,57,58,63,102,91,55,63,27,102,66,102,65,102,57,58,82,102,65,102,57,58,63,27,102,66,102,81,102,65,102,57,58,65,102,57,58,82,51,63,21,57,27,102,66,51,64,102,66,102,65,102,57,58,65,102,57,58,63,102,68,102,63,102,79,58,59,3,102,66,102,65,102,57,58,65,102,57,102,58,73,54,63,102,91,102,75,102,77,102,74,102,71,55,72,102,71,55,72,55,63,60,22,57,102,73,56,58,44,31,102,57,102,64,102,58,63,15,44,31,102,57,102,64,102,64,102,58,63,60,106,35,38,48,102,57,102,102,64,102,102,58,59,102,57,102,64,102,64,56,58,63,60,106,35,38,9,102,17,102,59,33,38,18,29,102,66,51,63,33,18,102,102,63,33,18,102,102,63,33,102,57,102,102,64,102,102,58,59,40,57,102,58,63,43,65,102,66,102,63,43,65,102,66,102,63,60,35,102,57,102,102,64,102,102,64,102,102,58,59,40,57,102,64,102,58,63,43,65,102,66,102,63,43,65,102,66,102,63,60,106,35,102,102,57,58,59,36,102,63,60,103,102,35,102,102,57,58,59,102,102,66,31,102,57,58,63,22,57,102,57,58,73,56,78,102,57,58,73,43,58,59,36,40,65,102,57,58,63,60,102,65,102,57,102,65,102,57,51,64,102,65,102,57,54,58,58,58,63,102,65,102,57,55,58,63,102,102,66,102,57,58,63,50,57,102,76,56,77,102,76,43,58,59,22,57,102,26,102,58,59,102,102,66,57,102,58,102,63,22,57,102,65,102,57,58,73,56,78,102,65,102,57,58,73,102,58,102,65,102,57,102,65,102,58,63,15,102,65,102,57,102,65,102,65,102,57,51,64,102,65,102,65,102,57,54,58,58,58,63,102,65,102,57,55,58,63,60,102,66,102,65,102,57,58,63,60,36,102,65,102,57,58,63,60,60,35,38,9,102,17,102,59,33,38,18,29,102,66,51,63,60,60,-1]},"sourceCode":"\npackage org.spiderflow.core.expression;\n\nimport org.spiderflow.core.expression.parsing.Span;\nimport org.spiderflow.core.expression.parsing.Span.Line;\nimport org.spiderflow.core.expression.parsing.TokenStream;\n\n/** All errors reported by the library go through the static functions of this class. */\npublic class ExpressionError {\n\n\t/**\n\t * <p>\n\t * Create an error message based on the provided message and stream, highlighting the line on which the error happened. If the\n\t * stream has more tokens, the next token will be highlighted. Otherwise the end of the source of the stream will be\n\t * highlighted.\n\t * </p>\n\t *\n\t * <p>\n\t * Throws a {@link RuntimeException}\n\t * </p>\n\t */\n\tpublic static void error (String message, TokenStream stream) {\n\t\tif (stream.hasMore())\n\t\t\terror(message, stream.consume().getSpan());\n\t\telse {\n\t\t\tString source = stream.getSource();\n\t\t\tif (source == null)\n\t\t\t\terror(message, new Span(\" \", 0, 1));\n\t\t\telse\n\t\t\t\terror(message, new Span(source, source.length() - 1, source.length()));\n\t\t}\n\t}\n\n\t/** Create an error message based on the provided message and location, highlighting the location in the line on which the\n\t * error happened. Throws a {@link TemplateException} **/\n\tpublic static void error (String message, Span location, Throwable cause) {\n\n\t\tLine line = location.getLine();\n\t\tmessage = \"Error (\" + line.getLineNumber() + \"): \" + message + \"\\n\\n\";\n\t\tmessage += line.getText();\n\t\tmessage += \"\\n\";\n\n\t\tint errorStart = location.getStart() - line.getStart();\n\t\tint errorEnd = errorStart + location.getText().length() - 1;\n\t\tfor (int i = 0, n = line.getText().length(); i < n; i++) {\n\t\t\tboolean useTab = line.getText().charAt(i) == '\\t';\n\t\t\tmessage += i >= errorStart && i <= errorEnd ? \"^\" : useTab ? \"\\t\" : \" \";\n\t\t}\n\n\t\tif (cause == null)\n\t\t\tthrow new TemplateException(message, location);\n\t\telse\n\t\t\tthrow new TemplateException(message, location, cause);\n\t}\n\n\t/** Create an error message based on the provided message and location, highlighting the location in the line on which the\n\t * error happened. Throws a {@link TemplateException} **/\n\tpublic static void error (String message, Span location) {\n\t\terror(message, location, null);\n\t}\n\n\t/** Exception thrown by all basis-template code via {@link ExpressionError#error(String, Span)}. In case an error happens deep inside a\n\t * list of included templates, the {@link #getMessage()} method will return a condensed error message. **/\n\tpublic static class TemplateException extends RuntimeException {\n\t\tprivate static final long serialVersionUID = 1L;\n\t\tprivate final Span location;\n\t\tprivate final String errorMessage;\n\n\t\tprivate TemplateException (String message, Span location) {\n\t\t\tsuper(message);\n\t\t\tthis.errorMessage = message;\n\t\t\tthis.location = location;\n\t\t}\n\n\t\tpublic TemplateException (String message, Span location, Throwable cause) {\n\t\t\tsuper(message, cause);\n\t\t\tthis.errorMessage = message;\n\t\t\tthis.location = location;\n\t\t}\n\n\t\t/** Returns the location in the template at which the error happened. **/\n\t\tpublic Span getLocation () {\n\t\t\treturn location;\n\t\t}\n\n\t\t@Override\n\t\tpublic String getMessage () {\n\t\t\tStringBuilder builder = new StringBuilder();\n\n\t\t\tif (getCause() == null || getCause() == this) {\n\t\t\t\treturn super.getMessage();\n\t\t\t}\n\n\t\t\tbuilder.append(errorMessage.substring(0, errorMessage.indexOf('\\n')));\n\t\t\tbuilder.append(\"\\n\");\n\n\t\t\tThrowable cause = getCause();\n\t\t\twhile (cause != null && cause != this) {\n\t\t\t\tif (cause instanceof TemplateException) {\n\t\t\t\t\tTemplateException ex = (TemplateException)cause;\n\t\t\t\t\tif (ex.getCause() == null || ex.getCause() == ex)\n\t\t\t\t\t\tbuilder.append(ex.errorMessage);\n\t\t\t\t\telse\n\t\t\t\t\t\tbuilder.append(ex.errorMessage.substring(0, ex.errorMessage.indexOf('\\n')));\n\t\t\t\t\tbuilder.append(\"\\n\");\n\t\t\t\t}\n\t\t\t\tcause = cause.getCause();\n\t\t\t}\n\t\t\treturn builder.toString();\n\t\t}\n\t}\n\t\n\tpublic static class StringLiteralException extends RuntimeException {\n\n\t\tprivate static final long serialVersionUID = 1L;\n\t\t\n\t}\n}\n","highlightingTokens":[1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,4,1,1,5,0,4,1,1,1,6,0,8,7,0,8,7,0,0,1,0,0,0,9,0,0,0,9,0,0,0,0,0,9,0,0,0,9,0,0,0,0,1,0,8,7,0,0,0,9,0,0,0,1,0,0,0,2,0,9,0,0,0,1,8,0,3,0,2,0,2,0,0,0,1,9,0,0,0,1,8,0,0,0,0,0,9,0,0,0,2,0,0,0,9,0,0,0,0,0,0,0,4,1,1,1,6,0,8,7,0,8,7,0,8,7,0,0,8,7,0,0,0,9,0,0,0,0,0,3,0,0,0,9,0,0,0,3,0,0,0,3,0,0,0,0,0,9,0,0,0,0,0,3,0,1,7,0,0,0,9,0,0,0,0,0,9,0,0,0,1,7,0,0,0,0,0,9,0,0,0,9,0,0,0,2,0,1,0,1,7,0,2,0,7,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,1,7,0,0,0,9,0,0,0,9,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,3,0,3,0,0,1,0,0,0,2,0,1,1,8,0,0,0,0,0,0,1,1,1,8,0,0,0,0,0,0,0,0,0,4,1,1,1,6,0,8,7,0,8,7,0,0,9,0,0,0,0,0,2,0,0,0,4,1,1,1,5,1,8,0,1,1,1,1,7,0,2,0,1,1,8,7,0,1,1,8,7,0,1,6,0,8,7,0,8,7,0,0,1,0,0,0,0,1,0,10,0,0,0,1,0,10,0,0,0,0,1,6,0,8,7,0,8,7,0,8,7,0,0,1,0,0,0,0,0,0,1,0,10,0,0,0,1,0,10,0,0,0,0,4,1,8,6,0,0,0,1,0,0,0,11,11,1,8,6,0,0,0,8,7,0,1,8,0,0,0,1,0,9,0,0,0,2,0,9,0,0,0,1,0,0,1,1,0,9,0,0,0,0,0,0,9,0,0,0,9,0,2,0,0,0,9,0,3,0,0,0,0,0,0,9,0,3,0,0,8,7,0,9,0,0,0,1,0,0,0,2,0,0,0,1,0,0,1,0,0,1,8,0,0,8,7,0,0,8,0,0,0,1,0,0,0,9,0,0,0,2,0,0,0,9,0,0,0,0,0,0,0,9,0,0,0,10,0,0,1,0,0,9,0,0,0,0,0,9,0,2,0,0,0,0,0,9,0,3,0,0,0,0,0,0,9,0,3,0,0,0,0,0,0,0,9,0,0,0,0,1,0,0,9,0,0,0,0,0,1,1,1,5,1,8,0,1,1,1,1,7,0,2,0,0,0,0],"highlightingCode":"<!DOCTYPE html>\n<html>\n<style>\n.ANY {\n    color: black;\n    font-weight: normal;\n    font-style: normal;\n}\n.KEYWORD {\n    color: blue;\n    font-weight: bold;\n    font-style: normal;\n}\n.LITERAL {\n    color: lightskyblue;\n    font-weight: bold;\n    font-style: normal;\n}\n.CHAR_STRING_LITERAL {\n    color: darkgoldenrod;\n    font-weight: normal;\n    font-style: normal;\n}\n.COMMENT {\n    color: grey;\n    font-weight: normal;\n    font-style: italic;\n}\n.CLASS_DECLARATOR {\n    color: crimson;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_DECLARATOR {\n    color: fuchsia;\n    font-weight: bold;\n    font-style: normal;\n}\n.VARIABLE_DECLARATOR {\n    color: purple;\n    font-weight: bold;\n    font-style: normal;\n}\n.TYPE_IDENTIFIER {\n    color: darkgreen;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_IDENTIFIER {\n    color: dodgerblue;\n    font-weight: normal;\n    font-style: normal;\n}\n.FIELD_IDENTIFIER {\n    color: coral;\n    font-weight: normal;\n    font-style: normal;\n}\n.ANNOTATION_DECLARATOR {\n    color: lightslategray;\n    font-weight: lighter;\n    font-style: italic;\n}\n</style>\n<pre>\n\n<code class=\"KEYWORD\">package</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">spiderflow</code><code class=\"ANY\">.</code><code class=\"ANY\">core</code><code class=\"ANY\">.</code><code class=\"ANY\">expression</code><code class=\"ANY\">;</code>\n\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">spiderflow</code><code class=\"ANY\">.</code><code class=\"ANY\">core</code><code class=\"ANY\">.</code><code class=\"ANY\">expression</code><code class=\"ANY\">.</code><code class=\"ANY\">parsing</code><code class=\"ANY\">.</code><code class=\"ANY\">Span</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">spiderflow</code><code class=\"ANY\">.</code><code class=\"ANY\">core</code><code class=\"ANY\">.</code><code class=\"ANY\">expression</code><code class=\"ANY\">.</code><code class=\"ANY\">parsing</code><code class=\"ANY\">.</code><code class=\"ANY\">Span</code><code class=\"ANY\">.</code><code class=\"ANY\">Line</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">spiderflow</code><code class=\"ANY\">.</code><code class=\"ANY\">core</code><code class=\"ANY\">.</code><code class=\"ANY\">expression</code><code class=\"ANY\">.</code><code class=\"ANY\">parsing</code><code class=\"ANY\">.</code><code class=\"ANY\">TokenStream</code><code class=\"ANY\">;</code>\n\n<code class=\"COMMENT\">/** All errors reported by the library go through the static functions of this class. */</code>\n<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">ExpressionError</code> <code class=\"ANY\">{</code>\n\n\t<code class=\"COMMENT\">/**\n\t * <p>\n\t * Create an error message based on the provided message and stream, highlighting the line on which the error happened. If the\n\t * stream has more tokens, the next token will be highlighted. Otherwise the end of the source of the stream will be\n\t * highlighted.\n\t * </p>\n\t *\n\t * <p>\n\t * Throws a {@link RuntimeException}\n\t * </p>\n\t */</code>\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"KEYWORD\">void</code> <code class=\"FUNCTION_DECLARATOR\">error</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">message</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">TokenStream</code> <code class=\"VARIABLE_DECLARATOR\">stream</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">stream</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">hasMore</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n\t\t\t<code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"ANY\">message</code><code class=\"ANY\">,</code> <code class=\"ANY\">stream</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">consume</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getSpan</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t<code class=\"KEYWORD\">else</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">source</code> <code class=\"ANY\">=</code> <code class=\"ANY\">stream</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getSource</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">source</code> <code class=\"ANY\">==</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">)</code>\n\t\t\t\t<code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"ANY\">message</code><code class=\"ANY\">,</code> <code class=\"KEYWORD\">new</code> <code class=\"TYPE_IDENTIFIER\">Span</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\" \"</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">0</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">else</code>\n\t\t\t\t<code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"ANY\">message</code><code class=\"ANY\">,</code> <code class=\"KEYWORD\">new</code> <code class=\"TYPE_IDENTIFIER\">Span</code><code class=\"ANY\">(</code><code class=\"ANY\">source</code><code class=\"ANY\">,</code> <code class=\"ANY\">source</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">length</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">-</code> <code class=\"LITERAL\">1</code><code class=\"ANY\">,</code> <code class=\"ANY\">source</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">length</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\t<code class=\"ANY\">}</code>\n\n\t<code class=\"COMMENT\">/** Create an error message based on the provided message and location, highlighting the location in the line on which the\n\t * error happened. Throws a {@link TemplateException} **/</code>\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"KEYWORD\">void</code> <code class=\"FUNCTION_DECLARATOR\">error</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">message</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">Span</code> <code class=\"VARIABLE_DECLARATOR\">location</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">Throwable</code> <code class=\"VARIABLE_DECLARATOR\">cause</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\n\t\t<code class=\"TYPE_IDENTIFIER\">Line</code> <code class=\"VARIABLE_DECLARATOR\">line</code> <code class=\"ANY\">=</code> <code class=\"ANY\">location</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getLine</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">message</code> <code class=\"ANY\">=</code> <code class=\"CHAR_STRING_LITERAL\">\"Error (\"</code> <code class=\"ANY\">+</code> <code class=\"ANY\">line</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getLineNumber</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">+</code> <code class=\"CHAR_STRING_LITERAL\">\"): \"</code> <code class=\"ANY\">+</code> <code class=\"ANY\">message</code> <code class=\"ANY\">+</code> <code class=\"CHAR_STRING_LITERAL\">\"\\n\\n\"</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">message</code> <code class=\"ANY\">+=</code> <code class=\"ANY\">line</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getText</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">message</code> <code class=\"ANY\">+=</code> <code class=\"CHAR_STRING_LITERAL\">\"\\n\"</code><code class=\"ANY\">;</code>\n\n\t\t<code class=\"KEYWORD\">int</code> <code class=\"VARIABLE_DECLARATOR\">errorStart</code> <code class=\"ANY\">=</code> <code class=\"ANY\">location</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getStart</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">-</code> <code class=\"ANY\">line</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getStart</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t<code class=\"KEYWORD\">int</code> <code class=\"VARIABLE_DECLARATOR\">errorEnd</code> <code class=\"ANY\">=</code> <code class=\"ANY\">errorStart</code> <code class=\"ANY\">+</code> <code class=\"ANY\">location</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getText</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">length</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">-</code> <code class=\"LITERAL\">1</code><code class=\"ANY\">;</code>\n\t\t<code class=\"KEYWORD\">for</code> <code class=\"ANY\">(</code><code class=\"KEYWORD\">int</code> <code class=\"VARIABLE_DECLARATOR\">i</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">0</code><code class=\"ANY\">,</code> <code class=\"VARIABLE_DECLARATOR\">n</code> <code class=\"ANY\">=</code> <code class=\"ANY\">line</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getText</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">length</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code> <code class=\"ANY\">i</code> <code class=\"ANY\"><</code> <code class=\"ANY\">n</code><code class=\"ANY\">;</code> <code class=\"ANY\">i</code><code class=\"ANY\">++</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">boolean</code> <code class=\"VARIABLE_DECLARATOR\">useTab</code> <code class=\"ANY\">=</code> <code class=\"ANY\">line</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getText</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">charAt</code><code class=\"ANY\">(</code><code class=\"ANY\">i</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"CHAR_STRING_LITERAL\">'\\t'</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">message</code> <code class=\"ANY\">+=</code> <code class=\"ANY\">i</code> <code class=\"ANY\">>=</code> <code class=\"ANY\">errorStart</code> <code class=\"ANY\">&&</code> <code class=\"ANY\">i</code> <code class=\"ANY\"><=</code> <code class=\"ANY\">errorEnd</code> <code class=\"ANY\">?</code> <code class=\"CHAR_STRING_LITERAL\">\"^\"</code> <code class=\"ANY\">:</code> <code class=\"ANY\">useTab</code> <code class=\"ANY\">?</code> <code class=\"CHAR_STRING_LITERAL\">\"\\t\"</code> <code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\" \"</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">cause</code> <code class=\"ANY\">==</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">)</code>\n\t\t\t<code class=\"KEYWORD\">throw</code> <code class=\"KEYWORD\">new</code> <code class=\"TYPE_IDENTIFIER\">TemplateException</code><code class=\"ANY\">(</code><code class=\"ANY\">message</code><code class=\"ANY\">,</code> <code class=\"ANY\">location</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t<code class=\"KEYWORD\">else</code>\n\t\t\t<code class=\"KEYWORD\">throw</code> <code class=\"KEYWORD\">new</code> <code class=\"TYPE_IDENTIFIER\">TemplateException</code><code class=\"ANY\">(</code><code class=\"ANY\">message</code><code class=\"ANY\">,</code> <code class=\"ANY\">location</code><code class=\"ANY\">,</code> <code class=\"ANY\">cause</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t<code class=\"ANY\">}</code>\n\n\t<code class=\"COMMENT\">/** Create an error message based on the provided message and location, highlighting the location in the line on which the\n\t * error happened. Throws a {@link TemplateException} **/</code>\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"KEYWORD\">void</code> <code class=\"FUNCTION_DECLARATOR\">error</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">message</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">Span</code> <code class=\"VARIABLE_DECLARATOR\">location</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t<code class=\"FUNCTION_IDENTIFIER\">error</code><code class=\"ANY\">(</code><code class=\"ANY\">message</code><code class=\"ANY\">,</code> <code class=\"ANY\">location</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t<code class=\"ANY\">}</code>\n\n\t<code class=\"COMMENT\">/** Exception thrown by all basis-template code via {@link ExpressionError#error(String, Span)}. In case an error happens deep inside a\n\t * list of included templates, the {@link #getMessage()} method will return a condensed error message. **/</code>\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">TemplateException</code> <code class=\"KEYWORD\">extends</code> <code class=\"TYPE_IDENTIFIER\">RuntimeException</code> <code class=\"ANY\">{</code>\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"KEYWORD\">static</code> <code class=\"KEYWORD\">final</code> <code class=\"KEYWORD\">long</code> <code class=\"VARIABLE_DECLARATOR\">serialVersionUID</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">1L</code><code class=\"ANY\">;</code>\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">Span</code> <code class=\"VARIABLE_DECLARATOR\">location</code><code class=\"ANY\">;</code>\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"KEYWORD\">final</code> <code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">errorMessage</code><code class=\"ANY\">;</code>\n\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"FUNCTION_DECLARATOR\">TemplateException</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">message</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">Span</code> <code class=\"VARIABLE_DECLARATOR\">location</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">super</code><code class=\"ANY\">(</code><code class=\"ANY\">message</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">errorMessage</code> <code class=\"ANY\">=</code> <code class=\"ANY\">message</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">location</code> <code class=\"ANY\">=</code> <code class=\"ANY\">location</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"FUNCTION_DECLARATOR\">TemplateException</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">message</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">Span</code> <code class=\"VARIABLE_DECLARATOR\">location</code><code class=\"ANY\">,</code> <code class=\"TYPE_IDENTIFIER\">Throwable</code> <code class=\"VARIABLE_DECLARATOR\">cause</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">super</code><code class=\"ANY\">(</code><code class=\"ANY\">message</code><code class=\"ANY\">,</code> <code class=\"ANY\">cause</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">errorMessage</code> <code class=\"ANY\">=</code> <code class=\"ANY\">message</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">location</code> <code class=\"ANY\">=</code> <code class=\"ANY\">location</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"COMMENT\">/** Returns the location in the template at which the error happened. **/</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Span</code> <code class=\"FUNCTION_DECLARATOR\">getLocation</code> <code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">location</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\n\t\t<code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">Override</code>\n\t\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"FUNCTION_DECLARATOR\">getMessage</code> <code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"TYPE_IDENTIFIER\">StringBuilder</code> <code class=\"VARIABLE_DECLARATOR\">builder</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">new</code> <code class=\"TYPE_IDENTIFIER\">StringBuilder</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\n\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">getCause</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"LITERAL\">null</code> <code class=\"ANY\">||</code> <code class=\"FUNCTION_IDENTIFIER\">getCause</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"KEYWORD\">this</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"KEYWORD\">super</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getMessage</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code>\n\n\t\t\t<code class=\"ANY\">builder</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">append</code><code class=\"ANY\">(</code><code class=\"ANY\">errorMessage</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">substring</code><code class=\"ANY\">(</code><code class=\"LITERAL\">0</code><code class=\"ANY\">,</code> <code class=\"ANY\">errorMessage</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">indexOf</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">'\\n'</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">builder</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">append</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"\\n\"</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\n\t\t\t<code class=\"TYPE_IDENTIFIER\">Throwable</code> <code class=\"VARIABLE_DECLARATOR\">cause</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">getCause</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"KEYWORD\">while</code> <code class=\"ANY\">(</code><code class=\"ANY\">cause</code> <code class=\"ANY\">!=</code> <code class=\"LITERAL\">null</code> <code class=\"ANY\">&&</code> <code class=\"ANY\">cause</code> <code class=\"ANY\">!=</code> <code class=\"KEYWORD\">this</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">cause</code> <code class=\"KEYWORD\">instanceof</code> <code class=\"TYPE_IDENTIFIER\">TemplateException</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t\t\t<code class=\"TYPE_IDENTIFIER\">TemplateException</code> <code class=\"VARIABLE_DECLARATOR\">ex</code> <code class=\"ANY\">=</code> <code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">TemplateException</code><code class=\"ANY\">)</code><code class=\"ANY\">cause</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">ex</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getCause</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"LITERAL\">null</code> <code class=\"ANY\">||</code> <code class=\"ANY\">ex</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getCause</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"ANY\">ex</code><code class=\"ANY\">)</code>\n\t\t\t\t\t\t<code class=\"ANY\">builder</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">append</code><code class=\"ANY\">(</code><code class=\"ANY\">ex</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">errorMessage</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"KEYWORD\">else</code>\n\t\t\t\t\t\t<code class=\"ANY\">builder</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">append</code><code class=\"ANY\">(</code><code class=\"ANY\">ex</code><code class=\"ANY\">.</code><code class=\"ANY\">errorMessage</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">substring</code><code class=\"ANY\">(</code><code class=\"LITERAL\">0</code><code class=\"ANY\">,</code> <code class=\"ANY\">ex</code><code class=\"ANY\">.</code><code class=\"ANY\">errorMessage</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">indexOf</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">'\\n'</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t\t<code class=\"ANY\">builder</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">append</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"\\n\"</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t\t<code class=\"ANY\">}</code>\n\t\t\t\t<code class=\"ANY\">cause</code> <code class=\"ANY\">=</code> <code class=\"ANY\">cause</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getCause</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">builder</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">toString</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\t<code class=\"ANY\">}</code>\n\t\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">static</code> <code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">StringLiteralException</code> <code class=\"KEYWORD\">extends</code> <code class=\"TYPE_IDENTIFIER\">RuntimeException</code> <code class=\"ANY\">{</code>\n\n\t\t<code class=\"KEYWORD\">private</code> <code class=\"KEYWORD\">static</code> <code class=\"KEYWORD\">final</code> <code class=\"KEYWORD\">long</code> <code class=\"VARIABLE_DECLARATOR\">serialVersionUID</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">1L</code><code class=\"ANY\">;</code>\n\t\t\n\t<code class=\"ANY\">}</code>\n<code class=\"ANY\">}</code>\n\n</pre>\n</html>"},{"_id":{"language":"JAVA","lexingTokens":[32,102,65,102,65,102,63,25,102,65,102,65,102,65,102,63,35,28,102,59,106,48,102,57,102,102,58,63,106,48,102,57,102,102,58,63,60,-1]},"sourceCode":"package org.spiderflow.listener;\n\nimport org.spiderflow.context.SpiderContext;\n\npublic interface SpiderListener {\n\n\t/**\n\t * 开始执行之前\n\t */\n\tvoid beforeStart(SpiderContext context);\n\t\n\t/**\n\t * 执行完毕之后\n\t */\n\tvoid afterEnd(SpiderContext context);\n\t\n}\n","highlightingTokens":[1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,5,0,4,1,6,0,8,7,0,0,4,1,6,0,8,7,0,0,0,0],"highlightingCode":"<!DOCTYPE html>\n<html>\n<style>\n.ANY {\n    color: black;\n    font-weight: normal;\n    font-style: normal;\n}\n.KEYWORD {\n    color: blue;\n    font-weight: bold;\n    font-style: normal;\n}\n.LITERAL {\n    color: lightskyblue;\n    font-weight: bold;\n    font-style: normal;\n}\n.CHAR_STRING_LITERAL {\n    color: darkgoldenrod;\n    font-weight: normal;\n    font-style: normal;\n}\n.COMMENT {\n    color: grey;\n    font-weight: normal;\n    font-style: italic;\n}\n.CLASS_DECLARATOR {\n    color: crimson;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_DECLARATOR {\n    color: fuchsia;\n    font-weight: bold;\n    font-style: normal;\n}\n.VARIABLE_DECLARATOR {\n    color: purple;\n    font-weight: bold;\n    font-style: normal;\n}\n.TYPE_IDENTIFIER {\n    color: darkgreen;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_IDENTIFIER {\n    color: dodgerblue;\n    font-weight: normal;\n    font-style: normal;\n}\n.FIELD_IDENTIFIER {\n    color: coral;\n    font-weight: normal;\n    font-style: normal;\n}\n.ANNOTATION_DECLARATOR {\n    color: lightslategray;\n    font-weight: lighter;\n    font-style: italic;\n}\n</style>\n<pre>\n<code class=\"KEYWORD\">package</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">spiderflow</code><code class=\"ANY\">.</code><code class=\"ANY\">listener</code><code class=\"ANY\">;</code>\n\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">spiderflow</code><code class=\"ANY\">.</code><code class=\"ANY\">context</code><code class=\"ANY\">.</code><code class=\"ANY\">SpiderContext</code><code class=\"ANY\">;</code>\n\n<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">interface</code> <code class=\"CLASS_DECLARATOR\">SpiderListener</code> <code class=\"ANY\">{</code>\n\n\t<code class=\"COMMENT\">/**\n\t * 开始执行之前\n\t */</code>\n\t<code class=\"KEYWORD\">void</code> <code class=\"FUNCTION_DECLARATOR\">beforeStart</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">SpiderContext</code> <code class=\"VARIABLE_DECLARATOR\">context</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\n\t<code class=\"COMMENT\">/**\n\t * 执行完毕之后\n\t */</code>\n\t<code class=\"KEYWORD\">void</code> <code class=\"FUNCTION_DECLARATOR\">afterEnd</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">SpiderContext</code> <code class=\"VARIABLE_DECLARATOR\">context</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\n<code class=\"ANY\">}</code>\n\n</pre>\n</html>"},{"_id":{"language":"JAVA","lexingTokens":[32,102,65,102,65,102,65,102,63,25,102,65,102,65,102,65,102,63,25,102,65,102,65,102,65,102,63,25,102,65,102,65,102,63,25,102,65,102,65,102,65,102,63,25,102,65,102,65,102,63,25,102,65,102,65,102,63,106,35,9,102,24,102,59,33,102,102,63,33,27,102,63,33,102,102,63,33,102,102,63,33,102,102,63,33,102,102,63,35,102,57,102,102,58,59,40,57,58,63,43,65,102,66,102,63,43,65,102,66,102,65,102,57,58,63,43,65,102,66,102,65,102,57,58,65,102,57,58,63,60,103,102,35,27,102,57,58,59,36,102,63,60,103,102,35,102,102,57,58,59,22,57,102,73,56,58,59,42,57,43,58,59,102,66,102,65,102,57,102,57,58,58,65,102,57,58,63,60,60,36,102,63,60,103,102,35,102,102,57,58,59,22,57,102,73,56,58,59,42,57,43,58,59,102,66,102,65,102,57,58,63,60,60,36,102,63,60,103,102,35,102,102,57,58,59,22,57,102,73,56,58,59,102,66,102,65,102,57,102,57,58,58,63,60,36,102,63,60,103,102,35,102,68,102,64,102,67,102,57,58,59,36,102,65,102,57,58,63,60,103,102,35,102,68,102,64,102,67,102,57,58,59,36,102,65,102,57,58,63,60,103,102,35,5,61,62,102,57,58,59,36,102,65,102,57,58,63,60,103,102,35,102,102,57,58,59,36,102,65,102,57,58,63,60,103,102,35,48,102,57,102,102,58,59,43,65,102,65,102,57,102,58,63,60,103,102,35,102,102,57,58,59,36,102,63,60,103,102,35,102,102,57,58,59,36,102,65,102,57,58,63,60,60,-1]},"sourceCode":"package org.spiderflow.core.io;\n\nimport com.alibaba.fastjson.JSON;\nimport org.jsoup.Connection.Response;\nimport org.jsoup.Jsoup;\nimport org.spiderflow.io.SpiderResponse;\n\nimport java.io.InputStream;\nimport java.util.Map;\n\n/**\n * 响应对象包装类\n * @author Administrator\n *\n */\npublic class HttpResponse implements SpiderResponse{\n\n\tprivate Response response;\n\n\tprivate int statusCode;\n\n\tprivate String urlLink;\n\n\tprivate String htmlValue;\n\n\tprivate String titleName;\n\n\tprivate Object jsonValue;\n\n\tpublic HttpResponse(Response response){\n\t\tsuper();\n\t\tthis.response = response;\n\t\tthis.statusCode = response.statusCode();\n\t\tthis.urlLink = response.url().toExternalForm();\n\t}\n\t\n\t@Override\n\tpublic int getStatusCode(){\n\t\treturn statusCode;\n\t}\n\n\t@Override\n\tpublic String getTitle() {\n\t\tif (titleName == null) {\n\t\t\tsynchronized (this){\n\t\t\t\ttitleName = Jsoup.parse(getHtml()).title();\n\t\t\t}\n\t\t}\n\t\treturn titleName;\n\t}\n\n\t@Override\n\tpublic String getHtml(){\n\t\tif(htmlValue == null){\n\t\t\tsynchronized (this){\n\t\t\t\thtmlValue = response.body();\n\t\t\t}\n\t\t}\n\t\treturn htmlValue;\n\t}\n\t\n\t@Override\n\tpublic Object getJson(){\n\t\tif(jsonValue == null){\n\t\t\tjsonValue = JSON.parse(getHtml());\n\t\t}\n\t\treturn jsonValue;\n\t}\n\t\n\t@Override\n\tpublic Map<String,String> getCookies(){\n\t\treturn response.cookies();\n\t}\n\t\n\t@Override\n\tpublic Map<String,String> getHeaders(){\n\t\treturn response.headers();\n\t}\n\t\n\t@Override\n\tpublic byte[] getBytes(){\n\t\treturn response.bodyAsBytes();\n\t}\n\t\n\t@Override\n\tpublic String getContentType(){\n\t\treturn response.contentType();\n\t}\n\n\t@Override\n\tpublic void setCharset(String charset) {\n\t\tthis.response.charset(charset);\n\t}\n\n\t@Override\n\tpublic String getUrl() {\n\t\treturn urlLink;\n\t}\n\n\t@Override\n\tpublic InputStream getStream() {\n\t\treturn response.bodyStream();\n\t}\n}\n","highlightingTokens":[1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,4,1,1,5,1,8,0,1,8,7,0,1,1,7,0,1,8,7,0,1,8,7,0,1,8,7,0,1,8,7,0,1,6,0,8,7,0,0,1,0,0,0,1,0,10,0,0,0,1,0,10,0,0,0,9,0,0,0,1,0,10,0,0,0,9,0,0,0,9,0,0,0,0,11,11,1,1,6,0,0,0,1,0,0,0,11,11,1,8,6,0,0,0,1,0,0,0,2,0,0,1,0,1,0,0,0,0,0,0,9,0,9,0,0,0,0,9,0,0,0,0,0,1,0,0,0,11,11,1,8,6,0,0,0,1,0,0,0,2,0,0,1,0,1,0,0,0,0,0,0,9,0,0,0,0,0,1,0,0,0,11,11,1,8,6,0,0,0,1,0,0,0,2,0,0,0,0,0,0,9,0,9,0,0,0,0,0,1,0,0,0,11,11,1,8,0,8,0,8,0,6,0,0,0,1,0,0,9,0,0,0,0,11,11,1,8,0,8,0,8,0,6,0,0,0,1,0,0,9,0,0,0,0,11,11,1,1,0,0,6,0,0,0,1,0,0,9,0,0,0,0,11,11,1,8,6,0,0,0,1,0,0,9,0,0,0,0,11,11,1,1,6,0,8,7,0,0,1,0,10,0,9,0,0,0,0,0,11,11,1,8,6,0,0,0,1,0,0,0,11,11,1,8,6,0,0,0,1,0,0,9,0,0,0,0,0,0],"highlightingCode":"<!DOCTYPE html>\n<html>\n<style>\n.ANY {\n    color: black;\n    font-weight: normal;\n    font-style: normal;\n}\n.KEYWORD {\n    color: blue;\n    font-weight: bold;\n    font-style: normal;\n}\n.LITERAL {\n    color: lightskyblue;\n    font-weight: bold;\n    font-style: normal;\n}\n.CHAR_STRING_LITERAL {\n    color: darkgoldenrod;\n    font-weight: normal;\n    font-style: normal;\n}\n.COMMENT {\n    color: grey;\n    font-weight: normal;\n    font-style: italic;\n}\n.CLASS_DECLARATOR {\n    color: crimson;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_DECLARATOR {\n    color: fuchsia;\n    font-weight: bold;\n    font-style: normal;\n}\n.VARIABLE_DECLARATOR {\n    color: purple;\n    font-weight: bold;\n    font-style: normal;\n}\n.TYPE_IDENTIFIER {\n    color: darkgreen;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_IDENTIFIER {\n    color: dodgerblue;\n    font-weight: normal;\n    font-style: normal;\n}\n.FIELD_IDENTIFIER {\n    color: coral;\n    font-weight: normal;\n    font-style: normal;\n}\n.ANNOTATION_DECLARATOR {\n    color: lightslategray;\n    font-weight: lighter;\n    font-style: italic;\n}\n</style>\n<pre>\n<code class=\"KEYWORD\">package</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">spiderflow</code><code class=\"ANY\">.</code><code class=\"ANY\">core</code><code class=\"ANY\">.</code><code class=\"ANY\">io</code><code class=\"ANY\">;</code>\n\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">alibaba</code><code class=\"ANY\">.</code><code class=\"ANY\">fastjson</code><code class=\"ANY\">.</code><code class=\"ANY\">JSON</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">jsoup</code><code class=\"ANY\">.</code><code class=\"ANY\">Connection</code><code class=\"ANY\">.</code><code class=\"ANY\">Response</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">jsoup</code><code class=\"ANY\">.</code><code class=\"ANY\">Jsoup</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">org</code><code class=\"ANY\">.</code><code class=\"ANY\">spiderflow</code><code class=\"ANY\">.</code><code class=\"ANY\">io</code><code class=\"ANY\">.</code><code class=\"ANY\">SpiderResponse</code><code class=\"ANY\">;</code>\n\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">java</code><code class=\"ANY\">.</code><code class=\"ANY\">io</code><code class=\"ANY\">.</code><code class=\"ANY\">InputStream</code><code class=\"ANY\">;</code>\n<code class=\"KEYWORD\">import</code> <code class=\"ANY\">java</code><code class=\"ANY\">.</code><code class=\"ANY\">util</code><code class=\"ANY\">.</code><code class=\"ANY\">Map</code><code class=\"ANY\">;</code>\n\n<code class=\"COMMENT\">/**\n * 响应对象包装类\n * @author Administrator\n *\n */</code>\n<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">HttpResponse</code> <code class=\"KEYWORD\">implements</code> <code class=\"TYPE_IDENTIFIER\">SpiderResponse</code><code class=\"ANY\">{</code>\n\n\t<code class=\"KEYWORD\">private</code> <code class=\"TYPE_IDENTIFIER\">Response</code> <code class=\"VARIABLE_DECLARATOR\">response</code><code class=\"ANY\">;</code>\n\n\t<code class=\"KEYWORD\">private</code> <code class=\"KEYWORD\">int</code> <code class=\"VARIABLE_DECLARATOR\">statusCode</code><code class=\"ANY\">;</code>\n\n\t<code class=\"KEYWORD\">private</code> <code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">urlLink</code><code class=\"ANY\">;</code>\n\n\t<code class=\"KEYWORD\">private</code> <code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">htmlValue</code><code class=\"ANY\">;</code>\n\n\t<code class=\"KEYWORD\">private</code> <code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">titleName</code><code class=\"ANY\">;</code>\n\n\t<code class=\"KEYWORD\">private</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"VARIABLE_DECLARATOR\">jsonValue</code><code class=\"ANY\">;</code>\n\n\t<code class=\"KEYWORD\">public</code> <code class=\"FUNCTION_DECLARATOR\">HttpResponse</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">Response</code> <code class=\"VARIABLE_DECLARATOR\">response</code><code class=\"ANY\">)</code><code class=\"ANY\">{</code>\n\t\t<code class=\"KEYWORD\">super</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">response</code> <code class=\"ANY\">=</code> <code class=\"ANY\">response</code><code class=\"ANY\">;</code>\n\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">statusCode</code> <code class=\"ANY\">=</code> <code class=\"ANY\">response</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">statusCode</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">urlLink</code> <code class=\"ANY\">=</code> <code class=\"ANY\">response</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">url</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">toExternalForm</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t<code class=\"ANY\">}</code>\n\t\n\t<code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">Override</code>\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">int</code> <code class=\"FUNCTION_DECLARATOR\">getStatusCode</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">{</code>\n\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">statusCode</code><code class=\"ANY\">;</code>\n\t<code class=\"ANY\">}</code>\n\n\t<code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">Override</code>\n\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"FUNCTION_DECLARATOR\">getTitle</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t<code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">titleName</code> <code class=\"ANY\">==</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">synchronized</code> <code class=\"ANY\">(</code><code class=\"KEYWORD\">this</code><code class=\"ANY\">)</code><code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"ANY\">titleName</code> <code class=\"ANY\">=</code> <code class=\"ANY\">Jsoup</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">parse</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">getHtml</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">title</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t<code class=\"ANY\">}</code>\n\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">titleName</code><code class=\"ANY\">;</code>\n\t<code class=\"ANY\">}</code>\n\n\t<code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">Override</code>\n\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"FUNCTION_DECLARATOR\">getHtml</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">{</code>\n\t\t<code class=\"KEYWORD\">if</code><code class=\"ANY\">(</code><code class=\"ANY\">htmlValue</code> <code class=\"ANY\">==</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">)</code><code class=\"ANY\">{</code>\n\t\t\t<code class=\"KEYWORD\">synchronized</code> <code class=\"ANY\">(</code><code class=\"KEYWORD\">this</code><code class=\"ANY\">)</code><code class=\"ANY\">{</code>\n\t\t\t\t<code class=\"ANY\">htmlValue</code> <code class=\"ANY\">=</code> <code class=\"ANY\">response</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">body</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t\t<code class=\"ANY\">}</code>\n\t\t<code class=\"ANY\">}</code>\n\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">htmlValue</code><code class=\"ANY\">;</code>\n\t<code class=\"ANY\">}</code>\n\t\n\t<code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">Override</code>\n\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Object</code> <code class=\"FUNCTION_DECLARATOR\">getJson</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">{</code>\n\t\t<code class=\"KEYWORD\">if</code><code class=\"ANY\">(</code><code class=\"ANY\">jsonValue</code> <code class=\"ANY\">==</code> <code class=\"LITERAL\">null</code><code class=\"ANY\">)</code><code class=\"ANY\">{</code>\n\t\t\t<code class=\"ANY\">jsonValue</code> <code class=\"ANY\">=</code> <code class=\"ANY\">JSON</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">parse</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">getHtml</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t\t<code class=\"ANY\">}</code>\n\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">jsonValue</code><code class=\"ANY\">;</code>\n\t<code class=\"ANY\">}</code>\n\t\n\t<code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">Override</code>\n\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Map</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">String</code><code class=\"ANY\">,</code><code class=\"TYPE_IDENTIFIER\">String</code><code class=\"ANY\">></code> <code class=\"FUNCTION_DECLARATOR\">getCookies</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">{</code>\n\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">response</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">cookies</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t<code class=\"ANY\">}</code>\n\t\n\t<code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">Override</code>\n\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">Map</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">String</code><code class=\"ANY\">,</code><code class=\"TYPE_IDENTIFIER\">String</code><code class=\"ANY\">></code> <code class=\"FUNCTION_DECLARATOR\">getHeaders</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">{</code>\n\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">response</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">headers</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t<code class=\"ANY\">}</code>\n\t\n\t<code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">Override</code>\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">byte</code><code class=\"ANY\">[</code><code class=\"ANY\">]</code> <code class=\"FUNCTION_DECLARATOR\">getBytes</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">{</code>\n\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">response</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">bodyAsBytes</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t<code class=\"ANY\">}</code>\n\t\n\t<code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">Override</code>\n\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"FUNCTION_DECLARATOR\">getContentType</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">{</code>\n\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">response</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">contentType</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t<code class=\"ANY\">}</code>\n\n\t<code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">Override</code>\n\t<code class=\"KEYWORD\">public</code> <code class=\"KEYWORD\">void</code> <code class=\"FUNCTION_DECLARATOR\">setCharset</code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"VARIABLE_DECLARATOR\">charset</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t<code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">response</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">charset</code><code class=\"ANY\">(</code><code class=\"ANY\">charset</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t<code class=\"ANY\">}</code>\n\n\t<code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">Override</code>\n\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">String</code> <code class=\"FUNCTION_DECLARATOR\">getUrl</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">urlLink</code><code class=\"ANY\">;</code>\n\t<code class=\"ANY\">}</code>\n\n\t<code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">Override</code>\n\t<code class=\"KEYWORD\">public</code> <code class=\"TYPE_IDENTIFIER\">InputStream</code> <code class=\"FUNCTION_DECLARATOR\">getStream</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">{</code>\n\t\t<code class=\"KEYWORD\">return</code> <code class=\"ANY\">response</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">bodyStream</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">;</code>\n\t<code class=\"ANY\">}</code>\n<code class=\"ANY\">}</code>\n\n</pre>\n</html>"},{"_id":{"language":"KOTLIN","lexingTokens},"sourceCode":"package press.editor.format\n\nimport android.graphics.drawable.GradientDrawable\nimport android.graphics.drawable.GradientDrawable.Orientation.TOP_BOTTOM\nimport android.view.Gravity.CENTER\nimport android.view.HapticFeedbackConstants.LONG_PRESS\nimport android.view.View\nimport android.widget.FrameLayout.LayoutParams.MATCH_PARENT\nimport android.widget.FrameLayout.LayoutParams.WRAP_CONTENT\nimport android.widget.HorizontalScrollView\nimport android.widget.LinearLayout\nimport android.widget.LinearLayout.HORIZONTAL\nimport androidx.core.text.buildSpannedString\nimport androidx.core.text.color\nimport androidx.core.text.inSpans\nimport androidx.core.view.plusAssign\nimport androidx.core.view.setPadding\nimport me.saket.press.R\nimport me.saket.press.shared.localization.strings\nimport me.saket.press.shared.theme.TextStyles.smallTitle\nimport me.saket.wysiwyg.formatting.BlockQuoteSyntaxApplier\nimport me.saket.wysiwyg.formatting.EmphasisSyntaxApplier\nimport me.saket.wysiwyg.formatting.HeadingSyntaxApplier\nimport me.saket.wysiwyg.formatting.InlineCodeSyntaxApplier\nimport me.saket.wysiwyg.formatting.MarkdownSyntaxApplier\nimport me.saket.wysiwyg.formatting.ParagraphBounds\nimport me.saket.wysiwyg.formatting.StrikethroughSyntaxApplier\nimport me.saket.wysiwyg.formatting.StrongEmphasisSyntaxApplier\nimport me.saket.wysiwyg.formatting.TextSelection\nimport me.saket.wysiwyg.formatting.from\nimport me.saket.wysiwyg.spans.MonospaceTypefaceSpan\nimport me.saket.wysiwyg.style.withOpacity\nimport press.editor.MarkdownEditText\nimport press.extensions.borderlessRippleDrawable\nimport press.extensions.getDrawable\nimport press.extensions.showKeyboard\nimport press.extensions.textColor\nimport press.extensions.updatePadding\nimport press.theme.themePalette\nimport press.widgets.PressBorderlessImageButton\nimport press.widgets.PressButton\nimport press.widgets.dp\n\nclass EditorFormattingToolbar(\n  private val editorEditText: MarkdownEditText\n) : HorizontalScrollView(editorEditText.context) {\n\n  private val actionListView = LinearLayout(context).apply {\n    orientation = HORIZONTAL\n    gravity = CENTER\n  }\n\n  init {\n    isHorizontalScrollBarEnabled = false\n    isFillViewport = true\n    clipToPadding = false\n    updatePadding(horizontal = dp(12))\n    addView(actionListView)\n\n    // A background is important so that the button ripples are drawn over it instead of\n    // over the editor in the background, and thus clipped to this layout's height.\n    setBackgroundColor(themePalette().window.elevatedBackgroundColor)\n\n    actionListView += createButton(\n      FormatActionIcon(\n        iconRes = R.drawable.ic_twotone_undo_24,\n        label = context.strings().editor.formattingtoolbar_undo,\n        onClick = { editorEditText.onTextContextMenuItem(android.R.id.undo) }\n      )\n    )\n    actionListView += createButton(\n      FormatActionIcon(\n        iconRes = R.drawable.ic_twotone_redo_24,\n        label = context.strings().editor.formattingtoolbar_redo,\n        onClick = { editorEditText.onTextContextMenuItem(android.R.id.redo) }\n      )\n    )\n    actionListView += createDivider()\n    actionListView += createButton(\n      FormatActionIcon(\n        iconRes = R.drawable.ic_format_heading_24,\n        label = context.strings().editor.formattingtoolbar_heading,\n        onClick = { applyMarkdownSyntax(HeadingSyntaxApplier) }\n      )\n    )\n    actionListView += createButton(\n      FormatActionIcon(\n        iconRes = R.drawable.ic_twotone_format_strong_emphasis_24,\n        label = context.strings().editor.formattingtoolbar_strong_emphasis,\n        onClick = { applyMarkdownSyntax(StrongEmphasisSyntaxApplier) }\n      )\n    )\n    actionListView += createButton(\n      FormatActionIcon(\n        iconRes = R.drawable.ic_twotone_format_emphasis_24,\n        label = context.strings().editor.formattingtoolbar_emphasis,\n        onClick = { applyMarkdownSyntax(EmphasisSyntaxApplier) }\n      )\n    )\n    actionListView += createButton(\n      FormatActionIcon(\n        iconRes = R.drawable.ic_twotone_format_strikethrough_24,\n        label = context.strings().editor.formattingtoolbar_strikethrough,\n        onClick = { applyMarkdownSyntax(StrikethroughSyntaxApplier) }\n      )\n    )\n    actionListView += createDivider()\n    actionListView += createButton(\n      FormatActionText(\n        label = buildSpannedString {\n          color(themePalette().markdown.syntaxColor) { append('`') }\n          inSpans(MonospaceTypefaceSpan {}) {\n            append(context.strings().editor.formattingtoolbar_inline_code)\n          }\n          color(themePalette().markdown.syntaxColor) { append('`') }\n        },\n        onClick = { applyMarkdownSyntax(InlineCodeSyntaxApplier) }\n      )\n    )\n    actionListView += createDivider()\n    actionListView += createButton(\n      FormatActionText(\n        label = buildSpannedString {\n          color(themePalette().markdown.blockQuoteTextColor) { append(\"> \") }\n          append(context.strings().editor.formattingtoolbar_blockquote)\n        },\n        onClick = { applyMarkdownSyntax(BlockQuoteSyntaxApplier) }\n      )\n    )\n  }\n\n  private fun createButton(action: FormatAction): View {\n    val button = when (action) {\n      is FormatActionText -> {\n        PressButton(context, smallTitle).also {\n          it.elevation = 0f\n          it.stateListAnimator = null\n          it.gravity = CENTER\n          it.compoundDrawablePadding = dp(4)\n          it.layoutParams = LayoutParams(WRAP_CONTENT, MATCH_PARENT)\n          it.updatePadding(horizontal = dp(12), vertical = dp(4))\n          it.text = action.label\n          it.textColor = themePalette().textColorPrimary\n        }\n      }\n      is FormatActionIcon -> {\n        PressBorderlessImageButton(context).also {\n          it.contentDescription = action.label\n          it.tooltipText = action.label\n          it.layoutParams = LayoutParams(WRAP_CONTENT, MATCH_PARENT)\n          it.setPadding(dp(12))\n          it.setImageDrawable(context.getDrawable(action.iconRes, themePalette().textColorPrimary))\n        }\n      }\n    }\n\n    button.setOnClickListener {\n      button.performHapticFeedback(LONG_PRESS)\n      action.onClick(button)\n    }\n    button.background = borderlessRippleDrawable()\n    return button\n  }\n\n  private fun createDivider(): View {\n    return View(context).also {\n      it.layoutParams = LayoutParams(dp(1), MATCH_PARENT)\n      it.background = GradientDrawable(\n        TOP_BOTTOM,\n        intArrayOf(themePalette().divider.withOpacity(0f), themePalette().divider)\n      )\n    }\n  }\n\n  private fun applyMarkdownSyntax(applier: MarkdownSyntaxApplier) {\n    val selection = TextSelection.from(editorEditText)\n    if (selection != null) {\n      val replacement = applier.apply(editorEditText.text, selection)\n      editorEditText.setTextWithoutBustingUndoHistory(replacement.replacement, replacement.newSelection)\n\n    } else {\n      editorEditText.let {\n        // If the cursor isn't visible, show the keyboard at the end\n        // of the first paragraph (this will usually be the heading).\n        val firstParagraph = ParagraphBounds.find(editorEditText.text, TextSelection.cursor(0))\n        it.setSelection(firstParagraph.endExclusive)\n        it.requestFocus()\n        it.showKeyboard()\n      }\n    }\n  }\n\n}\n\nprivate sealed class FormatAction {\n  abstract val onClick: (View) -> Unit\n}\n\nprivate data class FormatActionIcon(\n  val iconRes: Int,\n  val label: String,\n  override val onClick: (View) -> Unit\n) : FormatAction()\n\nprivate data class FormatActionText(\n  val label: CharSequence,\n  override val onClick: (View) -> Unit\n) : FormatAction()\n","highlightingTokens":[1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,5,0,0,0,0,1,0,1,0,0,0,0,8,0,0,0,0,0,8,0,0,0,10,0,0,0,0,0,0,0,1,0,1,0,7,0,0,0,9,0,0,0,0,9,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,9,0,0,0,0,0,9,0,2,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,4,0,0,0,0,0,9,0,9,0,0,0,10,0,10,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,10,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,9,0,0,0,10,0,10,0,10,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,10,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,9,0,0,0,10,0,10,0,10,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,10,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,9,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,10,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,9,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,10,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,9,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,10,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,9,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,0,0,0,0,0,0,0,0,0,0,9,0,9,0,0,0,10,0,10,0,0,6,0,9,0,3,0,0,6,0,0,0,0,0,0,0,0,0,0,0,9,0,9,0,6,6,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,10,0,10,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,9,0,9,0,0,0,10,0,10,0,0,6,0,9,0,3,0,0,6,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,9,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,0,0,0,0,0,0,0,0,0,0,9,0,9,0,0,0,10,0,10,0,0,6,0,9,0,3,3,3,0,0,6,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,10,0,10,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,9,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,6,0,0,0,0,8,0,0,0,8,0,0,0,0,0,0,0,1,0,7,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,9,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,9,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,9,0,2,0,0,0,0,0,0,0,9,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,9,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,9,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,10,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,10,0,0,0,9,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,6,0,0,0,0,8,0,0,0,0,0,0,0,1,0,9,0,0,0,0,9,0,6,0,0,0,0,0,0,0,0,0,10,0,0,0,9,0,9,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,9,0,0,0,10,0,9,0,2,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,1,0,1,0,6,0,0,0,0,8,0,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,10,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,0,0,10,0,0,0,0,9,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,5,0,0,0,0,0,1,0,1,0,7,0,0,0,8,0,0,0,0,8,0,0,0,0,1,0,1,0,1,0,5,0,0,0,0,1,0,0,0,0,8,0,0,0,0,1,0,0,0,0,8,0,0,0,0,1,0,1,0,0,0,0,0,8,0,0,0,0,8,0,0,0,0,0,8,0,0,0,0,1,0,1,0,1,0,5,0,0,0,0,1,0,0,0,0,8,0,0,0,0,1,0,1,0,0,0,0,0,8,0,0,0,0,8,0,0,0,0,0,8,0,0,0,0],"highlightingCode":"<!DOCTYPE html>\n<html>\n<style>\n.ANY {\n    color: black;\n    font-weight: normal;\n    font-style: normal;\n}\n.KEYWORD {\n    color: blue;\n    font-weight: bold;\n    font-style: normal;\n}\n.LITERAL {\n    color: lightskyblue;\n    font-weight: bold;\n    font-style: normal;\n}\n.CHAR_STRING_LITERAL {\n    color: darkgoldenrod;\n    font-weight: normal;\n    font-style: normal;\n}\n.COMMENT {\n    color: grey;\n    font-weight: normal;\n    font-style: italic;\n}\n.CLASS_DECLARATOR {\n    color: crimson;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_DECLARATOR {\n    color: fuchsia;\n    font-weight: bold;\n    font-style: normal;\n}\n.VARIABLE_DECLARATOR {\n    color: purple;\n    font-weight: bold;\n    font-style: normal;\n}\n.TYPE_IDENTIFIER {\n    color: darkgreen;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_IDENTIFIER {\n    color: dodgerblue;\n    font-weight: normal;\n    font-style: normal;\n}\n.FIELD_IDENTIFIER {\n    color: coral;\n    font-weight: normal;\n    font-style: normal;\n}\n.ANNOTATION_DECLARATOR {\n    color: lightslategray;\n    font-weight: lighter;\n    font-style: italic;\n}\n</style>\n<pre>\n<code class=\"KEYWORD\">package</code><code class=\"ANY\"> </code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">editor</code><code class=\"ANY\">.</code><code class=\"ANY\">format</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">android</code><code class=\"ANY\">.</code><code class=\"ANY\">graphics</code><code class=\"ANY\">.</code><code class=\"ANY\">drawable</code><code class=\"ANY\">.</code><code class=\"ANY\">GradientDrawable</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">android</code><code class=\"ANY\">.</code><code class=\"ANY\">graphics</code><code class=\"ANY\">.</code><code class=\"ANY\">drawable</code><code class=\"ANY\">.</code><code class=\"ANY\">GradientDrawable</code><code class=\"ANY\">.</code><code class=\"ANY\">Orientation</code><code class=\"ANY\">.</code><code class=\"ANY\">TOP_BOTTOM</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">android</code><code class=\"ANY\">.</code><code class=\"ANY\">view</code><code class=\"ANY\">.</code><code class=\"ANY\">Gravity</code><code class=\"ANY\">.</code><code class=\"ANY\">CENTER</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">android</code><code class=\"ANY\">.</code><code class=\"ANY\">view</code><code class=\"ANY\">.</code><code class=\"ANY\">HapticFeedbackConstants</code><code class=\"ANY\">.</code><code class=\"ANY\">LONG_PRESS</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">android</code><code class=\"ANY\">.</code><code class=\"ANY\">view</code><code class=\"ANY\">.</code><code class=\"ANY\">View</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">android</code><code class=\"ANY\">.</code><code class=\"ANY\">widget</code><code class=\"ANY\">.</code><code class=\"ANY\">FrameLayout</code><code class=\"ANY\">.</code><code class=\"ANY\">LayoutParams</code><code class=\"ANY\">.</code><code class=\"ANY\">MATCH_PARENT</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">android</code><code class=\"ANY\">.</code><code class=\"ANY\">widget</code><code class=\"ANY\">.</code><code class=\"ANY\">FrameLayout</code><code class=\"ANY\">.</code><code class=\"ANY\">LayoutParams</code><code class=\"ANY\">.</code><code class=\"ANY\">WRAP_CONTENT</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">android</code><code class=\"ANY\">.</code><code class=\"ANY\">widget</code><code class=\"ANY\">.</code><code class=\"ANY\">HorizontalScrollView</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">android</code><code class=\"ANY\">.</code><code class=\"ANY\">widget</code><code class=\"ANY\">.</code><code class=\"ANY\">LinearLayout</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">android</code><code class=\"ANY\">.</code><code class=\"ANY\">widget</code><code class=\"ANY\">.</code><code class=\"ANY\">LinearLayout</code><code class=\"ANY\">.</code><code class=\"ANY\">HORIZONTAL</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">androidx</code><code class=\"ANY\">.</code><code class=\"ANY\">core</code><code class=\"ANY\">.</code><code class=\"ANY\">text</code><code class=\"ANY\">.</code><code class=\"ANY\">buildSpannedString</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">androidx</code><code class=\"ANY\">.</code><code class=\"ANY\">core</code><code class=\"ANY\">.</code><code class=\"ANY\">text</code><code class=\"ANY\">.</code><code class=\"ANY\">color</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">androidx</code><code class=\"ANY\">.</code><code class=\"ANY\">core</code><code class=\"ANY\">.</code><code class=\"ANY\">text</code><code class=\"ANY\">.</code><code class=\"ANY\">inSpans</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">androidx</code><code class=\"ANY\">.</code><code class=\"ANY\">core</code><code class=\"ANY\">.</code><code class=\"ANY\">view</code><code class=\"ANY\">.</code><code class=\"ANY\">plusAssign</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">androidx</code><code class=\"ANY\">.</code><code class=\"ANY\">core</code><code class=\"ANY\">.</code><code class=\"ANY\">view</code><code class=\"ANY\">.</code><code class=\"ANY\">setPadding</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">R</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">localization</code><code class=\"ANY\">.</code><code class=\"ANY\">strings</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">theme</code><code class=\"ANY\">.</code><code class=\"ANY\">TextStyles</code><code class=\"ANY\">.</code><code class=\"ANY\">smallTitle</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">wysiwyg</code><code class=\"ANY\">.</code><code class=\"ANY\">formatting</code><code class=\"ANY\">.</code><code class=\"ANY\">BlockQuoteSyntaxApplier</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">wysiwyg</code><code class=\"ANY\">.</code><code class=\"ANY\">formatting</code><code class=\"ANY\">.</code><code class=\"ANY\">EmphasisSyntaxApplier</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">wysiwyg</code><code class=\"ANY\">.</code><code class=\"ANY\">formatting</code><code class=\"ANY\">.</code><code class=\"ANY\">HeadingSyntaxApplier</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">wysiwyg</code><code class=\"ANY\">.</code><code class=\"ANY\">formatting</code><code class=\"ANY\">.</code><code class=\"ANY\">InlineCodeSyntaxApplier</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">wysiwyg</code><code class=\"ANY\">.</code><code class=\"ANY\">formatting</code><code class=\"ANY\">.</code><code class=\"ANY\">MarkdownSyntaxApplier</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">wysiwyg</code><code class=\"ANY\">.</code><code class=\"ANY\">formatting</code><code class=\"ANY\">.</code><code class=\"ANY\">ParagraphBounds</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">wysiwyg</code><code class=\"ANY\">.</code><code class=\"ANY\">formatting</code><code class=\"ANY\">.</code><code class=\"ANY\">StrikethroughSyntaxApplier</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">wysiwyg</code><code class=\"ANY\">.</code><code class=\"ANY\">formatting</code><code class=\"ANY\">.</code><code class=\"ANY\">StrongEmphasisSyntaxApplier</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">wysiwyg</code><code class=\"ANY\">.</code><code class=\"ANY\">formatting</code><code class=\"ANY\">.</code><code class=\"ANY\">TextSelection</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">wysiwyg</code><code class=\"ANY\">.</code><code class=\"ANY\">formatting</code><code class=\"ANY\">.</code><code class=\"ANY\">from</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">wysiwyg</code><code class=\"ANY\">.</code><code class=\"ANY\">spans</code><code class=\"ANY\">.</code><code class=\"ANY\">MonospaceTypefaceSpan</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">wysiwyg</code><code class=\"ANY\">.</code><code class=\"ANY\">style</code><code class=\"ANY\">.</code><code class=\"ANY\">withOpacity</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">editor</code><code class=\"ANY\">.</code><code class=\"ANY\">MarkdownEditText</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">extensions</code><code class=\"ANY\">.</code><code class=\"ANY\">borderlessRippleDrawable</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">extensions</code><code class=\"ANY\">.</code><code class=\"ANY\">getDrawable</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">extensions</code><code class=\"ANY\">.</code><code class=\"ANY\">showKeyboard</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">extensions</code><code class=\"ANY\">.</code><code class=\"ANY\">textColor</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">extensions</code><code class=\"ANY\">.</code><code class=\"ANY\">updatePadding</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">theme</code><code class=\"ANY\">.</code><code class=\"ANY\">themePalette</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">widgets</code><code class=\"ANY\">.</code><code class=\"ANY\">PressBorderlessImageButton</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">widgets</code><code class=\"ANY\">.</code><code class=\"ANY\">PressButton</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">widgets</code><code class=\"ANY\">.</code><code class=\"ANY\">dp</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code><code class=\"ANY\"> </code><code class=\"CLASS_DECLARATOR\">EditorFormattingToolbar</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"ANY\">editorEditText</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">MarkdownEditText</code><code class=\"ANY\">\n</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">HorizontalScrollView</code><code class=\"ANY\">(</code><code class=\"ANY\">editorEditText</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">context</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">actionListView</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">LinearLayout</code><code class=\"ANY\">(</code><code class=\"ANY\">context</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">apply</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">orientation</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">HORIZONTAL</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">gravity</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">CENTER</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">init</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">isHorizontalScrollBarEnabled</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">false</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">isFillViewport</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">true</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">clipToPadding</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">false</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">updatePadding</code><code class=\"ANY\">(</code><code class=\"ANY\">horizontal</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">dp</code><code class=\"ANY\">(</code><code class=\"LITERAL\">12</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">addView</code><code class=\"ANY\">(</code><code class=\"ANY\">actionListView</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"COMMENT\">// A background is important so that the button ripples are drawn over it instead of</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"COMMENT\">// over the editor in the background, and thus clipped to this layout's height.</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">setBackgroundColor</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">themePalette</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">window</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">elevatedBackgroundColor</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">actionListView</code><code class=\"ANY\"> </code><code class=\"ANY\">+=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">createButton</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">FormatActionIcon</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">iconRes</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">R</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">drawable</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ic_twotone_undo_24</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">label</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">context</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">strings</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">editor</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">formattingtoolbar_undo</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">onClick</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">editorEditText</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">onTextContextMenuItem</code><code class=\"ANY\">(</code><code class=\"ANY\">android</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">R</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">undo</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">actionListView</code><code class=\"ANY\"> </code><code class=\"ANY\">+=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">createButton</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">FormatActionIcon</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">iconRes</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">R</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">drawable</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ic_twotone_redo_24</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">label</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">context</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">strings</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">editor</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">formattingtoolbar_redo</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">onClick</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">editorEditText</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">onTextContextMenuItem</code><code class=\"ANY\">(</code><code class=\"ANY\">android</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">R</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">redo</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">actionListView</code><code class=\"ANY\"> </code><code class=\"ANY\">+=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">createDivider</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">actionListView</code><code class=\"ANY\"> </code><code class=\"ANY\">+=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">createButton</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">FormatActionIcon</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">iconRes</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">R</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">drawable</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ic_format_heading_24</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">label</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">context</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">strings</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">editor</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">formattingtoolbar_heading</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">onClick</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">applyMarkdownSyntax</code><code class=\"ANY\">(</code><code class=\"ANY\">HeadingSyntaxApplier</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">actionListView</code><code class=\"ANY\"> </code><code class=\"ANY\">+=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">createButton</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">FormatActionIcon</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">iconRes</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">R</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">drawable</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ic_twotone_format_strong_emphasis_24</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">label</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">context</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">strings</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">editor</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">formattingtoolbar_strong_emphasis</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">onClick</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">applyMarkdownSyntax</code><code class=\"ANY\">(</code><code class=\"ANY\">StrongEmphasisSyntaxApplier</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">actionListView</code><code class=\"ANY\"> </code><code class=\"ANY\">+=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">createButton</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">FormatActionIcon</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">iconRes</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">R</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">drawable</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ic_twotone_format_emphasis_24</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">label</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">context</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">strings</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">editor</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">formattingtoolbar_emphasis</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">onClick</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">applyMarkdownSyntax</code><code class=\"ANY\">(</code><code class=\"ANY\">EmphasisSyntaxApplier</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">actionListView</code><code class=\"ANY\"> </code><code class=\"ANY\">+=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">createButton</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">FormatActionIcon</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">iconRes</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">R</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">drawable</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ic_twotone_format_strikethrough_24</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">label</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">context</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">strings</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">editor</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">formattingtoolbar_strikethrough</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">onClick</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">applyMarkdownSyntax</code><code class=\"ANY\">(</code><code class=\"ANY\">StrikethroughSyntaxApplier</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">actionListView</code><code class=\"ANY\"> </code><code class=\"ANY\">+=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">createDivider</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">actionListView</code><code class=\"ANY\"> </code><code class=\"ANY\">+=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">createButton</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">FormatActionText</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">label</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">buildSpannedString</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">color</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">themePalette</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">markdown</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">syntaxColor</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">append</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">'`'</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">inSpans</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">MonospaceTypefaceSpan</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">append</code><code class=\"ANY\">(</code><code class=\"ANY\">context</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">strings</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">editor</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">formattingtoolbar_inline_code</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">color</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">themePalette</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">markdown</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">syntaxColor</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">append</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">'`'</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">onClick</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">applyMarkdownSyntax</code><code class=\"ANY\">(</code><code class=\"ANY\">InlineCodeSyntaxApplier</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">actionListView</code><code class=\"ANY\"> </code><code class=\"ANY\">+=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">createDivider</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">actionListView</code><code class=\"ANY\"> </code><code class=\"ANY\">+=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">createButton</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">FormatActionText</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">label</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">buildSpannedString</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">color</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">themePalette</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">markdown</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">blockQuoteTextColor</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">append</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">append</code><code class=\"ANY\">(</code><code class=\"ANY\">context</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">strings</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">editor</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">formattingtoolbar_blockquote</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">onClick</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">applyMarkdownSyntax</code><code class=\"ANY\">(</code><code class=\"ANY\">BlockQuoteSyntaxApplier</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">createButton</code><code class=\"ANY\">(</code><code class=\"ANY\">action</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">FormatAction</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">View</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">button</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">when</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">action</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">is</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">FormatActionText</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">PressButton</code><code class=\"ANY\">(</code><code class=\"ANY\">context</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">smallTitle</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">also</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">elevation</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">0f</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">stateListAnimator</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">null</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">gravity</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">CENTER</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">compoundDrawablePadding</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">dp</code><code class=\"ANY\">(</code><code class=\"LITERAL\">4</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">layoutParams</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">LayoutParams</code><code class=\"ANY\">(</code><code class=\"ANY\">WRAP_CONTENT</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">MATCH_PARENT</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">updatePadding</code><code class=\"ANY\">(</code><code class=\"ANY\">horizontal</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">dp</code><code class=\"ANY\">(</code><code class=\"LITERAL\">12</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">vertical</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">dp</code><code class=\"ANY\">(</code><code class=\"LITERAL\">4</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">text</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">action</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">label</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">textColor</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">themePalette</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">textColorPrimary</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">is</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">FormatActionIcon</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">PressBorderlessImageButton</code><code class=\"ANY\">(</code><code class=\"ANY\">context</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">also</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">contentDescription</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">action</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">label</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">tooltipText</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">action</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">label</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">layoutParams</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">LayoutParams</code><code class=\"ANY\">(</code><code class=\"ANY\">WRAP_CONTENT</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">MATCH_PARENT</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">setPadding</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">dp</code><code class=\"ANY\">(</code><code class=\"LITERAL\">12</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">setImageDrawable</code><code class=\"ANY\">(</code><code class=\"ANY\">context</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getDrawable</code><code class=\"ANY\">(</code><code class=\"ANY\">action</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">iconRes</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">themePalette</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">textColorPrimary</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">button</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">setOnClickListener</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">button</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">performHapticFeedback</code><code class=\"ANY\">(</code><code class=\"ANY\">LONG_PRESS</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">action</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">onClick</code><code class=\"ANY\">(</code><code class=\"ANY\">button</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">button</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">background</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">borderlessRippleDrawable</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"ANY\">button</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">createDivider</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">View</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">View</code><code class=\"ANY\">(</code><code class=\"ANY\">context</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">also</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">layoutParams</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">LayoutParams</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">dp</code><code class=\"ANY\">(</code><code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">MATCH_PARENT</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">background</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">GradientDrawable</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">TOP_BOTTOM</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">intArrayOf</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">themePalette</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">divider</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">withOpacity</code><code class=\"ANY\">(</code><code class=\"LITERAL\">0f</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">themePalette</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">divider</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">applyMarkdownSyntax</code><code class=\"ANY\">(</code><code class=\"ANY\">applier</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">MarkdownSyntaxApplier</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">selection</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">TextSelection</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">from</code><code class=\"ANY\">(</code><code class=\"ANY\">editorEditText</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">selection</code><code class=\"ANY\"> </code><code class=\"ANY\">!=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">null</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">replacement</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">applier</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">apply</code><code class=\"ANY\">(</code><code class=\"ANY\">editorEditText</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">text</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">selection</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">editorEditText</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">setTextWithoutBustingUndoHistory</code><code class=\"ANY\">(</code><code class=\"ANY\">replacement</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">replacement</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">replacement</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">newSelection</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">editorEditText</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">let</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"COMMENT\">// If the cursor isn't visible, show the keyboard at the end</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"COMMENT\">// of the first paragraph (this will usually be the heading).</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">firstParagraph</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">ParagraphBounds</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">find</code><code class=\"ANY\">(</code><code class=\"ANY\">editorEditText</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">text</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">TextSelection</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">cursor</code><code class=\"ANY\">(</code><code class=\"LITERAL\">0</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">setSelection</code><code class=\"ANY\">(</code><code class=\"ANY\">firstParagraph</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">endExclusive</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">requestFocus</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">showKeyboard</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">sealed</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">class</code><code class=\"ANY\"> </code><code class=\"CLASS_DECLARATOR\">FormatAction</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">abstract</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">onClick</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">View</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Unit</code><code class=\"ANY\">\n</code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">data</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">class</code><code class=\"ANY\"> </code><code class=\"CLASS_DECLARATOR\">FormatActionIcon</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"ANY\">iconRes</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Int</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"ANY\">label</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">String</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">override</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"ANY\">onClick</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">View</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Unit</code><code class=\"ANY\">\n</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">FormatAction</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">data</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">class</code><code class=\"ANY\"> </code><code class=\"CLASS_DECLARATOR\">FormatActionText</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"ANY\">label</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">CharSequence</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">override</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"ANY\">onClick</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">View</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Unit</code><code class=\"ANY\">\n</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">FormatAction</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code>\n</pre>\n</html>"},{"_id":{"language":"KOTLIN","lexingTokens":[70,4,146,7,146,7,146,7,146,7,146,5,5,71,4,146,7,146,5,71,4,146,7,146,7,146,5,71,4,146,7,146,7,146,5,71,4,146,7,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,7,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,7,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,7,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,7,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,7,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,7,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,5,71,4,146,7,146,7,146,5,5,72,4,146,4,26,4,146,9,10,4,13,5,4,4,108,4,76,4,146,4,28,4,146,9,10,5,4,4,108,4,76,4,146,4,28,4,146,9,10,5,4,4,108,4,76,4,146,4,28,4,146,9,10,5,4,4,108,4,76,4,146,4,28,4,146,9,10,5,4,4,108,4,76,4,146,4,64,9,10,4,28,4,146,7,146,5,4,4,108,4,76,4,146,4,64,9,10,4,28,4,146,7,146,5,5,4,4,108,4,74,4,146,9,170,169,169,169,169,146,26,169,146,44,28,169,144,8,170,169,169,169,169,146,26,169,146,169,28,169,143,170,169,169,10,26,4,146,4,13,5,4,4,4,4,97,4,146,9,170,169,169,169,169,169,169,146,169,28,169,146,9,146,9,146,169,28,169,146,10,8,169,146,8,169,146,10,8,170,169,169,169,169,169,169,146,169,28,169,146,8,170,169,169,169,169,169,169,146,169,28,169,146,8,170,169,169,169,169,169,169,146,169,28,169,146,9,10,8,170,169,169,169,169,169,169,146,169,28,169,146,8,170,169,169,169,169,169,169,146,169,28,169,146,170,169,169,169,169,10,5,4,4,14,5,5,4,42,146,5,4,4,74,4,146,9,10,4,13,5,4,4,4,4,146,7,146,9,10,5,4,4,14,5,5,4,42,146,4,74,4,146,9,10,4,13,5,4,4,4,4,76,4,146,4,28,4,146,9,149,160,158,10,5,4,4,4,4,146,7,146,9,146,10,5,5,4,4,4,4,76,4,146,4,28,4,146,9,149,160,158,10,5,4,4,4,4,76,4,146,4,28,4,146,9,149,160,161,160,158,8,169,146,169,28,169,146,7,146,10,5,4,4,4,4,146,7,146,9,146,8,169,146,10,5,5,4,4,4,4,76,4,146,4,28,4,146,9,10,5,4,4,4,4,76,4,146,4,28,4,146,7,146,9,10,5,4,4,4,4,4,4,7,146,4,13,4,146,7,146,4,14,5,4,4,4,4,4,4,7,146,9,146,10,5,5,4,4,4,4,146,7,146,9,146,9,146,169,28,169,149,158,10,10,5,4,4,4,4,146,9,146,7,146,9,10,10,7,146,9,170,169,169,169,169,169,169,146,9,170,169,169,169,169,169,169,169,169,146,169,28,169,146,7,146,8,170,169,169,169,169,169,169,169,169,146,169,28,169,149,160,158,8,170,169,169,169,169,169,169,10,8,170,169,169,169,169,169,169,146,9,170,169,169,169,169,169,169,169,169,146,169,28,169,146,7,146,8,170,169,169,169,169,169,169,169,169,146,169,28,169,149,158,7,146,9,10,8,170,169,169,169,169,169,169,169,169,146,169,28,169,149,160,158,7,146,9,10,170,169,169,169,169,169,169,10,170,169,169,169,169,10,5,4,4,14,5,5,4,42,146,4,74,4,146,9,10,4,13,5,4,4,4,4,76,4,146,4,28,4,146,9,149,160,158,10,5,4,4,4,4,76,4,146,4,28,4,146,9,149,160,158,8,169,146,169,28,169,146,7,146,10,5,4,4,4,4,146,7,146,9,146,8,169,146,10,5,5,4,4,4,4,76,4,146,4,28,4,146,9,146,169,28,169,149,160,161,160,158,8,169,146,169,28,169,144,10,5,4,4,4,4,76,4,146,4,28,4,146,9,146,169,28,169,149,160,161,160,158,8,169,146,169,28,169,146,7,146,10,5,4,4,4,4,76,4,146,4,28,4,146,9,146,169,28,169,149,160,161,160,158,8,169,146,169,28,169,146,7,146,10,5,4,4,4,4,146,7,146,9,146,8,169,146,8,169,146,10,5,5,4,4,4,4,76,4,146,4,28,4,146,9,146,169,28,169,146,7,146,10,5,4,4,4,4,76,4,146,4,28,4,146,7,146,9,10,5,4,4,4,4,4,4,7,146,4,13,4,146,7,146,4,14,5,4,4,4,4,4,4,7,146,9,146,10,5,5,4,4,4,4,146,7,146,9,146,9,146,169,28,169,149,158,10,10,5,4,4,4,4,146,9,146,7,146,9,10,10,7,146,9,170,169,169,169,169,169,169,146,9,170,169,169,169,169,169,169,169,169,146,169,28,169,146,7,146,8,170,169,169,169,169,169,169,169,169,146,169,28,169,149,160,158,8,170,169,169,169,169,169,169,10,8,170,169,169,169,169,169,169,146,9,170,169,169,169,169,169,169,169,169,146,169,28,169,146,7,146,8,170,169,169,169,169,169,169,169,169,146,169,28,169,149,160,158,7,146,9,10,8,170,169,169,169,169,169,169,169,169,146,169,28,169,149,160,158,7,146,9,10,170,169,169,169,169,169,169,10,8,170,169,169,169,169,10,5,4,4,14,5,5,4,42,146,4,74,4,146,9,10,4,13,5,4,4,4,4,76,4,146,4,28,4,146,9,149,160,158,10,5,4,4,4,4,76,4,146,4,28,4,146,9,149,160,158,10,5,4,4,4,4,146,7,146,9,146,8,169,146,10,5,5,4,4,4,4,76,4,146,4,28,4,146,9,149,160,158,10,5,4,4,4,4,76,4,146,4,28,4,146,9,149,160,158,10,5,4,4,4,4,76,4,146,4,28,4,146,9,149,160,158,8,169,146,169,28,169,146,7,146,10,5,4,4,4,4,146,7,146,9,146,8,169,146,8,169,146,10,5,5,4,4,4,4,76,4,146,4,28,4,146,9,146,169,28,169,144,10,5,4,4,4,4,76,4,146,4,28,4,146,7,146,9,10,5,4,4,4,4,4,4,7,146,4,13,4,146,7,146,4,14,5,4,4,4,4,4,4,7,146,9,146,10,5,5,4,4,4,4,146,7,146,9,146,9,146,169,28,169,149,160,158,10,10,5,4,4,4,4,146,9,146,7,146,9,10,10,7,146,9,170,169,169,169,169,169,169,146,9,170,169,169,169,169,169,169,169,169,146,169,28,169,146,7,146,8,170,169,169,169,169,169,169,169,169,146,169,28,169,149,160,158,7,146,9,149,160,158,10,8,170,169,169,169,169,169,169,169,169,146,169,28,169,149,158,7,146,9,10,170,169,169,169,169,169,169,10,170,169,169,169,169,10,5,4,4,14,5,5,4,42,146,4,74,4,146,9,10,4,13,5,4,4,4,4,76,4,146,4,28,4,146,9,149,160,158,10,5,4,4,4,4,76,4,146,4,28,4,146,9,149,160,158,8,169,146,169,28,169,146,7,146,10,5,4,4,4,4,76,4,146,4,28,4,146,9,149,160,158,8,169,146,169,28,169,146,7,146,10,5,4,4,4,4,146,7,146,9,146,8,169,146,8,169,146,10,5,5,4,4,4,4,76,4,146,4,28,4,146,9,149,160,158,8,169,146,169,28,169,146,7,146,10,5,4,4,4,4,76,4,146,4,28,4,146,9,149,160,158,8,169,146,169,28,169,146,7,146,10,5,4,4,4,4,76,4,146,4,28,4,146,9,149,160,158,8,169,146,169,28,169,146,7,146,10,5,4,4,4,4,146,7,146,9,146,8,169,146,8,169,146,10,5,5,4,4,4,4,76,4,146,4,28,4,146,9,146,169,28,169,146,7,146,10,5,4,4,4,4,76,4,146,4,28,4,146,7,146,9,10,5,4,4,4,4,4,4,7,146,4,13,4,146,7,146,4,14,5,4,4,4,4,4,4,7,146,9,146,10,5,5,4,4,4,4,146,7,146,9,146,9,146,169,28,169,149,160,158,10,10,5,4,4,4,4,146,9,146,7,146,9,10,10,7,146,9,170,169,169,169,169,169,169,146,9,170,169,169,169,169,169,169,169,169,146,169,28,169,146,7,146,8,170,169,169,169,169,169,169,169,169,146,169,28,169,149,160,158,7,146,9,149,160,158,10,8,170,169,169,169,169,169,169,169,169,146,169,28,169,149,158,7,146,9,10,170,169,169,169,169,169,169,10,8,170,169,169,169,169,169,169,146,9,170,169,169,169,169,169,169,169,169,146,169,28,169,146,7,146,8,170,169,169,169,169,169,169,169,169,146,169,28,169,149,160,158,7,146,9,149,160,158,10,8,170,169,169,169,169,169,169,169,169,146,169,28,169,149,158,7,146,9,10,170,169,169,169,169,169,169,10,8,170,169,169,169,169,169,169,146,9,170,169,169,169,169,169,169,169,169,146,169,28,169,146,7,146,8,170,169,169,169,169,169,169,169,169,146,169,28,169,149,160,158,7,146,9,149,160,158,10,8,170,169,169,169,169,169,169,169,169,146,169,28,169,149,158,7,146,9,10,170,169,169,169,169,169,169,10,170,169,169,169,169,10,5,4,4,14,5,5,4,42,146,4,74,4,146,9,10,4,13,5,4,4,4,4,146,7,146,9,170,169,169,169,169,169,169,146,9,146,169,28,169,146,7,146,9,10,8,169,146,169,28,169,149,160,158,10,8,170,169,169,169,169,169,169,146,9,146,169,28,169,146,7,146,9,10,8,169,146,169,28,169,149,160,158,10,8,170,169,169,169,169,169,169,146,9,146,169,28,169,146,7,146,9,10,8,169,146,169,28,169,149,158,10,8,170,169,169,169,169,169,169,146,9,146,169,28,169,146,7,146,9,10,8,169,146,169,28,169,149,160,158,10,8,170,169,169,169,169,10,5,5,4,4,4,4,76,4,146,4,28,4,146,9,146,169,28,169,143,10,5,4,4,4,4,76,4,146,4,28,4,146,7,146,9,10,5,4,4,4,4,4,4,7,146,4,13,4,146,4,34,4,146,7,146,7,146,4,13,4,146,7,146,7,146,4,146,4,146,7,146,7,146,4,14,4,14,5,4,4,4,4,4,4,7,146,9,146,10,5,5,4,4,4,4,146,7,146,9,146,9,146,169,28,169,149,158,10,10,5,4,4,4,4,146,9,146,7,146,9,10,10,7,146,9,149,160,158,169,146,169,149,158,10,5,4,4,14,5,5,4,42,146,4,74,4,146,9,10,4,13,5,4,4,4,4,146,7,146,9,170,169,169,169,169,169,169,146,9,146,169,28,169,146,7,146,9,10,8,169,146,169,28,169,149,160,158,10,8,170,169,169,169,169,169,169,146,9,146,169,28,169,146,7,146,9,10,8,169,146,169,28,169,149,160,158,10,8,170,169,169,169,169,169,169,146,9,146,169,28,169,146,7,146,9,10,8,169,146,169,28,169,149,158,10,8,170,169,169,169,169,169,169,146,9,146,169,28,169,146,7,146,9,10,8,169,146,169,28,169,149,160,158,10,8,170,169,169,169,169,10,5,5,4,4,4,4,76,4,146,4,28,4,146,9,146,169,28,169,143,10,5,4,4,4,4,76,4,146,4,28,4,146,7,146,9,10,5,4,4,4,4,4,4,7,146,4,13,4,146,4,34,4,146,7,146,7,146,4,13,4,146,7,146,7,146,4,146,4,146,7,146,7,146,4,14,4,14,5,4,4,4,4,4,4,7,146,9,146,10,5,5,4,4,4,4,146,7,146,9,146,9,146,169,28,169,149,158,10,10,5,4,4,4,4,146,9,146,7,146,9,10,10,7,146,9,170,169,169,169,169,169,169,149,160,158,169,146,169,149,158,8,170,169,169,169,169,169,169,149,158,169,146,169,149,158,8,170,169,169,169,169,169,169,149,158,169,146,169,149,158,8,170,169,169,169,169,169,169,149,158,169,146,169,149,158,8,170,169,169,169,169,10,5,4,4,14,5,5,4,42,146,4,74,4,146,9,10,4,13,5,4,4,4,4,76,4,146,4,28,4,146,9,10,7,146,4,13,5,4,4,4,4,4,4,146,7,146,9,10,7,146,9,10,5,4,4,4,4,14,5,4,4,4,4,146,9,146,7,146,9,10,7,146,9,10,10,7,146,9,10,5,5,4,4,4,4,146,7,146,9,146,10,5,5,4,4,4,4,76,4,146,4,28,4,146,7,146,9,10,7,146,9,10,5,4,4,4,4,146,9,146,10,5,4,4,4,4,146,9,146,7,146,9,10,10,7,146,9,170,169,169,169,169,169,169,146,9,146,9,146,9,146,7,146,10,10,10,170,169,169,169,169,10,5,4,4,14,5,5,4,42,146,4,74,4,146,9,10,4,13,5,4,4,4,4,146,9,10,7,146,9,10,7,146,9,10,5,4,4,4,4,146,9,146,7,146,9,10,7,146,9,10,10,7,146,9,10,5,5,4,4,4,4,146,7,146,9,146,7,146,10,5,5,4,4,4,4,76,4,146,4,28,4,146,7,146,9,10,7,146,9,10,5,4,4,4,4,146,9,146,10,5,4,4,4,4,146,9,146,7,146,9,10,10,7,146,9,170,169,169,169,169,169,169,146,9,146,9,146,9,146,7,146,10,10,10,170,169,169,169,169,10,5,4,4,14,5,5,4,42,146,4,74,4,146,9,10,4,13,5,4,4,4,4,76,4,146,4,28,4,146,7,146,9,10,5,4,4,4,4,76,4,146,4,28,4,146,9,146,169,28,169,146,10,7,146,4,13,5,4,4,4,4,4,4,146,7,146,9,10,7,146,9,10,5,4,4,4,4,14,5,5,4,4,4,4,146,7,146,9,146,10,5,5,4,4,4,4,76,4,146,4,28,4,146,7,146,9,10,7,146,9,10,5,4,4,4,4,146,9,146,7,146,10,7,146,9,146,10,5,4,4,14,5,5,4,4,108,4,74,4,146,7,146,9,10,4,28,4,146,9,146,10,5,14,5,-1]},"sourceCode":"package me.saket.press.shared.home\n\nimport assertk.assertThat\nimport assertk.assertions.isEmpty\nimport assertk.assertions.isEqualTo\nimport com.badoo.reaktive.observable.map\nimport com.badoo.reaktive.test.observable.test\nimport me.saket.press.shared.FakeSchedulers\nimport me.saket.press.shared.containsOnly\nimport me.saket.press.shared.db.BaseDatabaeTest\nimport me.saket.press.shared.db.FolderId\nimport me.saket.press.shared.db.NoteId\nimport me.saket.press.shared.editor.EditorOpenMode.NewNote\nimport me.saket.press.shared.editor.EditorScreenKey\nimport me.saket.press.shared.editor.ExistingNoteId\nimport me.saket.press.shared.fakeFolder\nimport me.saket.press.shared.fakeNote\nimport me.saket.press.shared.home.HomeEvent.NewNoteClicked\nimport me.saket.press.shared.home.HomeEvent.SearchTextChanged\nimport me.saket.press.shared.home.HomeModel.FolderModel\nimport me.saket.press.shared.home.HomeModel.NoteModel\nimport me.saket.press.shared.home.HomePresenter.Args\nimport me.saket.press.shared.testInsert\nimport me.saket.press.shared.keyboard.KeyboardShortcuts\nimport me.saket.press.shared.keyboard.RealKeyboardShortcuts\nimport me.saket.press.shared.localization.ENGLISH_STRINGS\nimport me.saket.press.shared.ui.HighlightedText\nimport me.saket.press.shared.rx.RxRule\nimport me.saket.press.shared.rx.test\nimport me.saket.press.shared.time.FakeClock\nimport me.saket.press.shared.ui.FakeNavigator\nimport me.saket.press.shared.ui.highlight\nimport kotlin.test.AfterTest\nimport kotlin.test.Test\n\nclass HomePresenterTest : BaseDatabaeTest() {\n  private val keyboardShortcuts = RealKeyboardShortcuts()\n  private val navigator = FakeNavigator()\n  private val rxRule = RxRule()\n  private val clock = FakeClock()\n  private val noteQueries get() = database.noteQueries\n  private val folderQueries get() = database.folderQueries\n\n  private fun presenter(\n    folder: FolderId? = null,\n    includeEmptyNotes: Boolean = true\n  ): HomePresenter {\n    return HomePresenter(\n      args = Args(HomeScreenKey(folder = folder), includeEmptyNotes, navigator),\n      keyboardShortcuts = keyboardShortcuts,\n      database = database,\n      schedulers = FakeSchedulers(),\n      strings = ENGLISH_STRINGS,\n      clock = clock\n    )\n  }\n\n  @AfterTest\n  fun finish() {\n    rxRule.assertEmpty()\n  }\n\n  @Test fun `populate folders and notes for home screen`() {\n    val archive = fakeFolder(\"archive\")\n    folderQueries.testInsert(archive)\n\n    val witcher3 = fakeNote(\"The Witcher 3 Wild Hunt\")\n    val uncharted = fakeNote(\"# Uncharted\\nThe Lost Legacy\", folderId = archive.id)\n    noteQueries.testInsert(witcher3, uncharted)\n\n    val presenter = presenter()\n    val models = presenter.models()\n      .map { it.rows }\n      .test(rxRule)\n\n    presenter.dispatch(SearchTextChanged(text = \"\"))\n    assertThat(models.popValue()).containsOnly(\n      FolderModel(\n        id = archive.id,\n        title = \"archive\",\n      ),\n      NoteModel(\n        id = witcher3.id,\n        title = \"\".highlight(),\n        body = \"The Witcher 3 Wild Hunt\".highlight()\n      )\n    )\n  }\n\n  @Test fun `populate sub-folders and notes for a folder`() {\n    val archive = fakeFolder(\"archive\")\n    val games = fakeFolder(\"games\", parent = archive.id)\n    folderQueries.testInsert(archive, games)\n\n    val nicolasCage = fakeNote(content = \"# Nicolas Cage\\nOur national treasure\", folderId = null)\n    val witcher3 = fakeNote(content = \"# The Witcher 3\\nWild Hunt\", folderId = archive.id)\n    val uncharted = fakeNote(content = \"# Uncharted\\nThe Lost Legacy\", folderId = games.id)\n    noteQueries.testInsert(nicolasCage, witcher3, uncharted)\n\n    val presenter = presenter(folder = archive.id)\n    val models = presenter.models()\n      .map { it.rows }\n      .test(rxRule)\n\n    presenter.dispatch(SearchTextChanged(text = \"\"))\n    assertThat(models.popValue()).containsOnly(\n      FolderModel(\n        id = games.id,\n        title = \"games\",\n      ),\n      NoteModel(\n        id = witcher3.id,\n        title = \"The Witcher 3\".highlight(),\n        body = \"Wild Hunt\".highlight()\n      ),\n    )\n  }\n\n  @Test fun `populate filtered notes when searching in the root folder`() {\n    val games = fakeFolder(\"games\")\n    val archive = fakeFolder(\"archive\")\n    folderQueries.testInsert(games, archive)\n\n    val uncharted = fakeNote(\"# Uncharted\")\n    val gambling = fakeNote(\"# Gambling\")\n    val archivedWitcher = fakeNote(\"# The Archived Witcher 3 (game)\", folderId = archive.id)\n    noteQueries.testInsert(uncharted, gambling, archivedWitcher)\n\n    val presenter = presenter(folder = null)\n    val models = presenter.models()\n      .map { it.rows }\n      .test(rxRule)\n\n    presenter.dispatch(SearchTextChanged(text = \"gam\"))\n    assertThat(models.popValue()).containsOnly(\n      NoteModel(\n        id = gambling.id,\n        title = \"Gambling\".highlight(\"gam\"),\n        body = \"\".highlight()\n      )\n    )\n  }\n\n  @Test fun `populate filtered notes when searching in a folder that contains nested folders`() {\n    val archive = fakeFolder(\"archive\")\n    val gamesFolder = fakeFolder(\"games\", parent = archive.id)\n    val rpgGamesFolder = fakeFolder(\"rpg\", parent = gamesFolder.id)\n    folderQueries.testInsert(archive, gamesFolder, rpgGamesFolder)\n\n    val gamesToBuy = fakeNote(\"# Games to buy\", folderId = archive.id)\n    val unravel2 = fakeNote(\"# Unravel 2 (game)\", folderId = gamesFolder.id)\n    val witcher3 = fakeNote(\"# Witcher 3 (game)\", folderId = rpgGamesFolder.id)\n    noteQueries.testInsert(gamesToBuy, unravel2, witcher3)\n\n    val presenter = presenter(folder = archive.id)\n    val models = presenter.models()\n      .map { it.rows }\n      .test(rxRule)\n\n    presenter.dispatch(SearchTextChanged(text = \"game\"))\n    assertThat(models.popValue()).containsOnly(\n      NoteModel(\n        id = gamesToBuy.id,\n        title = \"Games to buy\".highlight(\"game\"),\n        body = \"\".highlight()\n      ),\n      NoteModel(\n        id = unravel2.id,\n        title = \"Unravel 2 (game)\".highlight(\"game\"),\n        body = \"\".highlight()\n      ),\n      NoteModel(\n        id = witcher3.id,\n        title = \"Witcher 3 (game)\".highlight(\"game\"),\n        body = \"\".highlight()\n      )\n    )\n  }\n\n  @Test fun `filter out empty notes if requested`() {\n    noteQueries.testInsert(\n      fakeNote(id = NoteId.generate(), content = \"# Non-empty note\"),\n      fakeNote(id = NoteId.generate(), content = \"# \"),\n      fakeNote(id = NoteId.generate(), content = \"\"),\n      fakeNote(id = NoteId.generate(), content = \"  \"),\n    )\n\n    val presenter = presenter(includeEmptyNotes = false)\n    val titlesAndBodies = presenter.models()\n      .map { model -> model.notes.map { it.title.text to it.body.text } }\n      .test(rxRule)\n\n    presenter.dispatch(SearchTextChanged(text = \"\"))\n    assertThat(titlesAndBodies.popValue()).containsOnly(\"Non-empty note\" to \"\")\n  }\n\n  @Test fun `include empty notes if requested`() {\n    noteQueries.testInsert(\n      fakeNote(id = NoteId.generate(), content = \"# Non-empty note\"),\n      fakeNote(id = NoteId.generate(), content = \"# \"),\n      fakeNote(id = NoteId.generate(), content = \"\"),\n      fakeNote(id = NoteId.generate(), content = \"  \"),\n    )\n\n    val presenter = presenter(includeEmptyNotes = true)\n    val titlesAndBodies = presenter.models()\n      .map { model -> model.notes.map { it.title.text to it.body.text } }\n      .test(rxRule)\n\n    presenter.dispatch(SearchTextChanged(text = \"\"))\n    assertThat(titlesAndBodies.popValue()).containsOnly(\n      \"Non-empty note\" to \"\",\n      \"\" to \"\",\n      \"\" to \"\",\n      \"\" to \"\",\n    )\n  }\n\n  @Test fun `open new note screen when new note is clicked`() {\n    val presenter = presenter().also {\n      it.models().test()\n    }\n    assertThat(noteQueries.allNotes().executeAsList()).isEmpty()\n\n    presenter.dispatch(NewNoteClicked)\n\n    val savedNote = noteQueries.allNotes().executeAsOneOrNull()\n    checkNotNull(savedNote)\n    assertThat(navigator.pop()).isEqualTo(\n      EditorScreenKey(NewNote(ExistingNoteId(savedNote.id)))\n    )\n  }\n\n  @Test fun `open new note screen on new-note keyboard shortcut`() {\n    presenter().models().test()\n    assertThat(noteQueries.allNotes().executeAsList()).isEmpty()\n\n    keyboardShortcuts.broadcast(KeyboardShortcuts.newNote)\n\n    val savedNote = noteQueries.allNotes().executeAsOneOrNull()\n    checkNotNull(savedNote)\n    assertThat(navigator.pop()).isEqualTo(\n      EditorScreenKey(NewNote(ExistingNoteId(savedNote.id)))\n    )\n  }\n\n  @Test fun `create new note in the current folder`() {\n    val folderId = FolderId.generate()\n    val presenter = presenter(folder = folderId).also {\n      it.models().test()\n    }\n\n    presenter.dispatch(NewNoteClicked)\n\n    val savedNote = noteQueries.allNotes().executeAsOne()\n    assertThat(savedNote.folderId).isEqualTo(folderId)\n  }\n\n  private fun String.highlight() = HighlightedText(this)\n}\n","highlightingTokens":[1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,5,0,0,0,8,0,0,0,0,0,0,0,1,0,1,0,7,0,0,0,9,0,0,0,0,0,1,0,1,0,7,0,0,0,9,0,0,0,0,0,1,0,1,0,7,0,0,0,9,0,0,0,0,0,1,0,1,0,7,0,0,0,9,0,0,0,0,0,1,0,1,0,7,0,1,0,0,0,0,0,0,0,10,0,0,0,1,0,1,0,7,0,1,0,0,0,0,0,0,0,10,0,0,0,0,1,0,1,0,6,0,0,0,0,0,0,0,0,0,8,8,0,0,2,0,0,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,0,0,0,8,0,0,0,0,0,0,0,1,0,9,0,0,0,0,0,0,0,0,0,0,0,0,9,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,1,0,6,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,11,11,0,1,0,6,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,3,3,3,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,3,3,3,0,0,0,0,0,0,1,0,7,0,0,0,9,0,3,3,3,3,3,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,9,0,6,0,0,0,10,0,6,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,9,0,9,0,0,0,0,0,3,3,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,0,9,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,1,0,6,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,3,3,3,0,0,0,0,0,0,1,0,7,0,0,0,9,0,3,3,3,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,7,0,0,0,9,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,1,0,7,0,0,0,9,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,9,0,6,0,0,0,10,0,6,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,9,0,9,0,0,0,0,0,3,3,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,0,9,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,1,0,6,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,3,3,3,0,0,0,0,0,0,1,0,7,0,0,0,9,0,3,3,3,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,3,3,3,0,0,0,0,0,0,1,0,7,0,0,0,9,0,3,3,3,0,0,0,0,0,0,1,0,7,0,0,0,9,0,3,3,3,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,0,0,0,0,2,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,9,0,6,0,0,0,10,0,6,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,9,0,9,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,0,9,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,0,9,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,1,0,6,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,3,3,3,0,0,0,0,0,0,1,0,7,0,0,0,9,0,3,3,3,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,1,0,7,0,0,0,9,0,3,3,3,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,3,3,3,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,1,0,7,0,0,0,9,0,3,3,3,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,1,0,7,0,0,0,9,0,3,3,3,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,9,0,6,0,0,0,10,0,6,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,9,0,9,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,0,9,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,0,9,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,0,9,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,0,9,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,1,0,6,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,3,3,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,0,0,0,0,2,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,9,0,6,0,7,0,0,0,0,0,10,0,9,0,6,0,0,0,10,0,10,0,0,0,0,0,10,0,10,0,6,0,6,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,9,0,9,0,0,0,0,0,3,3,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,0,9,0,3,3,3,0,0,0,3,3,0,0,0,0,0,0,0,0,11,11,0,1,0,6,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,3,3,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,0,0,0,0,2,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,9,0,6,0,7,0,0,0,0,0,10,0,9,0,6,0,0,0,10,0,10,0,0,0,0,0,10,0,10,0,6,0,6,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,9,0,9,0,0,0,0,0,3,3,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,0,9,0,0,0,0,0,0,0,0,3,3,3,0,0,0,3,3,0,0,0,0,0,0,0,0,3,3,0,0,0,3,3,0,0,0,0,0,0,0,0,3,3,0,0,0,3,3,0,0,0,0,0,0,0,0,3,3,0,0,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,1,0,6,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,0,0,9,0,6,0,0,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,6,0,0,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,0,9,0,0,0,0,0,0,0,0,9,0,9,0,9,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,1,0,6,0,0,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,0,9,0,0,0,0,0,0,0,0,9,0,9,0,9,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,1,0,6,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,0,0,0,0,0,0,0,9,0,6,0,0,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,9,0,0,0,10,0,0,9,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,8,0,6,0,0,0,0,0,9,0,0,0,0,0,0,0],"highlightingCode":"<!DOCTYPE html>\n<html>\n<style>\n.ANY {\n    color: black;\n    font-weight: normal;\n    font-style: normal;\n}\n.KEYWORD {\n    color: blue;\n    font-weight: bold;\n    font-style: normal;\n}\n.LITERAL {\n    color: lightskyblue;\n    font-weight: bold;\n    font-style: normal;\n}\n.CHAR_STRING_LITERAL {\n    color: darkgoldenrod;\n    font-weight: normal;\n    font-style: normal;\n}\n.COMMENT {\n    color: grey;\n    font-weight: normal;\n    font-style: italic;\n}\n.CLASS_DECLARATOR {\n    color: crimson;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_DECLARATOR {\n    color: fuchsia;\n    font-weight: bold;\n    font-style: normal;\n}\n.VARIABLE_DECLARATOR {\n    color: purple;\n    font-weight: bold;\n    font-style: normal;\n}\n.TYPE_IDENTIFIER {\n    color: darkgreen;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_IDENTIFIER {\n    color: dodgerblue;\n    font-weight: normal;\n    font-style: normal;\n}\n.FIELD_IDENTIFIER {\n    color: coral;\n    font-weight: normal;\n    font-style: normal;\n}\n.ANNOTATION_DECLARATOR {\n    color: lightslategray;\n    font-weight: lighter;\n    font-style: italic;\n}\n</style>\n<pre>\n<code class=\"KEYWORD\">package</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">home</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">assertk</code><code class=\"ANY\">.</code><code class=\"ANY\">assertThat</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">assertk</code><code class=\"ANY\">.</code><code class=\"ANY\">assertions</code><code class=\"ANY\">.</code><code class=\"ANY\">isEmpty</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">assertk</code><code class=\"ANY\">.</code><code class=\"ANY\">assertions</code><code class=\"ANY\">.</code><code class=\"ANY\">isEqualTo</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">map</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">test</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">test</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">FakeSchedulers</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">containsOnly</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">db</code><code class=\"ANY\">.</code><code class=\"ANY\">BaseDatabaeTest</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">db</code><code class=\"ANY\">.</code><code class=\"ANY\">FolderId</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">db</code><code class=\"ANY\">.</code><code class=\"ANY\">NoteId</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">editor</code><code class=\"ANY\">.</code><code class=\"ANY\">EditorOpenMode</code><code class=\"ANY\">.</code><code class=\"ANY\">NewNote</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">editor</code><code class=\"ANY\">.</code><code class=\"ANY\">EditorScreenKey</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">editor</code><code class=\"ANY\">.</code><code class=\"ANY\">ExistingNoteId</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">fakeFolder</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">fakeNote</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">home</code><code class=\"ANY\">.</code><code class=\"ANY\">HomeEvent</code><code class=\"ANY\">.</code><code class=\"ANY\">NewNoteClicked</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">home</code><code class=\"ANY\">.</code><code class=\"ANY\">HomeEvent</code><code class=\"ANY\">.</code><code class=\"ANY\">SearchTextChanged</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">home</code><code class=\"ANY\">.</code><code class=\"ANY\">HomeModel</code><code class=\"ANY\">.</code><code class=\"ANY\">FolderModel</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">home</code><code class=\"ANY\">.</code><code class=\"ANY\">HomeModel</code><code class=\"ANY\">.</code><code class=\"ANY\">NoteModel</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">home</code><code class=\"ANY\">.</code><code class=\"ANY\">HomePresenter</code><code class=\"ANY\">.</code><code class=\"ANY\">Args</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">testInsert</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">keyboard</code><code class=\"ANY\">.</code><code class=\"ANY\">KeyboardShortcuts</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">keyboard</code><code class=\"ANY\">.</code><code class=\"ANY\">RealKeyboardShortcuts</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">localization</code><code class=\"ANY\">.</code><code class=\"ANY\">ENGLISH_STRINGS</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">ui</code><code class=\"ANY\">.</code><code class=\"ANY\">HighlightedText</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">rx</code><code class=\"ANY\">.</code><code class=\"ANY\">RxRule</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">rx</code><code class=\"ANY\">.</code><code class=\"ANY\">test</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">time</code><code class=\"ANY\">.</code><code class=\"ANY\">FakeClock</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">ui</code><code class=\"ANY\">.</code><code class=\"ANY\">FakeNavigator</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">ui</code><code class=\"ANY\">.</code><code class=\"ANY\">highlight</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">kotlin</code><code class=\"ANY\">.</code><code class=\"ANY\">test</code><code class=\"ANY\">.</code><code class=\"ANY\">AfterTest</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">kotlin</code><code class=\"ANY\">.</code><code class=\"ANY\">test</code><code class=\"ANY\">.</code><code class=\"ANY\">Test</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code><code class=\"ANY\"> </code><code class=\"CLASS_DECLARATOR\">HomePresenterTest</code><code class=\"ANY\"> </code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">BaseDatabaeTest</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">keyboardShortcuts</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">RealKeyboardShortcuts</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">navigator</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">FakeNavigator</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">rxRule</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">RxRule</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">clock</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">FakeClock</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">noteQueries</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">get</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">database</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">noteQueries</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">folderQueries</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">get</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">database</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">folderQueries</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">presenter</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">folder</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">FolderId</code><code class=\"TYPE_IDENTIFIER\">? </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">null</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">includeEmptyNotes</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Boolean</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">true</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">HomePresenter</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">HomePresenter</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">args</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">Args</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">HomeScreenKey</code><code class=\"ANY\">(</code><code class=\"ANY\">folder</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">folder</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">includeEmptyNotes</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">navigator</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">keyboardShortcuts</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">keyboardShortcuts</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">database</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">database</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">schedulers</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">FakeSchedulers</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">strings</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">ENGLISH_STRINGS</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">clock</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">clock</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANNOTATION_DECLARATOR\"> @</code><code class=\"ANNOTATION_DECLARATOR\">AfterTest</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">finish</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">rxRule</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEmpty</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANNOTATION_DECLARATOR\"> @</code><code class=\"ANNOTATION_DECLARATOR\">Test</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">`populate folders and notes for home screen`</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">archive</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeFolder</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">archive</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">folderQueries</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">testInsert</code><code class=\"ANY\">(</code><code class=\"ANY\">archive</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">witcher3</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeNote</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">The Witcher 3 Wild Hunt</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">uncharted</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeNote</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\"># Uncharted</code><code class=\"CHAR_STRING_LITERAL\">\\n</code><code class=\"CHAR_STRING_LITERAL\">The Lost Legacy</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">folderId</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">archive</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">noteQueries</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">testInsert</code><code class=\"ANY\">(</code><code class=\"ANY\">witcher3</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">uncharted</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">presenter</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">presenter</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">models</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">presenter</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">models</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">map</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">rows</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">test</code><code class=\"ANY\">(</code><code class=\"ANY\">rxRule</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">presenter</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">dispatch</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">SearchTextChanged</code><code class=\"ANY\">(</code><code class=\"ANY\">text</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">models</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">popValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">containsOnly</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">FolderModel</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">id</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">archive</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">title</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">archive</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">NoteModel</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">id</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">witcher3</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">title</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">highlight</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">body</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">The Witcher 3 Wild Hunt</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">highlight</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANNOTATION_DECLARATOR\"> @</code><code class=\"ANNOTATION_DECLARATOR\">Test</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">`populate sub-folders and notes for a folder`</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">archive</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeFolder</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">archive</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">games</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeFolder</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">games</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">parent</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">archive</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">folderQueries</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">testInsert</code><code class=\"ANY\">(</code><code class=\"ANY\">archive</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">games</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">nicolasCage</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeNote</code><code class=\"ANY\">(</code><code class=\"ANY\">content</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\"># Nicolas Cage</code><code class=\"CHAR_STRING_LITERAL\">\\n</code><code class=\"CHAR_STRING_LITERAL\">Our national treasure</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">folderId</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">null</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">witcher3</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeNote</code><code class=\"ANY\">(</code><code class=\"ANY\">content</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\"># The Witcher 3</code><code class=\"CHAR_STRING_LITERAL\">\\n</code><code class=\"CHAR_STRING_LITERAL\">Wild Hunt</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">folderId</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">archive</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">uncharted</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeNote</code><code class=\"ANY\">(</code><code class=\"ANY\">content</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\"># Uncharted</code><code class=\"CHAR_STRING_LITERAL\">\\n</code><code class=\"CHAR_STRING_LITERAL\">The Lost Legacy</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">folderId</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">games</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">noteQueries</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">testInsert</code><code class=\"ANY\">(</code><code class=\"ANY\">nicolasCage</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">witcher3</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">uncharted</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">presenter</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">presenter</code><code class=\"ANY\">(</code><code class=\"ANY\">folder</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">archive</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">models</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">presenter</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">models</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">map</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">rows</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">test</code><code class=\"ANY\">(</code><code class=\"ANY\">rxRule</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">presenter</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">dispatch</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">SearchTextChanged</code><code class=\"ANY\">(</code><code class=\"ANY\">text</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">models</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">popValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">containsOnly</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">FolderModel</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">id</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">games</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">title</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">games</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">NoteModel</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">id</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">witcher3</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">title</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">The Witcher 3</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">highlight</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">body</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">Wild Hunt</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">highlight</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANNOTATION_DECLARATOR\"> @</code><code class=\"ANNOTATION_DECLARATOR\">Test</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">`populate filtered notes when searching in the root folder`</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">games</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeFolder</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">games</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">archive</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeFolder</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">archive</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">folderQueries</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">testInsert</code><code class=\"ANY\">(</code><code class=\"ANY\">games</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">archive</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">uncharted</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeNote</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\"># Uncharted</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">gambling</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeNote</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\"># Gambling</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">archivedWitcher</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeNote</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\"># The Archived Witcher 3 (game)</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">folderId</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">archive</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">noteQueries</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">testInsert</code><code class=\"ANY\">(</code><code class=\"ANY\">uncharted</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">gambling</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">archivedWitcher</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">presenter</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">presenter</code><code class=\"ANY\">(</code><code class=\"ANY\">folder</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">null</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">models</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">presenter</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">models</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">map</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">rows</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">test</code><code class=\"ANY\">(</code><code class=\"ANY\">rxRule</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">presenter</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">dispatch</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">SearchTextChanged</code><code class=\"ANY\">(</code><code class=\"ANY\">text</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">gam</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">models</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">popValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">containsOnly</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">NoteModel</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">id</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">gambling</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">title</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">Gambling</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">highlight</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">gam</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">body</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">highlight</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANNOTATION_DECLARATOR\"> @</code><code class=\"ANNOTATION_DECLARATOR\">Test</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">`populate filtered notes when searching in a folder that contains nested folders`</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">archive</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeFolder</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">archive</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">gamesFolder</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeFolder</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">games</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">parent</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">archive</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">rpgGamesFolder</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeFolder</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">rpg</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">parent</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">gamesFolder</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">folderQueries</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">testInsert</code><code class=\"ANY\">(</code><code class=\"ANY\">archive</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">gamesFolder</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">rpgGamesFolder</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">gamesToBuy</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeNote</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\"># Games to buy</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">folderId</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">archive</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">unravel2</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeNote</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\"># Unravel 2 (game)</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">folderId</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">gamesFolder</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">witcher3</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeNote</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\"># Witcher 3 (game)</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">folderId</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">rpgGamesFolder</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">noteQueries</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">testInsert</code><code class=\"ANY\">(</code><code class=\"ANY\">gamesToBuy</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">unravel2</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">witcher3</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">presenter</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">presenter</code><code class=\"ANY\">(</code><code class=\"ANY\">folder</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">archive</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">models</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">presenter</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">models</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">map</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">rows</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">test</code><code class=\"ANY\">(</code><code class=\"ANY\">rxRule</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">presenter</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">dispatch</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">SearchTextChanged</code><code class=\"ANY\">(</code><code class=\"ANY\">text</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">game</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">models</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">popValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">containsOnly</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">NoteModel</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">id</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">gamesToBuy</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">title</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">Games to buy</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">highlight</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">game</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">body</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">highlight</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">NoteModel</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">id</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">unravel2</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">title</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">Unravel 2 (game)</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">highlight</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">game</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">body</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">highlight</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">NoteModel</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">id</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">witcher3</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">title</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">Witcher 3 (game)</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">highlight</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">game</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">body</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">highlight</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANNOTATION_DECLARATOR\"> @</code><code class=\"ANNOTATION_DECLARATOR\">Test</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">`filter out empty notes if requested`</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">noteQueries</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">testInsert</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeNote</code><code class=\"ANY\">(</code><code class=\"ANY\">id</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">NoteId</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">generate</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">content</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\"># Non-empty note</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeNote</code><code class=\"ANY\">(</code><code class=\"ANY\">id</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">NoteId</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">generate</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">content</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\"># </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeNote</code><code class=\"ANY\">(</code><code class=\"ANY\">id</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">NoteId</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">generate</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">content</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeNote</code><code class=\"ANY\">(</code><code class=\"ANY\">id</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">NoteId</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">generate</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">content</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">  </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">presenter</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">presenter</code><code class=\"ANY\">(</code><code class=\"ANY\">includeEmptyNotes</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">false</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">titlesAndBodies</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">presenter</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">models</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">map</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">model</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"ANY\">model</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">notes</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">map</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">title</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">text</code><code class=\"ANY\"> </code><code class=\"ANY\">to</code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">body</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">text</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">test</code><code class=\"ANY\">(</code><code class=\"ANY\">rxRule</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">presenter</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">dispatch</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">SearchTextChanged</code><code class=\"ANY\">(</code><code class=\"ANY\">text</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">titlesAndBodies</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">popValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">containsOnly</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">Non-empty note</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\"> </code><code class=\"ANY\">to</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANNOTATION_DECLARATOR\"> @</code><code class=\"ANNOTATION_DECLARATOR\">Test</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">`include empty notes if requested`</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">noteQueries</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">testInsert</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeNote</code><code class=\"ANY\">(</code><code class=\"ANY\">id</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">NoteId</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">generate</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">content</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\"># Non-empty note</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeNote</code><code class=\"ANY\">(</code><code class=\"ANY\">id</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">NoteId</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">generate</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">content</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\"># </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeNote</code><code class=\"ANY\">(</code><code class=\"ANY\">id</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">NoteId</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">generate</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">content</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeNote</code><code class=\"ANY\">(</code><code class=\"ANY\">id</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">NoteId</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">generate</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">content</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">  </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">presenter</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">presenter</code><code class=\"ANY\">(</code><code class=\"ANY\">includeEmptyNotes</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">true</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">titlesAndBodies</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">presenter</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">models</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">map</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">model</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"ANY\">model</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">notes</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">map</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">title</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">text</code><code class=\"ANY\"> </code><code class=\"ANY\">to</code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">body</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">text</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">test</code><code class=\"ANY\">(</code><code class=\"ANY\">rxRule</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">presenter</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">dispatch</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">SearchTextChanged</code><code class=\"ANY\">(</code><code class=\"ANY\">text</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">titlesAndBodies</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">popValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">containsOnly</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">Non-empty note</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\"> </code><code class=\"ANY\">to</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\"> </code><code class=\"ANY\">to</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\"> </code><code class=\"ANY\">to</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\"> </code><code class=\"ANY\">to</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANNOTATION_DECLARATOR\"> @</code><code class=\"ANNOTATION_DECLARATOR\">Test</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">`open new note screen when new note is clicked`</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">presenter</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">presenter</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">also</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">models</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">test</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">noteQueries</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">allNotes</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">executeAsList</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isEmpty</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">presenter</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">dispatch</code><code class=\"ANY\">(</code><code class=\"ANY\">NewNoteClicked</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">savedNote</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">noteQueries</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">allNotes</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">executeAsOneOrNull</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">checkNotNull</code><code class=\"ANY\">(</code><code class=\"ANY\">savedNote</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">navigator</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">pop</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isEqualTo</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">EditorScreenKey</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">NewNote</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">ExistingNoteId</code><code class=\"ANY\">(</code><code class=\"ANY\">savedNote</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANNOTATION_DECLARATOR\"> @</code><code class=\"ANNOTATION_DECLARATOR\">Test</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">`open new note screen on new-note keyboard shortcut`</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">presenter</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">models</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">test</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">noteQueries</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">allNotes</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">executeAsList</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isEmpty</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">keyboardShortcuts</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">broadcast</code><code class=\"ANY\">(</code><code class=\"ANY\">KeyboardShortcuts</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">newNote</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">savedNote</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">noteQueries</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">allNotes</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">executeAsOneOrNull</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">checkNotNull</code><code class=\"ANY\">(</code><code class=\"ANY\">savedNote</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">navigator</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">pop</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isEqualTo</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">EditorScreenKey</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">NewNote</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">ExistingNoteId</code><code class=\"ANY\">(</code><code class=\"ANY\">savedNote</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANNOTATION_DECLARATOR\"> @</code><code class=\"ANNOTATION_DECLARATOR\">Test</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">`create new note in the current folder`</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">folderId</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">FolderId</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">generate</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">presenter</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">presenter</code><code class=\"ANY\">(</code><code class=\"ANY\">folder</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">folderId</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">also</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">models</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">test</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">presenter</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">dispatch</code><code class=\"ANY\">(</code><code class=\"ANY\">NewNoteClicked</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">savedNote</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">noteQueries</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">allNotes</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">executeAsOne</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">savedNote</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">folderId</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isEqualTo</code><code class=\"ANY\">(</code><code class=\"ANY\">folderId</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">String</code><code class=\"ANY\">.</code><code class=\"FUNCTION_DECLARATOR\">highlight</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">HighlightedText</code><code class=\"ANY\">(</code><code class=\"ANY\">this</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code>\n</pre>\n</html>"},{"_id":{"language":"KOTLIN","lexingTokens},"sourceCode":"package me.saket.press.shared.preferences.sync.setup\n\nimport com.badoo.reaktive.completable.Completable\nimport com.badoo.reaktive.completable.andThen\nimport com.badoo.reaktive.completable.asObservable\nimport com.badoo.reaktive.completable.completableFromFunction\nimport com.badoo.reaktive.observable.Observable\nimport com.badoo.reaktive.observable.ObservableWrapper\nimport com.badoo.reaktive.observable.distinctUntilChanged\nimport com.badoo.reaktive.observable.doOnBeforeError\nimport com.badoo.reaktive.observable.filter\nimport com.badoo.reaktive.observable.map\nimport com.badoo.reaktive.observable.merge\nimport com.badoo.reaktive.observable.observableOfNever\nimport com.badoo.reaktive.observable.ofType\nimport com.badoo.reaktive.observable.onErrorResumeNext\nimport com.badoo.reaktive.observable.onErrorReturnValue\nimport com.badoo.reaktive.observable.publish\nimport com.badoo.reaktive.observable.startWithValue\nimport com.badoo.reaktive.observable.switchMap\nimport com.badoo.reaktive.observable.take\nimport com.badoo.reaktive.observable.withLatestFrom\nimport com.badoo.reaktive.observable.wrap\nimport com.badoo.reaktive.single.asObservable\nimport com.badoo.reaktive.single.zip\nimport com.badoo.reaktive.subject.behavior.BehaviorSubject\nimport me.saket.kgit.GitIdentity\nimport me.saket.kgit.SshKeygen\nimport me.saket.press.PressDatabase\nimport me.saket.press.shared.rx.combineLatestWith\nimport me.saket.press.shared.rx.consumeOnNext\nimport me.saket.press.shared.rx.filterNotNull\nimport me.saket.press.shared.rx.filterNull\nimport me.saket.press.shared.rx.mergeWith\nimport me.saket.press.shared.rx.repeatItemWhen\nimport me.saket.press.shared.rx.zip\nimport me.saket.press.shared.preferences.Setting\nimport me.saket.press.shared.syncer.SyncCoordinator\nimport me.saket.press.shared.preferences.sync.setup.FailureKind.AddingDeployKey\nimport me.saket.press.shared.preferences.sync.setup.FailureKind.Authorization\nimport me.saket.press.shared.preferences.sync.setup.FailureKind.FetchingRepos\nimport me.saket.press.shared.preferences.sync.setup.GitHostIntegrationEvent.CreateNewGitRepoClicked\nimport me.saket.press.shared.preferences.sync.setup.GitHostIntegrationEvent.GitRepositoryClicked\nimport me.saket.press.shared.preferences.sync.setup.GitHostIntegrationEvent.RetryClicked\nimport me.saket.press.shared.preferences.sync.setup.GitHostIntegrationEvent.SearchTextChanged\nimport me.saket.press.shared.preferences.sync.setup.GitHostIntegrationUiModel.SelectRepo\nimport me.saket.press.shared.preferences.sync.setup.GitHostIntegrationUiModel.ShowFailure\nimport me.saket.press.shared.preferences.sync.setup.GitHostIntegrationUiModel.ShowProgress\nimport me.saket.press.shared.syncer.git.DeviceInfo\nimport me.saket.press.shared.syncer.git.GitHost\nimport me.saket.press.shared.syncer.git.GitHostAuthToken\nimport me.saket.press.shared.syncer.git.GitRemoteAndAuth\nimport me.saket.press.shared.syncer.git.service.GitHostService\nimport me.saket.press.shared.syncer.git.service.GitRepositoryInfo\nimport me.saket.press.shared.ui.Navigator\nimport me.saket.press.shared.ui.Presenter\nimport me.saket.press.shared.ui.ScreenResults\nimport me.saket.press.shared.ui.highlight\n\nclass GitHostIntegrationPresenter(\n  private val args: Args,\n  authToken: (GitHost) -> Setting<GitHostAuthToken>,\n  gitHostService: GitHostService.Factory,\n  private val userSetting: Setting<GitIdentity>,\n  private val deviceInfo: DeviceInfo,\n  private val database: PressDatabase,\n  private val cachedRepos: GitRepositoryCache,\n  private val syncCoordinator: SyncCoordinator,\n  private val sshKeygen: SshKeygen,\n  private val screenResults: ScreenResults\n) : Presenter<GitHostIntegrationEvent, GitHostIntegrationUiModel>() {\n\n  private val gitHost = GitHost.readHostFromDeepLink(args.deepLink)\n  private val authToken: Setting<GitHostAuthToken> = authToken(gitHost)\n  private val gitHostService: GitHostService = gitHostService.create(gitHost)\n\n  override fun defaultUiModel() = ShowProgress\n\n  override fun models(): ObservableWrapper<GitHostIntegrationUiModel> {\n    return viewEvents().publish { events ->\n      merge(\n        completeAuth(events),\n        fetchRepositories(events),\n        displayRepositories(events),\n        showNewGitRepoScreen(events),\n        selectRepository(events)\n      )\n    }.wrap()\n  }\n\n  private fun completeAuth(\n    events: Observable<GitHostIntegrationEvent>\n  ): Observable<GitHostIntegrationUiModel> {\n    return cachedRepos.listen()\n      .take(1)\n      .filterNull()\n      .repeatItemOnRetry(events, kind = Authorization)\n      .switchMap {\n        gitHostService.completeAuth(args.deepLink)\n          .asObservable()\n          .consumeOnNext<GitHostAuthToken, GitHostIntegrationUiModel> {\n            authToken.set(it)\n          }\n          .doOnBeforeError { e -> e.printStackTrace() }\n          .onErrorReturnValue(ShowFailure(kind = Authorization))\n          .startWithValue(ShowProgress)\n      }\n  }\n\n  private fun fetchRepositories(\n    events: Observable<GitHostIntegrationEvent>\n  ): Observable<GitHostIntegrationUiModel> {\n    return zip(\n      authToken.listen().filterNotNull(),\n      cachedRepos.listen().filterNull()\n    )\n      .take(1)\n      .repeatItemOnRetry(events, kind = FetchingRepos)\n      .switchMap { (token) ->\n        zip(\n          gitHostService.fetchUser(token),\n          gitHostService.fetchUserRepos(token),\n          ::Pair\n        )\n          .asObservable()\n          .publish { networkCalls ->\n            merge(\n              networkCalls.ignoreErrors()\n                .consumeOnNext { (user, repos) ->\n                  userSetting.set(user)\n                  cachedRepos.set(repos)\n                },\n              networkCalls\n                .doOnBeforeError { e -> e.printStackTrace() }\n                .onErrorReturnValue(ShowFailure(kind = FetchingRepos))\n                .startWithValue(ShowProgress)\n            )\n          }\n      }\n      .ofType()\n  }\n\n  private fun displayRepositories(\n    events: Observable<GitHostIntegrationEvent>\n  ): Observable<GitHostIntegrationUiModel> {\n    val searchEvents = events\n      .ofType<SearchTextChanged>()\n      .map { it.text }\n\n    return cachedRepos.listen()\n      .filterNotNull()\n      .combineLatestWith(searchEvents)\n      .map { (repos, searchText) -> SelectRepo(repos.toUiModels(searchText)) }\n      .distinctUntilChanged()\n  }\n\n  private fun showNewGitRepoScreen(\n    events: Observable<GitHostIntegrationEvent>\n  ): Observable<GitHostIntegrationUiModel> {\n    val searchTexts = events\n      .ofType<SearchTextChanged>()\n      .map { it.text }\n\n    return events.ofType<CreateNewGitRepoClicked>()\n      .withLatestFrom(searchTexts, ::Pair)\n      .consumeOnNext { (_, searchText) ->\n        args.navigator.lfg(\n          NewGitRepositoryScreenKey(\n            username = userSetting.get()!!.name,\n            gitHost = gitHost,\n            preFilledRepoName = searchText\n          )\n        )\n      }\n  }\n\n  private fun selectRepository(\n    events: Observable<GitHostIntegrationEvent>\n  ): Observable<GitHostIntegrationUiModel> {\n    val repoSelections = events.ofType<GitRepositoryClicked>()\n      .map { it.repo }\n      .mergeWith(\n        screenResults\n          .listen<NewGitRepositoryCreatedResult>()\n          .map { it.repo }\n      )\n\n    return repoSelections\n      .repeatItemOnRetry(events, kind = AddingDeployKey)\n      .switchMap { repo ->\n        val token = authToken.get()!!\n        val deployKey = GitHostService.DeployKey(\n          title = \"Press (${deviceInfo.deviceName()})\",\n          key = sshKeygen.generateRsa(comment = \"(Created by Press)\")\n        )\n        gitHostService.addDeployKey(token, repo, deployKey)\n          .andThen(completeSetup(repo, deployKey, userSetting.get()!!))\n          .asObservable<GitHostIntegrationUiModel>()\n          .doOnBeforeError { e -> e.printStackTrace() }\n          .onErrorReturnValue(ShowFailure(kind = AddingDeployKey))\n          .startWithValue(ShowProgress)\n      }\n  }\n\n  private fun completeSetup(\n    repo: GitRepositoryInfo,\n    deployKey: GitHostService.DeployKey,\n    user: GitIdentity\n  ): Completable {\n    return completableFromFunction {\n      authToken.set(null)\n      userSetting.set(null)\n      database.folderSyncConfigQueries.save(\n        remote = GitRemoteAndAuth(repo, deployKey.key.privateKey, user)\n      )\n      syncCoordinator.trigger()\n      args.navigator.goBack()\n    }\n  }\n\n  private fun <T> Observable<T>.repeatItemOnRetry(\n    events: Observable<GitHostIntegrationEvent>,\n    kind: FailureKind\n  ) = repeatItemWhen(events.ofType<RetryClicked>().filter { it.failure == kind })\n\n  fun interface Factory {\n    fun create(args: Args): GitHostIntegrationPresenter\n  }\n\n  data class Args(\n    val deepLink: String,\n    val navigator: Navigator\n  )\n}\n\nprivate fun <T> Observable<T>.ignoreErrors(): Observable<T> {\n  return this.onErrorResumeNext(observableOfNever())\n}\n\nprivate fun List<GitRepositoryInfo>.toUiModels(searchText: String): List<RepoUiModel> {\n  val filtered = when {\n    searchText.isBlank() -> this\n    else -> filter {\n      it.owner.contains(searchText, ignoreCase = true) || it.name.contains(searchText, ignoreCase = true)\n    }\n  }\n  return filtered.map {\n    RepoUiModel(\n      id = it.ownerAndName,\n      owner = it.owner.highlight(searchText),\n      name = it.name.highlight(searchText),\n      repo = it\n    )\n  }\n}\n\ninterface GitRepositoryCache {\n  fun listen(): Observable<List<GitRepositoryInfo>?>\n  fun set(repos: List<GitRepositoryInfo>?)\n\n  class InMemory : GitRepositoryCache {\n    private val cache = BehaviorSubject<List<GitRepositoryInfo>?>(null)\n    override fun listen(): Observable<List<GitRepositoryInfo>?> = cache\n    override fun set(repos: List<GitRepositoryInfo>?) = cache.onNext(repos)\n  }\n}\n","highlightingTokens":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,5,0,0,0,0,1,0,1,0,0,0,0,8,0,0,0,0,0,0,0,0,8,0,0,0,0,8,0,8,0,0,0,0,0,0,0,0,8,0,8,0,0,0,0,1,0,1,0,0,0,0,8,0,8,0,0,0,0,0,1,0,1,0,0,0,0,8,0,0,0,0,1,0,1,0,0,0,0,8,0,0,0,0,1,0,1,0,0,0,0,8,0,0,0,0,1,0,1,0,0,0,0,8,0,0,0,0,1,0,1,0,0,0,0,8,0,0,0,0,1,0,1,0,0,0,0,8,0,0,0,0,0,8,0,8,0,0,8,0,0,0,0,0,0,0,0,0,1,0,1,0,7,0,0,0,0,0,9,0,0,0,10,0,0,0,0,1,0,1,0,7,0,0,8,0,8,0,0,0,0,9,0,0,0,0,0,0,1,0,1,0,7,0,0,8,0,0,0,0,0,9,0,0,0,0,0,0,0,1,0,1,0,6,0,0,0,0,0,0,0,0,0,0,1,0,1,0,6,0,0,0,0,8,0,8,0,0,0,0,0,0,0,0,1,0,9,0,0,0,9,0,6,0,7,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,9,0,0,0,0,0,0,0,0,0,0,1,0,1,0,6,0,0,0,0,0,0,0,0,0,8,0,8,0,0,0,0,0,0,0,8,0,8,0,0,0,0,0,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,0,0,0,9,0,2,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,8,0,0,8,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,7,0,0,0,0,0,9,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,9,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,1,0,1,0,6,0,0,0,0,0,0,0,0,0,8,0,8,0,0,0,0,0,0,0,8,0,8,0,0,0,0,0,0,0,0,1,0,9,0,0,0,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,2,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,0,7,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,7,0,0,0,0,0,9,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,1,0,1,0,6,0,0,0,0,0,0,0,0,0,8,0,8,0,0,0,0,0,0,0,8,0,8,0,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,0,0,0,0,0,0,0,9,0,8,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,0,0,10,0,6,0,0,0,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,0,7,0,0,7,0,0,0,0,9,0,0,0,9,0,0,0,0,0,6,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,1,0,1,0,6,0,0,0,0,0,0,0,0,0,8,0,8,0,0,0,0,0,0,0,8,0,8,0,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,0,0,0,0,0,0,0,9,0,8,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,0,0,10,0,6,0,0,0,0,0,0,1,0,0,0,9,0,8,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,0,7,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,1,0,1,0,6,0,0,0,0,0,0,0,0,0,8,0,8,0,0,0,0,0,0,0,8,0,8,0,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,8,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,0,0,10,0,6,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,0,0,10,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,7,0,0,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,0,0,9,0,0,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,9,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,7,0,0,0,0,0,9,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,9,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,1,0,1,0,6,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,8,0,8,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,8,0,0,0,0,0,0,0,1,0,9,0,6,0,0,0,0,0,0,0,0,0,9,0,2,0,0,0,0,0,0,0,0,0,0,9,0,2,0,0,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,10,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,8,0,8,0,0,6,0,0,0,0,0,0,0,0,0,8,0,8,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,9,0,0,0,9,0,8,0,0,0,0,9,0,6,0,0,0,10,0,0,0,0,0,6,0,0,0,0,0,1,0,1,0,6,0,0,0,0,0,0,0,1,0,6,0,0,0,0,8,0,0,0,8,0,0,0,0,0,0,0,0,1,0,1,0,5,0,0,0,0,0,0,1,0,0,0,0,8,0,0,0,0,0,0,1,0,0,0,0,8,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,8,0,8,0,0,6,0,0,0,0,8,0,8,0,0,0,0,0,0,1,0,1,0,9,0,9,0,0,0,0,0,0,0,1,0,1,0,8,0,8,0,0,6,0,0,0,0,8,0,0,0,8,0,8,0,0,0,0,0,0,1,0,7,0,0,0,1,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,9,0,6,0,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,6,0,0,0,0,0,0,0,1,0,0,0,9,0,6,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,1,0,5,0,0,0,0,0,1,0,6,0,0,0,0,8,0,8,0,8,0,8,0,0,0,0,1,0,6,0,0,0,0,8,0,8,0,8,0,0,0,0,0,1,0,5,0,0,0,8,0,0,0,0,0,0,0,1,0,1,0,7,0,0,0,9,0,8,0,8,0,8,0,0,2,0,0,0,0,0,0,1,0,1,0,6,0,0,0,0,8,0,8,0,8,0,8,0,0,0,0,0,0,0,0,0,0,1,0,1,0,6,0,0,0,0,8,0,8,0,8,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0],"highlightingCode":"<!DOCTYPE html>\n<html>\n<style>\n.ANY {\n    color: black;\n    font-weight: normal;\n    font-style: normal;\n}\n.KEYWORD {\n    color: blue;\n    font-weight: bold;\n    font-style: normal;\n}\n.LITERAL {\n    color: lightskyblue;\n    font-weight: bold;\n    font-style: normal;\n}\n.CHAR_STRING_LITERAL {\n    color: darkgoldenrod;\n    font-weight: normal;\n    font-style: normal;\n}\n.COMMENT {\n    color: grey;\n    font-weight: normal;\n    font-style: italic;\n}\n.CLASS_DECLARATOR {\n    color: crimson;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_DECLARATOR {\n    color: fuchsia;\n    font-weight: bold;\n    font-style: normal;\n}\n.VARIABLE_DECLARATOR {\n    color: purple;\n    font-weight: bold;\n    font-style: normal;\n}\n.TYPE_IDENTIFIER {\n    color: darkgreen;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_IDENTIFIER {\n    color: dodgerblue;\n    font-weight: normal;\n    font-style: normal;\n}\n.FIELD_IDENTIFIER {\n    color: coral;\n    font-weight: normal;\n    font-style: normal;\n}\n.ANNOTATION_DECLARATOR {\n    color: lightslategray;\n    font-weight: lighter;\n    font-style: italic;\n}\n</style>\n<pre>\n<code class=\"KEYWORD\">package</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">preferences</code><code class=\"ANY\">.</code><code class=\"ANY\">sync</code><code class=\"ANY\">.</code><code class=\"ANY\">setup</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">completable</code><code class=\"ANY\">.</code><code class=\"ANY\">Completable</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">completable</code><code class=\"ANY\">.</code><code class=\"ANY\">andThen</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">completable</code><code class=\"ANY\">.</code><code class=\"ANY\">asObservable</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">completable</code><code class=\"ANY\">.</code><code class=\"ANY\">completableFromFunction</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">Observable</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">ObservableWrapper</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">distinctUntilChanged</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">doOnBeforeError</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">filter</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">map</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">merge</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">observableOfNever</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">ofType</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">onErrorResumeNext</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">onErrorReturnValue</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">publish</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">startWithValue</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">switchMap</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">take</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">withLatestFrom</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">wrap</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">single</code><code class=\"ANY\">.</code><code class=\"ANY\">asObservable</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">single</code><code class=\"ANY\">.</code><code class=\"ANY\">zip</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">subject</code><code class=\"ANY\">.</code><code class=\"ANY\">behavior</code><code class=\"ANY\">.</code><code class=\"ANY\">BehaviorSubject</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">kgit</code><code class=\"ANY\">.</code><code class=\"ANY\">GitIdentity</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">kgit</code><code class=\"ANY\">.</code><code class=\"ANY\">SshKeygen</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">PressDatabase</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">rx</code><code class=\"ANY\">.</code><code class=\"ANY\">combineLatestWith</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">rx</code><code class=\"ANY\">.</code><code class=\"ANY\">consumeOnNext</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">rx</code><code class=\"ANY\">.</code><code class=\"ANY\">filterNotNull</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">rx</code><code class=\"ANY\">.</code><code class=\"ANY\">filterNull</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">rx</code><code class=\"ANY\">.</code><code class=\"ANY\">mergeWith</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">rx</code><code class=\"ANY\">.</code><code class=\"ANY\">repeatItemWhen</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">rx</code><code class=\"ANY\">.</code><code class=\"ANY\">zip</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">preferences</code><code class=\"ANY\">.</code><code class=\"ANY\">Setting</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">syncer</code><code class=\"ANY\">.</code><code class=\"ANY\">SyncCoordinator</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">preferences</code><code class=\"ANY\">.</code><code class=\"ANY\">sync</code><code class=\"ANY\">.</code><code class=\"ANY\">setup</code><code class=\"ANY\">.</code><code class=\"ANY\">FailureKind</code><code class=\"ANY\">.</code><code class=\"ANY\">AddingDeployKey</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">preferences</code><code class=\"ANY\">.</code><code class=\"ANY\">sync</code><code class=\"ANY\">.</code><code class=\"ANY\">setup</code><code class=\"ANY\">.</code><code class=\"ANY\">FailureKind</code><code class=\"ANY\">.</code><code class=\"ANY\">Authorization</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">preferences</code><code class=\"ANY\">.</code><code class=\"ANY\">sync</code><code class=\"ANY\">.</code><code class=\"ANY\">setup</code><code class=\"ANY\">.</code><code class=\"ANY\">FailureKind</code><code class=\"ANY\">.</code><code class=\"ANY\">FetchingRepos</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">preferences</code><code class=\"ANY\">.</code><code class=\"ANY\">sync</code><code class=\"ANY\">.</code><code class=\"ANY\">setup</code><code class=\"ANY\">.</code><code class=\"ANY\">GitHostIntegrationEvent</code><code class=\"ANY\">.</code><code class=\"ANY\">CreateNewGitRepoClicked</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">preferences</code><code class=\"ANY\">.</code><code class=\"ANY\">sync</code><code class=\"ANY\">.</code><code class=\"ANY\">setup</code><code class=\"ANY\">.</code><code class=\"ANY\">GitHostIntegrationEvent</code><code class=\"ANY\">.</code><code class=\"ANY\">GitRepositoryClicked</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">preferences</code><code class=\"ANY\">.</code><code class=\"ANY\">sync</code><code class=\"ANY\">.</code><code class=\"ANY\">setup</code><code class=\"ANY\">.</code><code class=\"ANY\">GitHostIntegrationEvent</code><code class=\"ANY\">.</code><code class=\"ANY\">RetryClicked</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">preferences</code><code class=\"ANY\">.</code><code class=\"ANY\">sync</code><code class=\"ANY\">.</code><code class=\"ANY\">setup</code><code class=\"ANY\">.</code><code class=\"ANY\">GitHostIntegrationEvent</code><code class=\"ANY\">.</code><code class=\"ANY\">SearchTextChanged</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">preferences</code><code class=\"ANY\">.</code><code class=\"ANY\">sync</code><code class=\"ANY\">.</code><code class=\"ANY\">setup</code><code class=\"ANY\">.</code><code class=\"ANY\">GitHostIntegrationUiModel</code><code class=\"ANY\">.</code><code class=\"ANY\">SelectRepo</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">preferences</code><code class=\"ANY\">.</code><code class=\"ANY\">sync</code><code class=\"ANY\">.</code><code class=\"ANY\">setup</code><code class=\"ANY\">.</code><code class=\"ANY\">GitHostIntegrationUiModel</code><code class=\"ANY\">.</code><code class=\"ANY\">ShowFailure</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">preferences</code><code class=\"ANY\">.</code><code class=\"ANY\">sync</code><code class=\"ANY\">.</code><code class=\"ANY\">setup</code><code class=\"ANY\">.</code><code class=\"ANY\">GitHostIntegrationUiModel</code><code class=\"ANY\">.</code><code class=\"ANY\">ShowProgress</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">syncer</code><code class=\"ANY\">.</code><code class=\"ANY\">git</code><code class=\"ANY\">.</code><code class=\"ANY\">DeviceInfo</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">syncer</code><code class=\"ANY\">.</code><code class=\"ANY\">git</code><code class=\"ANY\">.</code><code class=\"ANY\">GitHost</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">syncer</code><code class=\"ANY\">.</code><code class=\"ANY\">git</code><code class=\"ANY\">.</code><code class=\"ANY\">GitHostAuthToken</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">syncer</code><code class=\"ANY\">.</code><code class=\"ANY\">git</code><code class=\"ANY\">.</code><code class=\"ANY\">GitRemoteAndAuth</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">syncer</code><code class=\"ANY\">.</code><code class=\"ANY\">git</code><code class=\"ANY\">.</code><code class=\"ANY\">service</code><code class=\"ANY\">.</code><code class=\"ANY\">GitHostService</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">syncer</code><code class=\"ANY\">.</code><code class=\"ANY\">git</code><code class=\"ANY\">.</code><code class=\"ANY\">service</code><code class=\"ANY\">.</code><code class=\"ANY\">GitRepositoryInfo</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">ui</code><code class=\"ANY\">.</code><code class=\"ANY\">Navigator</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">ui</code><code class=\"ANY\">.</code><code class=\"ANY\">Presenter</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">ui</code><code class=\"ANY\">.</code><code class=\"ANY\">ScreenResults</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">ui</code><code class=\"ANY\">.</code><code class=\"ANY\">highlight</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code><code class=\"ANY\"> </code><code class=\"CLASS_DECLARATOR\">GitHostIntegrationPresenter</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"ANY\">args</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Args</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">authToken</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">GitHost</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Setting</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">GitHostAuthToken</code><code class=\"ANY\">></code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">gitHostService</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">GitHostService</code><code class=\"ANY\">.</code><code class=\"TYPE_IDENTIFIER\">Factory</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"ANY\">userSetting</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Setting</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">GitIdentity</code><code class=\"ANY\">></code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"ANY\">deviceInfo</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">DeviceInfo</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"ANY\">database</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">PressDatabase</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"ANY\">cachedRepos</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">GitRepositoryCache</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"ANY\">syncCoordinator</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">SyncCoordinator</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"ANY\">sshKeygen</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">SshKeygen</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"ANY\">screenResults</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">ScreenResults</code><code class=\"ANY\">\n</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Presenter</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">GitHostIntegrationEvent</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">GitHostIntegrationUiModel</code><code class=\"ANY\">></code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">gitHost</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">GitHost</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">readHostFromDeepLink</code><code class=\"ANY\">(</code><code class=\"ANY\">args</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">deepLink</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">authToken</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Setting</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">GitHostAuthToken</code><code class=\"ANY\">></code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">authToken</code><code class=\"ANY\">(</code><code class=\"ANY\">gitHost</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">gitHostService</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">GitHostService</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">gitHostService</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">create</code><code class=\"ANY\">(</code><code class=\"ANY\">gitHost</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">override</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">defaultUiModel</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">ShowProgress</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">override</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">models</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">ObservableWrapper</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">GitHostIntegrationUiModel</code><code class=\"ANY\">></code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">viewEvents</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">publish</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">events</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">merge</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">completeAuth</code><code class=\"ANY\">(</code><code class=\"ANY\">events</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fetchRepositories</code><code class=\"ANY\">(</code><code class=\"ANY\">events</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">displayRepositories</code><code class=\"ANY\">(</code><code class=\"ANY\">events</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">showNewGitRepoScreen</code><code class=\"ANY\">(</code><code class=\"ANY\">events</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">selectRepository</code><code class=\"ANY\">(</code><code class=\"ANY\">events</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">wrap</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">completeAuth</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">events</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">GitHostIntegrationEvent</code><code class=\"ANY\">></code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">GitHostIntegrationUiModel</code><code class=\"ANY\">></code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"ANY\">cachedRepos</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">listen</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">take</code><code class=\"ANY\">(</code><code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">filterNull</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">repeatItemOnRetry</code><code class=\"ANY\">(</code><code class=\"ANY\">events</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">kind</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">Authorization</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">switchMap</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">gitHostService</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">completeAuth</code><code class=\"ANY\">(</code><code class=\"ANY\">args</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">deepLink</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">asObservable</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">consumeOnNext</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">GitHostAuthToken</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">GitHostIntegrationUiModel</code><code class=\"ANY\">></code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">authToken</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">set</code><code class=\"ANY\">(</code><code class=\"ANY\">it</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">doOnBeforeError</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">e</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"ANY\">e</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">printStackTrace</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">onErrorReturnValue</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">ShowFailure</code><code class=\"ANY\">(</code><code class=\"ANY\">kind</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">Authorization</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">startWithValue</code><code class=\"ANY\">(</code><code class=\"ANY\">ShowProgress</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">fetchRepositories</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">events</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">GitHostIntegrationEvent</code><code class=\"ANY\">></code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">GitHostIntegrationUiModel</code><code class=\"ANY\">></code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">zip</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">authToken</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">listen</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">filterNotNull</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">cachedRepos</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">listen</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">filterNull</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">take</code><code class=\"ANY\">(</code><code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">repeatItemOnRetry</code><code class=\"ANY\">(</code><code class=\"ANY\">events</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">kind</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">FetchingRepos</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">switchMap</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"VARIABLE_DECLARATOR\">token</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">zip</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">gitHostService</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">fetchUser</code><code class=\"ANY\">(</code><code class=\"ANY\">token</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">gitHostService</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">fetchUserRepos</code><code class=\"ANY\">(</code><code class=\"ANY\">token</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">::</code><code class=\"ANY\">Pair</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">asObservable</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">publish</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">networkCalls</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">merge</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">networkCalls</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">ignoreErrors</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">consumeOnNext</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"VARIABLE_DECLARATOR\">user</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">repos</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">userSetting</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">set</code><code class=\"ANY\">(</code><code class=\"ANY\">user</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">cachedRepos</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">set</code><code class=\"ANY\">(</code><code class=\"ANY\">repos</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">networkCalls</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">doOnBeforeError</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">e</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"ANY\">e</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">printStackTrace</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">onErrorReturnValue</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">ShowFailure</code><code class=\"ANY\">(</code><code class=\"ANY\">kind</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">FetchingRepos</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">startWithValue</code><code class=\"ANY\">(</code><code class=\"ANY\">ShowProgress</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">ofType</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">displayRepositories</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">events</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">GitHostIntegrationEvent</code><code class=\"ANY\">></code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">GitHostIntegrationUiModel</code><code class=\"ANY\">></code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">searchEvents</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">events</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">ofType</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">SearchTextChanged</code><code class=\"ANY\">></code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">map</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">text</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"ANY\">cachedRepos</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">listen</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">filterNotNull</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">combineLatestWith</code><code class=\"ANY\">(</code><code class=\"ANY\">searchEvents</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">map</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"VARIABLE_DECLARATOR\">repos</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">searchText</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">SelectRepo</code><code class=\"ANY\">(</code><code class=\"ANY\">repos</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">toUiModels</code><code class=\"ANY\">(</code><code class=\"ANY\">searchText</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">distinctUntilChanged</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">showNewGitRepoScreen</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">events</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">GitHostIntegrationEvent</code><code class=\"ANY\">></code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">GitHostIntegrationUiModel</code><code class=\"ANY\">></code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">searchTexts</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">events</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">ofType</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">SearchTextChanged</code><code class=\"ANY\">></code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">map</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">text</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"ANY\">events</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">ofType</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">CreateNewGitRepoClicked</code><code class=\"ANY\">></code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">withLatestFrom</code><code class=\"ANY\">(</code><code class=\"ANY\">searchTexts</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">::</code><code class=\"ANY\">Pair</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">consumeOnNext</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"VARIABLE_DECLARATOR\">_</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">searchText</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">args</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">navigator</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">lfg</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">NewGitRepositoryScreenKey</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">username</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">userSetting</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">!</code><code class=\"ANY\">!</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">name</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">gitHost</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">gitHost</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">preFilledRepoName</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">searchText</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">selectRepository</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">events</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">GitHostIntegrationEvent</code><code class=\"ANY\">></code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">GitHostIntegrationUiModel</code><code class=\"ANY\">></code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">repoSelections</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">events</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">ofType</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">GitRepositoryClicked</code><code class=\"ANY\">></code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">map</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">repo</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">mergeWith</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">screenResults</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">listen</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">NewGitRepositoryCreatedResult</code><code class=\"ANY\">></code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">map</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">repo</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"ANY\">repoSelections</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">repeatItemOnRetry</code><code class=\"ANY\">(</code><code class=\"ANY\">events</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">kind</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">AddingDeployKey</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">switchMap</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">repo</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">token</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">authToken</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">!</code><code class=\"ANY\">!</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">deployKey</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">GitHostService</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">DeployKey</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">title</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">Press (</code><code class=\"CHAR_STRING_LITERAL\">${</code><code class=\"ANY\">deviceInfo</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">deviceName</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">}</code><code class=\"CHAR_STRING_LITERAL\">)</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">key</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">sshKeygen</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">generateRsa</code><code class=\"ANY\">(</code><code class=\"ANY\">comment</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">(Created by Press)</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">gitHostService</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">addDeployKey</code><code class=\"ANY\">(</code><code class=\"ANY\">token</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">repo</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">deployKey</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">andThen</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">completeSetup</code><code class=\"ANY\">(</code><code class=\"ANY\">repo</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">deployKey</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">userSetting</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">!</code><code class=\"ANY\">!</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">asObservable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">GitHostIntegrationUiModel</code><code class=\"ANY\">></code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">doOnBeforeError</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">e</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"ANY\">e</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">printStackTrace</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">onErrorReturnValue</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">ShowFailure</code><code class=\"ANY\">(</code><code class=\"ANY\">kind</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">AddingDeployKey</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">startWithValue</code><code class=\"ANY\">(</code><code class=\"ANY\">ShowProgress</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">completeSetup</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">repo</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">GitRepositoryInfo</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">deployKey</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">GitHostService</code><code class=\"ANY\">.</code><code class=\"TYPE_IDENTIFIER\">DeployKey</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">user</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">GitIdentity</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Completable</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">completableFromFunction</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">authToken</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">set</code><code class=\"ANY\">(</code><code class=\"LITERAL\">null</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">userSetting</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">set</code><code class=\"ANY\">(</code><code class=\"LITERAL\">null</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">database</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">folderSyncConfigQueries</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">save</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">remote</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">GitRemoteAndAuth</code><code class=\"ANY\">(</code><code class=\"ANY\">repo</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">deployKey</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">key</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">privateKey</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">user</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">syncCoordinator</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">trigger</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">args</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">navigator</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">goBack</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"ANY\"><</code><code class=\"ANY\">T</code><code class=\"ANY\">></code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">T</code><code class=\"ANY\">></code><code class=\"ANY\">.</code><code class=\"FUNCTION_DECLARATOR\">repeatItemOnRetry</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">events</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">GitHostIntegrationEvent</code><code class=\"ANY\">></code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">kind</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">FailureKind</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">repeatItemWhen</code><code class=\"ANY\">(</code><code class=\"ANY\">events</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">ofType</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">RetryClicked</code><code class=\"ANY\">></code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">filter</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">failure</code><code class=\"ANY\"> </code><code class=\"ANY\">==</code><code class=\"ANY\"> </code><code class=\"ANY\">kind</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">interface</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">Factory</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">create</code><code class=\"ANY\">(</code><code class=\"ANY\">args</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Args</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">GitHostIntegrationPresenter</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">data</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">class</code><code class=\"ANY\"> </code><code class=\"CLASS_DECLARATOR\">Args</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"ANY\">deepLink</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">String</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"ANY\">navigator</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Navigator</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"ANY\"><</code><code class=\"ANY\">T</code><code class=\"ANY\">></code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">T</code><code class=\"ANY\">></code><code class=\"ANY\">.</code><code class=\"FUNCTION_DECLARATOR\">ignoreErrors</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">T</code><code class=\"ANY\">></code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">this</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">onErrorResumeNext</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">observableOfNever</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">GitRepositoryInfo</code><code class=\"ANY\">></code><code class=\"ANY\">.</code><code class=\"FUNCTION_DECLARATOR\">toUiModels</code><code class=\"ANY\">(</code><code class=\"ANY\">searchText</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">String</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">RepoUiModel</code><code class=\"ANY\">></code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">filtered</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">when</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">searchText</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isBlank</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"KEYWORD\">this</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">filter</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">owner</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">contains</code><code class=\"ANY\">(</code><code class=\"ANY\">searchText</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">ignoreCase</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">true</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">||</code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">name</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">contains</code><code class=\"ANY\">(</code><code class=\"ANY\">searchText</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">ignoreCase</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">true</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"ANY\">filtered</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">map</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">RepoUiModel</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">id</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ownerAndName</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">owner</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">owner</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">highlight</code><code class=\"ANY\">(</code><code class=\"ANY\">searchText</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">name</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">name</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">highlight</code><code class=\"ANY\">(</code><code class=\"ANY\">searchText</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">repo</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">interface</code><code class=\"ANY\"> </code><code class=\"CLASS_DECLARATOR\">GitRepositoryCache</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">listen</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">GitRepositoryInfo</code><code class=\"ANY\">></code><code class=\"TYPE_IDENTIFIER\">?</code><code class=\"ANY\">></code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">set</code><code class=\"ANY\">(</code><code class=\"ANY\">repos</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">GitRepositoryInfo</code><code class=\"ANY\">></code><code class=\"TYPE_IDENTIFIER\">?</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">class</code><code class=\"ANY\"> </code><code class=\"CLASS_DECLARATOR\">InMemory</code><code class=\"ANY\"> </code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">GitRepositoryCache</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">cache</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">BehaviorSubject</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">GitRepositoryInfo</code><code class=\"ANY\">></code><code class=\"TYPE_IDENTIFIER\">?</code><code class=\"ANY\">></code><code class=\"ANY\">(</code><code class=\"LITERAL\">null</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">override</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">listen</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">GitRepositoryInfo</code><code class=\"ANY\">></code><code class=\"TYPE_IDENTIFIER\">?</code><code class=\"ANY\">></code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">cache</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">override</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">set</code><code class=\"ANY\">(</code><code class=\"ANY\">repos</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">GitRepositoryInfo</code><code class=\"ANY\">></code><code class=\"TYPE_IDENTIFIER\">?</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">cache</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">onNext</code><code class=\"ANY\">(</code><code class=\"ANY\">repos</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code>\n</pre>\n</html>"},{"_id":{"language":"KOTLIN","lexingTokens":[70,4,146,7,146,5,5,71,4,146,7,146,7,146,5,71,4,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,5,71,4,146,7,146,7,146,5,71,4,146,7,146,7,146,5,71,4,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,7,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,7,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,5,71,4,146,7,146,7,146,5,71,4,146,7,146,7,146,5,5,2,5,72,4,146,9,146,26,169,146,10,4,26,4,146,9,146,10,4,13,5,4,4,108,4,76,4,146,4,28,4,146,9,146,8,169,146,10,7,146,4,13,5,4,4,4,4,146,4,28,4,146,5,4,4,4,4,146,4,28,4,146,9,10,7,146,5,4,4,4,4,146,9,170,169,169,169,169,169,169,146,169,28,169,146,9,146,169,28,169,138,7,146,8,169,146,169,28,169,138,7,146,10,8,170,169,169,169,169,169,169,146,169,28,169,146,169,13,4,146,7,146,9,10,4,18,4,138,7,146,4,14,170,169,169,169,169,10,5,4,4,14,5,5,4,4,108,4,76,4,146,4,28,4,146,9,146,8,169,146,10,7,146,4,13,5,4,4,4,4,146,4,28,4,146,5,4,4,4,4,146,4,28,4,146,9,10,7,146,5,4,4,4,4,146,9,146,169,28,169,138,7,146,8,169,146,169,28,169,138,7,146,10,5,4,4,14,5,5,4,4,108,4,76,4,146,4,28,4,146,9,146,10,7,146,4,13,5,4,4,4,4,146,9,146,10,5,4,4,14,5,5,4,4,108,4,76,4,146,4,28,4,146,9,146,8,169,146,10,7,146,4,13,5,4,4,4,4,146,4,28,4,146,9,138,10,5,4,4,4,4,146,4,28,4,146,9,10,7,146,5,4,4,4,4,146,9,170,169,169,169,169,169,169,146,169,28,169,146,169,13,4,146,7,146,9,10,4,14,7,146,169,13,4,146,7,146,9,10,4,14,8,170,169,169,169,169,169,169,146,169,28,169,146,169,13,4,146,7,146,9,10,4,14,170,169,169,169,169,10,5,4,4,14,5,5,4,4,76,4,146,4,28,4,146,9,146,8,169,146,10,7,146,4,13,5,4,4,4,4,146,4,28,4,146,9,138,10,5,4,4,4,4,146,4,28,4,143,5,4,4,4,4,146,4,28,4,146,9,10,7,146,5,4,4,4,4,146,9,170,169,169,169,169,169,169,146,169,28,169,146,169,13,4,87,4,9,146,7,146,10,4,146,7,146,9,10,4,88,4,146,7,146,9,10,4,14,170,169,169,169,169,169,169,169,169,7,146,169,13,4,146,7,146,9,10,4,14,8,170,169,169,169,169,169,169,146,169,28,169,146,169,13,4,146,7,146,9,10,4,14,170,169,169,169,169,10,5,4,4,14,5,5,4,4,108,4,76,4,146,4,28,4,146,9,146,10,7,146,4,13,5,4,4,4,4,146,9,146,9,10,7,146,10,5,4,4,4,4,146,9,170,169,169,169,169,169,169,146,169,28,169,146,9,10,8,170,169,169,169,169,169,169,146,169,28,169,146,169,13,4,146,7,146,9,10,4,18,4,138,7,146,4,14,7,146,169,13,4,138,7,146,4,14,170,169,169,169,169,10,5,4,4,14,5,5,4,42,146,9,149,160,158,10,5,4,4,108,4,76,4,146,4,28,4,146,9,146,10,7,146,4,13,5,4,4,4,4,146,9,146,9,10,7,146,10,5,4,4,4,4,146,9,170,169,169,169,169,169,169,146,169,28,169,146,169,13,4,146,7,146,9,10,4,14,7,146,169,13,4,138,7,146,4,14,8,170,169,169,169,169,169,169,146,169,28,169,146,169,13,4,146,7,146,9,10,4,14,7,146,169,13,4,146,7,146,9,10,4,14,170,169,169,169,169,10,5,4,4,14,5,5,4,4,82,4,13,5,4,4,4,4,146,4,28,4,143,5,4,4,4,4,146,4,28,4,146,9,135,10,5,5,4,4,4,4,146,7,146,9,170,169,169,169,169,169,169,146,169,28,169,146,9,10,8,170,169,169,169,169,169,169,146,169,28,169,146,169,13,5,4,4,4,4,4,4,4,4,87,4,9,146,7,146,10,4,13,5,4,4,4,4,4,4,4,4,4,4,146,7,146,9,10,4,18,4,138,7,146,5,4,4,4,4,4,4,4,4,14,4,88,4,13,5,4,4,4,4,4,4,4,4,4,4,146,7,146,9,10,4,18,4,138,7,146,5,4,4,4,4,4,4,4,4,14,5,4,4,4,4,4,4,14,170,169,169,169,169,10,5,5,4,4,4,4,146,4,28,4,146,9,146,9,10,7,146,7,146,10,7,146,4,13,5,4,4,4,4,4,4,146,9,135,7,146,10,5,4,4,4,4,14,5,5,4,4,4,4,146,4,13,4,146,4,34,4,146,9,138,7,146,8,169,146,169,19,169,138,7,146,10,4,14,5,4,4,4,4,146,4,13,4,146,7,146,9,10,4,14,5,4,4,14,5,5,4,4,74,4,146,9,170,169,169,169,169,146,26,169,146,44,28,169,144,8,170,169,169,169,169,146,26,169,146,44,28,169,144,8,170,169,169,169,169,146,26,169,146,44,28,169,144,8,170,169,169,169,169,146,26,169,146,8,170,169,169,169,169,146,26,169,9,10,169,34,169,146,8,170,169,169,169,169,146,26,169,9,10,169,34,169,146,169,28,169,13,14,170,169,169,10,4,13,5,4,4,4,4,146,7,146,4,28,4,146,5,4,4,4,4,146,7,146,4,28,4,25,146,7,146,9,10,5,4,4,4,4,146,7,146,4,28,4,146,5,5,4,4,4,4,146,7,146,4,28,4,146,5,4,4,4,4,146,7,146,4,28,4,25,146,7,146,9,10,5,4,4,4,4,146,7,146,4,13,4,146,9,10,4,14,5,5,4,4,4,4,146,7,146,4,28,4,146,7,146,5,5,4,4,4,4,146,7,146,4,28,4,146,5,4,4,4,4,146,7,146,4,13,4,146,9,10,4,14,5,4,4,14,5,5,4,4,74,4,146,9,129,169,146,26,169,146,10,4,13,5,4,4,4,4,146,7,146,9,10,5,4,4,4,4,93,4,9,146,169,102,169,146,10,4,13,5,4,4,4,4,4,4,146,7,146,9,146,10,5,4,4,4,4,14,5,4,4,14,5,5,4,4,81,4,75,4,13,5,4,4,4,4,74,4,146,9,170,169,169,169,169,169,169,146,26,169,146,8,170,169,169,169,169,169,169,146,26,169,146,44,28,169,144,8,170,169,169,169,169,169,169,146,26,169,146,8,170,169,169,169,169,169,169,146,26,169,146,44,28,169,144,8,170,169,169,169,169,169,169,146,26,169,146,8,170,169,169,169,169,169,169,146,26,169,9,10,169,34,169,146,8,170,169,169,169,169,169,169,146,26,169,146,169,28,169,143,170,169,169,169,169,10,4,13,5,4,4,4,4,4,4,76,4,146,4,28,4,146,9,146,10,5,4,4,4,4,4,4,76,4,146,4,28,4,146,7,146,9,146,10,5,4,4,4,4,4,4,4,4,7,146,9,170,169,169,169,169,169,169,169,169,169,169,146,9,146,10,7,146,169,13,5,4,4,4,4,4,4,4,4,4,4,4,4,146,7,146,4,28,4,146,7,146,5,4,4,4,4,4,4,4,4,4,4,4,4,146,7,146,9,146,10,5,4,4,4,4,4,4,4,4,4,4,4,4,146,7,146,46,146,7,146,47,4,13,4,146,4,28,4,146,4,14,5,4,4,4,4,4,4,4,4,4,4,14,170,169,169,169,169,169,169,169,169,10,5,4,4,4,4,4,4,4,4,7,146,9,10,5,4,4,4,4,4,4,4,4,7,146,4,13,5,4,4,4,4,4,4,4,4,4,4,87,4,9,25,146,10,4,13,5,4,4,4,4,4,4,4,4,4,4,4,4,146,9,143,10,5,4,4,4,4,4,4,4,4,4,4,4,4,146,4,13,4,146,8,4,146,8,4,146,4,34,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,146,4,53,4,146,7,146,5,4,4,4,4,4,4,4,4,4,4,4,4,14,5,4,4,4,4,4,4,4,4,4,4,14,5,4,4,4,4,4,4,4,4,4,4,146,25,25,7,146,9,144,10,5,4,4,4,4,4,4,4,4,4,4,146,25,25,7,146,9,146,7,146,8,169,146,7,146,10,5,4,4,4,4,4,4,4,4,14,5,5,4,4,4,4,4,4,146,7,146,9,170,169,169,169,169,169,169,169,169,146,169,28,169,146,8,170,169,169,169,169,169,169,169,169,146,169,28,169,146,8,170,169,169,169,169,169,169,169,169,146,169,28,169,146,8,170,169,169,169,169,169,169,169,169,146,169,28,169,146,8,170,169,169,169,169,169,169,169,169,146,169,28,169,13,5,4,4,4,4,4,4,4,4,4,4,146,7,146,9,10,5,4,4,4,4,4,4,4,4,14,8,170,169,169,169,169,169,169,169,169,146,169,28,169,13,5,4,4,4,4,4,4,4,4,4,4,146,9,10,5,4,4,4,4,4,4,4,4,4,4,146,7,146,9,10,5,4,4,4,4,4,4,4,4,14,170,169,169,169,169,169,169,10,5,4,4,4,4,14,5,4,4,14,5,14,5,-1]},"sourceCode":"package press.widgets\n\nimport android.content.Context\nimport android.graphics.drawable.PaintDrawable\nimport android.view.Gravity.CENTER\nimport android.view.Gravity.CENTER_HORIZONTAL\nimport android.view.KeyEvent\nimport android.view.View\nimport android.widget.FrameLayout\nimport androidx.appcompat.app.AlertDialog\nimport androidx.core.view.isVisible\nimport androidx.core.view.updateLayoutParams\nimport androidx.core.view.updatePaddingRelative\nimport com.squareup.contour.ContourLayout\nimport me.saket.press.shared.theme.TextStyles.mainTitle\nimport me.saket.press.shared.theme.TextStyles.smallBody\nimport me.saket.press.shared.theme.TextView\nimport press.extensions.padding\nimport press.extensions.textColor\nimport press.theme.themePalette\n\n/**\n * Rounded corners and theme colors, because [AlertDialog] isn't very customizable.\n * Essentially copies dialogs from [https://cash.app]'s Android app.\n */\nclass PressDialogView(context: Context) : ContourLayout(context) {\n  private val titleView = TextView(context, mainTitle).apply {\n    gravity = CENTER_HORIZONTAL\n    textColor = themePalette().textColorPrimary\n    layoutBy(\n      x = matchParentX(marginLeft = 20.dip, marginRight = 20.dip),\n      y = topTo { parent.top() + 20.ydip }\n    )\n  }\n\n  private val messageView = TextView(context, smallBody).apply {\n    gravity = CENTER_HORIZONTAL\n    textColor = themePalette().textColorPrimary\n    updatePaddingRelative(start = 20.dip, end = 20.dip)\n  }\n\n  private val contentView = FrameLayout(context).apply {\n    addView(messageView)\n  }\n\n  private val negativeButtonView = PressBorderlessButton(context, smallBody).apply {\n    padding = dp(16)\n    textColor = themePalette().textColorPrimary\n    layoutBy(\n      x = leftTo { parent.left() }.rightTo { parent.centerX() },\n      y = topTo { buttonsTopSeparator.bottom() }\n    )\n  }\n\n  val positiveButtonView = PressBorderlessButton(context, smallBody).apply {\n    padding = dp(16)\n    isSingleLine = true\n    textColor = themePalette().accentColor\n    applyLayout(\n      x = leftTo { if (negativeButtonView.isVisible) parent.centerX() else parent.left() }\n        .rightTo { parent.right() },\n      y = topTo { negativeButtonView.top() }\n    )\n  }\n\n  private val buttonsTopSeparator = View(context).apply {\n    setBackgroundColor(themePalette().divider)\n    applyLayout(\n      x = matchParentX(),\n      y = topTo { contentView.bottom() + 20.ydip }.heightOf { 1.ydip }\n    )\n  }\n\n  @Suppress(\"unused\")\n  private val buttonsMidSeparator = View(context).apply {\n    setBackgroundColor(themePalette().divider)\n    applyLayout(\n      x = centerHorizontallyTo { parent.centerX() }.widthOf { 1.xdip },\n      y = topTo { buttonsTopSeparator.bottom() }.bottomTo { parent.bottom() }\n    )\n  }\n\n  init {\n    clipToOutline = true\n    elevation = dp(20f)\n\n    contentView.layoutBy(\n      x = matchParentX(),\n      y = topTo {\n        if (titleView.isVisible) {\n          titleView.bottom() + 16.ydip\n        } else {\n          parent.top() + 20.ydip\n        }\n      }\n    )\n\n    background = PaintDrawable(themePalette().window.backgroundColor).apply {\n      setCornerRadius(8f.dip)\n    }\n\n    contourWidthOf { available -> minOf(300.xdip, available - 60.xdip) }\n    contourHeightOf { positiveButtonView.bottom() }\n  }\n\n  fun render(\n    title: CharSequence? = null,\n    message: CharSequence? = null,\n    negativeButton: String? = null,\n    positiveButton: String,\n    negativeOnClick: () -> Unit,\n    positiveOnClick: () -> Unit = {}\n  ) {\n    titleView.text = title\n    titleView.isVisible = !title.isNullOrBlank()\n    messageView.text = message\n\n    negativeButtonView.text = negativeButton\n    negativeButtonView.isVisible = !negativeButton.isNullOrBlank()\n    negativeButtonView.setOnClickListener { negativeOnClick() }\n\n    buttonsMidSeparator.isVisible = negativeButtonView.isVisible\n\n    positiveButtonView.text = positiveButton\n    positiveButtonView.setOnClickListener { positiveOnClick() }\n  }\n\n  fun replaceMessageWith(vararg views: View) {\n    contentView.removeAllViews()\n    for (view in views) {\n      contentView.addView(view)\n    }\n  }\n\n  companion object {\n    fun show(\n      context: Context,\n      title: CharSequence? = null,\n      message: CharSequence,\n      negativeButton: String? = null,\n      positiveButton: String,\n      positiveOnClick: () -> Unit,\n      dismissOnOutsideTap: Boolean = true\n    ) {\n      val dialogView = PressDialogView(context)\n      val dialog = AlertDialog.Builder(context)\n        .setView(\n          FrameLayout(context).also {\n            it.elevation = dialogView.elevation\n            it.addView(dialogView)\n            dialogView.updateLayoutParams<FrameLayout.LayoutParams> { gravity = CENTER }\n          }\n        )\n        .show()\n        .apply {\n          if (!dismissOnOutsideTap) {\n            setCanceledOnTouchOutside(false)\n            setOnKeyListener { _, keyCode, _ ->\n              keyCode == KeyEvent.KEYCODE_BACK\n            }\n          }\n          window!!.setBackgroundDrawable(null)\n          window!!.setLayout(LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT)\n        }\n\n      dialogView.render(\n        title = title,\n        message = message,\n        negativeButton = negativeButton,\n        positiveButton = positiveButton,\n        negativeOnClick = {\n          dialog.dismiss()\n        },\n        positiveOnClick = {\n          positiveOnClick()\n          dialog.dismiss()\n        }\n      )\n    }\n  }\n}\n","highlightingTokens":[1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,4,0,1,0,5,0,0,0,0,8,0,0,0,0,8,0,0,0,0,0,0,0,0,1,0,1,0,7,0,0,0,9,0,0,0,0,0,0,0,9,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,2,0,10,0,0,0,0,0,0,2,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,0,0,9,0,0,0,0,0,2,0,10,0,6,0,0,0,0,0,0,0,0,0,6,0,0,0,0,1,0,1,0,7,0,0,0,9,0,0,0,0,0,0,0,9,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,0,9,0,0,0,0,0,2,0,10,0,0,0,0,0,0,2,0,10,0,0,0,0,6,0,0,0,0,1,0,1,0,7,0,0,0,9,0,0,0,0,9,0,6,0,0,0,0,0,9,0,0,0,0,0,0,6,0,0,0,0,1,0,1,0,7,0,0,0,9,0,0,0,0,0,0,0,9,0,6,0,0,0,0,0,0,0,0,0,9,0,2,0,0,0,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,0,0,9,0,0,0,6,0,9,0,6,0,0,0,9,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,0,0,9,0,0,0,6,0,0,0,0,0,0,0,0,0,6,0,0,0,0,1,0,7,0,0,0,9,0,0,0,0,0,0,0,9,0,6,0,0,0,0,0,0,0,0,0,9,0,2,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,1,0,0,0,0,10,0,0,0,0,9,0,0,0,1,0,0,0,9,0,0,0,6,0,0,0,0,0,0,0,0,0,0,9,0,6,0,0,0,9,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,0,0,9,0,0,0,6,0,0,0,0,0,0,0,0,0,6,0,0,0,0,1,0,1,0,7,0,0,0,9,0,0,0,0,9,0,6,0,0,0,0,0,9,0,9,0,0,0,10,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,0,0,9,0,0,0,0,0,2,0,10,0,6,0,9,0,6,0,2,0,10,0,6,0,0,0,0,0,0,0,0,0,6,0,0,0,11,11,0,3,3,3,0,0,0,0,1,0,1,0,7,0,0,0,9,0,0,0,0,9,0,6,0,0,0,0,0,9,0,9,0,0,0,10,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,0,0,9,0,0,0,6,0,9,0,6,0,2,0,10,0,6,0,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,0,0,9,0,0,0,6,0,9,0,6,0,0,0,9,0,0,0,6,0,0,0,0,0,0,0,0,0,6,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,9,0,2,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,2,0,10,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,2,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,9,0,0,0,10,0,10,0,0,9,0,6,0,0,0,0,0,0,0,9,0,2,0,10,0,0,0,0,0,0,6,0,0,0,0,0,0,9,0,6,0,7,0,0,0,9,0,2,0,10,0,0,0,0,0,0,2,0,10,0,0,6,0,0,0,0,0,9,0,6,0,0,0,9,0,0,0,6,0,0,0,0,0,0,0,0,1,0,6,0,0,0,0,0,0,0,0,0,8,8,0,0,2,0,0,0,0,0,0,0,0,0,8,8,0,0,2,0,0,0,0,0,0,0,0,0,8,8,0,0,2,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,9,0,6,0,9,0,0,0,6,0,0,0,0,0,0,0,0,10,0,0,0,0,0,10,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,9,0,0,0,6,0,0,0,0,0,0,0,0,1,0,6,0,1,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,1,0,0,7,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,6,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,8,8,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,8,8,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,9,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,8,0,8,0,0,6,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,7,0,0,7,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"highlightingCode":"<!DOCTYPE html>\n<html>\n<style>\n.ANY {\n    color: black;\n    font-weight: normal;\n    font-style: normal;\n}\n.KEYWORD {\n    color: blue;\n    font-weight: bold;\n    font-style: normal;\n}\n.LITERAL {\n    color: lightskyblue;\n    font-weight: bold;\n    font-style: normal;\n}\n.CHAR_STRING_LITERAL {\n    color: darkgoldenrod;\n    font-weight: normal;\n    font-style: normal;\n}\n.COMMENT {\n    color: grey;\n    font-weight: normal;\n    font-style: italic;\n}\n.CLASS_DECLARATOR {\n    color: crimson;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_DECLARATOR {\n    color: fuchsia;\n    font-weight: bold;\n    font-style: normal;\n}\n.VARIABLE_DECLARATOR {\n    color: purple;\n    font-weight: bold;\n    font-style: normal;\n}\n.TYPE_IDENTIFIER {\n    color: darkgreen;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_IDENTIFIER {\n    color: dodgerblue;\n    font-weight: normal;\n    font-style: normal;\n}\n.FIELD_IDENTIFIER {\n    color: coral;\n    font-weight: normal;\n    font-style: normal;\n}\n.ANNOTATION_DECLARATOR {\n    color: lightslategray;\n    font-weight: lighter;\n    font-style: italic;\n}\n</style>\n<pre>\n<code class=\"KEYWORD\">package</code><code class=\"ANY\"> </code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">widgets</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">android</code><code class=\"ANY\">.</code><code class=\"ANY\">content</code><code class=\"ANY\">.</code><code class=\"ANY\">Context</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">android</code><code class=\"ANY\">.</code><code class=\"ANY\">graphics</code><code class=\"ANY\">.</code><code class=\"ANY\">drawable</code><code class=\"ANY\">.</code><code class=\"ANY\">PaintDrawable</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">android</code><code class=\"ANY\">.</code><code class=\"ANY\">view</code><code class=\"ANY\">.</code><code class=\"ANY\">Gravity</code><code class=\"ANY\">.</code><code class=\"ANY\">CENTER</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">android</code><code class=\"ANY\">.</code><code class=\"ANY\">view</code><code class=\"ANY\">.</code><code class=\"ANY\">Gravity</code><code class=\"ANY\">.</code><code class=\"ANY\">CENTER_HORIZONTAL</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">android</code><code class=\"ANY\">.</code><code class=\"ANY\">view</code><code class=\"ANY\">.</code><code class=\"ANY\">KeyEvent</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">android</code><code class=\"ANY\">.</code><code class=\"ANY\">view</code><code class=\"ANY\">.</code><code class=\"ANY\">View</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">android</code><code class=\"ANY\">.</code><code class=\"ANY\">widget</code><code class=\"ANY\">.</code><code class=\"ANY\">FrameLayout</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">androidx</code><code class=\"ANY\">.</code><code class=\"ANY\">appcompat</code><code class=\"ANY\">.</code><code class=\"ANY\">app</code><code class=\"ANY\">.</code><code class=\"ANY\">AlertDialog</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">androidx</code><code class=\"ANY\">.</code><code class=\"ANY\">core</code><code class=\"ANY\">.</code><code class=\"ANY\">view</code><code class=\"ANY\">.</code><code class=\"ANY\">isVisible</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">androidx</code><code class=\"ANY\">.</code><code class=\"ANY\">core</code><code class=\"ANY\">.</code><code class=\"ANY\">view</code><code class=\"ANY\">.</code><code class=\"ANY\">updateLayoutParams</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">androidx</code><code class=\"ANY\">.</code><code class=\"ANY\">core</code><code class=\"ANY\">.</code><code class=\"ANY\">view</code><code class=\"ANY\">.</code><code class=\"ANY\">updatePaddingRelative</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">squareup</code><code class=\"ANY\">.</code><code class=\"ANY\">contour</code><code class=\"ANY\">.</code><code class=\"ANY\">ContourLayout</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">theme</code><code class=\"ANY\">.</code><code class=\"ANY\">TextStyles</code><code class=\"ANY\">.</code><code class=\"ANY\">mainTitle</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">theme</code><code class=\"ANY\">.</code><code class=\"ANY\">TextStyles</code><code class=\"ANY\">.</code><code class=\"ANY\">smallBody</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">theme</code><code class=\"ANY\">.</code><code class=\"ANY\">TextView</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">extensions</code><code class=\"ANY\">.</code><code class=\"ANY\">padding</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">extensions</code><code class=\"ANY\">.</code><code class=\"ANY\">textColor</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">theme</code><code class=\"ANY\">.</code><code class=\"ANY\">themePalette</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"COMMENT\">/**\n * Rounded corners and theme colors, because [AlertDialog] isn't very customizable.\n * Essentially copies dialogs from [https://cash.app]'s Android app.\n */</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code><code class=\"ANY\"> </code><code class=\"CLASS_DECLARATOR\">PressDialogView</code><code class=\"ANY\">(</code><code class=\"ANY\">context</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Context</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">ContourLayout</code><code class=\"ANY\">(</code><code class=\"ANY\">context</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">titleView</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">TextView</code><code class=\"ANY\">(</code><code class=\"ANY\">context</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">mainTitle</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">apply</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">gravity</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">CENTER_HORIZONTAL</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">textColor</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">themePalette</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">textColorPrimary</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">layoutBy</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">x</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">matchParentX</code><code class=\"ANY\">(</code><code class=\"ANY\">marginLeft</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">20</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">dip</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">marginRight</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">20</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">dip</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">y</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">topTo</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">parent</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">top</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">+</code><code class=\"ANY\"> </code><code class=\"LITERAL\">20</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ydip</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">messageView</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">TextView</code><code class=\"ANY\">(</code><code class=\"ANY\">context</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">smallBody</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">apply</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">gravity</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">CENTER_HORIZONTAL</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">textColor</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">themePalette</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">textColorPrimary</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">updatePaddingRelative</code><code class=\"ANY\">(</code><code class=\"ANY\">start</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">20</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">dip</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">end</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">20</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">dip</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">contentView</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">FrameLayout</code><code class=\"ANY\">(</code><code class=\"ANY\">context</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">apply</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">addView</code><code class=\"ANY\">(</code><code class=\"ANY\">messageView</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">negativeButtonView</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">PressBorderlessButton</code><code class=\"ANY\">(</code><code class=\"ANY\">context</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">smallBody</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">apply</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">padding</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">dp</code><code class=\"ANY\">(</code><code class=\"LITERAL\">16</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">textColor</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">themePalette</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">textColorPrimary</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">layoutBy</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">x</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">leftTo</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">parent</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">left</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">rightTo</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">parent</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">centerX</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">y</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">topTo</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">buttonsTopSeparator</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">bottom</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">positiveButtonView</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">PressBorderlessButton</code><code class=\"ANY\">(</code><code class=\"ANY\">context</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">smallBody</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">apply</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">padding</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">dp</code><code class=\"ANY\">(</code><code class=\"LITERAL\">16</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">isSingleLine</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">true</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">textColor</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">themePalette</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">accentColor</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">applyLayout</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">x</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">leftTo</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">negativeButtonView</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">isVisible</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">parent</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">centerX</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\"> </code><code class=\"ANY\">parent</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">left</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">rightTo</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">parent</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">right</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">y</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">topTo</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">negativeButtonView</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">top</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">buttonsTopSeparator</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">View</code><code class=\"ANY\">(</code><code class=\"ANY\">context</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">apply</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">setBackgroundColor</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">themePalette</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">divider</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">applyLayout</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">x</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">matchParentX</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">y</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">topTo</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">contentView</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">bottom</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">+</code><code class=\"ANY\"> </code><code class=\"LITERAL\">20</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ydip</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">heightOf</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"LITERAL\">1</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ydip</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANNOTATION_DECLARATOR\"> @</code><code class=\"ANNOTATION_DECLARATOR\">Suppress</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">unused</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">buttonsMidSeparator</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">View</code><code class=\"ANY\">(</code><code class=\"ANY\">context</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">apply</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">setBackgroundColor</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">themePalette</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">divider</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">applyLayout</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">x</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">centerHorizontallyTo</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">parent</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">centerX</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">widthOf</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"LITERAL\">1</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">xdip</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">y</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">topTo</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">buttonsTopSeparator</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">bottom</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">bottomTo</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">parent</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">bottom</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">init</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">clipToOutline</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">true</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">elevation</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">dp</code><code class=\"ANY\">(</code><code class=\"LITERAL\">20f</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">contentView</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">layoutBy</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">x</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">matchParentX</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">y</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">topTo</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">titleView</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">isVisible</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">titleView</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">bottom</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">+</code><code class=\"ANY\"> </code><code class=\"LITERAL\">16</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ydip</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">parent</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">top</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">+</code><code class=\"ANY\"> </code><code class=\"LITERAL\">20</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ydip</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">background</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">PaintDrawable</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">themePalette</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">window</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">backgroundColor</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">apply</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">setCornerRadius</code><code class=\"ANY\">(</code><code class=\"LITERAL\">8f</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">dip</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">contourWidthOf</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">available</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">minOf</code><code class=\"ANY\">(</code><code class=\"LITERAL\">300</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">xdip</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">available</code><code class=\"ANY\"> </code><code class=\"ANY\">-</code><code class=\"ANY\"> </code><code class=\"LITERAL\">60</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">xdip</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">contourHeightOf</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">positiveButtonView</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">bottom</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">render</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">title</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">CharSequence</code><code class=\"TYPE_IDENTIFIER\">? </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">null</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">message</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">CharSequence</code><code class=\"TYPE_IDENTIFIER\">? </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">null</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">negativeButton</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">String</code><code class=\"TYPE_IDENTIFIER\">? </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">null</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">positiveButton</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">String</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">negativeOnClick</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Unit</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">positiveOnClick</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Unit</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">titleView</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">text</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">title</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">titleView</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">isVisible</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">!</code><code class=\"ANY\">title</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isNullOrBlank</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">messageView</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">text</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">message</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">negativeButtonView</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">text</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">negativeButton</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">negativeButtonView</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">isVisible</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">!</code><code class=\"ANY\">negativeButton</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isNullOrBlank</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">negativeButtonView</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">setOnClickListener</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">negativeOnClick</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">buttonsMidSeparator</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">isVisible</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">negativeButtonView</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">isVisible</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">positiveButtonView</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">text</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">positiveButton</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">positiveButtonView</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">setOnClickListener</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">positiveOnClick</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">replaceMessageWith</code><code class=\"ANY\">(</code><code class=\"KEYWORD\">vararg</code><code class=\"ANY\"> </code><code class=\"ANY\">views</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">View</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">contentView</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">removeAllViews</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">for</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"VARIABLE_DECLARATOR\">view</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">in</code><code class=\"ANY\"> </code><code class=\"ANY\">views</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">contentView</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">addView</code><code class=\"ANY\">(</code><code class=\"ANY\">view</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">companion</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">object</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">show</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">context</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Context</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">title</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">CharSequence</code><code class=\"TYPE_IDENTIFIER\">? </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">null</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">message</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">CharSequence</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">negativeButton</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">String</code><code class=\"TYPE_IDENTIFIER\">? </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">null</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">positiveButton</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">String</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">positiveOnClick</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Unit</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">dismissOnOutsideTap</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Boolean</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">true</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">dialogView</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">PressDialogView</code><code class=\"ANY\">(</code><code class=\"ANY\">context</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">dialog</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">AlertDialog</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Builder</code><code class=\"ANY\">(</code><code class=\"ANY\">context</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">setView</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">FrameLayout</code><code class=\"ANY\">(</code><code class=\"ANY\">context</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">also</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">elevation</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">dialogView</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">elevation</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">addView</code><code class=\"ANY\">(</code><code class=\"ANY\">dialogView</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">dialogView</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">updateLayoutParams</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">FrameLayout</code><code class=\"ANY\">.</code><code class=\"TYPE_IDENTIFIER\">LayoutParams</code><code class=\"ANY\">></code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">gravity</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">CENTER</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">show</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">apply</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">!</code><code class=\"ANY\">dismissOnOutsideTap</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">setCanceledOnTouchOutside</code><code class=\"ANY\">(</code><code class=\"LITERAL\">false</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">setOnKeyListener</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">_</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">keyCode</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">_</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">keyCode</code><code class=\"ANY\"> </code><code class=\"ANY\">==</code><code class=\"ANY\"> </code><code class=\"ANY\">KeyEvent</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">KEYCODE_BACK</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">window</code><code class=\"ANY\">!</code><code class=\"ANY\">!</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">setBackgroundDrawable</code><code class=\"ANY\">(</code><code class=\"LITERAL\">null</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">window</code><code class=\"ANY\">!</code><code class=\"ANY\">!</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">setLayout</code><code class=\"ANY\">(</code><code class=\"ANY\">LayoutParams</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">MATCH_PARENT</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">LayoutParams</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">WRAP_CONTENT</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">dialogView</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">render</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">title</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">title</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">message</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">message</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">negativeButton</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">negativeButton</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">positiveButton</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">positiveButton</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">negativeOnClick</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">dialog</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">dismiss</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">positiveOnClick</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">positiveOnClick</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">dialog</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">dismiss</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code>\n</pre>\n</html>"},{"_id":{"language":"KOTLIN","lexingTokens},"sourceCode":"package press.home\n\nimport android.content.Context\nimport android.util.AttributeSet\nimport androidx.core.view.isVisible\nimport androidx.recyclerview.widget.ConcatAdapter\nimport androidx.recyclerview.widget.LinearLayoutManager\nimport androidx.recyclerview.widget.RecyclerView.State\nimport androidx.transition.Fade\nimport androidx.transition.TransitionManager\nimport com.google.android.material.floatingactionbutton.FloatingActionButton\nimport com.jakewharton.rxbinding3.view.detaches\nimport com.squareup.contour.ContourLayout\nimport com.squareup.inject.assisted.Assisted\nimport com.squareup.inject.inflation.InflationInject\nimport io.reactivex.Observable\nimport io.reactivex.android.schedulers.AndroidSchedulers.mainThread\nimport me.saket.inboxrecyclerview.InboxRecyclerView\nimport me.saket.inboxrecyclerview.expander.InboxItemExpander\nimport me.saket.press.R\nimport me.saket.press.shared.editor.EditorOpenMode.ExistingNote\nimport me.saket.press.shared.editor.EditorScreenKey\nimport me.saket.press.shared.home.HomeEvent.NewNoteClicked\nimport me.saket.press.shared.home.HomeEvent.SearchTextChanged\nimport me.saket.press.shared.home.HomeModel\nimport me.saket.press.shared.home.HomePresenter\nimport me.saket.press.shared.home.HomePresenter.Args\nimport me.saket.press.shared.home.HomeScreenKey\nimport me.saket.press.shared.ui.ScreenKey\nimport me.saket.press.shared.ui.models\nimport press.extensions.doOnTextChange\nimport press.extensions.hideKeyboard\nimport press.extensions.second\nimport press.extensions.throttleFirst\nimport press.navigation.BackPressInterceptor\nimport press.navigation.BackPressInterceptor.InterceptResult\nimport press.navigation.ScreenFocusChangeListener\nimport press.navigation.navigator\nimport press.navigation.screenKey\nimport press.navigation.transitions.ExpandableScreenHost\nimport press.widgets.DividerItemDecoration\nimport press.widgets.SlideDownItemAnimator\nimport press.widgets.insets.keyboardHeight\n\nclass HomeView @InflationInject constructor(\n  @Assisted context: Context,\n  @Assisted attrs: AttributeSet? = null,\n  private val presenter: HomePresenter.Factory\n) : ContourLayout(context), ScreenFocusChangeListener, ExpandableScreenHost, BackPressInterceptor {\n\n  private val noteAdapter = NoteListAdapter()\n  private val folderAdapter = FolderListAdapter()\n  private val screenKey = screenKey<HomeScreenKey>()\n\n  override val toolbar = HomeToolbar(\n    context = context,\n    showNavIcon = !HomeScreenKey.isRoot(screenKey)\n  )\n\n  private val emptyStateView = EmptyStateView(context)\n\n  private val notesList = InboxRecyclerView(context).apply {\n    id = R.id.home_notes\n    itemAnimator = SlideDownItemAnimator()\n    addItemDecoration(DividerItemDecoration())\n  }\n\n  private val newNoteFab = FloatingActionButton(context).apply {\n    setImageResource(R.drawable.ic_note_add_24dp)\n  }\n\n  init {\n    id = R.id.home_view\n\n    toolbar.layoutBy(\n      x = leftTo { parent.left() }.rightTo { parent.right() },\n      y = topTo { parent.top() }\n    )\n    emptyStateView.layoutBy(\n      x = matchParentX(),\n      y = centerVerticallyTo { parent.centerY() }\n    )\n    notesList.layoutBy(\n      x = leftTo { parent.left() }.rightTo { parent.right() },\n      y = topTo { toolbar.bottom() }.bottomTo { parent.bottom() }\n    )\n    newNoteFab.layoutBy(\n      x = rightTo { parent.right() - 24.dip },\n      y = bottomTo { parent.bottom() - 24.dip }\n    )\n\n    notesList.adapter = ConcatAdapter(folderAdapter, noteAdapter)\n    notesList.layoutManager = object : LinearLayoutManager(context) {\n      override fun calculateExtraLayoutSpace(state: State, extraLayoutSpace: IntArray) {\n        super.calculateExtraLayoutSpace(state, extraLayoutSpace)\n        // When this screen gets resized by the keyboard, we wanna continue showing items in the space covered\n        // by the keyboard. This way all the notes stay visible when the editor screen is dragged for a note\n        // item that's covered by the keyboard.\n        extraLayoutSpace[1] = maxOf(keyboardHeight() ?: 0, extraLayoutSpace[1])\n      }\n    }\n  }\n\n  override fun onAttachedToWindow() {\n    super.onAttachedToWindow()\n\n    val presenter = presenter.create(\n      Args(\n        screenKey = screenKey(),\n        includeBlankNotes = false,\n        navigator = navigator()\n      )\n    )\n\n    presenter.models()\n      .takeUntil(detaches())\n      .observeOn(mainThread())\n      .subscribe(::render)\n\n    newNoteFab.setOnClickListener {\n      toolbar.setSearchVisible(false, withKeyboard = false)\n      presenter.dispatch(NewNoteClicked)\n    }\n    toolbar.searchField.doOnTextChange {\n      notesList.scrollToPosition(0)\n      presenter.dispatch(SearchTextChanged(text = it.toString()))\n    }\n\n    Observable.merge(noteAdapter.clicks, folderAdapter.clicks)\n      .throttleFirst(1.second, mainThread())\n      .takeUntil(detaches())\n      .subscribe { row ->\n        if (toolbar.isSearchVisible()) {\n          hideKeyboard()\n        }\n        navigator().lfg(row.screenKey())\n      }\n  }\n\n  override fun createScreenExpander(): InboxItemExpander<ScreenKey> {\n    return InboxItemExpander { screen, viewHolders ->\n      when (screen) {\n        is EditorScreenKey -> {\n          (screen.openMode as? ExistingNote)?.let { mode ->\n            noteAdapter.viewHolderFor(mode.noteId.id, viewHolders)\n          }\n        }\n        is HomeScreenKey -> {\n          screen.folder?.let { folder ->\n            folderAdapter.viewHolderFor(folder, viewHolders)\n          }\n        }\n        else -> null\n      }\n    }\n  }\n\n  override fun onScreenFocusChanged(focusedScreen: ScreenKey?) {\n    if (focusedScreen is EditorScreenKey && focusedScreen.openMode is ExistingNote) {\n      // Hide the FAB only if an existing note is being opened.\n      // If it's a new note, the FAB will morph into the new screen.\n      newNoteFab.hide()\n    } else {\n      newNoteFab.show()\n    }\n\n    if (screenKey == focusedScreen && toolbar.isSearchVisible()) {\n      toolbar.searchField.requestFocus()\n    }\n  }\n\n  override fun onInterceptBackPress(): InterceptResult {\n    return if (toolbar.isSearchVisible()) {\n      toolbar.setSearchVisible(false)\n      InterceptResult.Intercepted\n    } else {\n      InterceptResult.Ignored\n    }\n  }\n\n  private fun render(model: HomeModel) {\n    toolbar.render(model)\n    noteAdapter.submitList(model.notes)\n    folderAdapter.submitList(model.folders)\n\n    TransitionManager.beginDelayedTransition(this, Fade().addTarget(emptyStateView))\n    emptyStateView.isVisible = model.emptyState != null\n    emptyStateView.render(model.emptyState)\n  }\n}\n","highlightingTokens":[1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,5,11,11,0,1,0,0,0,11,11,0,0,0,0,8,0,0,0,11,11,0,0,0,0,8,8,0,0,2,0,0,0,0,1,0,1,0,0,0,0,8,0,8,0,0,0,0,0,8,0,0,0,0,0,8,0,0,8,0,0,8,0,0,0,0,0,0,1,0,1,0,7,0,0,0,9,0,0,0,0,0,1,0,1,0,7,0,0,0,9,0,0,0,0,0,1,0,1,0,7,0,0,0,9,0,8,0,0,0,0,0,0,0,1,0,1,0,7,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,7,0,0,0,9,0,0,0,0,0,0,0,1,0,1,0,7,0,0,0,9,0,0,0,0,9,0,6,0,0,0,0,0,0,0,0,0,0,0,10,0,10,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,9,0,9,0,0,0,0,0,0,6,0,0,0,0,1,0,1,0,7,0,0,0,9,0,0,0,0,9,0,6,0,0,0,0,0,9,0,0,0,10,0,10,0,0,0,0,6,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,10,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,0,0,9,0,0,0,6,0,9,0,6,0,0,0,9,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,0,0,9,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,0,0,9,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,0,0,9,0,0,0,6,0,9,0,6,0,0,0,9,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,0,0,9,0,0,0,6,0,9,0,6,0,0,0,9,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,0,0,9,0,0,0,0,0,2,0,10,0,6,0,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,0,0,9,0,0,0,0,0,2,0,10,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,6,0,0,0,0,8,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,1,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,0,9,0,0,0,0,0,0,2,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,6,0,0,0,0,0,0,0,0,0,1,0,9,0,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,9,0,9,0,0,0,0,0,0,0,0,0,0,0,9,0,9,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,0,0,0,0,0,0,0,0,9,0,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,10,0,9,0,6,0,0,0,0,0,0,0,0,0,9,0,2,0,0,0,0,0,0,0,0,0,0,9,0,9,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,10,0,0,0,0,0,0,0,0,0,9,0,2,0,10,0,0,9,0,0,0,0,0,0,0,0,0,0,0,9,0,9,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,7,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,1,0,1,0,6,0,0,0,0,8,0,8,0,0,0,0,0,0,0,0,1,0,9,0,6,0,7,0,0,7,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,8,0,0,0,9,0,6,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,10,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,9,0,6,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,1,0,1,0,6,0,0,0,0,8,8,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,8,0,0,0,0,0,10,0,1,0,8,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,6,0,0,0,0,8,0,0,0,0,0,0,0,1,0,1,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,2,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,6,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,0,9,0,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,10,0,0,0,2,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,0],"highlightingCode":"<!DOCTYPE html>\n<html>\n<style>\n.ANY {\n    color: black;\n    font-weight: normal;\n    font-style: normal;\n}\n.KEYWORD {\n    color: blue;\n    font-weight: bold;\n    font-style: normal;\n}\n.LITERAL {\n    color: lightskyblue;\n    font-weight: bold;\n    font-style: normal;\n}\n.CHAR_STRING_LITERAL {\n    color: darkgoldenrod;\n    font-weight: normal;\n    font-style: normal;\n}\n.COMMENT {\n    color: grey;\n    font-weight: normal;\n    font-style: italic;\n}\n.CLASS_DECLARATOR {\n    color: crimson;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_DECLARATOR {\n    color: fuchsia;\n    font-weight: bold;\n    font-style: normal;\n}\n.VARIABLE_DECLARATOR {\n    color: purple;\n    font-weight: bold;\n    font-style: normal;\n}\n.TYPE_IDENTIFIER {\n    color: darkgreen;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_IDENTIFIER {\n    color: dodgerblue;\n    font-weight: normal;\n    font-style: normal;\n}\n.FIELD_IDENTIFIER {\n    color: coral;\n    font-weight: normal;\n    font-style: normal;\n}\n.ANNOTATION_DECLARATOR {\n    color: lightslategray;\n    font-weight: lighter;\n    font-style: italic;\n}\n</style>\n<pre>\n<code class=\"KEYWORD\">package</code><code class=\"ANY\"> </code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">home</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">android</code><code class=\"ANY\">.</code><code class=\"ANY\">content</code><code class=\"ANY\">.</code><code class=\"ANY\">Context</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">android</code><code class=\"ANY\">.</code><code class=\"ANY\">util</code><code class=\"ANY\">.</code><code class=\"ANY\">AttributeSet</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">androidx</code><code class=\"ANY\">.</code><code class=\"ANY\">core</code><code class=\"ANY\">.</code><code class=\"ANY\">view</code><code class=\"ANY\">.</code><code class=\"ANY\">isVisible</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">androidx</code><code class=\"ANY\">.</code><code class=\"ANY\">recyclerview</code><code class=\"ANY\">.</code><code class=\"ANY\">widget</code><code class=\"ANY\">.</code><code class=\"ANY\">ConcatAdapter</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">androidx</code><code class=\"ANY\">.</code><code class=\"ANY\">recyclerview</code><code class=\"ANY\">.</code><code class=\"ANY\">widget</code><code class=\"ANY\">.</code><code class=\"ANY\">LinearLayoutManager</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">androidx</code><code class=\"ANY\">.</code><code class=\"ANY\">recyclerview</code><code class=\"ANY\">.</code><code class=\"ANY\">widget</code><code class=\"ANY\">.</code><code class=\"ANY\">RecyclerView</code><code class=\"ANY\">.</code><code class=\"ANY\">State</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">androidx</code><code class=\"ANY\">.</code><code class=\"ANY\">transition</code><code class=\"ANY\">.</code><code class=\"ANY\">Fade</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">androidx</code><code class=\"ANY\">.</code><code class=\"ANY\">transition</code><code class=\"ANY\">.</code><code class=\"ANY\">TransitionManager</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">google</code><code class=\"ANY\">.</code><code class=\"ANY\">android</code><code class=\"ANY\">.</code><code class=\"ANY\">material</code><code class=\"ANY\">.</code><code class=\"ANY\">floatingactionbutton</code><code class=\"ANY\">.</code><code class=\"ANY\">FloatingActionButton</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">jakewharton</code><code class=\"ANY\">.</code><code class=\"ANY\">rxbinding3</code><code class=\"ANY\">.</code><code class=\"ANY\">view</code><code class=\"ANY\">.</code><code class=\"ANY\">detaches</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">squareup</code><code class=\"ANY\">.</code><code class=\"ANY\">contour</code><code class=\"ANY\">.</code><code class=\"ANY\">ContourLayout</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">squareup</code><code class=\"ANY\">.</code><code class=\"ANY\">inject</code><code class=\"ANY\">.</code><code class=\"ANY\">assisted</code><code class=\"ANY\">.</code><code class=\"ANY\">Assisted</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">squareup</code><code class=\"ANY\">.</code><code class=\"ANY\">inject</code><code class=\"ANY\">.</code><code class=\"ANY\">inflation</code><code class=\"ANY\">.</code><code class=\"ANY\">InflationInject</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">io</code><code class=\"ANY\">.</code><code class=\"ANY\">reactivex</code><code class=\"ANY\">.</code><code class=\"ANY\">Observable</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">io</code><code class=\"ANY\">.</code><code class=\"ANY\">reactivex</code><code class=\"ANY\">.</code><code class=\"ANY\">android</code><code class=\"ANY\">.</code><code class=\"ANY\">schedulers</code><code class=\"ANY\">.</code><code class=\"ANY\">AndroidSchedulers</code><code class=\"ANY\">.</code><code class=\"ANY\">mainThread</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">inboxrecyclerview</code><code class=\"ANY\">.</code><code class=\"ANY\">InboxRecyclerView</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">inboxrecyclerview</code><code class=\"ANY\">.</code><code class=\"ANY\">expander</code><code class=\"ANY\">.</code><code class=\"ANY\">InboxItemExpander</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">R</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">editor</code><code class=\"ANY\">.</code><code class=\"ANY\">EditorOpenMode</code><code class=\"ANY\">.</code><code class=\"ANY\">ExistingNote</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">editor</code><code class=\"ANY\">.</code><code class=\"ANY\">EditorScreenKey</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">home</code><code class=\"ANY\">.</code><code class=\"ANY\">HomeEvent</code><code class=\"ANY\">.</code><code class=\"ANY\">NewNoteClicked</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">home</code><code class=\"ANY\">.</code><code class=\"ANY\">HomeEvent</code><code class=\"ANY\">.</code><code class=\"ANY\">SearchTextChanged</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">home</code><code class=\"ANY\">.</code><code class=\"ANY\">HomeModel</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">home</code><code class=\"ANY\">.</code><code class=\"ANY\">HomePresenter</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">home</code><code class=\"ANY\">.</code><code class=\"ANY\">HomePresenter</code><code class=\"ANY\">.</code><code class=\"ANY\">Args</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">home</code><code class=\"ANY\">.</code><code class=\"ANY\">HomeScreenKey</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">ui</code><code class=\"ANY\">.</code><code class=\"ANY\">ScreenKey</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">ui</code><code class=\"ANY\">.</code><code class=\"ANY\">models</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">extensions</code><code class=\"ANY\">.</code><code class=\"ANY\">doOnTextChange</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">extensions</code><code class=\"ANY\">.</code><code class=\"ANY\">hideKeyboard</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">extensions</code><code class=\"ANY\">.</code><code class=\"ANY\">second</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">extensions</code><code class=\"ANY\">.</code><code class=\"ANY\">throttleFirst</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">navigation</code><code class=\"ANY\">.</code><code class=\"ANY\">BackPressInterceptor</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">navigation</code><code class=\"ANY\">.</code><code class=\"ANY\">BackPressInterceptor</code><code class=\"ANY\">.</code><code class=\"ANY\">InterceptResult</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">navigation</code><code class=\"ANY\">.</code><code class=\"ANY\">ScreenFocusChangeListener</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">navigation</code><code class=\"ANY\">.</code><code class=\"ANY\">navigator</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">navigation</code><code class=\"ANY\">.</code><code class=\"ANY\">screenKey</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">navigation</code><code class=\"ANY\">.</code><code class=\"ANY\">transitions</code><code class=\"ANY\">.</code><code class=\"ANY\">ExpandableScreenHost</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">widgets</code><code class=\"ANY\">.</code><code class=\"ANY\">DividerItemDecoration</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">widgets</code><code class=\"ANY\">.</code><code class=\"ANY\">SlideDownItemAnimator</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">widgets</code><code class=\"ANY\">.</code><code class=\"ANY\">insets</code><code class=\"ANY\">.</code><code class=\"ANY\">keyboardHeight</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code><code class=\"ANY\"> </code><code class=\"CLASS_DECLARATOR\">HomeView</code><code class=\"ANNOTATION_DECLARATOR\"> @</code><code class=\"ANNOTATION_DECLARATOR\">InflationInject</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">constructor</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANNOTATION_DECLARATOR\"> @</code><code class=\"ANNOTATION_DECLARATOR\">Assisted</code><code class=\"ANY\"> </code><code class=\"ANY\">context</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Context</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANNOTATION_DECLARATOR\"> @</code><code class=\"ANNOTATION_DECLARATOR\">Assisted</code><code class=\"ANY\"> </code><code class=\"ANY\">attrs</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">AttributeSet</code><code class=\"TYPE_IDENTIFIER\">? </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">null</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"ANY\">presenter</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">HomePresenter</code><code class=\"ANY\">.</code><code class=\"TYPE_IDENTIFIER\">Factory</code><code class=\"ANY\">\n</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">ContourLayout</code><code class=\"ANY\">(</code><code class=\"ANY\">context</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">ScreenFocusChangeListener</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">ExpandableScreenHost</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">BackPressInterceptor</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">noteAdapter</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">NoteListAdapter</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">folderAdapter</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">FolderListAdapter</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">screenKey</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">screenKey</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">HomeScreenKey</code><code class=\"ANY\">></code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">override</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">toolbar</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">HomeToolbar</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">context</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">context</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">showNavIcon</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">!</code><code class=\"ANY\">HomeScreenKey</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isRoot</code><code class=\"ANY\">(</code><code class=\"ANY\">screenKey</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">emptyStateView</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">EmptyStateView</code><code class=\"ANY\">(</code><code class=\"ANY\">context</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">notesList</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">InboxRecyclerView</code><code class=\"ANY\">(</code><code class=\"ANY\">context</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">apply</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">id</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">R</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">home_notes</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">itemAnimator</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">SlideDownItemAnimator</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">addItemDecoration</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">DividerItemDecoration</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">newNoteFab</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">FloatingActionButton</code><code class=\"ANY\">(</code><code class=\"ANY\">context</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">apply</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">setImageResource</code><code class=\"ANY\">(</code><code class=\"ANY\">R</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">drawable</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ic_note_add_24dp</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">init</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">id</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">R</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">home_view</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">toolbar</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">layoutBy</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">x</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">leftTo</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">parent</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">left</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">rightTo</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">parent</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">right</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">y</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">topTo</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">parent</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">top</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">emptyStateView</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">layoutBy</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">x</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">matchParentX</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">y</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">centerVerticallyTo</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">parent</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">centerY</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">notesList</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">layoutBy</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">x</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">leftTo</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">parent</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">left</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">rightTo</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">parent</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">right</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">y</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">topTo</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">toolbar</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">bottom</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">bottomTo</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">parent</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">bottom</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">newNoteFab</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">layoutBy</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">x</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">rightTo</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">parent</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">right</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">-</code><code class=\"ANY\"> </code><code class=\"LITERAL\">24</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">dip</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">y</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">bottomTo</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">parent</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">bottom</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">-</code><code class=\"ANY\"> </code><code class=\"LITERAL\">24</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">dip</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">notesList</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">adapter</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">ConcatAdapter</code><code class=\"ANY\">(</code><code class=\"ANY\">folderAdapter</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">noteAdapter</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">notesList</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">layoutManager</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">object</code><code class=\"ANY\"> </code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">LinearLayoutManager</code><code class=\"ANY\">(</code><code class=\"ANY\">context</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">override</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">calculateExtraLayoutSpace</code><code class=\"ANY\">(</code><code class=\"ANY\">state</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">State</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">extraLayoutSpace</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">IntArray</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">super</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">calculateExtraLayoutSpace</code><code class=\"ANY\">(</code><code class=\"ANY\">state</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">extraLayoutSpace</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"COMMENT\">// When this screen gets resized by the keyboard, we wanna continue showing items in the space covered</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"COMMENT\">// by the keyboard. This way all the notes stay visible when the editor screen is dragged for a note</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"COMMENT\">// item that's covered by the keyboard.</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">extraLayoutSpace</code><code class=\"ANY\">[</code><code class=\"LITERAL\">1</code><code class=\"ANY\">]</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">maxOf</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">keyboardHeight</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">?</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"LITERAL\">0</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">extraLayoutSpace</code><code class=\"ANY\">[</code><code class=\"LITERAL\">1</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">override</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">onAttachedToWindow</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">super</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">onAttachedToWindow</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">presenter</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">presenter</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">create</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">Args</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">screenKey</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">screenKey</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">includeBlankNotes</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">false</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">navigator</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">navigator</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">presenter</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">models</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">takeUntil</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">detaches</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">observeOn</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">mainThread</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">subscribe</code><code class=\"ANY\">(</code><code class=\"ANY\">::</code><code class=\"ANY\">render</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">newNoteFab</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">setOnClickListener</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">toolbar</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">setSearchVisible</code><code class=\"ANY\">(</code><code class=\"LITERAL\">false</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">withKeyboard</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">false</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">presenter</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">dispatch</code><code class=\"ANY\">(</code><code class=\"ANY\">NewNoteClicked</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">toolbar</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">searchField</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">doOnTextChange</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">notesList</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">scrollToPosition</code><code class=\"ANY\">(</code><code class=\"LITERAL\">0</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">presenter</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">dispatch</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">SearchTextChanged</code><code class=\"ANY\">(</code><code class=\"ANY\">text</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">toString</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">Observable</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">merge</code><code class=\"ANY\">(</code><code class=\"ANY\">noteAdapter</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">clicks</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">folderAdapter</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">clicks</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">throttleFirst</code><code class=\"ANY\">(</code><code class=\"LITERAL\">1</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">second</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">mainThread</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">takeUntil</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">detaches</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">subscribe</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">row</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">toolbar</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isSearchVisible</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">hideKeyboard</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">navigator</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">lfg</code><code class=\"ANY\">(</code><code class=\"ANY\">row</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">screenKey</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">override</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">createScreenExpander</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">InboxItemExpander</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">ScreenKey</code><code class=\"ANY\">></code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">InboxItemExpander</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">screen</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">viewHolders</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">when</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">screen</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">is</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">EditorScreenKey</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">screen</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">openMode</code><code class=\"ANY\"> </code><code class=\"ANY\">as?</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">ExistingNote</code><code class=\"ANY\">)</code><code class=\"ANY\">?</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">let</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">mode</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">noteAdapter</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">viewHolderFor</code><code class=\"ANY\">(</code><code class=\"ANY\">mode</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">noteId</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">viewHolders</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">is</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">HomeScreenKey</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">screen</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">folder</code><code class=\"ANY\">?</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">let</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">folder</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">folderAdapter</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">viewHolderFor</code><code class=\"ANY\">(</code><code class=\"ANY\">folder</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">viewHolders</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"LITERAL\">null</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">override</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">onScreenFocusChanged</code><code class=\"ANY\">(</code><code class=\"ANY\">focusedScreen</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">ScreenKey</code><code class=\"TYPE_IDENTIFIER\">?</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">focusedScreen</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">is</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">EditorScreenKey</code><code class=\"ANY\"> </code><code class=\"ANY\">&&</code><code class=\"ANY\"> </code><code class=\"ANY\">focusedScreen</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">openMode</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">is</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">ExistingNote</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"COMMENT\">// Hide the FAB only if an existing note is being opened.</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"COMMENT\">// If it's a new note, the FAB will morph into the new screen.</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">newNoteFab</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">hide</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">newNoteFab</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">show</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">screenKey</code><code class=\"ANY\"> </code><code class=\"ANY\">==</code><code class=\"ANY\"> </code><code class=\"ANY\">focusedScreen</code><code class=\"ANY\"> </code><code class=\"ANY\">&&</code><code class=\"ANY\"> </code><code class=\"ANY\">toolbar</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isSearchVisible</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">toolbar</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">searchField</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">requestFocus</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">override</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">onInterceptBackPress</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">InterceptResult</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">toolbar</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isSearchVisible</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">toolbar</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">setSearchVisible</code><code class=\"ANY\">(</code><code class=\"LITERAL\">false</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">InterceptResult</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">Intercepted</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">InterceptResult</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">Ignored</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">render</code><code class=\"ANY\">(</code><code class=\"ANY\">model</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">HomeModel</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">toolbar</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">render</code><code class=\"ANY\">(</code><code class=\"ANY\">model</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">noteAdapter</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">submitList</code><code class=\"ANY\">(</code><code class=\"ANY\">model</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">notes</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">folderAdapter</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">submitList</code><code class=\"ANY\">(</code><code class=\"ANY\">model</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">folders</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">TransitionManager</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">beginDelayedTransition</code><code class=\"ANY\">(</code><code class=\"ANY\">this</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">Fade</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">addTarget</code><code class=\"ANY\">(</code><code class=\"ANY\">emptyStateView</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">emptyStateView</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">isVisible</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">model</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">emptyState</code><code class=\"ANY\"> </code><code class=\"ANY\">!=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">null</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">emptyStateView</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">render</code><code class=\"ANY\">(</code><code class=\"ANY\">model</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">emptyState</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code>\n</pre>\n</html>"},{"_id":{"language":"KOTLIN","lexingTokens},"sourceCode":"package me.saket.press.shared.home\n\nimport com.badoo.reaktive.completable.andThen\nimport com.badoo.reaktive.completable.completableFromFunction\nimport com.badoo.reaktive.observable.Observable\nimport com.badoo.reaktive.observable.ObservableWrapper\nimport com.badoo.reaktive.observable.combineLatest\nimport com.badoo.reaktive.observable.flatMapCompletable\nimport com.badoo.reaktive.observable.map\nimport com.badoo.reaktive.observable.mapIterable\nimport com.badoo.reaktive.observable.merge\nimport com.badoo.reaktive.observable.observableOf\nimport com.badoo.reaktive.observable.observableOfEmpty\nimport com.badoo.reaktive.observable.observeOn\nimport com.badoo.reaktive.observable.ofType\nimport com.badoo.reaktive.observable.publish\nimport com.badoo.reaktive.observable.switchMap\nimport com.badoo.reaktive.observable.throttleLatest\nimport com.badoo.reaktive.observable.wrap\nimport me.saket.press.PressDatabase\nimport me.saket.press.data.shared.Note\nimport me.saket.press.shared.db.NoteId\nimport me.saket.press.shared.editor.EditorOpenMode.NewNote\nimport me.saket.press.shared.editor.EditorPresenter\nimport me.saket.press.shared.editor.EditorPresenter.Companion.NEW_NOTE_PLACEHOLDER\nimport me.saket.press.shared.editor.EditorPresenter.Companion.NEW_NOTE_PLACEHOLDER_TRIMMED\nimport me.saket.press.shared.editor.EditorScreenKey\nimport me.saket.press.shared.editor.ExistingNoteId\nimport me.saket.press.shared.home.HomeEvent.NewNoteClicked\nimport me.saket.press.shared.home.HomeEvent.SearchTextChanged\nimport me.saket.press.shared.home.HomeModel.EmptyStateKind.Notes\nimport me.saket.press.shared.home.HomeModel.EmptyStateKind.Search\nimport me.saket.press.shared.home.HomeModel.FolderModel\nimport me.saket.press.shared.home.HomeModel.NoteModel\nimport me.saket.press.shared.keyboard.KeyboardShortcuts\nimport me.saket.press.shared.keyboard.KeyboardShortcuts.Companion.newNote\nimport me.saket.press.shared.localization.Strings\nimport me.saket.press.shared.note.HeadingAndBody\nimport me.saket.press.shared.rx.Schedulers\nimport me.saket.press.shared.rx.asObservable\nimport me.saket.press.shared.rx.mapToList\nimport me.saket.press.shared.rx.mapToOneOrNull\nimport me.saket.press.shared.rx.mergeWith\nimport me.saket.press.shared.time.Clock\nimport me.saket.press.shared.ui.Navigator\nimport me.saket.press.shared.ui.Presenter\nimport me.saket.press.shared.ui.highlight\nimport me.saket.press.shared.ui.highlightInNoteBody\nimport me.saket.press.shared.util.format\n\nclass HomePresenter(\n  private val args: Args,\n  private val database: PressDatabase,\n  private val schedulers: Schedulers,\n  private val strings: Strings,\n  private val clock: Clock,\n  private val keyboardShortcuts: KeyboardShortcuts\n) : Presenter<HomeEvent, HomeModel>() {\n  private val noteQueries get() = database.noteQueries\n\n  override fun defaultUiModel() =\n    HomeModel(\n      rows = emptyList(),\n      title = \"\",\n      searchFieldHint = \"\",\n      emptyState = null\n    )\n\n  override fun models(): ObservableWrapper<HomeModel> {\n    return viewEvents().publish { events ->\n      merge(populateNotes(events), openNewNoteScreen())\n    }.wrap()\n  }\n\n  private fun openNewNoteScreen(): Observable<HomeModel> {\n    return viewEvents().ofType<NewNoteClicked>()\n      .mergeWith(keyboardShortcuts.listen(newNote))\n      .observeOn(schedulers.io)\n      .flatMapCompletable {\n        completableFromFunction {\n          // Inserting a new note before-hand makes it possible for\n          // two-pane layouts to immediately show the new note in the list.\n          val newNoteId = NoteId.generate()\n          noteQueries.insert(\n            id = newNoteId,\n            folderId = args.screenKey.folder,\n            content = NEW_NOTE_PLACEHOLDER,\n            createdAt = clock.nowUtc(),\n            updatedAt = clock.nowUtc()\n          )\n\n          args.navigator.lfg(\n            EditorScreenKey(NewNote(ExistingNoteId(newNoteId)))\n          )\n        }\n      }\n      .andThen(observableOfEmpty())\n  }\n\n  private fun populateNotes(events: Observable<HomeEvent>): Observable<HomeModel> {\n    val folderId = args.screenKey.folder\n    val folderName = if (folderId != null) {\n      database.folderQueries.folder(folderId)\n        .asObservable(schedulers.io)\n        .mapToOneOrNull()\n        .map { folder -> folder?.name }\n    } else {\n      observableOf(null)\n    }\n\n    val searchTextChanges = events\n      .ofType<SearchTextChanged>()\n      .throttleLatest(timeoutMillis = 250, scheduler = schedulers.io, emitLast = true)\n\n    return searchTextChanges.publish { searchTexts ->\n      val folderModels = searchTexts.switchMap { (searchText) ->\n        if (searchText.isBlank()) {\n          database.folderQueries.nonEmptyFoldersUnder(folderId, mapper = ::FolderModel)\n            .asObservable(schedulers.io)\n            .mapToList()\n        } else {\n          observableOf(emptyList())\n        }\n      }\n\n      val noteModels = searchTexts.switchMap { (searchText) ->\n        // When searching for notes, include all nested folders (excluding archive).\n        val query = when {\n          folderId == null && searchText.isNotBlank() -> noteQueries.visibleNonArchivedNotes(searchText)\n          folderId != null && searchText.isNotBlank() -> noteQueries.visibleNotesInDeepFolders(folderId, searchText)\n          else -> noteQueries.visibleNotesInFolder(folderId)\n        }\n        query.asObservable(schedulers.io)\n          .mapToList()\n          .map { notes -> notes.maybeFilterBlankNotes() }\n          .mapIterable { note ->\n            val (heading, body) = HeadingAndBody.parse(note.content)\n            NoteModel(\n              id = note.id,\n              title = heading.highlight(searchText),\n              body = body.highlightInNoteBody(searchText)\n            )\n          }\n      }\n\n      return@publish combineLatest(\n        folderName, folderModels, noteModels, searchTexts\n      ) { folderName, folders, notes, (searchText) ->\n        val isScreenEmpty = folders.isEmpty() && notes.isEmpty()\n        HomeModel(\n          title = folderName ?: strings.common.app_name,\n          rows = folders + notes,\n          searchFieldHint = when (folderName) {\n            null -> strings.home.searchnotes_everywhere_hint\n            else -> strings.home.searchnotes_in_folder_hint.format(folderName)\n          },\n          emptyState = when {\n            isScreenEmpty -> if (searchText.isBlank()) Notes else Search\n            else -> null\n          }\n        )\n      }\n    }\n  }\n\n  private fun List<Note>.maybeFilterBlankNotes(): List<Note> {\n    if (args.includeBlankNotes) {\n      return this\n    }\n    return filter {\n      it.content.isNotBlank() && it.content.trim() != NEW_NOTE_PLACEHOLDER_TRIMMED\n    }\n  }\n\n  fun interface Factory {\n    fun create(args: Args): HomePresenter\n  }\n\n  data class Args(\n    val screenKey: HomeScreenKey,\n\n    /**\n     * [EditorPresenter] creates a new note as soon as the editor screen is opened,\n     * causing the new note to show up on home while the new note screen is opening.\n     * This flag ensures that doesn't happen by ignoring empty notes when its set to\n     * false. In the future, this can be set to true for multi-pane layouts on desktop\n     * or tablets.\n     *\n     * Should be kept in sync with [EditorPresenter.Args.deleteBlankNewNoteOnExit].\n     */\n    val includeBlankNotes: Boolean,\n\n    val navigator: Navigator\n  )\n}\n","highlightingTokens":[1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,5,0,0,0,0,1,0,1,0,0,0,0,8,0,0,0,0,1,0,1,0,0,0,0,8,0,0,0,0,1,0,1,0,0,0,0,8,0,0,0,0,1,0,1,0,0,0,0,8,0,0,0,0,1,0,1,0,0,0,0,8,0,0,0,0,1,0,1,0,0,0,0,8,0,0,0,0,0,8,0,8,0,0,8,0,0,0,0,0,0,0,0,1,0,1,0,7,0,1,0,0,0,0,0,0,0,10,0,0,0,0,1,0,1,0,6,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,0,1,0,6,0,0,0,0,8,0,8,0,0,0,0,0,0,0,0,1,0,9,0,0,0,9,0,6,0,7,0,0,0,0,0,0,0,0,0,9,0,9,0,0,0,0,0,9,0,0,0,0,0,0,0,0,6,0,9,0,0,0,0,0,0,0,0,0,0,1,0,1,0,6,0,0,0,0,8,0,8,0,0,0,0,0,0,0,0,1,0,9,0,0,0,9,0,8,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,0,9,0,6,0,0,0,0,0,0,0,0,0,9,0,6,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,9,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,9,0,9,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,6,0,0,0,0,8,0,8,0,0,0,0,8,0,8,0,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,10,0,10,0,0,0,0,0,1,0,7,0,0,0,1,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,7,0,0,0,0,0,0,10,0,6,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,9,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,0,0,0,0,0,0,0,9,0,8,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,2,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,9,0,6,0,7,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,6,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,6,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,9,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,9,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,7,0,0,0,0,0,9,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,7,0,0,7,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,1,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,7,0,0,7,0,0,7,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,10,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,10,0,10,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,6,0,0,0,0,0,0,0,0,1,0,1,0,8,0,8,0,0,6,0,0,0,0,8,0,8,0,0,0,0,0,0,0,0,1,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,9,0,6,0,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,1,0,1,0,6,0,0,0,0,0,0,0,1,0,6,0,0,0,0,8,0,0,0,8,0,0,0,0,0,0,0,0,1,0,1,0,5,0,0,0,0,0,0,1,0,0,0,0,8,0,0,0,0,0,0,0,4,0,0,0,0,0,1,0,0,0,0,8,0,0,0,0,0,0,0,1,0,0,0,0,8,0,0,0,0,0,0,0,0],"highlightingCode":"<!DOCTYPE html>\n<html>\n<style>\n.ANY {\n    color: black;\n    font-weight: normal;\n    font-style: normal;\n}\n.KEYWORD {\n    color: blue;\n    font-weight: bold;\n    font-style: normal;\n}\n.LITERAL {\n    color: lightskyblue;\n    font-weight: bold;\n    font-style: normal;\n}\n.CHAR_STRING_LITERAL {\n    color: darkgoldenrod;\n    font-weight: normal;\n    font-style: normal;\n}\n.COMMENT {\n    color: grey;\n    font-weight: normal;\n    font-style: italic;\n}\n.CLASS_DECLARATOR {\n    color: crimson;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_DECLARATOR {\n    color: fuchsia;\n    font-weight: bold;\n    font-style: normal;\n}\n.VARIABLE_DECLARATOR {\n    color: purple;\n    font-weight: bold;\n    font-style: normal;\n}\n.TYPE_IDENTIFIER {\n    color: darkgreen;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_IDENTIFIER {\n    color: dodgerblue;\n    font-weight: normal;\n    font-style: normal;\n}\n.FIELD_IDENTIFIER {\n    color: coral;\n    font-weight: normal;\n    font-style: normal;\n}\n.ANNOTATION_DECLARATOR {\n    color: lightslategray;\n    font-weight: lighter;\n    font-style: italic;\n}\n</style>\n<pre>\n<code class=\"KEYWORD\">package</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">home</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">completable</code><code class=\"ANY\">.</code><code class=\"ANY\">andThen</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">completable</code><code class=\"ANY\">.</code><code class=\"ANY\">completableFromFunction</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">Observable</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">ObservableWrapper</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">combineLatest</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">flatMapCompletable</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">map</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">mapIterable</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">merge</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">observableOf</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">observableOfEmpty</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">observeOn</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">ofType</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">publish</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">switchMap</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">throttleLatest</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">wrap</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">PressDatabase</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">data</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">Note</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">db</code><code class=\"ANY\">.</code><code class=\"ANY\">NoteId</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">editor</code><code class=\"ANY\">.</code><code class=\"ANY\">EditorOpenMode</code><code class=\"ANY\">.</code><code class=\"ANY\">NewNote</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">editor</code><code class=\"ANY\">.</code><code class=\"ANY\">EditorPresenter</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">editor</code><code class=\"ANY\">.</code><code class=\"ANY\">EditorPresenter</code><code class=\"ANY\">.</code><code class=\"ANY\">Companion</code><code class=\"ANY\">.</code><code class=\"ANY\">NEW_NOTE_PLACEHOLDER</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">editor</code><code class=\"ANY\">.</code><code class=\"ANY\">EditorPresenter</code><code class=\"ANY\">.</code><code class=\"ANY\">Companion</code><code class=\"ANY\">.</code><code class=\"ANY\">NEW_NOTE_PLACEHOLDER_TRIMMED</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">editor</code><code class=\"ANY\">.</code><code class=\"ANY\">EditorScreenKey</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">editor</code><code class=\"ANY\">.</code><code class=\"ANY\">ExistingNoteId</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">home</code><code class=\"ANY\">.</code><code class=\"ANY\">HomeEvent</code><code class=\"ANY\">.</code><code class=\"ANY\">NewNoteClicked</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">home</code><code class=\"ANY\">.</code><code class=\"ANY\">HomeEvent</code><code class=\"ANY\">.</code><code class=\"ANY\">SearchTextChanged</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">home</code><code class=\"ANY\">.</code><code class=\"ANY\">HomeModel</code><code class=\"ANY\">.</code><code class=\"ANY\">EmptyStateKind</code><code class=\"ANY\">.</code><code class=\"ANY\">Notes</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">home</code><code class=\"ANY\">.</code><code class=\"ANY\">HomeModel</code><code class=\"ANY\">.</code><code class=\"ANY\">EmptyStateKind</code><code class=\"ANY\">.</code><code class=\"ANY\">Search</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">home</code><code class=\"ANY\">.</code><code class=\"ANY\">HomeModel</code><code class=\"ANY\">.</code><code class=\"ANY\">FolderModel</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">home</code><code class=\"ANY\">.</code><code class=\"ANY\">HomeModel</code><code class=\"ANY\">.</code><code class=\"ANY\">NoteModel</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">keyboard</code><code class=\"ANY\">.</code><code class=\"ANY\">KeyboardShortcuts</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">keyboard</code><code class=\"ANY\">.</code><code class=\"ANY\">KeyboardShortcuts</code><code class=\"ANY\">.</code><code class=\"ANY\">Companion</code><code class=\"ANY\">.</code><code class=\"ANY\">newNote</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">localization</code><code class=\"ANY\">.</code><code class=\"ANY\">Strings</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">note</code><code class=\"ANY\">.</code><code class=\"ANY\">HeadingAndBody</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">rx</code><code class=\"ANY\">.</code><code class=\"ANY\">Schedulers</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">rx</code><code class=\"ANY\">.</code><code class=\"ANY\">asObservable</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">rx</code><code class=\"ANY\">.</code><code class=\"ANY\">mapToList</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">rx</code><code class=\"ANY\">.</code><code class=\"ANY\">mapToOneOrNull</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">rx</code><code class=\"ANY\">.</code><code class=\"ANY\">mergeWith</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">time</code><code class=\"ANY\">.</code><code class=\"ANY\">Clock</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">ui</code><code class=\"ANY\">.</code><code class=\"ANY\">Navigator</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">ui</code><code class=\"ANY\">.</code><code class=\"ANY\">Presenter</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">ui</code><code class=\"ANY\">.</code><code class=\"ANY\">highlight</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">ui</code><code class=\"ANY\">.</code><code class=\"ANY\">highlightInNoteBody</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">util</code><code class=\"ANY\">.</code><code class=\"ANY\">format</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code><code class=\"ANY\"> </code><code class=\"CLASS_DECLARATOR\">HomePresenter</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"ANY\">args</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Args</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"ANY\">database</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">PressDatabase</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"ANY\">schedulers</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Schedulers</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"ANY\">strings</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Strings</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"ANY\">clock</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Clock</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"ANY\">keyboardShortcuts</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">KeyboardShortcuts</code><code class=\"ANY\">\n</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Presenter</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">HomeEvent</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">HomeModel</code><code class=\"ANY\">></code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">noteQueries</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">get</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">database</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">noteQueries</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">override</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">defaultUiModel</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">HomeModel</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">rows</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">emptyList</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">title</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">searchFieldHint</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">emptyState</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">null</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">override</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">models</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">ObservableWrapper</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">HomeModel</code><code class=\"ANY\">></code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">viewEvents</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">publish</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">events</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">merge</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">populateNotes</code><code class=\"ANY\">(</code><code class=\"ANY\">events</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">openNewNoteScreen</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">wrap</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">openNewNoteScreen</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">HomeModel</code><code class=\"ANY\">></code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">viewEvents</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">ofType</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">NewNoteClicked</code><code class=\"ANY\">></code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">mergeWith</code><code class=\"ANY\">(</code><code class=\"ANY\">keyboardShortcuts</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">listen</code><code class=\"ANY\">(</code><code class=\"ANY\">newNote</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">observeOn</code><code class=\"ANY\">(</code><code class=\"ANY\">schedulers</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">io</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">flatMapCompletable</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">completableFromFunction</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"COMMENT\">// Inserting a new note before-hand makes it possible for</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"COMMENT\">// two-pane layouts to immediately show the new note in the list.</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">newNoteId</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">NoteId</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">generate</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">noteQueries</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">insert</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">id</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">newNoteId</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">folderId</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">args</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">screenKey</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">folder</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">content</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">NEW_NOTE_PLACEHOLDER</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">createdAt</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">clock</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">nowUtc</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">updatedAt</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">clock</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">nowUtc</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">args</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">navigator</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">lfg</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">EditorScreenKey</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">NewNote</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">ExistingNoteId</code><code class=\"ANY\">(</code><code class=\"ANY\">newNoteId</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">andThen</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">observableOfEmpty</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">populateNotes</code><code class=\"ANY\">(</code><code class=\"ANY\">events</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">HomeEvent</code><code class=\"ANY\">></code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">HomeModel</code><code class=\"ANY\">></code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">folderId</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">args</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">screenKey</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">folder</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">folderName</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">folderId</code><code class=\"ANY\"> </code><code class=\"ANY\">!=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">null</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">database</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">folderQueries</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">folder</code><code class=\"ANY\">(</code><code class=\"ANY\">folderId</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">asObservable</code><code class=\"ANY\">(</code><code class=\"ANY\">schedulers</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">io</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">mapToOneOrNull</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">map</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">folder</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"ANY\">folder</code><code class=\"ANY\">?</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">name</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">observableOf</code><code class=\"ANY\">(</code><code class=\"LITERAL\">null</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">searchTextChanges</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">events</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">ofType</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">SearchTextChanged</code><code class=\"ANY\">></code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">throttleLatest</code><code class=\"ANY\">(</code><code class=\"ANY\">timeoutMillis</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">250</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">scheduler</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">schedulers</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">io</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">emitLast</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">true</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"ANY\">searchTextChanges</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">publish</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">searchTexts</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">folderModels</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">searchTexts</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">switchMap</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"VARIABLE_DECLARATOR\">searchText</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">searchText</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isBlank</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">database</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">folderQueries</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">nonEmptyFoldersUnder</code><code class=\"ANY\">(</code><code class=\"ANY\">folderId</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">mapper</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">::</code><code class=\"ANY\">FolderModel</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">asObservable</code><code class=\"ANY\">(</code><code class=\"ANY\">schedulers</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">io</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">mapToList</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">observableOf</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">emptyList</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">noteModels</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">searchTexts</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">switchMap</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"VARIABLE_DECLARATOR\">searchText</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"COMMENT\">// When searching for notes, include all nested folders (excluding archive).</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">query</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">when</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">folderId</code><code class=\"ANY\"> </code><code class=\"ANY\">==</code><code class=\"ANY\"> </code><code class=\"LITERAL\">null</code><code class=\"ANY\"> </code><code class=\"ANY\">&&</code><code class=\"ANY\"> </code><code class=\"ANY\">searchText</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isNotBlank</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"ANY\">noteQueries</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">visibleNonArchivedNotes</code><code class=\"ANY\">(</code><code class=\"ANY\">searchText</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">folderId</code><code class=\"ANY\"> </code><code class=\"ANY\">!=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">null</code><code class=\"ANY\"> </code><code class=\"ANY\">&&</code><code class=\"ANY\"> </code><code class=\"ANY\">searchText</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isNotBlank</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"ANY\">noteQueries</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">visibleNotesInDeepFolders</code><code class=\"ANY\">(</code><code class=\"ANY\">folderId</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">searchText</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"ANY\">noteQueries</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">visibleNotesInFolder</code><code class=\"ANY\">(</code><code class=\"ANY\">folderId</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">query</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">asObservable</code><code class=\"ANY\">(</code><code class=\"ANY\">schedulers</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">io</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">mapToList</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">map</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">notes</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"ANY\">notes</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">maybeFilterBlankNotes</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">mapIterable</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">note</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"VARIABLE_DECLARATOR\">heading</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">body</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">HeadingAndBody</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">parse</code><code class=\"ANY\">(</code><code class=\"ANY\">note</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">content</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">NoteModel</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">id</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">note</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">title</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">heading</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">highlight</code><code class=\"ANY\">(</code><code class=\"ANY\">searchText</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">body</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">body</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">highlightInNoteBody</code><code class=\"ANY\">(</code><code class=\"ANY\">searchText</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return@publish</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">combineLatest</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">folderName</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">folderModels</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">noteModels</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">searchTexts</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">folderName</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">folders</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">notes</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"VARIABLE_DECLARATOR\">searchText</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">isScreenEmpty</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">folders</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isEmpty</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">&&</code><code class=\"ANY\"> </code><code class=\"ANY\">notes</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isEmpty</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">HomeModel</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">title</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">folderName</code><code class=\"ANY\"> </code><code class=\"ANY\">?</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"ANY\">strings</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">common</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">app_name</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">rows</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">folders</code><code class=\"ANY\"> </code><code class=\"ANY\">+</code><code class=\"ANY\"> </code><code class=\"ANY\">notes</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">searchFieldHint</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">when</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">folderName</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"LITERAL\">null</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"ANY\">strings</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">home</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">searchnotes_everywhere_hint</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"ANY\">strings</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">home</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">searchnotes_in_folder_hint</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">format</code><code class=\"ANY\">(</code><code class=\"ANY\">folderName</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">emptyState</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">when</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">isScreenEmpty</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">searchText</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isBlank</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">Notes</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\"> </code><code class=\"ANY\">Search</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"LITERAL\">null</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Note</code><code class=\"ANY\">></code><code class=\"ANY\">.</code><code class=\"FUNCTION_DECLARATOR\">maybeFilterBlankNotes</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Note</code><code class=\"ANY\">></code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">args</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">includeBlankNotes</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">this</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">filter</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">content</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isNotBlank</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">&&</code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">content</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">trim</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">!=</code><code class=\"ANY\"> </code><code class=\"ANY\">NEW_NOTE_PLACEHOLDER_TRIMMED</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">interface</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">Factory</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">create</code><code class=\"ANY\">(</code><code class=\"ANY\">args</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Args</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">HomePresenter</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">data</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">class</code><code class=\"ANY\"> </code><code class=\"CLASS_DECLARATOR\">Args</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"ANY\">screenKey</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">HomeScreenKey</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"COMMENT\">/**\n     * [EditorPresenter] creates a new note as soon as the editor screen is opened,\n     * causing the new note to show up on home while the new note screen is opening.\n     * This flag ensures that doesn't happen by ignoring empty notes when its set to\n     * false. In the future, this can be set to true for multi-pane layouts on desktop\n     * or tablets.\n     *\n     * Should be kept in sync with [EditorPresenter.Args.deleteBlankNewNoteOnExit].\n     */</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"ANY\">includeBlankNotes</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Boolean</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"ANY\">navigator</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Navigator</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code>\n</pre>\n</html>"},{"_id":{"language":"KOTLIN","lexingTokens":[70,4,146,7,146,7,146,7,146,7,146,7,146,5,5,71,4,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,7,114,7,146,7,146,5,71,4,146,7,146,7,146,7,114,7,146,7,146,5,71,4,146,7,146,7,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,7,146,7,146,7,146,5,42,146,9,146,37,146,10,5,110,4,72,4,146,9,108,169,76,169,146,26,169,146,10,4,13,5,4,4,108,4,76,4,146,4,64,9,10,4,28,4,146,7,146,5,4,4,108,4,76,4,146,4,64,9,10,4,28,4,146,7,146,5,5,4,4,74,4,146,9,170,169,169,169,169,146,26,169,146,45,8,170,169,169,169,169,146,26,169,9,10,169,34,169,146,46,146,47,169,28,169,13,4,146,7,146,7,146,9,10,7,146,9,10,4,14,170,169,169,10,26,4,146,4,13,5,4,4,4,4,97,4,146,9,146,8,169,146,10,7,146,9,10,5,4,4,14,5,5,4,4,108,4,74,4,146,9,170,169,169,169,169,146,26,169,146,45,8,170,169,169,169,169,146,26,169,9,10,169,34,169,146,46,146,47,169,28,169,13,4,146,7,146,7,146,9,10,7,146,9,10,4,14,170,169,169,10,26,4,146,4,13,5,4,4,4,4,87,4,9,146,169,53,169,144,10,4,13,5,4,4,4,4,4,4,97,4,146,9,146,9,10,10,5,4,4,4,4,14,5,5,4,4,4,4,97,4,146,9,170,169,169,169,169,169,169,146,169,13,5,4,4,4,4,4,4,4,4,76,4,146,4,28,4,146,9,10,7,146,4,13,4,146,7,146,4,14,5,5,4,4,4,4,4,4,4,4,77,4,146,26,4,146,44,28,4,146,5,4,4,4,4,4,4,4,4,95,4,9,146,169,50,169,144,10,4,13,5,4,4,4,4,4,4,4,4,4,4,76,4,146,4,28,4,146,11,146,12,25,25,5,4,4,4,4,4,4,4,4,4,4,146,9,146,7,146,10,5,4,4,4,4,4,4,4,4,4,4,146,4,28,4,146,7,146,5,4,4,4,4,4,4,4,4,14,5,4,4,4,4,4,4,14,7,146,9,10,170,169,169,169,169,10,5,4,4,14,5,5,4,4,2,5,4,4,74,4,146,9,146,26,169,146,10,26,4,146,44,13,5,4,4,4,4,87,4,9,146,7,146,9,10,10,4,13,5,4,4,4,4,4,4,97,4,144,5,4,4,4,4,14,5,5,4,4,4,4,76,4,146,4,28,4,146,7,146,9,10,7,146,9,10,5,4,4,4,4,76,4,146,4,28,4,146,5,4,4,4,4,4,4,7,146,4,13,4,146,9,146,169,28,169,146,7,146,8,169,146,169,28,169,13,4,146,4,14,10,4,146,4,146,7,146,4,14,5,4,4,4,4,4,4,7,146,9,10,5,5,4,4,4,4,77,4,146,4,28,4,149,158,5,4,4,4,4,77,4,146,26,4,146,44,28,4,144,5,5,4,4,4,4,93,4,9,146,169,102,169,146,7,146,9,149,160,158,10,10,4,13,5,4,4,4,4,4,4,146,4,29,4,146,5,5,4,4,4,4,4,4,87,4,9,146,169,104,146,10,4,13,5,4,4,4,4,4,4,4,4,76,4,146,4,28,4,146,7,146,9,10,5,4,4,4,4,4,4,4,4,146,11,146,12,4,28,4,146,5,4,4,4,4,4,4,4,4,146,7,146,9,146,169,28,169,146,8,169,146,169,28,169,146,8,169,146,169,28,169,146,10,5,4,4,4,4,4,4,14,5,5,4,4,4,4,4,4,146,4,28,4,146,11,146,12,25,25,5,4,4,4,4,4,4,146,4,29,4,149,160,158,5,4,4,4,4,14,5,5,4,4,4,4,97,4,146,11,146,12,25,25,5,4,4,14,5,5,4,4,74,4,146,9,146,26,169,146,8,169,146,26,169,146,10,4,13,5,4,4,4,4,76,4,146,4,28,4,146,7,146,9,146,10,7,146,9,10,5,4,4,4,4,76,4,146,4,28,4,146,9,146,7,146,10,5,5,4,4,4,4,87,4,9,146,10,4,13,5,4,4,4,4,4,4,146,9,146,7,146,9,10,169,50,169,149,160,158,10,4,13,4,149,160,158,4,14,5,4,4,4,4,14,4,88,4,13,5,4,4,4,4,4,4,146,9,146,7,146,9,10,169,53,169,149,160,158,10,4,13,4,149,160,158,4,14,5,4,4,4,4,14,5,5,4,4,4,4,76,4,146,4,28,4,89,4,13,5,4,4,4,4,4,4,146,4,34,4,146,7,146,9,146,169,28,169,149,160,158,10,5,4,4,4,4,4,4,88,4,34,4,146,7,146,9,10,5,4,4,4,4,14,5,4,4,4,4,146,7,146,9,170,169,169,169,169,169,169,146,169,28,169,146,7,146,8,170,169,169,169,169,169,169,146,169,28,169,146,9,146,7,146,9,10,10,170,169,169,169,169,10,5,4,4,14,5,5,4,4,74,4,146,9,146,26,169,146,45,10,26,4,146,4,13,5,4,4,4,4,76,4,146,4,28,4,146,9,146,10,5,4,4,4,4,97,4,146,7,146,9,10,4,53,4,149,160,158,5,4,4,14,5,14,5,5,110,4,72,4,146,9,108,169,76,169,146,26,169,146,46,146,47,10,4,13,5,4,4,74,4,146,9,10,26,4,146,4,28,5,4,4,4,4,146,7,146,9,146,169,28,169,149,160,158,10,5,5,4,4,74,4,146,9,10,26,4,146,44,28,5,4,4,4,4,146,7,146,9,10,5,5,4,4,74,4,146,9,146,26,169,146,10,4,28,5,4,4,4,4,146,9,146,9,146,10,169,18,169,146,10,5,5,4,4,74,4,146,9,10,4,28,5,4,4,4,4,146,9,146,7,146,9,138,8,169,146,7,146,10,10,5,14,5,-1]},"sourceCode":"package me.saket.press.shared.syncer.git\n\nimport me.saket.press.PressDatabase\nimport me.saket.press.data.shared.Folder\nimport me.saket.press.data.shared.FolderQueries\nimport me.saket.press.shared.db.FolderId\nimport me.saket.press.shared.db.NoteId\n\n@OptIn(ExperimentalStdlibApi::class)\ninternal class FolderPaths(private val database: PressDatabase) {\n  private val noteQueries get() = database.noteQueries\n  private val folderQueries get() = database.folderQueries\n\n  fun createFlatPath(\n    id: FolderId?,\n    existingFolders: () -> List<Folder> = { database.folderQueries.allFolders().executeAsList() }\n  ): String {\n    return createPath(id, existingFolders).flatten()\n  }\n\n  private fun createPath(\n    id: FolderId?,\n    existingFolders: () -> List<Folder> = { database.folderQueries.allFolders().executeAsList() }\n  ): FolderPath {\n    if (id == null) {\n      return FolderPath(emptyList())\n    }\n\n    return FolderPath(\n      buildList {\n        val idsToFolders = existingFolders().associateBy { it.id }\n\n        var parentId: FolderId? = id\n        while (parentId != null) {\n          val parent = idsToFolders[parentId]!!\n          add(parent.name)\n          parentId = parent.parent\n        }\n      }.reversed()\n    )\n  }\n\n  /**\n   * @param folderPath path/to/a/folder\n   * @return FolderId that represents [folderPath].\n   */\n  fun mkdirs(folderPath: String): FolderId? {\n    if (folderPath.isBlank()) {\n      return null\n    }\n\n    val allFolders = folderQueries.allFolders().executeAsList()\n    val pathsToFolderIds = allFolders\n      .associate { createFlatPath(id = it.id, existingFolders = { allFolders }) to it.id }\n      .toMutableMap()\n\n    var nextPath = \"\"\n    var nextParent: FolderId? = null\n\n    for (path in folderPath.split(\"/\")) {\n      nextPath += path\n\n      if (nextPath !in pathsToFolderIds) {\n        val folderId = FolderId.generate()\n        pathsToFolderIds[nextPath] = folderId\n        folderQueries.insert(id = folderId, name = path, parent = nextParent)\n      }\n\n      nextParent = pathsToFolderIds[nextPath]!!\n      nextPath += \"/\"\n    }\n\n    return pathsToFolderIds[folderPath]!!\n  }\n\n  fun setArchived(noteId: NoteId, archive: Boolean) {\n    val note = noteQueries.note(noteId).executeAsOne()\n    val currentPath = createPath(note.folderId)\n\n    if (archive) {\n      check(currentPath.head() != \"archive\") { \"Note is already archived\" }\n    } else {\n      check(currentPath.head() == \"archive\") { \"Note is already unarchived\" }\n    }\n\n    val newPath = when {\n      archive -> currentPath.pushToHead(with = \"archive\")\n      else -> currentPath.popHead()\n    }\n    noteQueries.updateFolder(\n      id = note.id,\n      folderId = mkdirs(newPath.flatten())\n    )\n  }\n\n  fun isArchived(folderId: FolderId?): Boolean {\n    val path = createPath(folderId)\n    return path.head() == \"archive\"\n  }\n}\n\ninternal class FolderPath(private val paths: List<String>) {\n  fun flatten(): String =\n    paths.joinToString(separator = \"/\")\n\n  fun head(): String? =\n    paths.firstOrNull()\n\n  fun pushToHead(with: String) =\n    FolderPath(listOf(with) + paths)\n\n  fun popHead() =\n    FolderPath(paths.subList(1, paths.size))\n}\n","highlightingTokens":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,10,0,0,1,0,1,0,5,0,1,0,1,0,0,0,0,8,0,0,0,0,0,0,1,0,1,0,7,0,1,0,0,0,0,0,0,0,10,0,0,0,1,0,1,0,7,0,1,0,0,0,0,0,0,0,10,0,0,0,0,1,0,6,0,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,8,0,0,0,0,6,0,0,0,10,0,9,0,0,0,9,0,0,0,6,0,0,0,0,0,0,8,0,0,0,0,0,0,0,1,0,9,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,1,0,1,0,6,0,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,8,0,0,0,0,6,0,0,0,10,0,9,0,0,0,9,0,0,0,6,0,0,0,0,0,0,8,0,0,0,0,0,0,0,1,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,0,9,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,9,0,0,0,0,0,0,0,0,9,0,6,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,0,0,9,0,6,0,0,0,10,0,6,0,0,0,0,0,0,0,0,0,0,1,0,7,0,0,8,8,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,1,0,6,0,0,0,0,8,0,0,0,8,8,0,0,0,0,0,0,1,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,9,0,0,0,0,0,0,0,10,0,0,0,0,0,0,6,0,0,0,6,0,0,0,0,0,0,10,0,6,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,1,0,7,0,0,0,3,3,0,0,0,0,0,1,0,7,0,0,8,8,0,0,2,0,0,0,0,0,0,1,0,0,7,0,1,0,0,0,9,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,6,0,0,0,0,8,0,0,0,0,0,8,0,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,0,0,0,9,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,0,0,3,3,3,0,0,6,0,3,3,3,0,6,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,0,0,3,3,3,0,0,6,0,3,3,3,0,6,0,0,0,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,1,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,6,0,0,0,0,8,8,0,0,0,8,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,0,0,0,0,0,0,0,1,0,0,0,9,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,1,0,1,0,5,0,1,0,1,0,0,0,0,8,0,8,0,0,0,0,0,0,0,1,0,6,0,0,0,0,8,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,3,3,3,0,0,0,0,0,1,0,6,0,0,0,0,8,8,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,1,0,6,0,0,0,0,8,0,0,0,0,0,0,0,0,9,0,9,0,0,0,0,0,0,0,0,0,0,0,0,1,0,6,0,0,0,0,0,0,0,0,0,9,0,0,0,9,0,2,0,0,0,0,10,0,0,0,0,0,0],"highlightingCode":"<!DOCTYPE html>\n<html>\n<style>\n.ANY {\n    color: black;\n    font-weight: normal;\n    font-style: normal;\n}\n.KEYWORD {\n    color: blue;\n    font-weight: bold;\n    font-style: normal;\n}\n.LITERAL {\n    color: lightskyblue;\n    font-weight: bold;\n    font-style: normal;\n}\n.CHAR_STRING_LITERAL {\n    color: darkgoldenrod;\n    font-weight: normal;\n    font-style: normal;\n}\n.COMMENT {\n    color: grey;\n    font-weight: normal;\n    font-style: italic;\n}\n.CLASS_DECLARATOR {\n    color: crimson;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_DECLARATOR {\n    color: fuchsia;\n    font-weight: bold;\n    font-style: normal;\n}\n.VARIABLE_DECLARATOR {\n    color: purple;\n    font-weight: bold;\n    font-style: normal;\n}\n.TYPE_IDENTIFIER {\n    color: darkgreen;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_IDENTIFIER {\n    color: dodgerblue;\n    font-weight: normal;\n    font-style: normal;\n}\n.FIELD_IDENTIFIER {\n    color: coral;\n    font-weight: normal;\n    font-style: normal;\n}\n.ANNOTATION_DECLARATOR {\n    color: lightslategray;\n    font-weight: lighter;\n    font-style: italic;\n}\n</style>\n<pre>\n<code class=\"KEYWORD\">package</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">syncer</code><code class=\"ANY\">.</code><code class=\"ANY\">git</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">PressDatabase</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">data</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">Folder</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">data</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">FolderQueries</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">db</code><code class=\"ANY\">.</code><code class=\"ANY\">FolderId</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">db</code><code class=\"ANY\">.</code><code class=\"ANY\">NoteId</code><code class=\"ANY\">\n</code><code class=\"ANNOTATION_DECLARATOR\">\n@</code><code class=\"ANNOTATION_DECLARATOR\">OptIn</code><code class=\"ANY\">(</code><code class=\"ANY\">ExperimentalStdlibApi</code><code class=\"ANY\">::</code><code class=\"FIELD_IDENTIFIER\">class</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">internal</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">class</code><code class=\"ANY\"> </code><code class=\"CLASS_DECLARATOR\">FolderPaths</code><code class=\"ANY\">(</code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"ANY\">database</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">PressDatabase</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">noteQueries</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">get</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">database</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">noteQueries</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">folderQueries</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">get</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">database</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">folderQueries</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">createFlatPath</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">id</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">FolderId</code><code class=\"TYPE_IDENTIFIER\">?</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">existingFolders</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Folder</code><code class=\"ANY\">></code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">database</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">folderQueries</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">allFolders</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">executeAsList</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">String</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">createPath</code><code class=\"ANY\">(</code><code class=\"ANY\">id</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">existingFolders</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">flatten</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">createPath</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">id</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">FolderId</code><code class=\"TYPE_IDENTIFIER\">?</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">existingFolders</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Folder</code><code class=\"ANY\">></code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">database</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">folderQueries</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">allFolders</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">executeAsList</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">FolderPath</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">id</code><code class=\"ANY\"> </code><code class=\"ANY\">==</code><code class=\"ANY\"> </code><code class=\"LITERAL\">null</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">FolderPath</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">emptyList</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">FolderPath</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">buildList</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">idsToFolders</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">existingFolders</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">associateBy</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">var</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">parentId</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">FolderId</code><code class=\"TYPE_IDENTIFIER\">? </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">id</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">while</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">parentId</code><code class=\"ANY\"> </code><code class=\"ANY\">!=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">null</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">parent</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">idsToFolders</code><code class=\"ANY\">[</code><code class=\"ANY\">parentId</code><code class=\"ANY\">]</code><code class=\"ANY\">!</code><code class=\"ANY\">!</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">add</code><code class=\"ANY\">(</code><code class=\"ANY\">parent</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">name</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">parentId</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">parent</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">parent</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">reversed</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"COMMENT\">/**\n   * @param folderPath path/to/a/folder\n   * @return FolderId that represents [folderPath].\n   */</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">mkdirs</code><code class=\"ANY\">(</code><code class=\"ANY\">folderPath</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">String</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">FolderId</code><code class=\"TYPE_IDENTIFIER\">? </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">folderPath</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isBlank</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"LITERAL\">null</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">allFolders</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">folderQueries</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">allFolders</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">executeAsList</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">pathsToFolderIds</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">allFolders</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">associate</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">createFlatPath</code><code class=\"ANY\">(</code><code class=\"ANY\">id</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">existingFolders</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">allFolders</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">to</code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">toMutableMap</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">var</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">nextPath</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">var</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">nextParent</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">FolderId</code><code class=\"TYPE_IDENTIFIER\">? </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">null</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">for</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"VARIABLE_DECLARATOR\">path</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">in</code><code class=\"ANY\"> </code><code class=\"ANY\">folderPath</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">split</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">/</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">nextPath</code><code class=\"ANY\"> </code><code class=\"ANY\">+=</code><code class=\"ANY\"> </code><code class=\"ANY\">path</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">nextPath</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">!in </code><code class=\"ANY\">pathsToFolderIds</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">folderId</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">FolderId</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">generate</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">pathsToFolderIds</code><code class=\"ANY\">[</code><code class=\"ANY\">nextPath</code><code class=\"ANY\">]</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">folderId</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">folderQueries</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">insert</code><code class=\"ANY\">(</code><code class=\"ANY\">id</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">folderId</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">name</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">path</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">parent</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">nextParent</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">nextParent</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">pathsToFolderIds</code><code class=\"ANY\">[</code><code class=\"ANY\">nextPath</code><code class=\"ANY\">]</code><code class=\"ANY\">!</code><code class=\"ANY\">!</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">nextPath</code><code class=\"ANY\"> </code><code class=\"ANY\">+=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">/</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"ANY\">pathsToFolderIds</code><code class=\"ANY\">[</code><code class=\"ANY\">folderPath</code><code class=\"ANY\">]</code><code class=\"ANY\">!</code><code class=\"ANY\">!</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">setArchived</code><code class=\"ANY\">(</code><code class=\"ANY\">noteId</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">NoteId</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">archive</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Boolean</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">note</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">noteQueries</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">note</code><code class=\"ANY\">(</code><code class=\"ANY\">noteId</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">executeAsOne</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">currentPath</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">createPath</code><code class=\"ANY\">(</code><code class=\"ANY\">note</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">folderId</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">archive</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">check</code><code class=\"ANY\">(</code><code class=\"ANY\">currentPath</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">head</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">!=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">archive</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">Note is already archived</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">check</code><code class=\"ANY\">(</code><code class=\"ANY\">currentPath</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">head</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">==</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">archive</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">Note is already unarchived</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">newPath</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">when</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">archive</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"ANY\">currentPath</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">pushToHead</code><code class=\"ANY\">(</code><code class=\"ANY\">with</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">archive</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"ANY\">currentPath</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">popHead</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">noteQueries</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">updateFolder</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">id</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">note</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">folderId</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">mkdirs</code><code class=\"ANY\">(</code><code class=\"ANY\">newPath</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">flatten</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">isArchived</code><code class=\"ANY\">(</code><code class=\"ANY\">folderId</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">FolderId</code><code class=\"TYPE_IDENTIFIER\">?</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Boolean</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">path</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">createPath</code><code class=\"ANY\">(</code><code class=\"ANY\">folderId</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"ANY\">path</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">head</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">==</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">archive</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">internal</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">class</code><code class=\"ANY\"> </code><code class=\"CLASS_DECLARATOR\">FolderPath</code><code class=\"ANY\">(</code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"ANY\">paths</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">String</code><code class=\"ANY\">></code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">flatten</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">String</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">paths</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">joinToString</code><code class=\"ANY\">(</code><code class=\"ANY\">separator</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">/</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">head</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">String</code><code class=\"TYPE_IDENTIFIER\">? </code><code class=\"ANY\">=</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">paths</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">firstOrNull</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">pushToHead</code><code class=\"ANY\">(</code><code class=\"ANY\">with</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">String</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">FolderPath</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">listOf</code><code class=\"ANY\">(</code><code class=\"ANY\">with</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">+</code><code class=\"ANY\"> </code><code class=\"ANY\">paths</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">popHead</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">FolderPath</code><code class=\"ANY\">(</code><code class=\"ANY\">paths</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">subList</code><code class=\"ANY\">(</code><code class=\"LITERAL\">1</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">paths</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">size</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code>\n</pre>\n</html>"},{"_id":{"language":"KOTLIN","lexingTokens":[70,4,146,7,146,7,146,7,146,7,146,7,146,5,5,71,4,146,7,146,5,71,4,146,7,146,7,146,5,71,4,146,7,146,7,146,5,71,4,146,7,146,7,146,5,71,4,146,7,146,7,146,5,71,4,146,7,146,7,146,5,71,4,146,7,146,7,146,5,71,4,146,7,146,7,146,5,71,4,146,7,146,7,146,7,114,7,146,7,146,5,71,4,146,7,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,7,146,7,146,5,71,4,146,7,146,7,146,5,71,4,146,7,146,7,146,5,5,72,4,146,4,26,4,146,9,10,4,13,5,4,4,108,4,76,4,146,4,28,4,146,9,10,7,146,5,4,4,108,4,76,4,146,4,28,4,146,9,170,169,169,169,169,146,169,28,169,146,8,170,169,169,169,169,146,169,28,169,146,170,169,169,10,5,5,4,42,146,5,4,4,74,4,146,9,10,4,13,5,4,4,4,4,146,7,146,9,146,169,28,169,143,10,5,4,4,14,5,5,4,42,146,4,74,4,146,9,10,4,13,5,4,4,4,4,76,4,146,4,28,4,146,9,146,8,169,149,160,158,10,7,146,4,13,4,146,9,10,4,14,5,4,4,4,4,76,4,146,4,28,4,146,9,146,8,169,149,160,158,10,7,146,4,13,4,146,9,149,160,158,10,4,14,5,4,4,4,4,76,4,146,4,28,4,146,7,146,9,10,5,5,4,4,4,4,76,4,146,4,28,4,146,7,146,9,146,8,169,146,10,5,4,4,4,4,146,9,146,7,146,10,7,146,9,149,160,158,10,5,4,4,4,4,146,9,146,7,146,10,7,146,9,149,160,158,10,5,4,4,4,4,146,9,146,7,146,10,7,146,9,146,10,5,5,4,4,4,4,146,9,146,7,146,9,146,10,7,146,9,146,10,10,7,146,9,149,160,158,10,5,4,4,4,4,146,9,146,7,146,7,146,10,7,146,9,149,160,158,10,5,4,4,14,5,5,4,42,146,4,74,4,146,9,10,4,13,5,4,4,4,4,146,9,146,10,4,13,5,4,4,4,4,4,4,76,4,146,4,28,4,146,9,146,169,28,169,146,7,146,9,10,8,169,146,169,28,169,149,160,158,10,5,4,4,4,4,4,4,146,9,146,9,146,10,7,146,10,7,146,9,149,160,158,10,5,4,4,4,4,4,4,146,9,146,9,149,160,158,10,10,7,146,9,146,7,146,10,5,5,4,4,4,4,4,4,3,5,4,4,4,4,4,4,76,4,146,4,28,4,146,7,146,9,146,169,28,169,149,160,158,10,5,4,4,4,4,4,4,146,9,146,9,146,10,7,146,10,7,146,9,149,160,158,10,5,4,4,4,4,4,4,146,9,146,9,149,160,158,10,10,7,146,9,146,7,146,10,5,5,4,4,4,4,4,4,3,5,4,4,4,4,4,4,76,4,146,4,28,4,146,9,146,169,28,169,146,7,146,9,10,8,169,146,169,28,169,146,7,146,10,5,4,4,4,4,4,4,146,9,146,9,146,10,7,146,10,7,146,9,149,160,158,10,5,4,4,4,4,4,4,146,9,146,9,149,160,158,10,10,7,146,9,146,7,146,10,5,4,4,4,4,14,5,4,4,14,5,5,4,42,146,4,74,4,146,9,10,4,13,5,4,4,4,4,76,4,146,4,28,4,146,9,146,169,28,169,146,7,146,9,10,8,169,146,169,28,169,149,160,158,10,5,5,4,4,4,4,76,4,146,4,28,4,146,7,146,9,146,10,7,146,9,10,5,4,4,4,4,146,9,146,7,146,10,7,146,9,149,160,158,10,5,4,4,4,4,146,9,146,7,146,10,7,146,9,10,5,4,4,4,4,146,9,146,7,146,9,149,160,158,10,10,7,146,9,146,7,146,10,5,5,4,4,4,4,76,4,146,4,28,4,146,7,146,9,146,7,146,9,146,169,28,169,149,160,158,10,10,5,4,4,4,4,146,9,146,7,146,10,7,146,9,149,160,158,10,5,4,4,4,4,146,9,146,7,146,10,7,146,9,10,5,5,4,4,4,4,146,9,146,7,146,9,149,160,158,10,10,7,146,9,10,5,4,4,4,4,146,9,146,7,146,9,149,160,158,10,10,7,146,9,146,7,146,10,5,4,4,14,5,5,4,42,146,4,74,4,146,9,10,4,13,5,4,4,4,4,146,9,146,8,169,149,160,158,10,7,146,9,149,160,158,10,5,4,4,4,4,146,9,146,8,169,149,160,158,10,7,146,9,149,160,158,10,5,4,4,4,4,146,9,146,8,169,149,160,158,10,7,146,9,10,7,146,9,149,160,158,10,5,5,4,4,4,4,76,4,146,4,28,4,146,9,149,160,161,160,158,10,5,4,4,4,4,76,4,146,4,28,4,146,7,146,9,146,8,169,146,169,28,169,143,10,5,4,4,4,4,146,9,146,10,7,146,9,149,160,158,10,5,4,4,14,5,5,4,42,146,4,74,4,146,9,10,4,13,5,4,4,4,4,76,4,146,4,28,4,146,9,146,169,28,169,149,160,161,160,158,10,5,4,4,4,4,76,4,146,4,28,4,146,9,146,169,28,169,149,160,161,160,158,10,5,4,4,4,4,76,4,146,4,28,4,146,7,146,9,146,10,5,4,4,4,4,76,4,146,4,28,4,146,7,146,9,146,10,5,5,4,4,4,4,146,9,146,7,146,9,146,7,146,10,10,7,146,9,146,7,146,10,5,4,4,4,4,146,9,146,7,146,9,146,7,146,10,10,7,146,9,146,7,146,10,5,5,4,4,4,4,146,7,146,9,146,169,28,169,146,9,146,7,146,10,10,5,5,4,4,4,4,146,9,146,7,146,9,146,7,146,10,10,7,146,9,146,7,146,10,5,4,4,4,4,146,9,146,7,146,9,146,7,146,10,10,7,146,9,10,5,4,4,14,5,5,4,42,146,4,74,4,146,9,10,4,13,5,4,4,4,4,76,4,146,4,28,4,146,9,149,160,158,10,5,4,4,4,4,76,4,146,4,28,4,146,7,146,9,146,7,146,9,146,10,8,169,146,7,146,10,5,5,4,4,4,4,76,4,146,4,28,4,146,9,149,160,158,10,5,4,4,4,4,76,4,146,4,28,4,146,7,146,9,146,7,146,9,146,10,8,169,146,7,146,10,5,4,4,4,4,146,7,146,7,146,9,149,162,146,7,146,7,116,14,158,10,5,5,4,4,4,4,146,9,146,7,146,9,146,7,146,10,10,7,146,9,146,7,146,9,146,7,146,10,10,5,4,4,4,4,146,7,146,9,10,5,4,4,4,4,146,9,146,7,146,9,146,7,146,10,10,7,146,9,146,7,146,9,146,7,146,10,10,5,4,4,14,5,5,4,42,146,4,74,4,146,9,10,4,13,5,4,4,4,4,76,4,146,4,28,4,146,9,149,160,158,8,169,146,169,28,169,144,10,5,4,4,4,4,76,4,146,4,28,4,146,9,149,160,158,8,169,146,169,28,169,146,7,146,10,5,4,4,4,4,146,7,146,7,146,9,146,10,5,4,4,4,4,146,7,146,9,146,7,146,9,146,10,8,169,146,7,146,10,5,5,4,4,4,4,76,4,146,4,28,4,146,9,149,160,158,10,5,4,4,4,4,76,4,146,4,28,4,146,7,146,9,146,7,146,9,146,10,8,169,146,7,146,10,5,4,4,4,4,76,4,146,4,28,4,146,7,146,7,146,5,5,4,4,4,4,3,5,4,4,4,4,146,9,146,7,146,9,149,160,158,10,10,5,4,4,4,4,146,7,146,7,146,9,146,7,146,9,149,160,158,8,169,146,169,28,169,149,158,10,10,5,5,4,4,4,4,3,5,4,4,4,4,146,9,146,7,146,7,146,8,169,149,160,158,10,7,146,9,10,5,5,4,4,4,4,146,7,146,9,10,5,5,4,4,4,4,76,4,146,4,28,4,146,7,146,5,4,4,4,4,4,4,7,146,9,146,169,28,169,143,10,5,4,4,4,4,4,4,7,146,4,13,4,146,7,146,9,146,7,146,10,4,14,5,5,4,4,4,4,146,9,146,10,7,146,9,170,169,169,169,169,169,169,149,160,158,8,170,169,169,169,169,169,169,149,160,158,8,170,169,169,169,169,10,5,4,4,14,5,5,4,42,146,4,74,4,146,9,10,4,13,5,4,4,4,4,76,4,146,4,28,4,146,9,146,169,28,169,149,160,161,160,158,8,169,146,169,28,169,144,10,5,5,4,4,4,4,76,4,146,4,28,4,146,7,146,9,146,10,5,4,4,4,4,146,9,146,7,146,10,7,146,9,10,5,4,4,4,4,146,9,146,7,146,9,146,10,10,7,146,9,149,160,158,10,5,4,4,4,4,146,9,146,7,146,9,149,160,158,10,25,25,10,4,13,5,4,4,4,4,4,4,146,9,146,10,7,146,9,146,7,146,10,5,4,4,4,4,4,4,146,9,146,10,7,146,9,10,5,4,4,4,4,14,5,5,4,4,4,4,76,4,146,4,28,4,146,9,149,160,158,10,5,4,4,4,4,146,7,146,7,146,9,146,10,5,5,4,4,4,4,76,4,146,4,28,4,146,7,146,9,146,7,146,9,146,169,28,169,146,7,146,10,10,5,4,4,4,4,146,9,146,7,146,9,146,10,10,7,146,9,149,160,158,10,5,4,4,4,4,146,9,146,7,146,10,7,146,9,10,5,4,4,4,4,146,9,146,7,146,9,149,160,158,10,25,25,10,4,13,5,4,4,4,4,4,4,146,9,146,10,7,146,9,146,7,146,10,5,4,4,4,4,4,4,146,9,146,10,7,146,9,149,160,158,10,5,4,4,4,4,14,5,5,4,4,4,4,146,7,146,9,146,7,146,9,146,169,28,169,144,10,10,5,4,4,4,4,146,9,146,7,146,10,7,146,9,10,5,4,4,4,4,146,9,146,7,146,10,7,146,9,10,5,4,4,4,4,146,9,146,7,146,9,149,160,158,10,25,25,10,4,13,5,4,4,4,4,4,4,146,9,146,10,7,146,9,146,7,146,10,5,4,4,4,4,4,4,146,9,146,10,7,146,9,10,5,4,4,4,4,14,5,4,4,14,5,5,4,42,146,4,74,4,146,9,10,4,13,5,4,4,4,4,76,4,146,4,28,4,146,9,149,160,158,8,169,146,169,28,169,144,10,5,4,4,4,4,146,7,146,7,146,9,146,10,5,5,4,4,4,4,76,4,146,4,28,4,146,9,170,169,169,169,169,169,169,146,169,28,169,149,160,161,160,158,8,170,169,169,169,169,169,169,146,169,28,169,146,7,146,170,169,169,169,169,10,5,4,4,4,4,76,4,61,4,28,4,146,7,146,9,146,10,5,5,4,4,4,4,146,9,61,7,146,9,146,10,10,7,146,9,149,160,158,10,5,4,4,4,4,146,9,146,7,146,9,149,160,158,10,25,25,10,4,13,5,4,4,4,4,4,4,146,9,146,10,7,146,9,146,7,146,10,5,4,4,4,4,4,4,146,9,146,10,7,146,9,149,160,158,10,5,4,4,4,4,14,5,4,4,14,5,5,4,42,146,4,74,4,146,9,10,4,13,5,4,4,4,4,76,4,146,4,28,4,146,9,149,160,158,8,169,146,169,28,169,144,10,5,4,4,4,4,76,4,146,4,28,4,146,9,149,160,158,8,169,146,169,28,169,146,7,146,10,5,4,4,4,4,146,7,146,7,146,9,146,8,169,146,10,5,5,4,4,4,4,76,4,146,4,28,4,146,9,170,169,169,169,169,169,169,146,169,28,169,149,160,161,160,158,8,170,169,169,169,169,169,169,146,169,28,169,146,7,146,170,169,169,169,169,10,5,4,4,4,4,76,4,61,4,28,4,146,7,146,9,146,10,5,5,4,4,4,4,146,9,61,7,146,9,146,10,10,7,146,9,149,160,158,10,5,4,4,4,4,146,9,146,7,146,9,149,160,158,10,25,25,10,4,13,5,4,4,4,4,4,4,146,9,146,10,7,146,9,146,7,146,10,5,4,4,4,4,4,4,146,9,146,10,7,146,9,149,160,158,10,5,4,4,4,4,14,5,4,4,14,5,5,4,42,146,4,74,4,146,9,10,4,13,5,4,4,4,4,76,4,146,4,28,4,146,9,149,160,158,8,169,146,169,28,169,144,10,5,4,4,4,4,76,4,146,4,28,4,146,9,149,160,158,8,169,146,169,28,169,146,7,146,10,5,4,4,4,4,146,7,146,7,146,9,146,8,169,146,10,5,5,4,4,4,4,76,4,146,4,28,4,146,9,170,169,169,169,169,169,169,146,169,28,169,149,160,158,8,170,169,169,169,169,169,169,146,169,28,169,146,7,146,170,169,169,169,169,10,5,4,4,4,4,76,4,61,4,28,4,146,7,146,9,146,10,5,5,4,4,4,4,146,9,61,7,146,9,146,10,10,7,146,9,149,160,158,10,5,4,4,4,4,146,9,146,7,146,9,149,160,158,10,25,25,10,4,13,5,4,4,4,4,4,4,146,9,146,10,7,146,9,146,7,146,10,5,4,4,4,4,4,4,146,9,146,10,7,146,9,149,160,158,10,5,4,4,4,4,14,5,4,4,14,5,5,4,42,146,4,74,4,146,9,10,4,13,5,4,4,4,4,76,4,146,4,28,4,146,9,149,160,158,8,169,146,169,28,169,144,10,5,4,4,4,4,76,4,146,4,28,4,146,9,149,160,158,8,169,146,169,28,169,146,7,146,10,5,4,4,4,4,76,4,146,4,28,4,146,9,149,160,158,8,169,146,169,28,169,146,7,146,10,5,4,4,4,4,146,7,146,7,146,9,146,8,169,146,8,169,146,10,5,5,4,4,4,4,76,4,146,4,28,4,146,9,170,169,169,169,169,169,169,146,169,28,169,149,160,158,8,170,169,169,169,169,169,169,146,169,28,169,146,7,146,170,169,169,169,169,10,5,4,4,4,4,76,4,61,4,28,4,146,7,146,9,146,10,5,5,4,4,4,4,146,9,61,7,146,9,146,10,10,7,146,9,149,160,158,10,5,4,4,4,4,146,9,146,7,146,9,149,160,158,10,25,25,10,4,13,5,4,4,4,4,4,4,146,9,146,10,7,146,9,146,7,146,10,5,4,4,4,4,4,4,146,9,146,10,7,146,9,149,160,158,10,5,4,4,4,4,14,5,4,4,14,5,5,4,42,146,4,74,4,146,9,10,4,13,5,4,4,4,4,76,4,146,4,28,4,146,9,149,160,158,10,5,4,4,4,4,146,7,146,7,146,9,146,10,5,5,4,4,4,4,76,4,146,4,28,4,146,9,149,160,158,8,169,146,169,28,169,146,7,146,10,5,4,4,4,4,146,7,146,9,146,10,5,5,4,4,4,4,76,4,146,4,28,4,146,9,170,169,169,169,169,169,169,146,169,28,169,149,160,158,8,170,169,169,169,169,169,169,146,169,28,169,144,170,169,169,169,169,10,5,4,4,4,4,146,7,146,9,146,10,5,4,4,14,5,5,4,4,108,4,74,4,146,7,146,9,146,26,169,146,10,26,4,146,4,13,5,4,4,4,4,76,4,146,4,28,4,146,9,146,10,7,146,4,13,4,146,45,7,146,9,10,4,14,5,4,4,4,4,97,4,146,7,146,7,146,4,13,4,146,7,146,9,10,4,14,5,4,4,14,5,14,5,-1]},"sourceCode":"package me.saket.press.shared.syncer.git\n\nimport assertk.assertThat\nimport assertk.assertions.endsWith\nimport assertk.assertions.isEmpty\nimport assertk.assertions.isEqualTo\nimport assertk.assertions.isFalse\nimport assertk.assertions.isNotEqualTo\nimport assertk.assertions.isNull\nimport assertk.assertions.isTrue\nimport me.saket.press.data.shared.Note\nimport me.saket.press.shared.containsOnly\nimport me.saket.press.shared.db.BaseDatabaeTest\nimport me.saket.press.shared.db.NoteId\nimport me.saket.press.shared.fakeFolder\nimport me.saket.press.shared.fakeNote\nimport me.saket.press.shared.testInsert\nimport me.saket.press.shared.testDeviceInfo\nimport kotlin.test.AfterTest\nimport kotlin.test.Test\n\nclass FileNameRegisterTest : BaseDatabaeTest() {\n  private val directory = testDeviceInfo().appStorage\n  private val register = FileNameRegister(\n    notesDirectory = directory,\n    database = database\n  )\n\n  @AfterTest\n  fun cleanup() {\n    directory.delete(recursively = true)\n  }\n\n  @Test fun canary() {\n    val archivedDir = File(directory, \"archive/games\").apply { makeDirectories() }\n    val noteFile = File(archivedDir, \"uncharted.md\").apply { write(\"A Thief's End\") }\n    val noteId = NoteId.generate()\n\n    val record = register.createNewRecordFor(noteFile, noteId)\n    assertThat(record.noteFilePath).isEqualTo(\"archive/games/uncharted.md\")\n    assertThat(record.noteFolder).isEqualTo(\"archive/games\")\n    assertThat(record.noteId).isEqualTo(noteId)\n\n    assertThat(record.noteFileIn(directory).relativePathIn(directory)).isEqualTo(\"archive/games/uncharted.md\")\n    assertThat(record.registerFile.path).endsWith(\".press/registers/archive/games/uncharted.meta\")\n  }\n\n  @Test fun `generates unique file names to avoid conflicts`() {\n    with(register) {\n      val note = fakeNote(id = NoteId.generate(), content = \"# abc\")\n      assertThat(fileFor(note).name).isEqualTo(\"abc.md\")\n      assertThat(noteIdFor(\"abc.md\")).isEqualTo(note.id)\n\n      // Same note ID, different content.\n      val updatedNote1 = note.copy(content = \"# abc def\")\n      assertThat(fileFor(updatedNote1).name).isEqualTo(\"abc_def.md\")\n      assertThat(noteIdFor(\"abc_def.md\")).isEqualTo(updatedNote1.id)\n\n      // Different note ID, same content.\n      val note3 = fakeNote(id = NoteId.generate(), content = updatedNote1.content)\n      assertThat(fileFor(note3).name).isEqualTo(\"abc_def_2.md\")\n      assertThat(noteIdFor(\"abc_def_2.md\")).isEqualTo(note3.id)\n    }\n  }\n\n  @Test fun `rename file if note's heading changes`() {\n    val note = fakeNote(id = NoteId.generate(), content = \"# abc\")\n\n    val fileBeforeUpdate = register.fileFor(note).touch()\n    assertThat(fileBeforeUpdate.name).isEqualTo(\"abc.md\")\n    assertThat(fileBeforeUpdate.exists).isTrue()\n    assertThat(register.noteIdFor(\"abc.md\")).isEqualTo(note.id)\n\n    val fileAfterUpdate = register.fileFor(note.copy(content = \"# abcdef\"))\n    assertThat(fileAfterUpdate.name).isEqualTo(\"abcdef.md\")\n    assertThat(fileBeforeUpdate.exists).isFalse()\n\n    assertThat(register.noteIdFor(\"abc.md\")).isNull()\n    assertThat(register.noteIdFor(\"abcdef.md\")).isEqualTo(note.id)\n  }\n\n  @Test fun `generation of a new file name for resolving conflict in the same folder`() {\n    File(directory, \"uncharted.md\").write(\"A Thief's End\")\n    File(directory, \"uncharted_2.md\").write(\"The Lost Legacy\")\n    File(directory, \"archive/uncharted_3.md\").touch().write(\"Archived The Lost Legacy\")\n\n    val conflictingNote = fakeNote(\"# Uncharted\\nDrake's Fortune\")\n    val newName = register.generateNameFor(conflictingNote, canUseExisting = false)\n    assertThat(newName).isEqualTo(\"uncharted_3.md\")\n  }\n\n  @Test fun `prune stale records`() {\n    val note1 = fakeNote(content = \"# Uncharted\\nA Thief's End\")\n    val note2 = fakeNote(content = \"# Uncharted\\nThe Lost Legacy\")\n    val note1File = register.fileFor(note1)\n    val note2File = register.fileFor(note2)\n\n    assertThat(register.noteIdFor(note1File.name)).isEqualTo(note1.id)\n    assertThat(register.noteIdFor(note2File.name)).isEqualTo(note2.id)\n\n    register.pruneStaleRecords(currentIds = listOf(note1.id))\n\n    assertThat(register.noteIdFor(note1File.name)).isEqualTo(note1.id)\n    assertThat(register.noteIdFor(note2File.name)).isNull()\n  }\n\n  @Test fun `migrate from invalid records that point to the same ID`() {\n    val note1 = fakeNote(\"# \")\n    val record1 = register.createNewRecordFor(register.fileFor(note1), note1.id)\n\n    val note2 = fakeNote(\"# \")\n    val record2 = register.createNewRecordFor(register.fileFor(note2), note2.id)\n    record2.registerFile.write(\"${note1.id.value}\")\n\n    assertThat(register.noteIdFor(record1.noteFilePath)).isEqualTo(register.noteIdFor(record2.noteFilePath))\n    register.migrateRecords()\n    assertThat(register.noteIdFor(record1.noteFilePath)).isNotEqualTo(register.noteIdFor(record2.noteFilePath))\n  }\n\n  @Test fun `migrate from old record file names`() {\n    val gamesFolder = fakeFolder(\"games\", parent = null)\n    val witcherNote = fakeNote(\"# witcher 3\", folderId = gamesFolder.id)\n    database.folderQueries.testInsert(gamesFolder)\n    register.createNewRecordFor(register.fileFor(witcherNote), witcherNote.id)\n\n    val finNote = fakeNote(\"# finances\")\n    val finRecord = register.createNewRecordFor(register.fileFor(finNote), finNote.id)\n    val finRecordName = finRecord.registerFile.name\n\n    // Old record names didn't have any extension.\n    check(finRecordName.endsWith(\".meta\"))\n    finRecord.registerFile.renameTo(finRecordName.replaceSuffix(\".meta\", with = \"\"))\n\n    // Folder names don't have any extension either, so make sure they don't get migrated as well.\n    File(finRecord.registerFile.parent, \"games\").makeDirectories()\n\n    register.migrateRecords()\n\n    val resultingPaths = register.registerDirectory\n      .children(recursively = true)\n      .map { it.relativePathIn(register.registerDirectory) }\n\n    assertThat(resultingPaths).containsOnly(\n      \"games/witcher_3.meta\",\n      \"finances.meta\",\n    )\n  }\n\n  @Test fun `detect updates to note's folder`() {\n    val note = fakeNote(content = \"# The Witcher 3\\nWild hunt\", folderId = null)\n\n    val unarchivedFile = register.fileFor(note)\n    assertThat(unarchivedFile.exists).isTrue()\n    assertThat(unarchivedFile.relativePathIn(directory)).isEqualTo(\"the_witcher_3.md\")\n    with(register.recordFor(\"the_witcher_3.md\")!!) {\n      assertThat(noteId).isEqualTo(note.id)\n      assertThat(noteFolder).isEmpty()\n    }\n\n    val archive = fakeFolder(\"archive\")\n    database.folderQueries.testInsert(archive)\n\n    val archivedFile = register.fileFor(note.copy(folderId = archive.id))\n    assertThat(archivedFile.relativePathIn(directory)).isEqualTo(\"archive/the_witcher_3.md\")\n    assertThat(unarchivedFile.exists).isFalse()\n    with(register.recordFor(\"archive/the_witcher_3.md\")!!) {\n      assertThat(noteId).isEqualTo(note.id)\n      assertThat(noteFolder).isEqualTo(\"archive\")\n    }\n\n    register.fileFor(note.copy(folderId = null))\n    assertThat(archivedFile.exists).isFalse()\n    assertThat(unarchivedFile.exists).isTrue()\n    with(register.recordFor(\"the_witcher_3.md\")!!) {\n      assertThat(noteId).isEqualTo(note.id)\n      assertThat(noteFolder).isEmpty()\n    }\n  }\n\n  @Test fun `support for single folder`() {\n    val gamesFolder = fakeFolder(\"games\", parent = null)\n    database.folderQueries.testInsert(gamesFolder)\n\n    val note = fakeNote(\n      content = \"# The Witcher 3\\nHearts of Stone\",\n      folderId = gamesFolder.id\n    )\n    val file = register.fileFor(note)\n\n    assertThat(file.relativePathIn(directory)).isEqualTo(\"games/the_witcher_3.md\")\n    with(register.recordFor(\"games/the_witcher_3.md\")!!) {\n      assertThat(noteId).isEqualTo(note.id)\n      assertThat(noteFolder).isEqualTo(\"games\")\n    }\n  }\n\n  @Test fun `support for archived note inside a single folder`() {\n    val archiveFolder = fakeFolder(\"archive\", parent = null)\n    val gamesFolder = fakeFolder(\"Games\", parent = archiveFolder.id)\n    database.folderQueries.testInsert(archiveFolder, gamesFolder)\n\n    val note = fakeNote(\n      content = \"# The Witcher 3\\nHearts of Stone\",\n      folderId = gamesFolder.id\n    )\n    val file = register.fileFor(note)\n\n    assertThat(file.relativePathIn(directory)).isEqualTo(\"archive/Games/the_witcher_3.md\")\n    with(register.recordFor(\"archive/Games/the_witcher_3.md\")!!) {\n      assertThat(noteId).isEqualTo(note.id)\n      assertThat(noteFolder).isEqualTo(\"archive/Games\")\n    }\n  }\n\n  @Test fun `support for nested folders`() {\n    val gamesFolder = fakeFolder(\"Games\", parent = null)\n    val witcherFolder = fakeFolder(\"The Witcher 3\", parent = gamesFolder.id)\n    database.folderQueries.testInsert(gamesFolder, witcherFolder)\n\n    val note = fakeNote(\n      content = \"# Hearts of Stone\",\n      folderId = witcherFolder.id\n    )\n    val file = register.fileFor(note)\n\n    assertThat(file.relativePathIn(directory)).isEqualTo(\"Games/The Witcher 3/hearts_of_stone.md\")\n    with(register.recordFor(\"Games/The Witcher 3/hearts_of_stone.md\")!!) {\n      assertThat(noteId).isEqualTo(note.id)\n      assertThat(noteFolder).isEqualTo(\"Games/The Witcher 3\")\n    }\n  }\n\n  @Test fun `support for archived note inside nested folders`() {\n    val archiveFolder = fakeFolder(\"archive\", parent = null)\n    val gamesFolder = fakeFolder(\"Games\", parent = archiveFolder.id)\n    val witcherFolder = fakeFolder(\"The Witcher 3\", parent = gamesFolder.id)\n    database.folderQueries.testInsert(archiveFolder, gamesFolder, witcherFolder)\n\n    val note = fakeNote(\n      content = \"# Hearts of Stone\",\n      folderId = witcherFolder.id\n    )\n    val file = register.fileFor(note)\n\n    assertThat(file.relativePathIn(directory)).isEqualTo(\"archive/Games/The Witcher 3/hearts_of_stone.md\")\n    with(register.recordFor(\"archive/Games/The Witcher 3/hearts_of_stone.md\")!!) {\n      assertThat(noteId).isEqualTo(note.id)\n      assertThat(noteFolder).isEqualTo(\"archive/Games/The Witcher 3\")\n    }\n  }\n\n  @Test fun `regression test - note with the same name as a folder shouldn't cause an error`() {\n    val financesFolder = fakeFolder(\"finances\")\n    database.folderQueries.testInsert(financesFolder)\n\n    val randomNote = fakeNote(\"# Random\", folderId = financesFolder.id)\n    register.fileFor(randomNote)\n\n    val financesNote = fakeNote(\n      content = \"# Finances\",\n      folderId = null\n    )\n    register.fileFor(financesNote)\n  }\n\n  private fun FileNameRegister.fileFor(note: Note): File {\n    val suggestion = suggestFile(note).apply { acceptRename?.invoke() }\n    return suggestion.suggestedFile.also { it.touch() }\n  }\n}\n","highlightingTokens":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,5,0,0,0,8,0,0,0,0,0,0,0,1,0,1,0,7,0,0,0,9,0,0,0,10,0,0,0,1,0,1,0,7,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,1,0,6,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,2,0,0,0,0,0,0,0,0,11,11,0,1,0,6,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,0,0,0,3,3,3,0,0,9,0,6,0,9,0,0,0,6,0,0,0,0,0,1,0,7,0,0,0,9,0,0,0,0,3,3,3,0,0,9,0,6,0,9,0,3,3,3,0,0,6,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,10,0,0,9,0,3,3,3,0,0,0,0,0,0,9,0,0,0,10,0,0,9,0,3,3,3,0,0,0,0,0,0,9,0,0,0,10,0,0,9,0,0,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,0,9,0,0,0,0,0,9,0,3,3,3,0,0,0,0,0,0,9,0,0,0,10,0,10,0,0,9,0,3,3,3,0,0,0,0,0,0,0,0,11,11,0,1,0,6,0,0,0,0,0,0,0,0,0,9,0,0,0,0,6,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,9,0,9,0,0,0,0,10,0,0,9,0,3,3,3,0,0,0,0,0,0,0,0,9,0,9,0,3,3,3,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,9,0,9,0,0,0,0,10,0,0,9,0,3,3,3,0,0,0,0,0,0,0,0,9,0,9,0,3,3,3,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,9,0,9,0,0,0,0,10,0,0,9,0,3,3,3,0,0,0,0,0,0,0,0,9,0,9,0,3,3,3,0,0,0,9,0,0,0,10,0,0,0,0,0,0,6,0,0,0,0,0,0,0,11,11,0,1,0,6,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,0,0,0,9,0,0,0,0,0,0,0,9,0,0,0,10,0,0,9,0,3,3,3,0,0,0,0,0,0,9,0,0,0,10,0,0,9,0,0,0,0,0,0,0,9,0,0,0,9,0,3,3,3,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,0,0,9,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,9,0,0,0,10,0,0,9,0,3,3,3,0,0,0,0,0,0,9,0,0,0,10,0,0,9,0,0,0,0,0,0,0,0,9,0,0,0,9,0,3,3,3,0,0,0,9,0,0,0,0,0,0,0,9,0,0,0,9,0,3,3,3,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,11,11,0,1,0,6,0,0,0,0,0,0,0,0,0,9,0,0,0,0,3,3,3,0,0,9,0,3,3,3,0,0,0,0,0,0,9,0,0,0,0,3,3,3,0,0,9,0,3,3,3,0,0,0,0,0,0,9,0,0,0,0,3,3,3,0,0,9,0,0,0,9,0,3,3,3,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,3,3,3,3,3,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,9,0,0,0,0,9,0,3,3,3,0,0,0,0,0,0,0,0,11,11,0,1,0,6,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,1,0,7,0,0,0,9,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,10,0,0,0,9,0,0,0,10,0,0,0,0,0,0,9,0,0,0,9,0,0,0,10,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,10,0,0,0,9,0,0,0,10,0,0,0,0,0,0,9,0,0,0,9,0,0,0,10,0,0,0,9,0,0,0,0,0,0,0,0,0,11,11,0,1,0,6,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,3,3,3,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,3,3,3,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,10,0,9,0,3,3,0,0,10,0,10,0,3,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,10,0,0,0,9,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,10,0,0,0,9,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,0,11,11,0,1,0,6,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,3,3,3,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,7,0,0,0,9,0,3,3,3,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,3,3,3,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,0,0,0,1,0,7,0,0,0,0,0,10,0,10,0,0,0,0,0,0,4,0,0,0,0,0,9,0,0,0,9,0,3,3,3,0,0,0,0,0,0,0,0,0,10,0,9,0,0,0,9,0,3,3,3,0,0,0,0,0,0,3,3,0,0,0,0,0,0,0,0,4,0,0,0,0,0,9,0,0,0,10,0,10,0,0,3,3,3,0,0,9,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,10,0,0,0,0,0,0,0,0,9,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,9,0,6,0,0,0,9,0,0,0,10,0,0,6,0,0,0,0,0,0,9,0,0,0,0,9,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,1,0,6,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,2,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,0,0,0,0,0,0,0,9,0,0,0,10,0,0,9,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,0,0,9,0,3,3,3,0,0,0,0,0,0,9,0,0,0,9,0,3,3,3,0,0,0,0,0,6,0,0,0,0,0,0,0,9,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,9,0,0,0,0,9,0,0,0,0,0,0,0,6,0,0,0,0,0,0,1,0,7,0,0,0,9,0,3,3,3,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,0,0,9,0,3,3,3,0,0,0,0,0,0,9,0,0,0,10,0,0,9,0,0,0,0,0,0,0,9,0,0,0,9,0,3,3,3,0,0,0,0,0,6,0,0,0,0,0,0,0,9,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,9,0,0,0,0,9,0,3,3,3,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,0,0,2,0,0,0,0,0,0,0,9,0,0,0,10,0,0,9,0,0,0,0,0,0,0,9,0,0,0,10,0,0,9,0,0,0,0,0,0,0,9,0,0,0,9,0,3,3,3,0,0,0,0,0,6,0,0,0,0,0,0,0,9,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,9,0,0,0,0,9,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,11,11,0,1,0,6,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,3,3,3,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,0,0,9,0,3,3,3,0,0,0,0,0,0,9,0,0,0,9,0,3,3,3,0,0,0,0,0,6,0,0,0,0,0,0,0,9,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,9,0,0,0,0,9,0,3,3,3,0,0,0,0,0,0,6,0,0,0,0,0,0,0,11,11,0,1,0,6,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,3,3,3,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,7,0,0,0,9,0,3,3,3,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,0,0,9,0,3,3,3,0,0,0,0,0,0,9,0,0,0,9,0,3,3,3,0,0,0,0,0,6,0,0,0,0,0,0,0,9,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,9,0,0,0,0,9,0,3,3,3,0,0,0,0,0,0,6,0,0,0,0,0,0,0,11,11,0,1,0,6,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,3,3,3,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,7,0,0,0,9,0,3,3,3,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,0,0,9,0,3,3,3,0,0,0,0,0,0,9,0,0,0,9,0,3,3,3,0,0,0,0,0,6,0,0,0,0,0,0,0,9,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,9,0,0,0,0,9,0,3,3,3,0,0,0,0,0,0,6,0,0,0,0,0,0,0,11,11,0,1,0,6,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,3,3,3,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,7,0,0,0,9,0,3,3,3,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,1,0,7,0,0,0,9,0,3,3,3,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,0,0,9,0,3,3,3,0,0,0,0,0,0,9,0,0,0,9,0,3,3,3,0,0,0,0,0,6,0,0,0,0,0,0,0,9,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,9,0,0,0,0,9,0,3,3,3,0,0,0,0,0,0,6,0,0,0,0,0,0,0,11,11,0,1,0,6,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,3,3,3,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,3,3,3,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,8,0,6,0,0,0,0,8,0,0,0,8,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,0,0,0,9,0,6,0,0,0,0,9,0,0,0,6,0,0,0,0,0,1,0,0,0,10,0,9,0,6,0,0,0,9,0,0,0,6,0,0,0,0,0,0,0,0],"highlightingCode":"<!DOCTYPE html>\n<html>\n<style>\n.ANY {\n    color: black;\n    font-weight: normal;\n    font-style: normal;\n}\n.KEYWORD {\n    color: blue;\n    font-weight: bold;\n    font-style: normal;\n}\n.LITERAL {\n    color: lightskyblue;\n    font-weight: bold;\n    font-style: normal;\n}\n.CHAR_STRING_LITERAL {\n    color: darkgoldenrod;\n    font-weight: normal;\n    font-style: normal;\n}\n.COMMENT {\n    color: grey;\n    font-weight: normal;\n    font-style: italic;\n}\n.CLASS_DECLARATOR {\n    color: crimson;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_DECLARATOR {\n    color: fuchsia;\n    font-weight: bold;\n    font-style: normal;\n}\n.VARIABLE_DECLARATOR {\n    color: purple;\n    font-weight: bold;\n    font-style: normal;\n}\n.TYPE_IDENTIFIER {\n    color: darkgreen;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_IDENTIFIER {\n    color: dodgerblue;\n    font-weight: normal;\n    font-style: normal;\n}\n.FIELD_IDENTIFIER {\n    color: coral;\n    font-weight: normal;\n    font-style: normal;\n}\n.ANNOTATION_DECLARATOR {\n    color: lightslategray;\n    font-weight: lighter;\n    font-style: italic;\n}\n</style>\n<pre>\n<code class=\"KEYWORD\">package</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">syncer</code><code class=\"ANY\">.</code><code class=\"ANY\">git</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">assertk</code><code class=\"ANY\">.</code><code class=\"ANY\">assertThat</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">assertk</code><code class=\"ANY\">.</code><code class=\"ANY\">assertions</code><code class=\"ANY\">.</code><code class=\"ANY\">endsWith</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">assertk</code><code class=\"ANY\">.</code><code class=\"ANY\">assertions</code><code class=\"ANY\">.</code><code class=\"ANY\">isEmpty</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">assertk</code><code class=\"ANY\">.</code><code class=\"ANY\">assertions</code><code class=\"ANY\">.</code><code class=\"ANY\">isEqualTo</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">assertk</code><code class=\"ANY\">.</code><code class=\"ANY\">assertions</code><code class=\"ANY\">.</code><code class=\"ANY\">isFalse</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">assertk</code><code class=\"ANY\">.</code><code class=\"ANY\">assertions</code><code class=\"ANY\">.</code><code class=\"ANY\">isNotEqualTo</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">assertk</code><code class=\"ANY\">.</code><code class=\"ANY\">assertions</code><code class=\"ANY\">.</code><code class=\"ANY\">isNull</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">assertk</code><code class=\"ANY\">.</code><code class=\"ANY\">assertions</code><code class=\"ANY\">.</code><code class=\"ANY\">isTrue</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">data</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">Note</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">containsOnly</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">db</code><code class=\"ANY\">.</code><code class=\"ANY\">BaseDatabaeTest</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">db</code><code class=\"ANY\">.</code><code class=\"ANY\">NoteId</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">fakeFolder</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">fakeNote</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">testInsert</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">testDeviceInfo</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">kotlin</code><code class=\"ANY\">.</code><code class=\"ANY\">test</code><code class=\"ANY\">.</code><code class=\"ANY\">AfterTest</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">kotlin</code><code class=\"ANY\">.</code><code class=\"ANY\">test</code><code class=\"ANY\">.</code><code class=\"ANY\">Test</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code><code class=\"ANY\"> </code><code class=\"CLASS_DECLARATOR\">FileNameRegisterTest</code><code class=\"ANY\"> </code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">BaseDatabaeTest</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">directory</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">testDeviceInfo</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">appStorage</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">register</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">FileNameRegister</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">notesDirectory</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">directory</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">database</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">database</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANNOTATION_DECLARATOR\"> @</code><code class=\"ANNOTATION_DECLARATOR\">AfterTest</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">cleanup</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">directory</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">delete</code><code class=\"ANY\">(</code><code class=\"ANY\">recursively</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">true</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANNOTATION_DECLARATOR\"> @</code><code class=\"ANNOTATION_DECLARATOR\">Test</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">canary</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">archivedDir</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">File</code><code class=\"ANY\">(</code><code class=\"ANY\">directory</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">archive/games</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">apply</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">makeDirectories</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">noteFile</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">File</code><code class=\"ANY\">(</code><code class=\"ANY\">archivedDir</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">uncharted.md</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">apply</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">write</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">A Thief's End</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">noteId</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">NoteId</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">generate</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">record</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">register</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">createNewRecordFor</code><code class=\"ANY\">(</code><code class=\"ANY\">noteFile</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">noteId</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">record</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">noteFilePath</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isEqualTo</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">archive/games/uncharted.md</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">record</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">noteFolder</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isEqualTo</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">archive/games</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">record</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">noteId</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isEqualTo</code><code class=\"ANY\">(</code><code class=\"ANY\">noteId</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">record</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">noteFileIn</code><code class=\"ANY\">(</code><code class=\"ANY\">directory</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">relativePathIn</code><code class=\"ANY\">(</code><code class=\"ANY\">directory</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isEqualTo</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">archive/games/uncharted.md</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">record</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">registerFile</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">path</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">endsWith</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">.press/registers/archive/games/uncharted.meta</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANNOTATION_DECLARATOR\"> @</code><code class=\"ANNOTATION_DECLARATOR\">Test</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">`generates unique file names to avoid conflicts`</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">with</code><code class=\"ANY\">(</code><code class=\"ANY\">register</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">note</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeNote</code><code class=\"ANY\">(</code><code class=\"ANY\">id</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">NoteId</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">generate</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">content</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\"># abc</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">fileFor</code><code class=\"ANY\">(</code><code class=\"ANY\">note</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">name</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isEqualTo</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">abc.md</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">noteIdFor</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">abc.md</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isEqualTo</code><code class=\"ANY\">(</code><code class=\"ANY\">note</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"COMMENT\">// Same note ID, different content.</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">updatedNote1</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">note</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">copy</code><code class=\"ANY\">(</code><code class=\"ANY\">content</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\"># abc def</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">fileFor</code><code class=\"ANY\">(</code><code class=\"ANY\">updatedNote1</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">name</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isEqualTo</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">abc_def.md</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">noteIdFor</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">abc_def.md</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isEqualTo</code><code class=\"ANY\">(</code><code class=\"ANY\">updatedNote1</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"COMMENT\">// Different note ID, same content.</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">note3</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeNote</code><code class=\"ANY\">(</code><code class=\"ANY\">id</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">NoteId</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">generate</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">content</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">updatedNote1</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">content</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">fileFor</code><code class=\"ANY\">(</code><code class=\"ANY\">note3</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">name</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isEqualTo</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">abc_def_2.md</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">noteIdFor</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">abc_def_2.md</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isEqualTo</code><code class=\"ANY\">(</code><code class=\"ANY\">note3</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANNOTATION_DECLARATOR\"> @</code><code class=\"ANNOTATION_DECLARATOR\">Test</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">`rename file if note's heading changes`</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">note</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeNote</code><code class=\"ANY\">(</code><code class=\"ANY\">id</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">NoteId</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">generate</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">content</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\"># abc</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">fileBeforeUpdate</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">register</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">fileFor</code><code class=\"ANY\">(</code><code class=\"ANY\">note</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">touch</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">fileBeforeUpdate</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">name</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isEqualTo</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">abc.md</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">fileBeforeUpdate</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">exists</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isTrue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">register</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">noteIdFor</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">abc.md</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isEqualTo</code><code class=\"ANY\">(</code><code class=\"ANY\">note</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">fileAfterUpdate</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">register</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">fileFor</code><code class=\"ANY\">(</code><code class=\"ANY\">note</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">copy</code><code class=\"ANY\">(</code><code class=\"ANY\">content</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\"># abcdef</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">fileAfterUpdate</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">name</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isEqualTo</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">abcdef.md</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">fileBeforeUpdate</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">exists</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isFalse</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">register</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">noteIdFor</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">abc.md</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isNull</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">register</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">noteIdFor</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">abcdef.md</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isEqualTo</code><code class=\"ANY\">(</code><code class=\"ANY\">note</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANNOTATION_DECLARATOR\"> @</code><code class=\"ANNOTATION_DECLARATOR\">Test</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">`generation of a new file name for resolving conflict in the same folder`</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">File</code><code class=\"ANY\">(</code><code class=\"ANY\">directory</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">uncharted.md</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">write</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">A Thief's End</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">File</code><code class=\"ANY\">(</code><code class=\"ANY\">directory</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">uncharted_2.md</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">write</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">The Lost Legacy</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">File</code><code class=\"ANY\">(</code><code class=\"ANY\">directory</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">archive/uncharted_3.md</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">touch</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">write</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">Archived The Lost Legacy</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">conflictingNote</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeNote</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\"># Uncharted</code><code class=\"CHAR_STRING_LITERAL\">\\n</code><code class=\"CHAR_STRING_LITERAL\">Drake's Fortune</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">newName</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">register</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">generateNameFor</code><code class=\"ANY\">(</code><code class=\"ANY\">conflictingNote</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">canUseExisting</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">false</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">newName</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isEqualTo</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">uncharted_3.md</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANNOTATION_DECLARATOR\"> @</code><code class=\"ANNOTATION_DECLARATOR\">Test</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">`prune stale records`</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">note1</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeNote</code><code class=\"ANY\">(</code><code class=\"ANY\">content</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\"># Uncharted</code><code class=\"CHAR_STRING_LITERAL\">\\n</code><code class=\"CHAR_STRING_LITERAL\">A Thief's End</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">note2</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeNote</code><code class=\"ANY\">(</code><code class=\"ANY\">content</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\"># Uncharted</code><code class=\"CHAR_STRING_LITERAL\">\\n</code><code class=\"CHAR_STRING_LITERAL\">The Lost Legacy</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">note1File</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">register</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">fileFor</code><code class=\"ANY\">(</code><code class=\"ANY\">note1</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">note2File</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">register</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">fileFor</code><code class=\"ANY\">(</code><code class=\"ANY\">note2</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">register</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">noteIdFor</code><code class=\"ANY\">(</code><code class=\"ANY\">note1File</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">name</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isEqualTo</code><code class=\"ANY\">(</code><code class=\"ANY\">note1</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">register</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">noteIdFor</code><code class=\"ANY\">(</code><code class=\"ANY\">note2File</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">name</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isEqualTo</code><code class=\"ANY\">(</code><code class=\"ANY\">note2</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">register</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">pruneStaleRecords</code><code class=\"ANY\">(</code><code class=\"ANY\">currentIds</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">listOf</code><code class=\"ANY\">(</code><code class=\"ANY\">note1</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">register</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">noteIdFor</code><code class=\"ANY\">(</code><code class=\"ANY\">note1File</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">name</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isEqualTo</code><code class=\"ANY\">(</code><code class=\"ANY\">note1</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">register</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">noteIdFor</code><code class=\"ANY\">(</code><code class=\"ANY\">note2File</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">name</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isNull</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANNOTATION_DECLARATOR\"> @</code><code class=\"ANNOTATION_DECLARATOR\">Test</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">`migrate from invalid records that point to the same ID`</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">note1</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeNote</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\"># </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">record1</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">register</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">createNewRecordFor</code><code class=\"ANY\">(</code><code class=\"ANY\">register</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">fileFor</code><code class=\"ANY\">(</code><code class=\"ANY\">note1</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">note1</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">note2</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeNote</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\"># </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">record2</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">register</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">createNewRecordFor</code><code class=\"ANY\">(</code><code class=\"ANY\">register</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">fileFor</code><code class=\"ANY\">(</code><code class=\"ANY\">note2</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">note2</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">record2</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">registerFile</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">write</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">${</code><code class=\"ANY\">note1</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">value</code><code class=\"ANY\">}</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">register</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">noteIdFor</code><code class=\"ANY\">(</code><code class=\"ANY\">record1</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">noteFilePath</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isEqualTo</code><code class=\"ANY\">(</code><code class=\"ANY\">register</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">noteIdFor</code><code class=\"ANY\">(</code><code class=\"ANY\">record2</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">noteFilePath</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">register</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">migrateRecords</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">register</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">noteIdFor</code><code class=\"ANY\">(</code><code class=\"ANY\">record1</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">noteFilePath</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isNotEqualTo</code><code class=\"ANY\">(</code><code class=\"ANY\">register</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">noteIdFor</code><code class=\"ANY\">(</code><code class=\"ANY\">record2</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">noteFilePath</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANNOTATION_DECLARATOR\"> @</code><code class=\"ANNOTATION_DECLARATOR\">Test</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">`migrate from old record file names`</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">gamesFolder</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeFolder</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">games</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">parent</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">null</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">witcherNote</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeNote</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\"># witcher 3</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">folderId</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">gamesFolder</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">database</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">folderQueries</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">testInsert</code><code class=\"ANY\">(</code><code class=\"ANY\">gamesFolder</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">register</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">createNewRecordFor</code><code class=\"ANY\">(</code><code class=\"ANY\">register</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">fileFor</code><code class=\"ANY\">(</code><code class=\"ANY\">witcherNote</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">witcherNote</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">finNote</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeNote</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\"># finances</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">finRecord</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">register</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">createNewRecordFor</code><code class=\"ANY\">(</code><code class=\"ANY\">register</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">fileFor</code><code class=\"ANY\">(</code><code class=\"ANY\">finNote</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">finNote</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">finRecordName</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">finRecord</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">registerFile</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">name</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"COMMENT\">// Old record names didn't have any extension.</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">check</code><code class=\"ANY\">(</code><code class=\"ANY\">finRecordName</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">endsWith</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">.meta</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">finRecord</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">registerFile</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">renameTo</code><code class=\"ANY\">(</code><code class=\"ANY\">finRecordName</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">replaceSuffix</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">.meta</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">with</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"COMMENT\">// Folder names don't have any extension either, so make sure they don't get migrated as well.</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">File</code><code class=\"ANY\">(</code><code class=\"ANY\">finRecord</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">registerFile</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">parent</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">games</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">makeDirectories</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">register</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">migrateRecords</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">resultingPaths</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">register</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">registerDirectory</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">children</code><code class=\"ANY\">(</code><code class=\"ANY\">recursively</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">true</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">map</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">relativePathIn</code><code class=\"ANY\">(</code><code class=\"ANY\">register</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">registerDirectory</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">resultingPaths</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">containsOnly</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">games/witcher_3.meta</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">finances.meta</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANNOTATION_DECLARATOR\"> @</code><code class=\"ANNOTATION_DECLARATOR\">Test</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">`detect updates to note's folder`</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">note</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeNote</code><code class=\"ANY\">(</code><code class=\"ANY\">content</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\"># The Witcher 3</code><code class=\"CHAR_STRING_LITERAL\">\\n</code><code class=\"CHAR_STRING_LITERAL\">Wild hunt</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">folderId</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">null</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">unarchivedFile</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">register</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">fileFor</code><code class=\"ANY\">(</code><code class=\"ANY\">note</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">unarchivedFile</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">exists</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isTrue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">unarchivedFile</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">relativePathIn</code><code class=\"ANY\">(</code><code class=\"ANY\">directory</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isEqualTo</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">the_witcher_3.md</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">with</code><code class=\"ANY\">(</code><code class=\"ANY\">register</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">recordFor</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">the_witcher_3.md</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">!</code><code class=\"ANY\">!</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">noteId</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isEqualTo</code><code class=\"ANY\">(</code><code class=\"ANY\">note</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">noteFolder</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isEmpty</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">archive</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeFolder</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">archive</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">database</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">folderQueries</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">testInsert</code><code class=\"ANY\">(</code><code class=\"ANY\">archive</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">archivedFile</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">register</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">fileFor</code><code class=\"ANY\">(</code><code class=\"ANY\">note</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">copy</code><code class=\"ANY\">(</code><code class=\"ANY\">folderId</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">archive</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">archivedFile</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">relativePathIn</code><code class=\"ANY\">(</code><code class=\"ANY\">directory</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isEqualTo</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">archive/the_witcher_3.md</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">unarchivedFile</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">exists</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isFalse</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">with</code><code class=\"ANY\">(</code><code class=\"ANY\">register</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">recordFor</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">archive/the_witcher_3.md</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">!</code><code class=\"ANY\">!</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">noteId</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isEqualTo</code><code class=\"ANY\">(</code><code class=\"ANY\">note</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">noteFolder</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isEqualTo</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">archive</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">register</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">fileFor</code><code class=\"ANY\">(</code><code class=\"ANY\">note</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">copy</code><code class=\"ANY\">(</code><code class=\"ANY\">folderId</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">null</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">archivedFile</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">exists</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isFalse</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">unarchivedFile</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">exists</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isTrue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">with</code><code class=\"ANY\">(</code><code class=\"ANY\">register</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">recordFor</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">the_witcher_3.md</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">!</code><code class=\"ANY\">!</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">noteId</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isEqualTo</code><code class=\"ANY\">(</code><code class=\"ANY\">note</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">noteFolder</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isEmpty</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANNOTATION_DECLARATOR\"> @</code><code class=\"ANNOTATION_DECLARATOR\">Test</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">`support for single folder`</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">gamesFolder</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeFolder</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">games</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">parent</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">null</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">database</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">folderQueries</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">testInsert</code><code class=\"ANY\">(</code><code class=\"ANY\">gamesFolder</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">note</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeNote</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">content</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\"># The Witcher 3</code><code class=\"CHAR_STRING_LITERAL\">\\n</code><code class=\"CHAR_STRING_LITERAL\">Hearts of Stone</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">folderId</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">gamesFolder</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">file</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">register</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">fileFor</code><code class=\"ANY\">(</code><code class=\"ANY\">note</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">file</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">relativePathIn</code><code class=\"ANY\">(</code><code class=\"ANY\">directory</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isEqualTo</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">games/the_witcher_3.md</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">with</code><code class=\"ANY\">(</code><code class=\"ANY\">register</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">recordFor</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">games/the_witcher_3.md</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">!</code><code class=\"ANY\">!</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">noteId</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isEqualTo</code><code class=\"ANY\">(</code><code class=\"ANY\">note</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">noteFolder</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isEqualTo</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">games</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANNOTATION_DECLARATOR\"> @</code><code class=\"ANNOTATION_DECLARATOR\">Test</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">`support for archived note inside a single folder`</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">archiveFolder</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeFolder</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">archive</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">parent</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">null</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">gamesFolder</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeFolder</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">Games</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">parent</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">archiveFolder</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">database</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">folderQueries</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">testInsert</code><code class=\"ANY\">(</code><code class=\"ANY\">archiveFolder</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">gamesFolder</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">note</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeNote</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">content</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\"># The Witcher 3</code><code class=\"CHAR_STRING_LITERAL\">\\n</code><code class=\"CHAR_STRING_LITERAL\">Hearts of Stone</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">folderId</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">gamesFolder</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">file</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">register</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">fileFor</code><code class=\"ANY\">(</code><code class=\"ANY\">note</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">file</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">relativePathIn</code><code class=\"ANY\">(</code><code class=\"ANY\">directory</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isEqualTo</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">archive/Games/the_witcher_3.md</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">with</code><code class=\"ANY\">(</code><code class=\"ANY\">register</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">recordFor</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">archive/Games/the_witcher_3.md</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">!</code><code class=\"ANY\">!</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">noteId</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isEqualTo</code><code class=\"ANY\">(</code><code class=\"ANY\">note</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">noteFolder</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isEqualTo</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">archive/Games</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANNOTATION_DECLARATOR\"> @</code><code class=\"ANNOTATION_DECLARATOR\">Test</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">`support for nested folders`</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">gamesFolder</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeFolder</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">Games</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">parent</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">null</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">witcherFolder</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeFolder</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">The Witcher 3</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">parent</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">gamesFolder</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">database</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">folderQueries</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">testInsert</code><code class=\"ANY\">(</code><code class=\"ANY\">gamesFolder</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">witcherFolder</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">note</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeNote</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">content</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\"># Hearts of Stone</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">folderId</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">witcherFolder</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">file</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">register</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">fileFor</code><code class=\"ANY\">(</code><code class=\"ANY\">note</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">file</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">relativePathIn</code><code class=\"ANY\">(</code><code class=\"ANY\">directory</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isEqualTo</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">Games/The Witcher 3/hearts_of_stone.md</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">with</code><code class=\"ANY\">(</code><code class=\"ANY\">register</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">recordFor</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">Games/The Witcher 3/hearts_of_stone.md</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">!</code><code class=\"ANY\">!</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">noteId</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isEqualTo</code><code class=\"ANY\">(</code><code class=\"ANY\">note</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">noteFolder</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isEqualTo</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">Games/The Witcher 3</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANNOTATION_DECLARATOR\"> @</code><code class=\"ANNOTATION_DECLARATOR\">Test</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">`support for archived note inside nested folders`</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">archiveFolder</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeFolder</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">archive</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">parent</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">null</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">gamesFolder</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeFolder</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">Games</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">parent</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">archiveFolder</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">witcherFolder</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeFolder</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">The Witcher 3</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">parent</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">gamesFolder</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">database</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">folderQueries</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">testInsert</code><code class=\"ANY\">(</code><code class=\"ANY\">archiveFolder</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">gamesFolder</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">witcherFolder</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">note</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeNote</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">content</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\"># Hearts of Stone</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">folderId</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">witcherFolder</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">file</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">register</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">fileFor</code><code class=\"ANY\">(</code><code class=\"ANY\">note</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">file</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">relativePathIn</code><code class=\"ANY\">(</code><code class=\"ANY\">directory</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isEqualTo</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">archive/Games/The Witcher 3/hearts_of_stone.md</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">with</code><code class=\"ANY\">(</code><code class=\"ANY\">register</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">recordFor</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">archive/Games/The Witcher 3/hearts_of_stone.md</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">!</code><code class=\"ANY\">!</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">noteId</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isEqualTo</code><code class=\"ANY\">(</code><code class=\"ANY\">note</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assertThat</code><code class=\"ANY\">(</code><code class=\"ANY\">noteFolder</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isEqualTo</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">archive/Games/The Witcher 3</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANNOTATION_DECLARATOR\"> @</code><code class=\"ANNOTATION_DECLARATOR\">Test</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">`regression test - note with the same name as a folder shouldn't cause an error`</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">financesFolder</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeFolder</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">finances</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">database</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">folderQueries</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">testInsert</code><code class=\"ANY\">(</code><code class=\"ANY\">financesFolder</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">randomNote</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeNote</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\"># Random</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">folderId</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">financesFolder</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">register</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">fileFor</code><code class=\"ANY\">(</code><code class=\"ANY\">randomNote</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">financesNote</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">fakeNote</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">content</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\"># Finances</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">folderId</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">null</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">register</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">fileFor</code><code class=\"ANY\">(</code><code class=\"ANY\">financesNote</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">FileNameRegister</code><code class=\"ANY\">.</code><code class=\"FUNCTION_DECLARATOR\">fileFor</code><code class=\"ANY\">(</code><code class=\"ANY\">note</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Note</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">File</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">suggestion</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">suggestFile</code><code class=\"ANY\">(</code><code class=\"ANY\">note</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">apply</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">acceptRename</code><code class=\"ANY\">?</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">invoke</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"ANY\">suggestion</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">suggestedFile</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">also</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">touch</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code>\n</pre>\n</html>"},{"_id":{"language":"KOTLIN","lexingTokens},"sourceCode":"package press.navigation\n\nimport android.content.Context\nimport android.graphics.Rect\nimport android.view.View\nimport android.view.ViewGroup\nimport androidx.core.view.children\nimport androidx.core.view.doOnLayout\nimport flow.Direction\nimport flow.Direction.BACKWARD\nimport flow.Direction.REPLACE\nimport flow.State\nimport flow.TraversalCallback\nimport me.saket.inboxrecyclerview.page.StandaloneExpandablePageLayout\nimport me.saket.press.shared.ui.ScreenKey\nimport press.extensions.doOnCollapse\nimport press.extensions.doOnExpand\nimport press.navigation.BackPressInterceptor.InterceptResult.Ignored\nimport press.navigation.ScreenTransition.TransitionResult\nimport press.navigation.ScreenTransition.TransitionResult.Handled\nimport press.widgets.dp\n\n/**\n * Inflates screen Views in response to backstack changes.\n *\n * Keeps multiple screen Views stacked on top of each other so that they can interact\n * together. For screens of type [ExpandableScreenKey], dragging the foreground screen\n * will cause its background screen to move in sync.\n */\nclass ScreenKeyChanger(\n  private val hostView: () -> ViewGroup,\n  private val formFactor: FormFactor,\n  transitions: List<ScreenTransition>\n) : EnqueuingKeyChanger() {\n  private val transitions = transitions + BasicTransition()\n  private var previousKey: ScreenKey? = null\n\n  override fun changeKey(\n    outgoingState: State?,\n    incomingState: State,\n    direction: Direction,\n    incomingContexts: Map<Any, Context>,\n    traversalCallback: TraversalCallback,\n    transitionCallback: TransitionCallback\n  ) {\n    val incomingKey = incomingState.getKey<ScreenKey>()\n\n    if (outgoingState == null && direction == REPLACE) {\n      // Short circuit if we would just be showing the same view again. Flow\n      // intentionally calls changeKey() again on onResume() with the same values.\n      // See: https://github.com/square/flow/issues/173.\n      if (previousKey == incomingKey) {\n        traversalCallback.onTraversalCompleted()\n        transitionCallback.onTransitionCompleted()\n        return\n      }\n    }\n    previousKey = incomingKey\n\n    if (incomingKey !is CompositeScreenKey) {\n      // FYI PlaceholderScreenKey gets discarded here.\n      traversalCallback.onTraversalCompleted()\n      transitionCallback.onTransitionCompleted()\n      return\n    }\n\n    fun findOrCreateView(key: ScreenKey): View {\n      val existing = hostView().children.firstOrNull { it.screenKey<ScreenKey>() == key }\n      if (existing != null) return existing\n\n      val context = incomingContexts[key]!!\n      return formFactor.createView(context, key).also {\n        warnIfIdIsMissing(it)\n        incomingState.restore(it)\n        hostView().addView(it)\n      }\n    }\n\n    val oldForegroundView = hostView().children.lastOrNull()\n    val newBackgroundView = incomingKey.background?.let(::findOrCreateView)\n    val newForegroundView = incomingKey.foreground.let(::findOrCreateView)\n\n    // The incoming or outgoing View must be drawn last.\n    newForegroundView.bringToFront()\n    if (direction == BACKWARD) {\n      oldForegroundView?.bringToFront()\n    }\n    dispatchFocusChangeCallback()\n    assignElevationAsPerZIndex()\n\n    val leftOverViews = hostView().children.filter { it !== newBackgroundView && it !== newForegroundView }\n    val removeLeftOverViews = {\n      leftOverViews.forEach {\n        outgoingState?.save(it)\n        hostView().removeView(it)\n      }\n      dispatchFocusChangeCallback()\n    }\n\n    // When animating forward, the background View can be discarded immediately.\n    // When animating backward, the foreground View is discarded after the transition.\n    val isForwardTransition = direction != BACKWARD\n    val onTransitionEnd = {\n      if (isForwardTransition.not()) {\n        removeLeftOverViews()\n      }\n      transitionCallback.onTransitionCompleted()  // Note to self: this must be called at the *end*.\n    }\n    if (isForwardTransition) {\n      removeLeftOverViews()\n    }\n\n    val children = hostView().children.toList()\n    val fromView: View? = if (isForwardTransition) children.secondLast() else children.last()\n    val toView: View = if (isForwardTransition) children.last() else children.secondLast()!!\n\n    if (fromView != null) {\n      if (!isForwardTransition && newBackgroundView != null) {\n        // The transition that handles this transition may not be the same class\n        // that handles the background View, so all transitions must be called.\n        transitions.forEach {\n          it.prepareBackground(\n            background = newBackgroundView,\n            foreground = toView,\n            foregroundKey = toView.screenKey()\n          )\n        }\n      }\n\n      transitions.first {\n        it.transition(\n          fromView = fromView,\n          fromKey = fromView.screenKey(),\n          toView = toView,\n          toKey = toView.screenKey(),\n          newBackground = newBackgroundView,\n          goingForward = isForwardTransition,\n          onComplete = onTransitionEnd\n        ) == Handled\n      }\n    } else {\n      onTransitionEnd()\n    }\n\n    traversalCallback.onTraversalCompleted()\n  }\n\n  private fun assignElevationAsPerZIndex() {\n    val baseElevation = hostView().dp(40f)\n    hostView().children.forEachIndexed { index, view ->\n      view.elevation = baseElevation + index\n    }\n  }\n\n  private fun <T> List<T>.secondLast(): T? {\n    return if (size >= 2) this[lastIndex - 1] else null\n  }\n\n  private fun warnIfIdIsMissing(incomingView: View) {\n    check(incomingView.id != View.NO_ID) {\n      \"${incomingView::class.simpleName} needs an ID for persisting View state.\"\n    }\n  }\n\n  private fun dispatchFocusChangeCallback() {\n    val children = hostView().children\n      .map { formFactor.findDecoratedScreenView(it) }\n      .toList()\n    val foregroundView = children.lastOrNull()\n    val focusedScreenKey = foregroundView?.screenKey<ScreenKey>()\n\n    children.forEach {\n      if (it !== foregroundView) {\n        it.clearFocus()\n      }\n      if (it is ScreenFocusChangeListener) {\n        it.onScreenFocusChanged(focusedScreen = focusedScreenKey)\n      }\n    }\n  }\n\n  fun onInterceptBackPress(): BackPressInterceptor.InterceptResult {\n    val foreground = hostView().children\n      .map { formFactor.findDecoratedScreenView(it) }\n      .lastOrNull()\n\n    val interceptor = foreground as? BackPressInterceptor\n    return interceptor?.onInterceptBackPress() ?: return Ignored\n  }\n}\n\nprivate class BasicTransition : ScreenTransition {\n  override fun transition(\n    fromView: View,\n    fromKey: ScreenKey,\n    toView: View,\n    toKey: ScreenKey,\n    newBackground: View?,\n    goingForward: Boolean,\n    onComplete: () -> Unit\n  ): TransitionResult {\n    if (goingForward && toView is StandaloneExpandablePageLayout) {\n      toView.doOnLayout {\n        val toLocation = toView.locationOnScreen()\n        toView.expandFrom(Rect(toLocation.left, fromView.dp(56), toLocation.right, fromView.dp(56)))\n        toView.doOnExpand(onComplete)\n      }\n    } else if (!goingForward && fromView is StandaloneExpandablePageLayout) {\n      val fromLocation = fromView.locationOnScreen()\n      fromView.collapseTo(Rect(fromLocation.left, fromView.dp(56), fromLocation.right, fromView.dp(56)))\n      fromView.doOnCollapse(onComplete)\n    } else {\n      onComplete()\n    }\n    return Handled\n  }\n}\n","highlightingTokens":[1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,4,0,1,0,5,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,8,0,0,0,0,1,0,1,0,0,0,0,8,0,0,0,0,0,0,0,8,0,8,0,0,0,0,0,0,8,0,0,0,0,0,0,0,1,0,1,0,7,0,0,0,0,0,0,0,9,0,0,0,0,0,1,0,1,0,7,0,0,8,8,0,0,2,0,0,0,0,1,0,1,0,6,0,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,8,0,8,0,0,8,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,8,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,8,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,6,0,0,0,0,8,0,0,0,8,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,0,0,10,0,9,0,6,0,0,0,9,0,8,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,1,0,0,0,0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,9,0,6,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,0,0,10,0,9,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,10,0,0,9,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,0,0,10,0,9,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,1,0,7,0,0,0,6,0,0,0,0,0,0,0,0,0,9,0,6,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,6,0,0,0,0,0,0,4,0,0,0,0,0,4,0,0,0,0,0,1,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,6,0,0,0,0,0,0,0,1,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,4,0,0,0,0,0,6,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,0,0,10,0,9,0,0,0,0,0,0,0,1,0,7,0,0,8,8,0,0,1,0,0,0,0,0,0,0,9,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,1,0,7,0,0,8,0,0,0,1,0,0,0,0,0,0,0,9,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,1,0,1,0,6,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,0,0,9,0,2,0,0,0,0,0,0,9,0,0,0,10,0,9,0,6,0,7,0,0,7,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,8,0,8,0,0,6,0,0,0,0,8,8,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,2,0,0,1,0,0,0,0,0,2,0,0,1,0,2,0,0,0,0,0,0,0,0,1,0,1,0,6,0,0,0,0,8,0,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,0,10,0,0,6,0,0,0,0,0,0,0,3,3,0,0,1,0,10,0,3,3,0,0,0,0,0,6,0,0,0,0,0,0,0,0,1,0,1,0,6,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,9,0,6,0,0,0,9,0,0,0,0,6,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,0,9,0,8,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,1,0,6,0,0,0,0,8,0,8,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,9,0,6,0,0,0,9,0,0,0,0,6,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,0,0,8,0,0,0,0,0,1,0,0,0,0,9,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,5,0,0,0,8,0,0,0,0,0,1,0,1,0,6,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,8,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,8,0,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,9,0,0,0,10,0,0,0,0,9,0,2,0,0,0,0,0,10,0,0,0,0,9,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0,8,0,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,9,0,9,0,0,0,10,0,0,0,0,9,0,2,0,0,0,0,0,10,0,0,0,0,9,0,2,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],"highlightingCode":"<!DOCTYPE html>\n<html>\n<style>\n.ANY {\n    color: black;\n    font-weight: normal;\n    font-style: normal;\n}\n.KEYWORD {\n    color: blue;\n    font-weight: bold;\n    font-style: normal;\n}\n.LITERAL {\n    color: lightskyblue;\n    font-weight: bold;\n    font-style: normal;\n}\n.CHAR_STRING_LITERAL {\n    color: darkgoldenrod;\n    font-weight: normal;\n    font-style: normal;\n}\n.COMMENT {\n    color: grey;\n    font-weight: normal;\n    font-style: italic;\n}\n.CLASS_DECLARATOR {\n    color: crimson;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_DECLARATOR {\n    color: fuchsia;\n    font-weight: bold;\n    font-style: normal;\n}\n.VARIABLE_DECLARATOR {\n    color: purple;\n    font-weight: bold;\n    font-style: normal;\n}\n.TYPE_IDENTIFIER {\n    color: darkgreen;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_IDENTIFIER {\n    color: dodgerblue;\n    font-weight: normal;\n    font-style: normal;\n}\n.FIELD_IDENTIFIER {\n    color: coral;\n    font-weight: normal;\n    font-style: normal;\n}\n.ANNOTATION_DECLARATOR {\n    color: lightslategray;\n    font-weight: lighter;\n    font-style: italic;\n}\n</style>\n<pre>\n<code class=\"KEYWORD\">package</code><code class=\"ANY\"> </code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">navigation</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">android</code><code class=\"ANY\">.</code><code class=\"ANY\">content</code><code class=\"ANY\">.</code><code class=\"ANY\">Context</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">android</code><code class=\"ANY\">.</code><code class=\"ANY\">graphics</code><code class=\"ANY\">.</code><code class=\"ANY\">Rect</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">android</code><code class=\"ANY\">.</code><code class=\"ANY\">view</code><code class=\"ANY\">.</code><code class=\"ANY\">View</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">android</code><code class=\"ANY\">.</code><code class=\"ANY\">view</code><code class=\"ANY\">.</code><code class=\"ANY\">ViewGroup</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">androidx</code><code class=\"ANY\">.</code><code class=\"ANY\">core</code><code class=\"ANY\">.</code><code class=\"ANY\">view</code><code class=\"ANY\">.</code><code class=\"ANY\">children</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">androidx</code><code class=\"ANY\">.</code><code class=\"ANY\">core</code><code class=\"ANY\">.</code><code class=\"ANY\">view</code><code class=\"ANY\">.</code><code class=\"ANY\">doOnLayout</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">flow</code><code class=\"ANY\">.</code><code class=\"ANY\">Direction</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">flow</code><code class=\"ANY\">.</code><code class=\"ANY\">Direction</code><code class=\"ANY\">.</code><code class=\"ANY\">BACKWARD</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">flow</code><code class=\"ANY\">.</code><code class=\"ANY\">Direction</code><code class=\"ANY\">.</code><code class=\"ANY\">REPLACE</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">flow</code><code class=\"ANY\">.</code><code class=\"ANY\">State</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">flow</code><code class=\"ANY\">.</code><code class=\"ANY\">TraversalCallback</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">inboxrecyclerview</code><code class=\"ANY\">.</code><code class=\"ANY\">page</code><code class=\"ANY\">.</code><code class=\"ANY\">StandaloneExpandablePageLayout</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">ui</code><code class=\"ANY\">.</code><code class=\"ANY\">ScreenKey</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">extensions</code><code class=\"ANY\">.</code><code class=\"ANY\">doOnCollapse</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">extensions</code><code class=\"ANY\">.</code><code class=\"ANY\">doOnExpand</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">navigation</code><code class=\"ANY\">.</code><code class=\"ANY\">BackPressInterceptor</code><code class=\"ANY\">.</code><code class=\"ANY\">InterceptResult</code><code class=\"ANY\">.</code><code class=\"ANY\">Ignored</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">navigation</code><code class=\"ANY\">.</code><code class=\"ANY\">ScreenTransition</code><code class=\"ANY\">.</code><code class=\"ANY\">TransitionResult</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">navigation</code><code class=\"ANY\">.</code><code class=\"ANY\">ScreenTransition</code><code class=\"ANY\">.</code><code class=\"ANY\">TransitionResult</code><code class=\"ANY\">.</code><code class=\"ANY\">Handled</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">widgets</code><code class=\"ANY\">.</code><code class=\"ANY\">dp</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"COMMENT\">/**\n * Inflates screen Views in response to backstack changes.\n *\n * Keeps multiple screen Views stacked on top of each other so that they can interact\n * together. For screens of type [ExpandableScreenKey], dragging the foreground screen\n * will cause its background screen to move in sync.\n */</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code><code class=\"ANY\"> </code><code class=\"CLASS_DECLARATOR\">ScreenKeyChanger</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"ANY\">hostView</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">ViewGroup</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"ANY\">formFactor</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">FormFactor</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">transitions</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">ScreenTransition</code><code class=\"ANY\">></code><code class=\"ANY\">\n</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">EnqueuingKeyChanger</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">transitions</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">transitions</code><code class=\"ANY\"> </code><code class=\"ANY\">+</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">BasicTransition</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">var</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">previousKey</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">ScreenKey</code><code class=\"TYPE_IDENTIFIER\">? </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">null</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">override</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">changeKey</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">outgoingState</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">State</code><code class=\"TYPE_IDENTIFIER\">?</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">incomingState</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">State</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">direction</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Direction</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">incomingContexts</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Map</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Any</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Context</code><code class=\"ANY\">></code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">traversalCallback</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">TraversalCallback</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">transitionCallback</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">TransitionCallback</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">incomingKey</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">incomingState</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">getKey</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">ScreenKey</code><code class=\"ANY\">></code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">outgoingState</code><code class=\"ANY\"> </code><code class=\"ANY\">==</code><code class=\"ANY\"> </code><code class=\"LITERAL\">null</code><code class=\"ANY\"> </code><code class=\"ANY\">&&</code><code class=\"ANY\"> </code><code class=\"ANY\">direction</code><code class=\"ANY\"> </code><code class=\"ANY\">==</code><code class=\"ANY\"> </code><code class=\"ANY\">REPLACE</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"COMMENT\">// Short circuit if we would just be showing the same view again. Flow</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"COMMENT\">// intentionally calls changeKey() again on onResume() with the same values.</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"COMMENT\">// See: https://github.com/square/flow/issues/173.</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">previousKey</code><code class=\"ANY\"> </code><code class=\"ANY\">==</code><code class=\"ANY\"> </code><code class=\"ANY\">incomingKey</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">traversalCallback</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">onTraversalCompleted</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">transitionCallback</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">onTransitionCompleted</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">previousKey</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">incomingKey</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">incomingKey</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">!is </code><code class=\"TYPE_IDENTIFIER\">CompositeScreenKey</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"COMMENT\">// FYI PlaceholderScreenKey gets discarded here.</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">traversalCallback</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">onTraversalCompleted</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">transitionCallback</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">onTransitionCompleted</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">findOrCreateView</code><code class=\"ANY\">(</code><code class=\"ANY\">key</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">ScreenKey</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">View</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">existing</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">hostView</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">children</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">firstOrNull</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">screenKey</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">ScreenKey</code><code class=\"ANY\">></code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">==</code><code class=\"ANY\"> </code><code class=\"ANY\">key</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">existing</code><code class=\"ANY\"> </code><code class=\"ANY\">!=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">null</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"ANY\">existing</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">context</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">incomingContexts</code><code class=\"ANY\">[</code><code class=\"ANY\">key</code><code class=\"ANY\">]</code><code class=\"ANY\">!</code><code class=\"ANY\">!</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"ANY\">formFactor</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">createView</code><code class=\"ANY\">(</code><code class=\"ANY\">context</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">key</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">also</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">warnIfIdIsMissing</code><code class=\"ANY\">(</code><code class=\"ANY\">it</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">incomingState</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">restore</code><code class=\"ANY\">(</code><code class=\"ANY\">it</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">hostView</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">addView</code><code class=\"ANY\">(</code><code class=\"ANY\">it</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">oldForegroundView</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">hostView</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">children</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">lastOrNull</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">newBackgroundView</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">incomingKey</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">background</code><code class=\"ANY\">?</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">let</code><code class=\"ANY\">(</code><code class=\"ANY\">::</code><code class=\"ANY\">findOrCreateView</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">newForegroundView</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">incomingKey</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">foreground</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">let</code><code class=\"ANY\">(</code><code class=\"ANY\">::</code><code class=\"ANY\">findOrCreateView</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"COMMENT\">// The incoming or outgoing View must be drawn last.</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">newForegroundView</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">bringToFront</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">direction</code><code class=\"ANY\"> </code><code class=\"ANY\">==</code><code class=\"ANY\"> </code><code class=\"ANY\">BACKWARD</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">oldForegroundView</code><code class=\"ANY\">?</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">bringToFront</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">dispatchFocusChangeCallback</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">assignElevationAsPerZIndex</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">leftOverViews</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">hostView</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">children</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">filter</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\"> </code><code class=\"ANY\">!==</code><code class=\"ANY\"> </code><code class=\"ANY\">newBackgroundView</code><code class=\"ANY\"> </code><code class=\"ANY\">&&</code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\"> </code><code class=\"ANY\">!==</code><code class=\"ANY\"> </code><code class=\"ANY\">newForegroundView</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">removeLeftOverViews</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">leftOverViews</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">forEach</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">outgoingState</code><code class=\"ANY\">?</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">save</code><code class=\"ANY\">(</code><code class=\"ANY\">it</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">hostView</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">removeView</code><code class=\"ANY\">(</code><code class=\"ANY\">it</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">dispatchFocusChangeCallback</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"COMMENT\">// When animating forward, the background View can be discarded immediately.</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"COMMENT\">// When animating backward, the foreground View is discarded after the transition.</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">isForwardTransition</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">direction</code><code class=\"ANY\"> </code><code class=\"ANY\">!=</code><code class=\"ANY\"> </code><code class=\"ANY\">BACKWARD</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">onTransitionEnd</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">isForwardTransition</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">not</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">removeLeftOverViews</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">transitionCallback</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">onTransitionCompleted</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"COMMENT\">// Note to self: this must be called at the *end*.</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">isForwardTransition</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">removeLeftOverViews</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">children</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">hostView</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">children</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">toList</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">fromView</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">View</code><code class=\"TYPE_IDENTIFIER\">? </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">isForwardTransition</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">children</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">secondLast</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\"> </code><code class=\"ANY\">children</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">last</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">toView</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">View</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">isForwardTransition</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">children</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">last</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\"> </code><code class=\"ANY\">children</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">secondLast</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">!</code><code class=\"ANY\">!</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">fromView</code><code class=\"ANY\"> </code><code class=\"ANY\">!=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">null</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">!</code><code class=\"ANY\">isForwardTransition</code><code class=\"ANY\"> </code><code class=\"ANY\">&&</code><code class=\"ANY\"> </code><code class=\"ANY\">newBackgroundView</code><code class=\"ANY\"> </code><code class=\"ANY\">!=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">null</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"COMMENT\">// The transition that handles this transition may not be the same class</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"COMMENT\">// that handles the background View, so all transitions must be called.</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">transitions</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">forEach</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">prepareBackground</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">background</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">newBackgroundView</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">foreground</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">toView</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">foregroundKey</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">toView</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">screenKey</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">transitions</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">first</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">transition</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">fromView</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">fromView</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">fromKey</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">fromView</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">screenKey</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">toView</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">toView</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">toKey</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">toView</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">screenKey</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">newBackground</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">newBackgroundView</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">goingForward</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">isForwardTransition</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">onComplete</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">onTransitionEnd</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">==</code><code class=\"ANY\"> </code><code class=\"ANY\">Handled</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">onTransitionEnd</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">traversalCallback</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">onTraversalCompleted</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">assignElevationAsPerZIndex</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">baseElevation</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">hostView</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">dp</code><code class=\"ANY\">(</code><code class=\"LITERAL\">40f</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">hostView</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">children</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">forEachIndexed</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">index</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">view</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">view</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">elevation</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">baseElevation</code><code class=\"ANY\"> </code><code class=\"ANY\">+</code><code class=\"ANY\"> </code><code class=\"ANY\">index</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"ANY\"><</code><code class=\"ANY\">T</code><code class=\"ANY\">></code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">T</code><code class=\"ANY\">></code><code class=\"ANY\">.</code><code class=\"FUNCTION_DECLARATOR\">secondLast</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">T</code><code class=\"TYPE_IDENTIFIER\">? </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">size</code><code class=\"ANY\"> </code><code class=\"ANY\">>=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">2</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">this</code><code class=\"ANY\">[</code><code class=\"ANY\">lastIndex</code><code class=\"ANY\"> </code><code class=\"ANY\">-</code><code class=\"ANY\"> </code><code class=\"LITERAL\">1</code><code class=\"ANY\">]</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\"> </code><code class=\"LITERAL\">null</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">warnIfIdIsMissing</code><code class=\"ANY\">(</code><code class=\"ANY\">incomingView</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">View</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">check</code><code class=\"ANY\">(</code><code class=\"ANY\">incomingView</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\"> </code><code class=\"ANY\">!=</code><code class=\"ANY\"> </code><code class=\"ANY\">View</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">NO_ID</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\">${</code><code class=\"ANY\">incomingView</code><code class=\"ANY\">::</code><code class=\"KEYWORD\">class</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">simpleName</code><code class=\"ANY\">}</code><code class=\"CHAR_STRING_LITERAL\"> needs an ID for persisting View state.</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">dispatchFocusChangeCallback</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">children</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">hostView</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">children</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">map</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">formFactor</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">findDecoratedScreenView</code><code class=\"ANY\">(</code><code class=\"ANY\">it</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">toList</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">foregroundView</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">children</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">lastOrNull</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">focusedScreenKey</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">foregroundView</code><code class=\"ANY\">?</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">screenKey</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">ScreenKey</code><code class=\"ANY\">></code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">children</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">forEach</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">it</code><code class=\"ANY\"> </code><code class=\"ANY\">!==</code><code class=\"ANY\"> </code><code class=\"ANY\">foregroundView</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">clearFocus</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">it</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">is</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">ScreenFocusChangeListener</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">onScreenFocusChanged</code><code class=\"ANY\">(</code><code class=\"ANY\">focusedScreen</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">focusedScreenKey</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">onInterceptBackPress</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">BackPressInterceptor</code><code class=\"ANY\">.</code><code class=\"TYPE_IDENTIFIER\">InterceptResult</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">foreground</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">hostView</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">children</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">map</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">formFactor</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">findDecoratedScreenView</code><code class=\"ANY\">(</code><code class=\"ANY\">it</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">lastOrNull</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">interceptor</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">foreground</code><code class=\"ANY\"> </code><code class=\"ANY\">as?</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">BackPressInterceptor</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"ANY\">interceptor</code><code class=\"ANY\">?</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">onInterceptBackPress</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">?</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"ANY\">Ignored</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">class</code><code class=\"ANY\"> </code><code class=\"CLASS_DECLARATOR\">BasicTransition</code><code class=\"ANY\"> </code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">ScreenTransition</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">override</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">transition</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">fromView</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">View</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">fromKey</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">ScreenKey</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">toView</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">View</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">toKey</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">ScreenKey</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">newBackground</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">View</code><code class=\"TYPE_IDENTIFIER\">?</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">goingForward</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Boolean</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">onComplete</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Unit</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">TransitionResult</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">goingForward</code><code class=\"ANY\"> </code><code class=\"ANY\">&&</code><code class=\"ANY\"> </code><code class=\"ANY\">toView</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">is</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">StandaloneExpandablePageLayout</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">toView</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">doOnLayout</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">toLocation</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">toView</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">locationOnScreen</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">toView</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">expandFrom</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">Rect</code><code class=\"ANY\">(</code><code class=\"ANY\">toLocation</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">left</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">fromView</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">dp</code><code class=\"ANY\">(</code><code class=\"LITERAL\">56</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">toLocation</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">right</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">fromView</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">dp</code><code class=\"ANY\">(</code><code class=\"LITERAL\">56</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">toView</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">doOnExpand</code><code class=\"ANY\">(</code><code class=\"ANY\">onComplete</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">!</code><code class=\"ANY\">goingForward</code><code class=\"ANY\"> </code><code class=\"ANY\">&&</code><code class=\"ANY\"> </code><code class=\"ANY\">fromView</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">is</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">StandaloneExpandablePageLayout</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">fromLocation</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">fromView</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">locationOnScreen</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">fromView</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">collapseTo</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">Rect</code><code class=\"ANY\">(</code><code class=\"ANY\">fromLocation</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">left</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">fromView</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">dp</code><code class=\"ANY\">(</code><code class=\"LITERAL\">56</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">fromLocation</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">right</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">fromView</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">dp</code><code class=\"ANY\">(</code><code class=\"LITERAL\">56</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">fromView</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">doOnCollapse</code><code class=\"ANY\">(</code><code class=\"ANY\">onComplete</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">onComplete</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"ANY\">Handled</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code>\n</pre>\n</html>"},{"_id":{"language":"KOTLIN","lexingTokens},"sourceCode":"package me.saket.press.shared.editor\n\nimport app.cash.exhaustive.Exhaustive\nimport com.badoo.reaktive.completable.Completable\nimport com.badoo.reaktive.completable.andThen\nimport com.badoo.reaktive.completable.completableFromFunction\nimport com.badoo.reaktive.completable.completableOfEmpty\nimport com.badoo.reaktive.observable.Observable\nimport com.badoo.reaktive.observable.ObservableWrapper\nimport com.badoo.reaktive.observable.combineLatest\nimport com.badoo.reaktive.observable.distinctUntilChanged\nimport com.badoo.reaktive.observable.filter\nimport com.badoo.reaktive.observable.flatMap\nimport com.badoo.reaktive.observable.flatMapCompletable\nimport com.badoo.reaktive.observable.map\nimport com.badoo.reaktive.observable.merge\nimport com.badoo.reaktive.observable.observableOfEmpty\nimport com.badoo.reaktive.observable.observeOn\nimport com.badoo.reaktive.observable.ofType\nimport com.badoo.reaktive.observable.publish\nimport com.badoo.reaktive.observable.take\nimport com.badoo.reaktive.observable.takeUntil\nimport com.badoo.reaktive.observable.withLatestFrom\nimport com.badoo.reaktive.observable.wrap\nimport me.saket.press.PressDatabase\nimport me.saket.press.data.shared.Note\nimport me.saket.press.shared.db.NoteId\nimport me.saket.press.shared.editor.EditorEvent.ArchiveToggleClicked\nimport me.saket.press.shared.editor.EditorEvent.CloseSubMenu\nimport me.saket.press.shared.editor.EditorEvent.CopyAsClicked\nimport me.saket.press.shared.editor.EditorEvent.DeleteNoteClicked\nimport me.saket.press.shared.editor.EditorEvent.DuplicateNoteClicked\nimport me.saket.press.shared.editor.EditorEvent.NoteTextChanged\nimport me.saket.press.shared.editor.EditorEvent.ShareAsClicked\nimport me.saket.press.shared.editor.EditorEvent.SplitScreenClicked\nimport me.saket.press.shared.editor.EditorOpenMode.ExistingNote\nimport me.saket.press.shared.editor.EditorOpenMode.NewNote\nimport me.saket.press.shared.editor.EditorEffect.BlockedDueToSyncConflict\nimport me.saket.press.shared.editor.EditorEffect.ShowToast\nimport me.saket.press.shared.editor.EditorEffect.PopulateNoteBody\nimport me.saket.press.shared.editor.TextFormat.Html\nimport me.saket.press.shared.editor.TextFormat.Markdown\nimport me.saket.press.shared.editor.TextFormat.RichText\nimport me.saket.press.shared.editor.ToolbarIconKind.Archive\nimport me.saket.press.shared.editor.ToolbarIconKind.CopyAs\nimport me.saket.press.shared.editor.ToolbarIconKind.DeleteNote\nimport me.saket.press.shared.editor.ToolbarIconKind.DuplicateNote\nimport me.saket.press.shared.editor.ToolbarIconKind.OpenInSplitScreen\nimport me.saket.press.shared.editor.ToolbarIconKind.ShareAs\nimport me.saket.press.shared.editor.ToolbarIconKind.Unarchive\nimport me.saket.press.shared.home.HomePresenter\nimport me.saket.press.shared.localization.Strings\nimport me.saket.press.shared.rx.Schedulers\nimport me.saket.press.shared.rx.asObservable\nimport me.saket.press.shared.rx.combineLatestWith\nimport me.saket.press.shared.rx.consumeOnNext\nimport me.saket.press.shared.rx.filterNotNull\nimport me.saket.press.shared.rx.filterNull\nimport me.saket.press.shared.rx.mapToOneOrNull\nimport me.saket.press.shared.rx.observableInterval\nimport me.saket.press.shared.rx.withLatestFrom\nimport me.saket.press.shared.syncer.SyncMergeConflicts\nimport me.saket.press.shared.syncer.Syncer\nimport me.saket.press.shared.syncer.Syncer.Status.Enabled\nimport me.saket.press.shared.syncer.git.DeviceInfo\nimport me.saket.press.shared.syncer.git.FolderPaths\nimport me.saket.press.shared.time.Clock\nimport me.saket.press.shared.ui.Clipboard\nimport me.saket.press.shared.ui.Navigator\nimport me.saket.press.shared.ui.Presenter\nimport me.saket.wysiwyg.formatting.TextSelection\nimport me.saket.wysiwyg.parser.MarkdownParser\n\nclass EditorPresenter(\n  val args: Args,\n  private val clock: Clock,\n  private val database: PressDatabase,\n  private val syncer: Syncer,\n  private val schedulers: Schedulers,\n  private val strings: Strings,\n  private val config: EditorConfig,\n  private val syncConflicts: SyncMergeConflicts,\n  private val markdownParser: MarkdownParser,\n  private val clipboard: Clipboard,\n  private val deviceInfo: DeviceInfo\n) : Presenter<EditorEvent, EditorModel>() {\n\n  private val openMode = args.openMode\n  private val noteQueries get() = database.noteQueries\n  private val folderPaths = FolderPaths(database)\n  private val intentLauncher get() = args.navigator.intentLauncher()\n\n  override fun defaultUiModel() =\n    EditorModel(\n      hintText = null,\n      toolbarMenu = emptyList()\n    )\n\n  override fun models(): ObservableWrapper<EditorModel> {\n    return viewEvents().publish { events ->\n      createOrFetchNote().publish { noteStream ->\n        val models = combineLatest(\n          events.toggleHintText(),\n          buildToolbarMenu(noteStream),\n          ::EditorModel\n        )\n\n        merge(\n          models.distinctUntilChanged(),\n          events.autoSaveContent(noteStream),\n          handleArchiveClicks(events, noteStream),\n          handleShareClicks(events),\n          handleDuplicateNoteClicks(events, noteStream),\n          handleDeleteNoteClicks(events, noteStream),\n          handleSplitScreenClicks(events, noteStream),\n          handleCopyClicks(events),\n          populateExistingNoteOnStart(noteStream),\n          blockEditingOnSyncConflict(noteStream)\n        )\n      }\n    }.wrap()\n  }\n\n  private fun createOrFetchNote(): Observable<Note> {\n    val newOrExistingId = when (val it = openMode.noteId) {\n      is PlaceholderNoteId -> it.id\n      is ExistingNoteId -> it.id\n    }\n\n    val createIfNeeded = if (openMode is NewNote) {\n      // This function can get called multiple times if it's re-subscribed.\n      // Create a new note only if one doesn't exist already.\n      noteQueries.note(newOrExistingId) // todo: use a single insert statement that ignores if the note already exists.\n        .asObservable(schedulers.io)\n        .mapToOneOrNull()\n        .take(1)\n        .filterNull()\n        .flatMapCompletable {\n          completableFromFunction {\n            noteQueries.insert(\n              id = newOrExistingId,\n              folderId = null,\n              content = openMode.preFilledNote.ifBlankOrNull { NEW_NOTE_PLACEHOLDER },\n              createdAt = clock.nowUtc(),\n              updatedAt = clock.nowUtc()\n            )\n          }\n        }\n    } else {\n      completableOfEmpty()\n    }\n\n    return createIfNeeded.andThen(\n      noteQueries.note(newOrExistingId)\n        .asObservable(schedulers.io)\n        .mapToOneOrNull()\n        .filterNotNull()\n    )\n  }\n\n  private fun populateExistingNoteOnStart(noteStream: Observable<Note>): Observable<EditorModel> {\n    return noteStream\n      .take(1)\n      .consumeOnNext {\n        val isNewNote = it.content == NEW_NOTE_PLACEHOLDER\n        args.onEffect(\n          PopulateNoteBody(\n            newText = it.content,\n            newSelection = if (isNewNote) TextSelection.cursor(it.content.length) else null\n          )\n        )\n      }\n  }\n\n  private fun blockEditingOnSyncConflict(noteStream: Observable<Note>): Observable<EditorModel> {\n    return noteConflicts(noteStream).consumeOnNext {\n      args.onEffect(BlockedDueToSyncConflict)\n    }\n  }\n\n  private fun noteConflicts(noteStream: Observable<Note>): Observable<Unit> {\n    return noteStream\n      .take(1)\n      .flatMap { syncConflicts.isConflicted(it.id) }\n      .filter { it }\n      .map { Unit }\n  }\n\n  private fun Observable<EditorEvent>.toggleHintText(): Observable<String?> {\n    val randomHint = strings.editor.new_note_hints.shuffled().first()\n\n    return ofType<NoteTextChanged>()\n      .distinctUntilChanged()\n      .map { (text) ->\n        when {\n          text.trimEnd() == NEW_NOTE_PLACEHOLDER.trim() -> \"# $randomHint\"\n          else -> null\n        }\n      }\n  }\n\n  private fun buildToolbarMenu(noteStream: Observable<Note>): Observable<List<ToolbarMenuItem>> {\n    val isNoteArchived = noteStream.map { it.folderId }\n      .distinctUntilChanged()\n      .map(folderPaths::isArchived)\n      .combineLatestWith(syncer.status())\n      .distinctUntilChanged()\n\n    return isNoteArchived.map { (isArchived, syncStatus) ->\n      listOfNotNull(\n        if (isArchived) {\n          ToolbarMenuAction(\n            label = strings.editor.menu_unarchive,\n            icon = Unarchive,\n            clickEvent = ArchiveToggleClicked(archive = false)\n          )\n        } else {\n          ToolbarMenuAction(\n            label = strings.editor.menu_archive,\n            icon = Archive,\n            clickEvent = ArchiveToggleClicked(archive = true)\n          )\n        },\n        ToolbarSubMenu(\n          label = strings.editor.menu_share_as,\n          icon = ShareAs,\n          children = listOf(\n            ToolbarMenuAction(\n              label = strings.editor.menu_share_as_markdown,\n              clickEvent = ShareAsClicked(format = Markdown)\n            ),\n            ToolbarMenuAction(\n              label = strings.editor.menu_share_as_html,\n              clickEvent = ShareAsClicked(format = Html)\n            ),\n            ToolbarMenuAction(\n              label = strings.editor.menu_share_as_richtext,\n              clickEvent = ShareAsClicked(format = RichText)\n            )\n          )\n        ),\n        ToolbarSubMenu(\n          label = strings.editor.menu_copy_as,\n          icon = CopyAs,\n          children = listOf(\n            ToolbarMenuAction(\n              label = strings.editor.menu_copy_as_markdown,\n              clickEvent = CopyAsClicked(format = Markdown)\n            ),\n            ToolbarMenuAction(\n              label = strings.editor.menu_copy_as_html,\n              clickEvent = CopyAsClicked(format = Html)\n            ),\n            ToolbarMenuAction(\n              label = strings.editor.menu_copy_as_richtext,\n              clickEvent = CopyAsClicked(format = RichText)\n            )\n          )\n        ),\n        if (syncStatus is Enabled) {\n          ToolbarSubMenu(\n            label = strings.editor.menu_delete_note,\n            subMenuTitle = strings.editor.menu_delete_note_confirmation_title,\n            icon = DeleteNote,\n            children = listOf(\n              ToolbarMenuAction(\n                label = strings.editor.menu_delete_note_confirm,\n                isDangerousAction = true,\n                clickEvent = DeleteNoteClicked,\n              ),\n              ToolbarMenuAction(\n                label = strings.editor.menu_delete_note_cancel,\n                clickEvent = CloseSubMenu,\n              )\n            )\n          )\n        } else null,\n        ToolbarMenuAction(\n          label = strings.editor.menu_duplicate_note,\n          icon = DuplicateNote,\n          clickEvent = DuplicateNoteClicked\n        ),\n        if (deviceInfo.supportsSplitScreen()) {\n          ToolbarMenuAction(\n            label = strings.editor.menu_open_in_split_screen,\n            icon = OpenInSplitScreen,\n            clickEvent = SplitScreenClicked\n          )\n        } else null,\n      )\n    }\n  }\n\n  private fun handleArchiveClicks(\n    events: Observable<EditorEvent>,\n    noteStream: Observable<Note>\n  ): Observable<EditorModel> {\n    return events.ofType<ArchiveToggleClicked>()\n      .withLatestFrom(noteStream, ::Pair)\n      .observeOn(schedulers.io)\n      .consumeOnNext { (event, note) ->\n        folderPaths.setArchived(note.id, archive = event.archive)\n\n        if (event.archive) {\n          args.onEffect(ShowToast(strings.editor.note_archived))\n        } else {\n          args.onEffect(ShowToast(strings.editor.note_unarchived))\n        }\n\n        if (event.archive) {\n          args.navigator.goBack()\n        }\n      }\n  }\n\n  private fun handleCopyClicks(\n    events: Observable<EditorEvent>\n  ): Observable<EditorModel> {\n    val copyClicks = events.ofType<CopyAsClicked>().map { it.format }\n    val noteChanges = events.ofType<NoteTextChanged>().map { it.text }\n\n    return copyClicks.withLatestFrom(noteChanges)\n      .observeOn(schedulers.io)\n      .consumeOnNext { (format, noteContent) ->\n        @Exhaustive\n        when (format) {\n          Html, RichText -> clipboard.copyRichText(markdownParser.renderHtml(noteContent))\n          Markdown -> clipboard.copyPlainText(noteContent)\n        }\n        args.onEffect(ShowToast(strings.editor.note_copied))\n      }\n  }\n\n  private fun handleShareClicks(\n    events: Observable<EditorEvent>\n  ): Observable<EditorModel> {\n    val shareClicks = events.ofType<ShareAsClicked>().map { it.format }\n    val noteChanges = events.ofType<NoteTextChanged>().map { it.text }\n\n    return shareClicks.withLatestFrom(noteChanges)\n      .observeOn(schedulers.io)\n      .consumeOnNext { (format, noteContent) ->\n        @Exhaustive\n        when (format) {\n          Html, RichText -> intentLauncher.shareRichText(markdownParser.renderHtml(noteContent))\n          Markdown -> intentLauncher.sharePlainText(noteContent)\n        }\n      }\n  }\n\n  private fun handleSplitScreenClicks(\n    events: Observable<EditorEvent>,\n    noteStream: Observable<Note>\n  ): Observable<EditorModel> {\n    return events.ofType<SplitScreenClicked>()\n      .withLatestFrom(noteStream)\n      .consumeOnNext { (_, note) ->\n        args.navigator.splitScreenAndLfg(\n          EditorScreenKey(ExistingNote(ExistingNoteId(note.id)))\n        )\n      }\n  }\n\n  private fun handleDuplicateNoteClicks(\n    events: Observable<EditorEvent>,\n    noteStream: Observable<Note>\n  ): Observable<EditorModel> {\n    // It is important to use the text on the UI instead of the\n    // one in the DB because it may have not been saved yet.\n    val noteContent = events.ofType<NoteTextChanged>().map { it.text }\n\n    return events.ofType<DuplicateNoteClicked>()\n      .withLatestFrom(noteStream, noteContent)\n      .observeOn(schedulers.io)\n      .consumeOnNext { (_, note, content) ->\n        val newNoteId = NoteId.generate()\n        noteQueries.insert(\n          id = newNoteId,\n          folderId = note.folderId,\n          content = content,\n          createdAt = clock.nowUtc(),\n          updatedAt = clock.nowUtc()\n        )\n        args.navigator.goBack()\n        args.navigator.lfg(\n          EditorScreenKey(NewNote(ExistingNoteId(newNoteId)))\n        )\n      }\n  }\n\n  private fun handleDeleteNoteClicks(\n    events: Observable<EditorEvent>,\n    noteStream: Observable<Note>\n  ): Observable<EditorModel> {\n\n    return events.ofType<DeleteNoteClicked>()\n      .withLatestFrom(noteStream)\n      .observeOn(schedulers.io)\n      .consumeOnNext { (_, note) ->\n        noteQueries.markAsPendingDeletion(note.id)  // Will get deleted on next sync.\n        args.navigator.goBack()\n      }\n  }\n\n  private fun Observable<EditorEvent>.autoSaveContent(noteStream: Observable<Note>): Observable<EditorModel> {\n    val textChanges = ofType<NoteTextChanged>().map { it.text }\n\n    return noteStream\n      .take(1)\n      .flatMapCompletable { note ->\n        observableInterval(config.autoSaveEvery, schedulers.computation)\n          .withLatestFrom(textChanges) { _, text -> text }\n          .distinctUntilChanged()\n          .takeUntil(noteConflicts(noteStream))\n          .flatMapCompletable { text ->\n            completableFromFunction {\n              noteQueries.updateContent(\n                id = note.id,\n                content = text,\n                updatedAt = clock.nowUtc()\n              )\n            }\n          }\n      }\n      .andThen(observableOfEmpty())\n  }\n\n  internal fun saveEditorContentOnClose(content: String): Completable {\n    val shouldDelete = openMode is NewNote\n      && args.deleteBlankNewNoteOnExit\n      && content.trim().let { it.isBlank() || it == NEW_NOTE_PLACEHOLDER.trim() }\n\n    val noteId = when (val it = openMode.noteId) {\n      is PlaceholderNoteId -> it.id\n      is ExistingNoteId -> it.id\n    }\n\n    return noteQueries.note(noteId)\n      .asObservable(schedulers.io)\n      .mapToOneOrNull()\n      .filterNotNull()\n      .combineLatestWith(syncConflicts.isConflicted(noteId))\n      .filter { (_, isConflicted) -> !isConflicted }\n      .take(1)\n      .flatMapCompletable { (note) ->\n        completableFromFunction {\n          if (shouldDelete) {\n            noteQueries.markAsPendingDeletion(note.id)\n          }\n          noteQueries.updateContent(\n            id = note.id,\n            content = content,\n            updatedAt = clock.nowUtc()\n          )\n        }\n      }\n  }\n\n  fun interface Factory {\n    fun create(args: Args): EditorPresenter\n  }\n\n  data class Args(\n    val openMode: EditorOpenMode,\n    /** Should be kept in sync with [HomePresenter.Args.includeBlankNotes]. */\n    val deleteBlankNewNoteOnExit: Boolean,\n    val navigator: Navigator,\n    val onEffect: (EditorEffect) -> Unit\n  )\n\n  companion object {\n    const val NEW_NOTE_PLACEHOLDER = \"# \"\n    val NEW_NOTE_PLACEHOLDER_TRIMMED = NEW_NOTE_PLACEHOLDER.trim()\n  }\n}\n\nprivate fun String?.ifBlankOrNull(default: () -> String): String {\n  return this?.ifBlank(default) ?: default()\n}\n","highlightingTokens":[1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,5,0,0,0,0,1,0,0,0,0,8,0,0,0,0,1,0,1,0,0,0,0,8,0,0,0,0,1,0,1,0,0,0,0,8,0,0,0,0,1,0,1,0,0,0,0,8,0,0,0,0,1,0,1,0,0,0,0,8,0,0,0,0,1,0,1,0,0,0,0,8,0,0,0,0,1,0,1,0,0,0,0,8,0,0,0,0,1,0,1,0,0,0,0,8,0,0,0,0,1,0,1,0,0,0,0,8,0,0,0,0,1,0,1,0,0,0,0,8,0,0,0,0,1,0,1,0,0,0,0,8,0,0,0,0,0,8,0,8,0,0,8,0,0,0,0,0,0,0,0,0,1,0,1,0,7,0,0,0,0,0,10,0,0,0,1,0,1,0,7,0,1,0,0,0,0,0,0,0,10,0,0,0,1,0,1,0,7,0,0,0,9,0,0,0,0,0,0,1,0,1,0,7,0,1,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,1,0,1,0,6,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,6,0,0,0,0,8,0,8,0,0,0,0,0,0,0,0,1,0,9,0,0,0,9,0,6,0,7,0,0,0,0,0,0,0,0,0,9,0,0,0,9,0,6,0,7,0,0,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,6,0,9,0,0,0,0,0,0,0,0,0,0,1,0,1,0,6,0,0,0,0,8,0,8,0,0,0,0,0,0,0,0,1,0,7,0,0,0,1,0,0,1,0,7,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,1,0,8,0,0,0,0,0,10,0,0,0,0,0,0,0,1,0,8,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,1,0,0,0,0,1,0,8,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,9,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,9,0,2,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,9,0,6,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,6,0,0,0,0,8,0,8,0,0,0,0,8,0,8,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,9,0,2,0,0,0,0,0,0,0,0,0,9,0,6,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,9,0,0,0,10,0,10,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,1,0,1,0,6,0,0,0,0,8,0,8,0,0,0,0,8,0,8,0,0,0,0,0,0,0,0,1,0,9,0,0,0,0,9,0,6,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,1,0,1,0,6,0,0,0,0,8,0,8,0,0,0,0,8,0,8,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,9,0,2,0,0,0,0,0,0,0,0,0,9,0,6,0,0,0,9,0,0,0,10,0,0,6,0,0,0,0,0,0,0,0,9,0,6,0,0,0,6,0,0,0,0,0,0,0,0,9,0,6,0,0,0,6,0,0,0,0,0,0,0,0,1,0,1,0,8,0,8,0,0,6,0,0,0,0,8,0,8,8,0,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,10,0,10,0,9,0,0,0,9,0,0,0,0,0,0,0,0,1,0,9,0,8,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,9,0,6,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,9,0,0,0,0,0,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,1,0,1,0,6,0,0,0,0,8,0,8,0,0,0,0,8,0,8,0,8,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,6,0,0,0,10,0,6,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,1,0,0,0,9,0,6,0,0,7,0,0,7,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,1,0,1,0,6,0,0,0,0,0,0,0,0,0,8,0,8,0,0,0,0,0,0,0,0,0,0,8,0,8,0,0,0,0,0,0,0,8,0,8,0,0,0,0,0,0,0,0,1,0,0,0,9,0,8,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,0,9,0,6,0,0,7,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,9,0,0,0,10,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,9,0,0,0,10,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,1,0,1,0,6,0,0,0,0,0,0,0,0,0,8,0,8,0,0,0,0,0,0,0,8,0,8,0,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,8,0,0,0,0,9,0,6,0,0,0,10,0,6,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,8,0,0,0,0,9,0,6,0,0,0,10,0,6,0,0,0,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,0,9,0,6,0,0,7,0,0,7,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,9,0,0,0,10,0,10,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,1,0,1,0,6,0,0,0,0,0,0,0,0,0,8,0,8,0,0,0,0,0,0,0,8,0,8,0,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,8,0,0,0,0,9,0,6,0,0,0,10,0,6,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,8,0,0,0,0,9,0,6,0,0,0,10,0,6,0,0,0,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,0,9,0,6,0,0,7,0,0,7,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,1,0,1,0,6,0,0,0,0,0,0,0,0,0,8,0,8,0,0,0,0,0,0,0,0,0,0,8,0,8,0,0,0,0,0,0,0,8,0,8,0,0,0,0,0,0,0,0,1,0,0,0,9,0,8,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,0,7,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,0,0,0,0,9,0,9,0,9,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,1,0,1,0,6,0,0,0,0,0,0,0,0,0,8,0,8,0,0,0,0,0,0,0,0,0,0,8,0,8,0,0,0,0,0,0,0,8,0,8,0,0,0,0,0,0,0,0,4,0,0,0,0,0,4,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,8,0,0,0,0,9,0,6,0,0,0,10,0,6,0,0,0,0,0,0,1,0,0,0,9,0,8,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,0,9,0,6,0,0,7,0,0,7,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,0,0,0,0,9,0,9,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,1,0,1,0,6,0,0,0,0,0,0,0,0,0,8,0,8,0,0,0,0,0,0,0,0,0,0,8,0,8,0,0,0,0,0,0,0,8,0,8,0,0,0,0,0,0,0,0,0,1,0,0,0,9,0,8,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,0,9,0,6,0,0,7,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,1,0,1,0,8,0,8,0,0,6,0,0,0,0,8,0,8,0,0,0,0,8,0,8,0,0,0,0,0,0,0,0,1,0,7,0,0,0,9,0,8,0,0,0,0,9,0,6,0,0,0,10,0,6,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,9,0,2,0,0,0,0,0,0,0,0,0,9,0,6,0,7,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,6,0,7,0,0,7,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,9,0,9,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,6,0,0,0,0,8,0,0,0,8,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,1,0,8,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,9,0,6,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,6,0,0,0,0,0,0,1,0,7,0,0,0,1,0,0,1,0,7,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,1,0,8,0,0,0,0,0,10,0,0,0,0,0,0,0,1,0,8,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,0,7,0,0,7,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,9,0,2,0,0,0,0,0,0,0,0,0,9,0,6,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,9,0,6,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,1,0,1,0,6,0,0,0,0,0,0,0,1,0,6,0,0,0,0,8,0,0,0,8,0,0,0,0,0,0,0,0,1,0,1,0,5,0,0,0,0,0,0,1,0,0,0,0,8,0,0,0,0,0,0,4,0,0,0,0,0,1,0,0,0,0,8,0,0,0,0,0,0,1,0,0,0,0,8,0,0,0,0,0,0,1,0,0,0,0,0,8,0,0,0,0,8,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,1,0,7,0,0,0,3,3,3,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,1,0,1,0,8,8,0,6,0,0,0,0,0,0,0,0,0,8,0,0,0,8,0,0,0,0,0,1,0,1,0,0,9,0,0,0,0,0,0,0,9,0,0,0,0,0,0],"highlightingCode":"<!DOCTYPE html>\n<html>\n<style>\n.ANY {\n    color: black;\n    font-weight: normal;\n    font-style: normal;\n}\n.KEYWORD {\n    color: blue;\n    font-weight: bold;\n    font-style: normal;\n}\n.LITERAL {\n    color: lightskyblue;\n    font-weight: bold;\n    font-style: normal;\n}\n.CHAR_STRING_LITERAL {\n    color: darkgoldenrod;\n    font-weight: normal;\n    font-style: normal;\n}\n.COMMENT {\n    color: grey;\n    font-weight: normal;\n    font-style: italic;\n}\n.CLASS_DECLARATOR {\n    color: crimson;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_DECLARATOR {\n    color: fuchsia;\n    font-weight: bold;\n    font-style: normal;\n}\n.VARIABLE_DECLARATOR {\n    color: purple;\n    font-weight: bold;\n    font-style: normal;\n}\n.TYPE_IDENTIFIER {\n    color: darkgreen;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_IDENTIFIER {\n    color: dodgerblue;\n    font-weight: normal;\n    font-style: normal;\n}\n.FIELD_IDENTIFIER {\n    color: coral;\n    font-weight: normal;\n    font-style: normal;\n}\n.ANNOTATION_DECLARATOR {\n    color: lightslategray;\n    font-weight: lighter;\n    font-style: italic;\n}\n</style>\n<pre>\n<code class=\"KEYWORD\">package</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">editor</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">app</code><code class=\"ANY\">.</code><code class=\"ANY\">cash</code><code class=\"ANY\">.</code><code class=\"ANY\">exhaustive</code><code class=\"ANY\">.</code><code class=\"ANY\">Exhaustive</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">completable</code><code class=\"ANY\">.</code><code class=\"ANY\">Completable</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">completable</code><code class=\"ANY\">.</code><code class=\"ANY\">andThen</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">completable</code><code class=\"ANY\">.</code><code class=\"ANY\">completableFromFunction</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">completable</code><code class=\"ANY\">.</code><code class=\"ANY\">completableOfEmpty</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">Observable</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">ObservableWrapper</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">combineLatest</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">distinctUntilChanged</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">filter</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">flatMap</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">flatMapCompletable</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">map</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">merge</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">observableOfEmpty</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">observeOn</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">ofType</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">publish</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">take</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">takeUntil</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">withLatestFrom</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">com</code><code class=\"ANY\">.</code><code class=\"ANY\">badoo</code><code class=\"ANY\">.</code><code class=\"ANY\">reaktive</code><code class=\"ANY\">.</code><code class=\"ANY\">observable</code><code class=\"ANY\">.</code><code class=\"ANY\">wrap</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">PressDatabase</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">data</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">Note</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">db</code><code class=\"ANY\">.</code><code class=\"ANY\">NoteId</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">editor</code><code class=\"ANY\">.</code><code class=\"ANY\">EditorEvent</code><code class=\"ANY\">.</code><code class=\"ANY\">ArchiveToggleClicked</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">editor</code><code class=\"ANY\">.</code><code class=\"ANY\">EditorEvent</code><code class=\"ANY\">.</code><code class=\"ANY\">CloseSubMenu</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">editor</code><code class=\"ANY\">.</code><code class=\"ANY\">EditorEvent</code><code class=\"ANY\">.</code><code class=\"ANY\">CopyAsClicked</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">editor</code><code class=\"ANY\">.</code><code class=\"ANY\">EditorEvent</code><code class=\"ANY\">.</code><code class=\"ANY\">DeleteNoteClicked</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">editor</code><code class=\"ANY\">.</code><code class=\"ANY\">EditorEvent</code><code class=\"ANY\">.</code><code class=\"ANY\">DuplicateNoteClicked</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">editor</code><code class=\"ANY\">.</code><code class=\"ANY\">EditorEvent</code><code class=\"ANY\">.</code><code class=\"ANY\">NoteTextChanged</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">editor</code><code class=\"ANY\">.</code><code class=\"ANY\">EditorEvent</code><code class=\"ANY\">.</code><code class=\"ANY\">ShareAsClicked</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">editor</code><code class=\"ANY\">.</code><code class=\"ANY\">EditorEvent</code><code class=\"ANY\">.</code><code class=\"ANY\">SplitScreenClicked</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">editor</code><code class=\"ANY\">.</code><code class=\"ANY\">EditorOpenMode</code><code class=\"ANY\">.</code><code class=\"ANY\">ExistingNote</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">editor</code><code class=\"ANY\">.</code><code class=\"ANY\">EditorOpenMode</code><code class=\"ANY\">.</code><code class=\"ANY\">NewNote</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">editor</code><code class=\"ANY\">.</code><code class=\"ANY\">EditorEffect</code><code class=\"ANY\">.</code><code class=\"ANY\">BlockedDueToSyncConflict</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">editor</code><code class=\"ANY\">.</code><code class=\"ANY\">EditorEffect</code><code class=\"ANY\">.</code><code class=\"ANY\">ShowToast</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">editor</code><code class=\"ANY\">.</code><code class=\"ANY\">EditorEffect</code><code class=\"ANY\">.</code><code class=\"ANY\">PopulateNoteBody</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">editor</code><code class=\"ANY\">.</code><code class=\"ANY\">TextFormat</code><code class=\"ANY\">.</code><code class=\"ANY\">Html</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">editor</code><code class=\"ANY\">.</code><code class=\"ANY\">TextFormat</code><code class=\"ANY\">.</code><code class=\"ANY\">Markdown</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">editor</code><code class=\"ANY\">.</code><code class=\"ANY\">TextFormat</code><code class=\"ANY\">.</code><code class=\"ANY\">RichText</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">editor</code><code class=\"ANY\">.</code><code class=\"ANY\">ToolbarIconKind</code><code class=\"ANY\">.</code><code class=\"ANY\">Archive</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">editor</code><code class=\"ANY\">.</code><code class=\"ANY\">ToolbarIconKind</code><code class=\"ANY\">.</code><code class=\"ANY\">CopyAs</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">editor</code><code class=\"ANY\">.</code><code class=\"ANY\">ToolbarIconKind</code><code class=\"ANY\">.</code><code class=\"ANY\">DeleteNote</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">editor</code><code class=\"ANY\">.</code><code class=\"ANY\">ToolbarIconKind</code><code class=\"ANY\">.</code><code class=\"ANY\">DuplicateNote</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">editor</code><code class=\"ANY\">.</code><code class=\"ANY\">ToolbarIconKind</code><code class=\"ANY\">.</code><code class=\"ANY\">OpenInSplitScreen</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">editor</code><code class=\"ANY\">.</code><code class=\"ANY\">ToolbarIconKind</code><code class=\"ANY\">.</code><code class=\"ANY\">ShareAs</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">editor</code><code class=\"ANY\">.</code><code class=\"ANY\">ToolbarIconKind</code><code class=\"ANY\">.</code><code class=\"ANY\">Unarchive</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">home</code><code class=\"ANY\">.</code><code class=\"ANY\">HomePresenter</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">localization</code><code class=\"ANY\">.</code><code class=\"ANY\">Strings</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">rx</code><code class=\"ANY\">.</code><code class=\"ANY\">Schedulers</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">rx</code><code class=\"ANY\">.</code><code class=\"ANY\">asObservable</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">rx</code><code class=\"ANY\">.</code><code class=\"ANY\">combineLatestWith</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">rx</code><code class=\"ANY\">.</code><code class=\"ANY\">consumeOnNext</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">rx</code><code class=\"ANY\">.</code><code class=\"ANY\">filterNotNull</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">rx</code><code class=\"ANY\">.</code><code class=\"ANY\">filterNull</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">rx</code><code class=\"ANY\">.</code><code class=\"ANY\">mapToOneOrNull</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">rx</code><code class=\"ANY\">.</code><code class=\"ANY\">observableInterval</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">rx</code><code class=\"ANY\">.</code><code class=\"ANY\">withLatestFrom</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">syncer</code><code class=\"ANY\">.</code><code class=\"ANY\">SyncMergeConflicts</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">syncer</code><code class=\"ANY\">.</code><code class=\"ANY\">Syncer</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">syncer</code><code class=\"ANY\">.</code><code class=\"ANY\">Syncer</code><code class=\"ANY\">.</code><code class=\"ANY\">Status</code><code class=\"ANY\">.</code><code class=\"ANY\">Enabled</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">syncer</code><code class=\"ANY\">.</code><code class=\"ANY\">git</code><code class=\"ANY\">.</code><code class=\"ANY\">DeviceInfo</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">syncer</code><code class=\"ANY\">.</code><code class=\"ANY\">git</code><code class=\"ANY\">.</code><code class=\"ANY\">FolderPaths</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">time</code><code class=\"ANY\">.</code><code class=\"ANY\">Clock</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">ui</code><code class=\"ANY\">.</code><code class=\"ANY\">Clipboard</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">ui</code><code class=\"ANY\">.</code><code class=\"ANY\">Navigator</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">press</code><code class=\"ANY\">.</code><code class=\"ANY\">shared</code><code class=\"ANY\">.</code><code class=\"ANY\">ui</code><code class=\"ANY\">.</code><code class=\"ANY\">Presenter</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">wysiwyg</code><code class=\"ANY\">.</code><code class=\"ANY\">formatting</code><code class=\"ANY\">.</code><code class=\"ANY\">TextSelection</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code><code class=\"ANY\"> </code><code class=\"ANY\">me</code><code class=\"ANY\">.</code><code class=\"ANY\">saket</code><code class=\"ANY\">.</code><code class=\"ANY\">wysiwyg</code><code class=\"ANY\">.</code><code class=\"ANY\">parser</code><code class=\"ANY\">.</code><code class=\"ANY\">MarkdownParser</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code><code class=\"ANY\"> </code><code class=\"CLASS_DECLARATOR\">EditorPresenter</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"ANY\">args</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Args</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"ANY\">clock</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Clock</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"ANY\">database</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">PressDatabase</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"ANY\">syncer</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Syncer</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"ANY\">schedulers</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Schedulers</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"ANY\">strings</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Strings</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"ANY\">config</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">EditorConfig</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"ANY\">syncConflicts</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">SyncMergeConflicts</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"ANY\">markdownParser</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">MarkdownParser</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"ANY\">clipboard</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Clipboard</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"ANY\">deviceInfo</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">DeviceInfo</code><code class=\"ANY\">\n</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Presenter</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">EditorEvent</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">EditorModel</code><code class=\"ANY\">></code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">openMode</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">args</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">openMode</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">noteQueries</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">get</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">database</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">noteQueries</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">folderPaths</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">FolderPaths</code><code class=\"ANY\">(</code><code class=\"ANY\">database</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">intentLauncher</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">get</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">args</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">navigator</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">intentLauncher</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">override</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">defaultUiModel</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">EditorModel</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">hintText</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">null</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">toolbarMenu</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">emptyList</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">override</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">models</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">ObservableWrapper</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">EditorModel</code><code class=\"ANY\">></code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">viewEvents</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">publish</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">events</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">createOrFetchNote</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">publish</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">noteStream</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">models</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">combineLatest</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">events</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">toggleHintText</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">buildToolbarMenu</code><code class=\"ANY\">(</code><code class=\"ANY\">noteStream</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">::</code><code class=\"ANY\">EditorModel</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">merge</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">models</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">distinctUntilChanged</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">events</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">autoSaveContent</code><code class=\"ANY\">(</code><code class=\"ANY\">noteStream</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">handleArchiveClicks</code><code class=\"ANY\">(</code><code class=\"ANY\">events</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">noteStream</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">handleShareClicks</code><code class=\"ANY\">(</code><code class=\"ANY\">events</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">handleDuplicateNoteClicks</code><code class=\"ANY\">(</code><code class=\"ANY\">events</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">noteStream</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">handleDeleteNoteClicks</code><code class=\"ANY\">(</code><code class=\"ANY\">events</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">noteStream</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">handleSplitScreenClicks</code><code class=\"ANY\">(</code><code class=\"ANY\">events</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">noteStream</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">handleCopyClicks</code><code class=\"ANY\">(</code><code class=\"ANY\">events</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">populateExistingNoteOnStart</code><code class=\"ANY\">(</code><code class=\"ANY\">noteStream</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">blockEditingOnSyncConflict</code><code class=\"ANY\">(</code><code class=\"ANY\">noteStream</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">wrap</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">createOrFetchNote</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Note</code><code class=\"ANY\">></code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">newOrExistingId</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">when</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">it</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">openMode</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">noteId</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">is</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">PlaceholderNoteId</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">is</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">ExistingNoteId</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">createIfNeeded</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">openMode</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">is</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">NewNote</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"COMMENT\">// This function can get called multiple times if it's re-subscribed.</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"COMMENT\">// Create a new note only if one doesn't exist already.</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">noteQueries</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">note</code><code class=\"ANY\">(</code><code class=\"ANY\">newOrExistingId</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"COMMENT\">// todo: use a single insert statement that ignores if the note already exists.</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">asObservable</code><code class=\"ANY\">(</code><code class=\"ANY\">schedulers</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">io</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">mapToOneOrNull</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">take</code><code class=\"ANY\">(</code><code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">filterNull</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">flatMapCompletable</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">completableFromFunction</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">noteQueries</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">insert</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">id</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">newOrExistingId</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">folderId</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">null</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">content</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">openMode</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">preFilledNote</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">ifBlankOrNull</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">NEW_NOTE_PLACEHOLDER</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">createdAt</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">clock</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">nowUtc</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">updatedAt</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">clock</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">nowUtc</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">completableOfEmpty</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"ANY\">createIfNeeded</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">andThen</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">noteQueries</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">note</code><code class=\"ANY\">(</code><code class=\"ANY\">newOrExistingId</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">asObservable</code><code class=\"ANY\">(</code><code class=\"ANY\">schedulers</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">io</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">mapToOneOrNull</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">filterNotNull</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">populateExistingNoteOnStart</code><code class=\"ANY\">(</code><code class=\"ANY\">noteStream</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Note</code><code class=\"ANY\">></code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">EditorModel</code><code class=\"ANY\">></code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"ANY\">noteStream</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">take</code><code class=\"ANY\">(</code><code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">consumeOnNext</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">isNewNote</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">content</code><code class=\"ANY\"> </code><code class=\"ANY\">==</code><code class=\"ANY\"> </code><code class=\"ANY\">NEW_NOTE_PLACEHOLDER</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">args</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">onEffect</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">PopulateNoteBody</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">newText</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">content</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">newSelection</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">isNewNote</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">TextSelection</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">cursor</code><code class=\"ANY\">(</code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">content</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">length</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\"> </code><code class=\"LITERAL\">null</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">blockEditingOnSyncConflict</code><code class=\"ANY\">(</code><code class=\"ANY\">noteStream</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Note</code><code class=\"ANY\">></code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">EditorModel</code><code class=\"ANY\">></code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">noteConflicts</code><code class=\"ANY\">(</code><code class=\"ANY\">noteStream</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">consumeOnNext</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">args</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">onEffect</code><code class=\"ANY\">(</code><code class=\"ANY\">BlockedDueToSyncConflict</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">noteConflicts</code><code class=\"ANY\">(</code><code class=\"ANY\">noteStream</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Note</code><code class=\"ANY\">></code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Unit</code><code class=\"ANY\">></code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"ANY\">noteStream</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">take</code><code class=\"ANY\">(</code><code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">flatMap</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">syncConflicts</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isConflicted</code><code class=\"ANY\">(</code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">filter</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">map</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">Unit</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">EditorEvent</code><code class=\"ANY\">></code><code class=\"ANY\">.</code><code class=\"FUNCTION_DECLARATOR\">toggleHintText</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">String</code><code class=\"TYPE_IDENTIFIER\">?</code><code class=\"ANY\">></code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">randomHint</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">strings</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">editor</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">new_note_hints</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">shuffled</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">first</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">ofType</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">NoteTextChanged</code><code class=\"ANY\">></code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">distinctUntilChanged</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">map</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"VARIABLE_DECLARATOR\">text</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">when</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">text</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">trimEnd</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">==</code><code class=\"ANY\"> </code><code class=\"ANY\">NEW_NOTE_PLACEHOLDER</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">trim</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\"># </code><code class=\"CHAR_STRING_LITERAL\">$randomHint</code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"LITERAL\">null</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">buildToolbarMenu</code><code class=\"ANY\">(</code><code class=\"ANY\">noteStream</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Note</code><code class=\"ANY\">></code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">List</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">ToolbarMenuItem</code><code class=\"ANY\">></code><code class=\"ANY\">></code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">isNoteArchived</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">noteStream</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">map</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">folderId</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">distinctUntilChanged</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">map</code><code class=\"ANY\">(</code><code class=\"ANY\">folderPaths</code><code class=\"ANY\">::</code><code class=\"FIELD_IDENTIFIER\">isArchived</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">combineLatestWith</code><code class=\"ANY\">(</code><code class=\"ANY\">syncer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">status</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">distinctUntilChanged</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"ANY\">isNoteArchived</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">map</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"VARIABLE_DECLARATOR\">isArchived</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">syncStatus</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">listOfNotNull</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">isArchived</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">ToolbarMenuAction</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">label</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">strings</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">editor</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">menu_unarchive</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">icon</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">Unarchive</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">clickEvent</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">ArchiveToggleClicked</code><code class=\"ANY\">(</code><code class=\"ANY\">archive</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">false</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">ToolbarMenuAction</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">label</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">strings</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">editor</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">menu_archive</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">icon</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">Archive</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">clickEvent</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">ArchiveToggleClicked</code><code class=\"ANY\">(</code><code class=\"ANY\">archive</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">true</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">ToolbarSubMenu</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">label</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">strings</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">editor</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">menu_share_as</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">icon</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">ShareAs</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">children</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">listOf</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">ToolbarMenuAction</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">label</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">strings</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">editor</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">menu_share_as_markdown</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">clickEvent</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">ShareAsClicked</code><code class=\"ANY\">(</code><code class=\"ANY\">format</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">Markdown</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">ToolbarMenuAction</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">label</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">strings</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">editor</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">menu_share_as_html</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">clickEvent</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">ShareAsClicked</code><code class=\"ANY\">(</code><code class=\"ANY\">format</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">Html</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">ToolbarMenuAction</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">label</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">strings</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">editor</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">menu_share_as_richtext</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">clickEvent</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">ShareAsClicked</code><code class=\"ANY\">(</code><code class=\"ANY\">format</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">RichText</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">ToolbarSubMenu</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">label</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">strings</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">editor</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">menu_copy_as</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">icon</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">CopyAs</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">children</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">listOf</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">ToolbarMenuAction</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">label</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">strings</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">editor</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">menu_copy_as_markdown</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">clickEvent</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">CopyAsClicked</code><code class=\"ANY\">(</code><code class=\"ANY\">format</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">Markdown</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">ToolbarMenuAction</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">label</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">strings</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">editor</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">menu_copy_as_html</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">clickEvent</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">CopyAsClicked</code><code class=\"ANY\">(</code><code class=\"ANY\">format</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">Html</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">ToolbarMenuAction</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">label</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">strings</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">editor</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">menu_copy_as_richtext</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">clickEvent</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">CopyAsClicked</code><code class=\"ANY\">(</code><code class=\"ANY\">format</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">RichText</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">syncStatus</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">is</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Enabled</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">ToolbarSubMenu</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">label</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">strings</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">editor</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">menu_delete_note</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">subMenuTitle</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">strings</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">editor</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">menu_delete_note_confirmation_title</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">icon</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">DeleteNote</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">children</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">listOf</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">ToolbarMenuAction</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">label</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">strings</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">editor</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">menu_delete_note_confirm</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">isDangerousAction</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"LITERAL\">true</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">clickEvent</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">DeleteNoteClicked</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">ToolbarMenuAction</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">label</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">strings</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">editor</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">menu_delete_note_cancel</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">clickEvent</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">CloseSubMenu</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\"> </code><code class=\"LITERAL\">null</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">ToolbarMenuAction</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">label</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">strings</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">editor</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">menu_duplicate_note</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">icon</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">DuplicateNote</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">clickEvent</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">DuplicateNoteClicked</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">deviceInfo</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">supportsSplitScreen</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">ToolbarMenuAction</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">label</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">strings</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">editor</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">menu_open_in_split_screen</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">icon</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">OpenInSplitScreen</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">clickEvent</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">SplitScreenClicked</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\"> </code><code class=\"LITERAL\">null</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">handleArchiveClicks</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">events</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">EditorEvent</code><code class=\"ANY\">></code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">noteStream</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Note</code><code class=\"ANY\">></code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">EditorModel</code><code class=\"ANY\">></code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"ANY\">events</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">ofType</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">ArchiveToggleClicked</code><code class=\"ANY\">></code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">withLatestFrom</code><code class=\"ANY\">(</code><code class=\"ANY\">noteStream</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">::</code><code class=\"ANY\">Pair</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">observeOn</code><code class=\"ANY\">(</code><code class=\"ANY\">schedulers</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">io</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">consumeOnNext</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"VARIABLE_DECLARATOR\">event</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">note</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">folderPaths</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">setArchived</code><code class=\"ANY\">(</code><code class=\"ANY\">note</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">archive</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">event</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">archive</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">event</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">archive</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">args</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">onEffect</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">ShowToast</code><code class=\"ANY\">(</code><code class=\"ANY\">strings</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">editor</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">note_archived</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">args</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">onEffect</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">ShowToast</code><code class=\"ANY\">(</code><code class=\"ANY\">strings</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">editor</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">note_unarchived</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">event</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">archive</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">args</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">navigator</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">goBack</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">handleCopyClicks</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">events</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">EditorEvent</code><code class=\"ANY\">></code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">EditorModel</code><code class=\"ANY\">></code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">copyClicks</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">events</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">ofType</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">CopyAsClicked</code><code class=\"ANY\">></code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">map</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">format</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">noteChanges</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">events</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">ofType</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">NoteTextChanged</code><code class=\"ANY\">></code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">map</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">text</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"ANY\">copyClicks</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">withLatestFrom</code><code class=\"ANY\">(</code><code class=\"ANY\">noteChanges</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">observeOn</code><code class=\"ANY\">(</code><code class=\"ANY\">schedulers</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">io</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">consumeOnNext</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"VARIABLE_DECLARATOR\">format</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">noteContent</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANNOTATION_DECLARATOR\"> @</code><code class=\"ANNOTATION_DECLARATOR\">Exhaustive</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">when</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">format</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">Html</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">RichText</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"ANY\">clipboard</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">copyRichText</code><code class=\"ANY\">(</code><code class=\"ANY\">markdownParser</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">renderHtml</code><code class=\"ANY\">(</code><code class=\"ANY\">noteContent</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">Markdown</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"ANY\">clipboard</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">copyPlainText</code><code class=\"ANY\">(</code><code class=\"ANY\">noteContent</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">args</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">onEffect</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">ShowToast</code><code class=\"ANY\">(</code><code class=\"ANY\">strings</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">editor</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">note_copied</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">handleShareClicks</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">events</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">EditorEvent</code><code class=\"ANY\">></code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">EditorModel</code><code class=\"ANY\">></code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">shareClicks</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">events</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">ofType</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">ShareAsClicked</code><code class=\"ANY\">></code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">map</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">format</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">noteChanges</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">events</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">ofType</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">NoteTextChanged</code><code class=\"ANY\">></code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">map</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">text</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"ANY\">shareClicks</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">withLatestFrom</code><code class=\"ANY\">(</code><code class=\"ANY\">noteChanges</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">observeOn</code><code class=\"ANY\">(</code><code class=\"ANY\">schedulers</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">io</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">consumeOnNext</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"VARIABLE_DECLARATOR\">format</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">noteContent</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANNOTATION_DECLARATOR\"> @</code><code class=\"ANNOTATION_DECLARATOR\">Exhaustive</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">when</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">format</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">Html</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">RichText</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"ANY\">intentLauncher</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">shareRichText</code><code class=\"ANY\">(</code><code class=\"ANY\">markdownParser</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">renderHtml</code><code class=\"ANY\">(</code><code class=\"ANY\">noteContent</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">Markdown</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"ANY\">intentLauncher</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">sharePlainText</code><code class=\"ANY\">(</code><code class=\"ANY\">noteContent</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">handleSplitScreenClicks</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">events</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">EditorEvent</code><code class=\"ANY\">></code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">noteStream</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Note</code><code class=\"ANY\">></code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">EditorModel</code><code class=\"ANY\">></code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"ANY\">events</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">ofType</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">SplitScreenClicked</code><code class=\"ANY\">></code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">withLatestFrom</code><code class=\"ANY\">(</code><code class=\"ANY\">noteStream</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">consumeOnNext</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"VARIABLE_DECLARATOR\">_</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">note</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">args</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">navigator</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">splitScreenAndLfg</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">EditorScreenKey</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">ExistingNote</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">ExistingNoteId</code><code class=\"ANY\">(</code><code class=\"ANY\">note</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">handleDuplicateNoteClicks</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">events</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">EditorEvent</code><code class=\"ANY\">></code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">noteStream</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Note</code><code class=\"ANY\">></code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">EditorModel</code><code class=\"ANY\">></code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"COMMENT\">// It is important to use the text on the UI instead of the</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"COMMENT\">// one in the DB because it may have not been saved yet.</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">noteContent</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">events</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">ofType</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">NoteTextChanged</code><code class=\"ANY\">></code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">map</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">text</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"ANY\">events</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">ofType</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">DuplicateNoteClicked</code><code class=\"ANY\">></code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">withLatestFrom</code><code class=\"ANY\">(</code><code class=\"ANY\">noteStream</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">noteContent</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">observeOn</code><code class=\"ANY\">(</code><code class=\"ANY\">schedulers</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">io</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">consumeOnNext</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"VARIABLE_DECLARATOR\">_</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">note</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">content</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">newNoteId</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">NoteId</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">generate</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">noteQueries</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">insert</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">id</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">newNoteId</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">folderId</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">note</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">folderId</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">content</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">content</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">createdAt</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">clock</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">nowUtc</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">updatedAt</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">clock</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">nowUtc</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">args</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">navigator</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">goBack</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">args</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">navigator</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">lfg</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">EditorScreenKey</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">NewNote</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">ExistingNoteId</code><code class=\"ANY\">(</code><code class=\"ANY\">newNoteId</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">handleDeleteNoteClicks</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">events</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">EditorEvent</code><code class=\"ANY\">></code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">noteStream</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Note</code><code class=\"ANY\">></code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">EditorModel</code><code class=\"ANY\">></code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"ANY\">events</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">ofType</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">DeleteNoteClicked</code><code class=\"ANY\">></code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">withLatestFrom</code><code class=\"ANY\">(</code><code class=\"ANY\">noteStream</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">observeOn</code><code class=\"ANY\">(</code><code class=\"ANY\">schedulers</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">io</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">consumeOnNext</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"VARIABLE_DECLARATOR\">_</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">note</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">noteQueries</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">markAsPendingDeletion</code><code class=\"ANY\">(</code><code class=\"ANY\">note</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"COMMENT\">// Will get deleted on next sync.</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">args</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">navigator</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">goBack</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">EditorEvent</code><code class=\"ANY\">></code><code class=\"ANY\">.</code><code class=\"FUNCTION_DECLARATOR\">autoSaveContent</code><code class=\"ANY\">(</code><code class=\"ANY\">noteStream</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">Note</code><code class=\"ANY\">></code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Observable</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">EditorModel</code><code class=\"ANY\">></code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">textChanges</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">ofType</code><code class=\"ANY\"><</code><code class=\"TYPE_IDENTIFIER\">NoteTextChanged</code><code class=\"ANY\">></code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">map</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">text</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"ANY\">noteStream</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">take</code><code class=\"ANY\">(</code><code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">flatMapCompletable</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">note</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">observableInterval</code><code class=\"ANY\">(</code><code class=\"ANY\">config</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">autoSaveEvery</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"ANY\">schedulers</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">computation</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">withLatestFrom</code><code class=\"ANY\">(</code><code class=\"ANY\">textChanges</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">_</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">text</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"ANY\">text</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">distinctUntilChanged</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">takeUntil</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">noteConflicts</code><code class=\"ANY\">(</code><code class=\"ANY\">noteStream</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">flatMapCompletable</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">text</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">completableFromFunction</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">noteQueries</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">updateContent</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">id</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">note</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">content</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">text</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">updatedAt</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">clock</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">nowUtc</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">andThen</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">observableOfEmpty</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">internal</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">saveEditorContentOnClose</code><code class=\"ANY\">(</code><code class=\"ANY\">content</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">String</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Completable</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">shouldDelete</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">openMode</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">is</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">NewNote</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">&&</code><code class=\"ANY\"> </code><code class=\"ANY\">args</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">deleteBlankNewNoteOnExit</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">&&</code><code class=\"ANY\"> </code><code class=\"ANY\">content</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">trim</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">let</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isBlank</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">||</code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\"> </code><code class=\"ANY\">==</code><code class=\"ANY\"> </code><code class=\"ANY\">NEW_NOTE_PLACEHOLDER</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">trim</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">noteId</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">when</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">it</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">openMode</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">noteId</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">is</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">PlaceholderNoteId</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">is</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">ExistingNoteId</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"ANY\">it</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"ANY\">noteQueries</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">note</code><code class=\"ANY\">(</code><code class=\"ANY\">noteId</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">asObservable</code><code class=\"ANY\">(</code><code class=\"ANY\">schedulers</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">io</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">mapToOneOrNull</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">filterNotNull</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">combineLatestWith</code><code class=\"ANY\">(</code><code class=\"ANY\">syncConflicts</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">isConflicted</code><code class=\"ANY\">(</code><code class=\"ANY\">noteId</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">filter</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"VARIABLE_DECLARATOR\">_</code><code class=\"ANY\">,</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">isConflicted</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"ANY\">!</code><code class=\"ANY\">isConflicted</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">take</code><code class=\"ANY\">(</code><code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">flatMapCompletable</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"VARIABLE_DECLARATOR\">note</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">completableFromFunction</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">shouldDelete</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">noteQueries</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">markAsPendingDeletion</code><code class=\"ANY\">(</code><code class=\"ANY\">note</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">noteQueries</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">updateContent</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">id</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">note</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">id</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">content</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">content</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">updatedAt</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">clock</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">nowUtc</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">interface</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">Factory</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"FUNCTION_DECLARATOR\">create</code><code class=\"ANY\">(</code><code class=\"ANY\">args</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Args</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">EditorPresenter</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">data</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">class</code><code class=\"ANY\"> </code><code class=\"CLASS_DECLARATOR\">Args</code><code class=\"ANY\">(</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"ANY\">openMode</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">EditorOpenMode</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"COMMENT\">/** Should be kept in sync with [HomePresenter.Args.includeBlankNotes]. */</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"ANY\">deleteBlankNewNoteOnExit</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Boolean</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"ANY\">navigator</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Navigator</code><code class=\"ANY\">,</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"ANY\">onEffect</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"TYPE_IDENTIFIER\">EditorEffect</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">Unit</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">companion</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">object</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">const</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">NEW_NOTE_PLACEHOLDER</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"CHAR_STRING_LITERAL\"># </code><code class=\"CHAR_STRING_LITERAL\">\"</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">val</code><code class=\"ANY\"> </code><code class=\"VARIABLE_DECLARATOR\">NEW_NOTE_PLACEHOLDER_TRIMMED</code><code class=\"ANY\"> </code><code class=\"ANY\">=</code><code class=\"ANY\"> </code><code class=\"ANY\">NEW_NOTE_PLACEHOLDER</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">trim</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">private</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">fun</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">String</code><code class=\"TYPE_IDENTIFIER\">?</code><code class=\"ANY\">.</code><code class=\"FUNCTION_DECLARATOR\">ifBlankOrNull</code><code class=\"ANY\">(</code><code class=\"ANY\">default</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">-></code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">String</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"TYPE_IDENTIFIER\">String</code><code class=\"ANY\"> </code><code class=\"ANY\">{</code><code class=\"ANY\">\n</code><code class=\"ANY\"> </code><code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code><code class=\"ANY\"> </code><code class=\"KEYWORD\">this</code><code class=\"ANY\">?</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">ifBlank</code><code class=\"ANY\">(</code><code class=\"ANY\">default</code><code class=\"ANY\">)</code><code class=\"ANY\"> </code><code class=\"ANY\">?</code><code class=\"ANY\">:</code><code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">default</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">}</code><code class=\"ANY\">\n</code>\n</pre>\n</html>"},{"_id":{"language":"PYTHON3","lexingTokens":[3,99,41,10,42,41,99,41,33,42,54,42,51,42,55,57,1,41,6,42,54,42,56,42,56,42,60,3,55,57,1,41,7,42,51,42,54,42,56,42,56,42,55,2,6,42,54,42,56,42,56,42,60,3,55,57,1,41,7,42,51,42,54,42,56,42,56,42,55,2,33,42,54,42,51,42,55,57,1,41,6,42,54,42,56,42,56,42,60,32,55,57,1,41,7,42,51,42,54,42,56,42,51,42,56,42,55,61,4,62,2,33,42,54,42,51,42,55,57,1,41,6,42,54,42,56,42,56,42,60,32,55,57,1,41,7,42,51,42,54,42,56,42,51,42,56,42,55,61,4,62,2,33,42,54,42,56,42,51,42,55,57,1,41,36,2,33,42,54,42,56,42,51,42,55,57,1,41,36,2,99,41,6,42,54,55,57,1,41,7,42,51,42,54,42,60,3,56,42,60,42,54,55,51,42,56,42,60,42,54,55,51,42,56,42,60,42,56,42,60,42,56,42,60,42,56,42,60,42,56,55,2,99,41,42,60,54,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,3,99,55,41,99,41,42,60,42,51,42,54,42,55,41,-1]},"sourceCode":"\"\"\" Python Character Mapping Codec cp1255 generated from 'MAPPINGS/VENDORS/MICSFT/WINDOWS/CP1255.TXT' with gencodec.py.\n\n\"\"\"#\"\n\nimport codecs\n\n### Codec APIs\n\nclass Codec(codecs.Codec):\n\n    def encode(self,input,errors='strict'):\n        return codecs.charmap_encode(input,errors,encoding_table)\n\n    def decode(self,input,errors='strict'):\n        return codecs.charmap_decode(input,errors,decoding_table)\n\nclass IncrementalEncoder(codecs.IncrementalEncoder):\n    def encode(self, input, final=False):\n        return codecs.charmap_encode(input,self.errors,encoding_table)[0]\n\nclass IncrementalDecoder(codecs.IncrementalDecoder):\n    def decode(self, input, final=False):\n        return codecs.charmap_decode(input,self.errors,decoding_table)[0]\n\nclass StreamWriter(Codec,codecs.StreamWriter):\n    pass\n\nclass StreamReader(Codec,codecs.StreamReader):\n    pass\n\n### encodings module API\n\ndef getregentry():\n    return codecs.CodecInfo(\n        name='cp1255',\n        encode=Codec().encode,\n        decode=Codec().decode,\n        incrementalencoder=IncrementalEncoder,\n        incrementaldecoder=IncrementalDecoder,\n        streamreader=StreamReader,\n        streamwriter=StreamWriter,\n    )\n\n\n### Decoding Table\n\ndecoding_table = (\n    u'\\x00'     #  0x00 -> NULL\n    u'\\x01'     #  0x01 -> START OF HEADING\n    u'\\x02'     #  0x02 -> START OF TEXT\n    u'\\x03'     #  0x03 -> END OF TEXT\n    u'\\x04'     #  0x04 -> END OF TRANSMISSION\n    u'\\x05'     #  0x05 -> ENQUIRY\n    u'\\x06'     #  0x06 -> ACKNOWLEDGE\n    u'\\x07'     #  0x07 -> BELL\n    u'\\x08'     #  0x08 -> BACKSPACE\n    u'\\t'       #  0x09 -> HORIZONTAL TABULATION\n    u'\\n'       #  0x0A -> LINE FEED\n    u'\\x0b'     #  0x0B -> VERTICAL TABULATION\n    u'\\x0c'     #  0x0C -> FORM FEED\n    u'\\r'       #  0x0D -> CARRIAGE RETURN\n    u'\\x0e'     #  0x0E -> SHIFT OUT\n    u'\\x0f'     #  0x0F -> SHIFT IN\n    u'\\x10'     #  0x10 -> DATA LINK ESCAPE\n    u'\\x11'     #  0x11 -> DEVICE CONTROL ONE\n    u'\\x12'     #  0x12 -> DEVICE CONTROL TWO\n    u'\\x13'     #  0x13 -> DEVICE CONTROL THREE\n    u'\\x14'     #  0x14 -> DEVICE CONTROL FOUR\n    u'\\x15'     #  0x15 -> NEGATIVE ACKNOWLEDGE\n    u'\\x16'     #  0x16 -> SYNCHRONOUS IDLE\n    u'\\x17'     #  0x17 -> END OF TRANSMISSION BLOCK\n    u'\\x18'     #  0x18 -> CANCEL\n    u'\\x19'     #  0x19 -> END OF MEDIUM\n    u'\\x1a'     #  0x1A -> SUBSTITUTE\n    u'\\x1b'     #  0x1B -> ESCAPE\n    u'\\x1c'     #  0x1C -> FILE SEPARATOR\n    u'\\x1d'     #  0x1D -> GROUP SEPARATOR\n    u'\\x1e'     #  0x1E -> RECORD SEPARATOR\n    u'\\x1f'     #  0x1F -> UNIT SEPARATOR\n    u' '        #  0x20 -> SPACE\n    u'!'        #  0x21 -> EXCLAMATION MARK\n    u'\"'        #  0x22 -> QUOTATION MARK\n    u'#'        #  0x23 -> NUMBER SIGN\n    u'$'        #  0x24 -> DOLLAR SIGN\n    u'%'        #  0x25 -> PERCENT SIGN\n    u'&'        #  0x26 -> AMPERSAND\n    u\"'\"        #  0x27 -> APOSTROPHE\n    u'('        #  0x28 -> LEFT PARENTHESIS\n    u')'        #  0x29 -> RIGHT PARENTHESIS\n    u'*'        #  0x2A -> ASTERISK\n    u'+'        #  0x2B -> PLUS SIGN\n    u','        #  0x2C -> COMMA\n    u'-'        #  0x2D -> HYPHEN-MINUS\n    u'.'        #  0x2E -> FULL STOP\n    u'/'        #  0x2F -> SOLIDUS\n    u'0'        #  0x30 -> DIGIT ZERO\n    u'1'        #  0x31 -> DIGIT ONE\n    u'2'        #  0x32 -> DIGIT TWO\n    u'3'        #  0x33 -> DIGIT THREE\n    u'4'        #  0x34 -> DIGIT FOUR\n    u'5'        #  0x35 -> DIGIT FIVE\n    u'6'        #  0x36 -> DIGIT SIX\n    u'7'        #  0x37 -> DIGIT SEVEN\n    u'8'        #  0x38 -> DIGIT EIGHT\n    u'9'        #  0x39 -> DIGIT NINE\n    u':'        #  0x3A -> COLON\n    u';'        #  0x3B -> SEMICOLON\n    u'<'        #  0x3C -> LESS-THAN SIGN\n    u'='        #  0x3D -> EQUALS SIGN\n    u'>'        #  0x3E -> GREATER-THAN SIGN\n    u'?'        #  0x3F -> QUESTION MARK\n    u'@'        #  0x40 -> COMMERCIAL AT\n    u'A'        #  0x41 -> LATIN CAPITAL LETTER A\n    u'B'        #  0x42 -> LATIN CAPITAL LETTER B\n    u'C'        #  0x43 -> LATIN CAPITAL LETTER C\n    u'D'        #  0x44 -> LATIN CAPITAL LETTER D\n    u'E'        #  0x45 -> LATIN CAPITAL LETTER E\n    u'F'        #  0x46 -> LATIN CAPITAL LETTER F\n    u'G'        #  0x47 -> LATIN CAPITAL LETTER G\n    u'H'        #  0x48 -> LATIN CAPITAL LETTER H\n    u'I'        #  0x49 -> LATIN CAPITAL LETTER I\n    u'J'        #  0x4A -> LATIN CAPITAL LETTER J\n    u'K'        #  0x4B -> LATIN CAPITAL LETTER K\n    u'L'        #  0x4C -> LATIN CAPITAL LETTER L\n    u'M'        #  0x4D -> LATIN CAPITAL LETTER M\n    u'N'        #  0x4E -> LATIN CAPITAL LETTER N\n    u'O'        #  0x4F -> LATIN CAPITAL LETTER O\n    u'P'        #  0x50 -> LATIN CAPITAL LETTER P\n    u'Q'        #  0x51 -> LATIN CAPITAL LETTER Q\n    u'R'        #  0x52 -> LATIN CAPITAL LETTER R\n    u'S'        #  0x53 -> LATIN CAPITAL LETTER S\n    u'T'        #  0x54 -> LATIN CAPITAL LETTER T\n    u'U'        #  0x55 -> LATIN CAPITAL LETTER U\n    u'V'        #  0x56 -> LATIN CAPITAL LETTER V\n    u'W'        #  0x57 -> LATIN CAPITAL LETTER W\n    u'X'        #  0x58 -> LATIN CAPITAL LETTER X\n    u'Y'        #  0x59 -> LATIN CAPITAL LETTER Y\n    u'Z'        #  0x5A -> LATIN CAPITAL LETTER Z\n    u'['        #  0x5B -> LEFT SQUARE BRACKET\n    u'\\\\'       #  0x5C -> REVERSE SOLIDUS\n    u']'        #  0x5D -> RIGHT SQUARE BRACKET\n    u'^'        #  0x5E -> CIRCUMFLEX ACCENT\n    u'_'        #  0x5F -> LOW LINE\n    u'`'        #  0x60 -> GRAVE ACCENT\n    u'a'        #  0x61 -> LATIN SMALL LETTER A\n    u'b'        #  0x62 -> LATIN SMALL LETTER B\n    u'c'        #  0x63 -> LATIN SMALL LETTER C\n    u'd'        #  0x64 -> LATIN SMALL LETTER D\n    u'e'        #  0x65 -> LATIN SMALL LETTER E\n    u'f'        #  0x66 -> LATIN SMALL LETTER F\n    u'g'        #  0x67 -> LATIN SMALL LETTER G\n    u'h'        #  0x68 -> LATIN SMALL LETTER H\n    u'i'        #  0x69 -> LATIN SMALL LETTER I\n    u'j'        #  0x6A -> LATIN SMALL LETTER J\n    u'k'        #  0x6B -> LATIN SMALL LETTER K\n    u'l'        #  0x6C -> LATIN SMALL LETTER L\n    u'm'        #  0x6D -> LATIN SMALL LETTER M\n    u'n'        #  0x6E -> LATIN SMALL LETTER N\n    u'o'        #  0x6F -> LATIN SMALL LETTER O\n    u'p'        #  0x70 -> LATIN SMALL LETTER P\n    u'q'        #  0x71 -> LATIN SMALL LETTER Q\n    u'r'        #  0x72 -> LATIN SMALL LETTER R\n    u's'        #  0x73 -> LATIN SMALL LETTER S\n    u't'        #  0x74 -> LATIN SMALL LETTER T\n    u'u'        #  0x75 -> LATIN SMALL LETTER U\n    u'v'        #  0x76 -> LATIN SMALL LETTER V\n    u'w'        #  0x77 -> LATIN SMALL LETTER W\n    u'x'        #  0x78 -> LATIN SMALL LETTER X\n    u'y'        #  0x79 -> LATIN SMALL LETTER Y\n    u'z'        #  0x7A -> LATIN SMALL LETTER Z\n    u'{'        #  0x7B -> LEFT CURLY BRACKET\n    u'|'        #  0x7C -> VERTICAL LINE\n    u'}'        #  0x7D -> RIGHT CURLY BRACKET\n    u'~'        #  0x7E -> TILDE\n    u'\\x7f'     #  0x7F -> DELETE\n    u'\\u20ac'   #  0x80 -> EURO SIGN\n    u'\\ufffe'   #  0x81 -> UNDEFINED\n    u'\\u201a'   #  0x82 -> SINGLE LOW-9 QUOTATION MARK\n    u'\\u0192'   #  0x83 -> LATIN SMALL LETTER F WITH HOOK\n    u'\\u201e'   #  0x84 -> DOUBLE LOW-9 QUOTATION MARK\n    u'\\u2026'   #  0x85 -> HORIZONTAL ELLIPSIS\n    u'\\u2020'   #  0x86 -> DAGGER\n    u'\\u2021'   #  0x87 -> DOUBLE DAGGER\n    u'\\u02c6'   #  0x88 -> MODIFIER LETTER CIRCUMFLEX ACCENT\n    u'\\u2030'   #  0x89 -> PER MILLE SIGN\n    u'\\ufffe'   #  0x8A -> UNDEFINED\n    u'\\u2039'   #  0x8B -> SINGLE LEFT-POINTING ANGLE QUOTATION MARK\n    u'\\ufffe'   #  0x8C -> UNDEFINED\n    u'\\ufffe'   #  0x8D -> UNDEFINED\n    u'\\ufffe'   #  0x8E -> UNDEFINED\n    u'\\ufffe'   #  0x8F -> UNDEFINED\n    u'\\ufffe'   #  0x90 -> UNDEFINED\n    u'\\u2018'   #  0x91 -> LEFT SINGLE QUOTATION MARK\n    u'\\u2019'   #  0x92 -> RIGHT SINGLE QUOTATION MARK\n    u'\\u201c'   #  0x93 -> LEFT DOUBLE QUOTATION MARK\n    u'\\u201d'   #  0x94 -> RIGHT DOUBLE QUOTATION MARK\n    u'\\u2022'   #  0x95 -> BULLET\n    u'\\u2013'   #  0x96 -> EN DASH\n    u'\\u2014'   #  0x97 -> EM DASH\n    u'\\u02dc'   #  0x98 -> SMALL TILDE\n    u'\\u2122'   #  0x99 -> TRADE MARK SIGN\n    u'\\ufffe'   #  0x9A -> UNDEFINED\n    u'\\u203a'   #  0x9B -> SINGLE RIGHT-POINTING ANGLE QUOTATION MARK\n    u'\\ufffe'   #  0x9C -> UNDEFINED\n    u'\\ufffe'   #  0x9D -> UNDEFINED\n    u'\\ufffe'   #  0x9E -> UNDEFINED\n    u'\\ufffe'   #  0x9F -> UNDEFINED\n    u'\\xa0'     #  0xA0 -> NO-BREAK SPACE\n    u'\\xa1'     #  0xA1 -> INVERTED EXCLAMATION MARK\n    u'\\xa2'     #  0xA2 -> CENT SIGN\n    u'\\xa3'     #  0xA3 -> POUND SIGN\n    u'\\u20aa'   #  0xA4 -> NEW SHEQEL SIGN\n    u'\\xa5'     #  0xA5 -> YEN SIGN\n    u'\\xa6'     #  0xA6 -> BROKEN BAR\n    u'\\xa7'     #  0xA7 -> SECTION SIGN\n    u'\\xa8'     #  0xA8 -> DIAERESIS\n    u'\\xa9'     #  0xA9 -> COPYRIGHT SIGN\n    u'\\xd7'     #  0xAA -> MULTIPLICATION SIGN\n    u'\\xab'     #  0xAB -> LEFT-POINTING DOUBLE ANGLE QUOTATION MARK\n    u'\\xac'     #  0xAC -> NOT SIGN\n    u'\\xad'     #  0xAD -> SOFT HYPHEN\n    u'\\xae'     #  0xAE -> REGISTERED SIGN\n    u'\\xaf'     #  0xAF -> MACRON\n    u'\\xb0'     #  0xB0 -> DEGREE SIGN\n    u'\\xb1'     #  0xB1 -> PLUS-MINUS SIGN\n    u'\\xb2'     #  0xB2 -> SUPERSCRIPT TWO\n    u'\\xb3'     #  0xB3 -> SUPERSCRIPT THREE\n    u'\\xb4'     #  0xB4 -> ACUTE ACCENT\n    u'\\xb5'     #  0xB5 -> MICRO SIGN\n    u'\\xb6'     #  0xB6 -> PILCROW SIGN\n    u'\\xb7'     #  0xB7 -> MIDDLE DOT\n    u'\\xb8'     #  0xB8 -> CEDILLA\n    u'\\xb9'     #  0xB9 -> SUPERSCRIPT ONE\n    u'\\xf7'     #  0xBA -> DIVISION SIGN\n    u'\\xbb'     #  0xBB -> RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK\n    u'\\xbc'     #  0xBC -> VULGAR FRACTION ONE QUARTER\n    u'\\xbd'     #  0xBD -> VULGAR FRACTION ONE HALF\n    u'\\xbe'     #  0xBE -> VULGAR FRACTION THREE QUARTERS\n    u'\\xbf'     #  0xBF -> INVERTED QUESTION MARK\n    u'\\u05b0'   #  0xC0 -> HEBREW POINT SHEVA\n    u'\\u05b1'   #  0xC1 -> HEBREW POINT HATAF SEGOL\n    u'\\u05b2'   #  0xC2 -> HEBREW POINT HATAF PATAH\n    u'\\u05b3'   #  0xC3 -> HEBREW POINT HATAF QAMATS\n    u'\\u05b4'   #  0xC4 -> HEBREW POINT HIRIQ\n    u'\\u05b5'   #  0xC5 -> HEBREW POINT TSERE\n    u'\\u05b6'   #  0xC6 -> HEBREW POINT SEGOL\n    u'\\u05b7'   #  0xC7 -> HEBREW POINT PATAH\n    u'\\u05b8'   #  0xC8 -> HEBREW POINT QAMATS\n    u'\\u05b9'   #  0xC9 -> HEBREW POINT HOLAM\n    u'\\ufffe'   #  0xCA -> UNDEFINED\n    u'\\u05bb'   #  0xCB -> HEBREW POINT QUBUTS\n    u'\\u05bc'   #  0xCC -> HEBREW POINT DAGESH OR MAPIQ\n    u'\\u05bd'   #  0xCD -> HEBREW POINT METEG\n    u'\\u05be'   #  0xCE -> HEBREW PUNCTUATION MAQAF\n    u'\\u05bf'   #  0xCF -> HEBREW POINT RAFE\n    u'\\u05c0'   #  0xD0 -> HEBREW PUNCTUATION PASEQ\n    u'\\u05c1'   #  0xD1 -> HEBREW POINT SHIN DOT\n    u'\\u05c2'   #  0xD2 -> HEBREW POINT SIN DOT\n    u'\\u05c3'   #  0xD3 -> HEBREW PUNCTUATION SOF PASUQ\n    u'\\u05f0'   #  0xD4 -> HEBREW LIGATURE YIDDISH DOUBLE VAV\n    u'\\u05f1'   #  0xD5 -> HEBREW LIGATURE YIDDISH VAV YOD\n    u'\\u05f2'   #  0xD6 -> HEBREW LIGATURE YIDDISH DOUBLE YOD\n    u'\\u05f3'   #  0xD7 -> HEBREW PUNCTUATION GERESH\n    u'\\u05f4'   #  0xD8 -> HEBREW PUNCTUATION GERSHAYIM\n    u'\\ufffe'   #  0xD9 -> UNDEFINED\n    u'\\ufffe'   #  0xDA -> UNDEFINED\n    u'\\ufffe'   #  0xDB -> UNDEFINED\n    u'\\ufffe'   #  0xDC -> UNDEFINED\n    u'\\ufffe'   #  0xDD -> UNDEFINED\n    u'\\ufffe'   #  0xDE -> UNDEFINED\n    u'\\ufffe'   #  0xDF -> UNDEFINED\n    u'\\u05d0'   #  0xE0 -> HEBREW LETTER ALEF\n    u'\\u05d1'   #  0xE1 -> HEBREW LETTER BET\n    u'\\u05d2'   #  0xE2 -> HEBREW LETTER GIMEL\n    u'\\u05d3'   #  0xE3 -> HEBREW LETTER DALET\n    u'\\u05d4'   #  0xE4 -> HEBREW LETTER HE\n    u'\\u05d5'   #  0xE5 -> HEBREW LETTER VAV\n    u'\\u05d6'   #  0xE6 -> HEBREW LETTER ZAYIN\n    u'\\u05d7'   #  0xE7 -> HEBREW LETTER HET\n    u'\\u05d8'   #  0xE8 -> HEBREW LETTER TET\n    u'\\u05d9'   #  0xE9 -> HEBREW LETTER YOD\n    u'\\u05da'   #  0xEA -> HEBREW LETTER FINAL KAF\n    u'\\u05db'   #  0xEB -> HEBREW LETTER KAF\n    u'\\u05dc'   #  0xEC -> HEBREW LETTER LAMED\n    u'\\u05dd'   #  0xED -> HEBREW LETTER FINAL MEM\n    u'\\u05de'   #  0xEE -> HEBREW LETTER MEM\n    u'\\u05df'   #  0xEF -> HEBREW LETTER FINAL NUN\n    u'\\u05e0'   #  0xF0 -> HEBREW LETTER NUN\n    u'\\u05e1'   #  0xF1 -> HEBREW LETTER SAMEKH\n    u'\\u05e2'   #  0xF2 -> HEBREW LETTER AYIN\n    u'\\u05e3'   #  0xF3 -> HEBREW LETTER FINAL PE\n    u'\\u05e4'   #  0xF4 -> HEBREW LETTER PE\n    u'\\u05e5'   #  0xF5 -> HEBREW LETTER FINAL TSADI\n    u'\\u05e6'   #  0xF6 -> HEBREW LETTER TSADI\n    u'\\u05e7'   #  0xF7 -> HEBREW LETTER QOF\n    u'\\u05e8'   #  0xF8 -> HEBREW LETTER RESH\n    u'\\u05e9'   #  0xF9 -> HEBREW LETTER SHIN\n    u'\\u05ea'   #  0xFA -> HEBREW LETTER TAV\n    u'\\ufffe'   #  0xFB -> UNDEFINED\n    u'\\ufffe'   #  0xFC -> UNDEFINED\n    u'\\u200e'   #  0xFD -> LEFT-TO-RIGHT MARK\n    u'\\u200f'   #  0xFE -> RIGHT-TO-LEFT MARK\n    u'\\ufffe'   #  0xFF -> UNDEFINED\n)\n\n### Encoding table\nencoding_table=codecs.charmap_build(decoding_table)\n","highlightingTokens":[3,4,0,1,0,0,4,0,1,5,0,0,0,10,0,0,0,0,1,6,0,0,0,0,0,0,0,3,0,0,0,0,1,0,0,9,0,0,0,0,0,0,0,0,1,6,0,0,0,0,0,0,0,3,0,0,0,0,1,0,0,9,0,0,0,0,0,0,0,0,1,5,0,0,0,10,0,0,0,0,1,6,0,0,0,0,0,0,0,2,0,0,0,0,1,0,0,9,0,0,0,0,0,10,0,0,0,0,2,0,0,1,5,0,0,0,10,0,0,0,0,1,6,0,0,0,0,0,0,0,2,0,0,0,0,1,0,0,9,0,0,0,0,0,10,0,0,0,0,2,0,0,1,5,0,0,0,0,0,10,0,0,0,0,1,0,1,5,0,0,0,0,0,10,0,0,0,0,1,0,4,0,1,6,0,0,0,0,0,1,0,0,9,0,0,0,3,0,0,0,9,0,0,0,10,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,0,0,4,0,0,0,0,0,9,0,0,0,0,0],"highlightingCode":"<!DOCTYPE html>\n<html>\n<style>\n.ANY {\n    color: black;\n    font-weight: normal;\n    font-style: normal;\n}\n.KEYWORD {\n    color: blue;\n    font-weight: bold;\n    font-style: normal;\n}\n.LITERAL {\n    color: lightskyblue;\n    font-weight: bold;\n    font-style: normal;\n}\n.CHAR_STRING_LITERAL {\n    color: darkgoldenrod;\n    font-weight: normal;\n    font-style: normal;\n}\n.COMMENT {\n    color: grey;\n    font-weight: normal;\n    font-style: italic;\n}\n.CLASS_DECLARATOR {\n    color: crimson;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_DECLARATOR {\n    color: fuchsia;\n    font-weight: bold;\n    font-style: normal;\n}\n.VARIABLE_DECLARATOR {\n    color: purple;\n    font-weight: bold;\n    font-style: normal;\n}\n.TYPE_IDENTIFIER {\n    color: darkgreen;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_IDENTIFIER {\n    color: dodgerblue;\n    font-weight: normal;\n    font-style: normal;\n}\n.FIELD_IDENTIFIER {\n    color: coral;\n    font-weight: normal;\n    font-style: normal;\n}\n.ANNOTATION_DECLARATOR {\n    color: lightslategray;\n    font-weight: lighter;\n    font-style: italic;\n}\n</style>\n<pre>\n<code class=\"CHAR_STRING_LITERAL\">\"\"\" Python Character Mapping Codec cp1255 generated from 'MAPPINGS/VENDORS/MICSFT/WINDOWS/CP1255.TXT' with gencodec.py.\n\n\"\"\"</code><code class=\"COMMENT\">#\"</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code> <code class=\"ANY\">codecs</code>\n<code class=\"ANY\">\n</code><code class=\"COMMENT\">### Codec APIs</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">Codec</code><code class=\"ANY\">(</code><code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">Codec</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n\n<code class=\"ANY\">    </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">encode</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code><code class=\"ANY\">input</code><code class=\"ANY\">,</code><code class=\"ANY\">errors</code><code class=\"ANY\">=</code><code class=\"CHAR_STRING_LITERAL\">'strict'</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">charmap_encode</code><code class=\"ANY\">(</code><code class=\"ANY\">input</code><code class=\"ANY\">,</code><code class=\"ANY\">errors</code><code class=\"ANY\">,</code><code class=\"ANY\">encoding_table</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">decode</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code><code class=\"ANY\">input</code><code class=\"ANY\">,</code><code class=\"ANY\">errors</code><code class=\"ANY\">=</code><code class=\"CHAR_STRING_LITERAL\">'strict'</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">charmap_decode</code><code class=\"ANY\">(</code><code class=\"ANY\">input</code><code class=\"ANY\">,</code><code class=\"ANY\">errors</code><code class=\"ANY\">,</code><code class=\"ANY\">decoding_table</code><code class=\"ANY\">)</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">IncrementalEncoder</code><code class=\"ANY\">(</code><code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">IncrementalEncoder</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">    </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">encode</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">input</code><code class=\"ANY\">,</code> <code class=\"ANY\">final</code><code class=\"ANY\">=</code><code class=\"LITERAL\">False</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">charmap_encode</code><code class=\"ANY\">(</code><code class=\"ANY\">input</code><code class=\"ANY\">,</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">errors</code><code class=\"ANY\">,</code><code class=\"ANY\">encoding_table</code><code class=\"ANY\">)</code><code class=\"ANY\">[</code><code class=\"LITERAL\">0</code><code class=\"ANY\">]</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">IncrementalDecoder</code><code class=\"ANY\">(</code><code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">IncrementalDecoder</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">    </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">decode</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">input</code><code class=\"ANY\">,</code> <code class=\"ANY\">final</code><code class=\"ANY\">=</code><code class=\"LITERAL\">False</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">charmap_decode</code><code class=\"ANY\">(</code><code class=\"ANY\">input</code><code class=\"ANY\">,</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">errors</code><code class=\"ANY\">,</code><code class=\"ANY\">decoding_table</code><code class=\"ANY\">)</code><code class=\"ANY\">[</code><code class=\"LITERAL\">0</code><code class=\"ANY\">]</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">StreamWriter</code><code class=\"ANY\">(</code><code class=\"ANY\">Codec</code><code class=\"ANY\">,</code><code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">StreamWriter</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">    </code><code class=\"KEYWORD\">pass</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">StreamReader</code><code class=\"ANY\">(</code><code class=\"ANY\">Codec</code><code class=\"ANY\">,</code><code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">StreamReader</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">    </code><code class=\"KEYWORD\">pass</code>\n<code class=\"ANY\">\n</code><code class=\"COMMENT\">### encodings module API</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">getregentry</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">    </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">CodecInfo</code><code class=\"ANY\">(</code>\n        <code class=\"ANY\">name</code><code class=\"ANY\">=</code><code class=\"CHAR_STRING_LITERAL\">'cp1255'</code><code class=\"ANY\">,</code>\n        <code class=\"ANY\">encode</code><code class=\"ANY\">=</code><code class=\"FUNCTION_IDENTIFIER\">Codec</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">encode</code><code class=\"ANY\">,</code>\n        <code class=\"ANY\">decode</code><code class=\"ANY\">=</code><code class=\"FUNCTION_IDENTIFIER\">Codec</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">decode</code><code class=\"ANY\">,</code>\n        <code class=\"ANY\">incrementalencoder</code><code class=\"ANY\">=</code><code class=\"ANY\">IncrementalEncoder</code><code class=\"ANY\">,</code>\n        <code class=\"ANY\">incrementaldecoder</code><code class=\"ANY\">=</code><code class=\"ANY\">IncrementalDecoder</code><code class=\"ANY\">,</code>\n        <code class=\"ANY\">streamreader</code><code class=\"ANY\">=</code><code class=\"ANY\">StreamReader</code><code class=\"ANY\">,</code>\n        <code class=\"ANY\">streamwriter</code><code class=\"ANY\">=</code><code class=\"ANY\">StreamWriter</code><code class=\"ANY\">,</code>\n    <code class=\"ANY\">)</code>\n\n<code class=\"ANY\">\n</code><code class=\"COMMENT\">### Decoding Table</code>\n<code class=\"ANY\">\n</code><code class=\"ANY\">decoding_table</code> <code class=\"ANY\">=</code> <code class=\"ANY\">(</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\x00'</code>     <code class=\"COMMENT\">#  0x00 -> NULL</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\x01'</code>     <code class=\"COMMENT\">#  0x01 -> START OF HEADING</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\x02'</code>     <code class=\"COMMENT\">#  0x02 -> START OF TEXT</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\x03'</code>     <code class=\"COMMENT\">#  0x03 -> END OF TEXT</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\x04'</code>     <code class=\"COMMENT\">#  0x04 -> END OF TRANSMISSION</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\x05'</code>     <code class=\"COMMENT\">#  0x05 -> ENQUIRY</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\x06'</code>     <code class=\"COMMENT\">#  0x06 -> ACKNOWLEDGE</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\x07'</code>     <code class=\"COMMENT\">#  0x07 -> BELL</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\x08'</code>     <code class=\"COMMENT\">#  0x08 -> BACKSPACE</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\t'</code>       <code class=\"COMMENT\">#  0x09 -> HORIZONTAL TABULATION</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\n'</code>       <code class=\"COMMENT\">#  0x0A -> LINE FEED</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\x0b'</code>     <code class=\"COMMENT\">#  0x0B -> VERTICAL TABULATION</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\x0c'</code>     <code class=\"COMMENT\">#  0x0C -> FORM FEED</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\r'</code>       <code class=\"COMMENT\">#  0x0D -> CARRIAGE RETURN</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\x0e'</code>     <code class=\"COMMENT\">#  0x0E -> SHIFT OUT</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\x0f'</code>     <code class=\"COMMENT\">#  0x0F -> SHIFT IN</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\x10'</code>     <code class=\"COMMENT\">#  0x10 -> DATA LINK ESCAPE</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\x11'</code>     <code class=\"COMMENT\">#  0x11 -> DEVICE CONTROL ONE</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\x12'</code>     <code class=\"COMMENT\">#  0x12 -> DEVICE CONTROL TWO</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\x13'</code>     <code class=\"COMMENT\">#  0x13 -> DEVICE CONTROL THREE</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\x14'</code>     <code class=\"COMMENT\">#  0x14 -> DEVICE CONTROL FOUR</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\x15'</code>     <code class=\"COMMENT\">#  0x15 -> NEGATIVE ACKNOWLEDGE</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\x16'</code>     <code class=\"COMMENT\">#  0x16 -> SYNCHRONOUS IDLE</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\x17'</code>     <code class=\"COMMENT\">#  0x17 -> END OF TRANSMISSION BLOCK</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\x18'</code>     <code class=\"COMMENT\">#  0x18 -> CANCEL</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\x19'</code>     <code class=\"COMMENT\">#  0x19 -> END OF MEDIUM</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\x1a'</code>     <code class=\"COMMENT\">#  0x1A -> SUBSTITUTE</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\x1b'</code>     <code class=\"COMMENT\">#  0x1B -> ESCAPE</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\x1c'</code>     <code class=\"COMMENT\">#  0x1C -> FILE SEPARATOR</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\x1d'</code>     <code class=\"COMMENT\">#  0x1D -> GROUP SEPARATOR</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\x1e'</code>     <code class=\"COMMENT\">#  0x1E -> RECORD SEPARATOR</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\x1f'</code>     <code class=\"COMMENT\">#  0x1F -> UNIT SEPARATOR</code>\n    <code class=\"CHAR_STRING_LITERAL\">u' '</code>        <code class=\"COMMENT\">#  0x20 -> SPACE</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'!'</code>        <code class=\"COMMENT\">#  0x21 -> EXCLAMATION MARK</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\"'</code>        <code class=\"COMMENT\">#  0x22 -> QUOTATION MARK</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'#'</code>        <code class=\"COMMENT\">#  0x23 -> NUMBER SIGN</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'$'</code>        <code class=\"COMMENT\">#  0x24 -> DOLLAR SIGN</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'%'</code>        <code class=\"COMMENT\">#  0x25 -> PERCENT SIGN</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'&'</code>        <code class=\"COMMENT\">#  0x26 -> AMPERSAND</code>\n    <code class=\"CHAR_STRING_LITERAL\">u\"'\"</code>        <code class=\"COMMENT\">#  0x27 -> APOSTROPHE</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'('</code>        <code class=\"COMMENT\">#  0x28 -> LEFT PARENTHESIS</code>\n    <code class=\"CHAR_STRING_LITERAL\">u')'</code>        <code class=\"COMMENT\">#  0x29 -> RIGHT PARENTHESIS</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'*'</code>        <code class=\"COMMENT\">#  0x2A -> ASTERISK</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'+'</code>        <code class=\"COMMENT\">#  0x2B -> PLUS SIGN</code>\n    <code class=\"CHAR_STRING_LITERAL\">u','</code>        <code class=\"COMMENT\">#  0x2C -> COMMA</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'-'</code>        <code class=\"COMMENT\">#  0x2D -> HYPHEN-MINUS</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'.'</code>        <code class=\"COMMENT\">#  0x2E -> FULL STOP</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'/'</code>        <code class=\"COMMENT\">#  0x2F -> SOLIDUS</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'0'</code>        <code class=\"COMMENT\">#  0x30 -> DIGIT ZERO</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'1'</code>        <code class=\"COMMENT\">#  0x31 -> DIGIT ONE</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'2'</code>        <code class=\"COMMENT\">#  0x32 -> DIGIT TWO</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'3'</code>        <code class=\"COMMENT\">#  0x33 -> DIGIT THREE</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'4'</code>        <code class=\"COMMENT\">#  0x34 -> DIGIT FOUR</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'5'</code>        <code class=\"COMMENT\">#  0x35 -> DIGIT FIVE</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'6'</code>        <code class=\"COMMENT\">#  0x36 -> DIGIT SIX</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'7'</code>        <code class=\"COMMENT\">#  0x37 -> DIGIT SEVEN</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'8'</code>        <code class=\"COMMENT\">#  0x38 -> DIGIT EIGHT</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'9'</code>        <code class=\"COMMENT\">#  0x39 -> DIGIT NINE</code>\n    <code class=\"CHAR_STRING_LITERAL\">u':'</code>        <code class=\"COMMENT\">#  0x3A -> COLON</code>\n    <code class=\"CHAR_STRING_LITERAL\">u';'</code>        <code class=\"COMMENT\">#  0x3B -> SEMICOLON</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'<'</code>        <code class=\"COMMENT\">#  0x3C -> LESS-THAN SIGN</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'='</code>        <code class=\"COMMENT\">#  0x3D -> EQUALS SIGN</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'>'</code>        <code class=\"COMMENT\">#  0x3E -> GREATER-THAN SIGN</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'?'</code>        <code class=\"COMMENT\">#  0x3F -> QUESTION MARK</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'@'</code>        <code class=\"COMMENT\">#  0x40 -> COMMERCIAL AT</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'A'</code>        <code class=\"COMMENT\">#  0x41 -> LATIN CAPITAL LETTER A</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'B'</code>        <code class=\"COMMENT\">#  0x42 -> LATIN CAPITAL LETTER B</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'C'</code>        <code class=\"COMMENT\">#  0x43 -> LATIN CAPITAL LETTER C</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'D'</code>        <code class=\"COMMENT\">#  0x44 -> LATIN CAPITAL LETTER D</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'E'</code>        <code class=\"COMMENT\">#  0x45 -> LATIN CAPITAL LETTER E</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'F'</code>        <code class=\"COMMENT\">#  0x46 -> LATIN CAPITAL LETTER F</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'G'</code>        <code class=\"COMMENT\">#  0x47 -> LATIN CAPITAL LETTER G</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'H'</code>        <code class=\"COMMENT\">#  0x48 -> LATIN CAPITAL LETTER H</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'I'</code>        <code class=\"COMMENT\">#  0x49 -> LATIN CAPITAL LETTER I</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'J'</code>        <code class=\"COMMENT\">#  0x4A -> LATIN CAPITAL LETTER J</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'K'</code>        <code class=\"COMMENT\">#  0x4B -> LATIN CAPITAL LETTER K</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'L'</code>        <code class=\"COMMENT\">#  0x4C -> LATIN CAPITAL LETTER L</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'M'</code>        <code class=\"COMMENT\">#  0x4D -> LATIN CAPITAL LETTER M</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'N'</code>        <code class=\"COMMENT\">#  0x4E -> LATIN CAPITAL LETTER N</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'O'</code>        <code class=\"COMMENT\">#  0x4F -> LATIN CAPITAL LETTER O</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'P'</code>        <code class=\"COMMENT\">#  0x50 -> LATIN CAPITAL LETTER P</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'Q'</code>        <code class=\"COMMENT\">#  0x51 -> LATIN CAPITAL LETTER Q</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'R'</code>        <code class=\"COMMENT\">#  0x52 -> LATIN CAPITAL LETTER R</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'S'</code>        <code class=\"COMMENT\">#  0x53 -> LATIN CAPITAL LETTER S</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'T'</code>        <code class=\"COMMENT\">#  0x54 -> LATIN CAPITAL LETTER T</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'U'</code>        <code class=\"COMMENT\">#  0x55 -> LATIN CAPITAL LETTER U</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'V'</code>        <code class=\"COMMENT\">#  0x56 -> LATIN CAPITAL LETTER V</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'W'</code>        <code class=\"COMMENT\">#  0x57 -> LATIN CAPITAL LETTER W</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'X'</code>        <code class=\"COMMENT\">#  0x58 -> LATIN CAPITAL LETTER X</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'Y'</code>        <code class=\"COMMENT\">#  0x59 -> LATIN CAPITAL LETTER Y</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'Z'</code>        <code class=\"COMMENT\">#  0x5A -> LATIN CAPITAL LETTER Z</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'['</code>        <code class=\"COMMENT\">#  0x5B -> LEFT SQUARE BRACKET</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\\\'</code>       <code class=\"COMMENT\">#  0x5C -> REVERSE SOLIDUS</code>\n    <code class=\"CHAR_STRING_LITERAL\">u']'</code>        <code class=\"COMMENT\">#  0x5D -> RIGHT SQUARE BRACKET</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'^'</code>        <code class=\"COMMENT\">#  0x5E -> CIRCUMFLEX ACCENT</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'_'</code>        <code class=\"COMMENT\">#  0x5F -> LOW LINE</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'`'</code>        <code class=\"COMMENT\">#  0x60 -> GRAVE ACCENT</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'a'</code>        <code class=\"COMMENT\">#  0x61 -> LATIN SMALL LETTER A</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'b'</code>        <code class=\"COMMENT\">#  0x62 -> LATIN SMALL LETTER B</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'c'</code>        <code class=\"COMMENT\">#  0x63 -> LATIN SMALL LETTER C</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'd'</code>        <code class=\"COMMENT\">#  0x64 -> LATIN SMALL LETTER D</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'e'</code>        <code class=\"COMMENT\">#  0x65 -> LATIN SMALL LETTER E</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'f'</code>        <code class=\"COMMENT\">#  0x66 -> LATIN SMALL LETTER F</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'g'</code>        <code class=\"COMMENT\">#  0x67 -> LATIN SMALL LETTER G</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'h'</code>        <code class=\"COMMENT\">#  0x68 -> LATIN SMALL LETTER H</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'i'</code>        <code class=\"COMMENT\">#  0x69 -> LATIN SMALL LETTER I</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'j'</code>        <code class=\"COMMENT\">#  0x6A -> LATIN SMALL LETTER J</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'k'</code>        <code class=\"COMMENT\">#  0x6B -> LATIN SMALL LETTER K</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'l'</code>        <code class=\"COMMENT\">#  0x6C -> LATIN SMALL LETTER L</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'm'</code>        <code class=\"COMMENT\">#  0x6D -> LATIN SMALL LETTER M</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'n'</code>        <code class=\"COMMENT\">#  0x6E -> LATIN SMALL LETTER N</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'o'</code>        <code class=\"COMMENT\">#  0x6F -> LATIN SMALL LETTER O</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'p'</code>        <code class=\"COMMENT\">#  0x70 -> LATIN SMALL LETTER P</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'q'</code>        <code class=\"COMMENT\">#  0x71 -> LATIN SMALL LETTER Q</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'r'</code>        <code class=\"COMMENT\">#  0x72 -> LATIN SMALL LETTER R</code>\n    <code class=\"CHAR_STRING_LITERAL\">u's'</code>        <code class=\"COMMENT\">#  0x73 -> LATIN SMALL LETTER S</code>\n    <code class=\"CHAR_STRING_LITERAL\">u't'</code>        <code class=\"COMMENT\">#  0x74 -> LATIN SMALL LETTER T</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'u'</code>        <code class=\"COMMENT\">#  0x75 -> LATIN SMALL LETTER U</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'v'</code>        <code class=\"COMMENT\">#  0x76 -> LATIN SMALL LETTER V</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'w'</code>        <code class=\"COMMENT\">#  0x77 -> LATIN SMALL LETTER W</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'x'</code>        <code class=\"COMMENT\">#  0x78 -> LATIN SMALL LETTER X</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'y'</code>        <code class=\"COMMENT\">#  0x79 -> LATIN SMALL LETTER Y</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'z'</code>        <code class=\"COMMENT\">#  0x7A -> LATIN SMALL LETTER Z</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'{'</code>        <code class=\"COMMENT\">#  0x7B -> LEFT CURLY BRACKET</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'|'</code>        <code class=\"COMMENT\">#  0x7C -> VERTICAL LINE</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'}'</code>        <code class=\"COMMENT\">#  0x7D -> RIGHT CURLY BRACKET</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'~'</code>        <code class=\"COMMENT\">#  0x7E -> TILDE</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\x7f'</code>     <code class=\"COMMENT\">#  0x7F -> DELETE</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u20ac'</code>   <code class=\"COMMENT\">#  0x80 -> EURO SIGN</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\ufffe'</code>   <code class=\"COMMENT\">#  0x81 -> UNDEFINED</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u201a'</code>   <code class=\"COMMENT\">#  0x82 -> SINGLE LOW-9 QUOTATION MARK</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u0192'</code>   <code class=\"COMMENT\">#  0x83 -> LATIN SMALL LETTER F WITH HOOK</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u201e'</code>   <code class=\"COMMENT\">#  0x84 -> DOUBLE LOW-9 QUOTATION MARK</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u2026'</code>   <code class=\"COMMENT\">#  0x85 -> HORIZONTAL ELLIPSIS</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u2020'</code>   <code class=\"COMMENT\">#  0x86 -> DAGGER</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u2021'</code>   <code class=\"COMMENT\">#  0x87 -> DOUBLE DAGGER</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u02c6'</code>   <code class=\"COMMENT\">#  0x88 -> MODIFIER LETTER CIRCUMFLEX ACCENT</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u2030'</code>   <code class=\"COMMENT\">#  0x89 -> PER MILLE SIGN</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\ufffe'</code>   <code class=\"COMMENT\">#  0x8A -> UNDEFINED</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u2039'</code>   <code class=\"COMMENT\">#  0x8B -> SINGLE LEFT-POINTING ANGLE QUOTATION MARK</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\ufffe'</code>   <code class=\"COMMENT\">#  0x8C -> UNDEFINED</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\ufffe'</code>   <code class=\"COMMENT\">#  0x8D -> UNDEFINED</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\ufffe'</code>   <code class=\"COMMENT\">#  0x8E -> UNDEFINED</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\ufffe'</code>   <code class=\"COMMENT\">#  0x8F -> UNDEFINED</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\ufffe'</code>   <code class=\"COMMENT\">#  0x90 -> UNDEFINED</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u2018'</code>   <code class=\"COMMENT\">#  0x91 -> LEFT SINGLE QUOTATION MARK</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u2019'</code>   <code class=\"COMMENT\">#  0x92 -> RIGHT SINGLE QUOTATION MARK</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u201c'</code>   <code class=\"COMMENT\">#  0x93 -> LEFT DOUBLE QUOTATION MARK</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u201d'</code>   <code class=\"COMMENT\">#  0x94 -> RIGHT DOUBLE QUOTATION MARK</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u2022'</code>   <code class=\"COMMENT\">#  0x95 -> BULLET</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u2013'</code>   <code class=\"COMMENT\">#  0x96 -> EN DASH</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u2014'</code>   <code class=\"COMMENT\">#  0x97 -> EM DASH</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u02dc'</code>   <code class=\"COMMENT\">#  0x98 -> SMALL TILDE</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u2122'</code>   <code class=\"COMMENT\">#  0x99 -> TRADE MARK SIGN</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\ufffe'</code>   <code class=\"COMMENT\">#  0x9A -> UNDEFINED</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u203a'</code>   <code class=\"COMMENT\">#  0x9B -> SINGLE RIGHT-POINTING ANGLE QUOTATION MARK</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\ufffe'</code>   <code class=\"COMMENT\">#  0x9C -> UNDEFINED</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\ufffe'</code>   <code class=\"COMMENT\">#  0x9D -> UNDEFINED</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\ufffe'</code>   <code class=\"COMMENT\">#  0x9E -> UNDEFINED</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\ufffe'</code>   <code class=\"COMMENT\">#  0x9F -> UNDEFINED</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\xa0'</code>     <code class=\"COMMENT\">#  0xA0 -> NO-BREAK SPACE</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\xa1'</code>     <code class=\"COMMENT\">#  0xA1 -> INVERTED EXCLAMATION MARK</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\xa2'</code>     <code class=\"COMMENT\">#  0xA2 -> CENT SIGN</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\xa3'</code>     <code class=\"COMMENT\">#  0xA3 -> POUND SIGN</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u20aa'</code>   <code class=\"COMMENT\">#  0xA4 -> NEW SHEQEL SIGN</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\xa5'</code>     <code class=\"COMMENT\">#  0xA5 -> YEN SIGN</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\xa6'</code>     <code class=\"COMMENT\">#  0xA6 -> BROKEN BAR</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\xa7'</code>     <code class=\"COMMENT\">#  0xA7 -> SECTION SIGN</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\xa8'</code>     <code class=\"COMMENT\">#  0xA8 -> DIAERESIS</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\xa9'</code>     <code class=\"COMMENT\">#  0xA9 -> COPYRIGHT SIGN</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\xd7'</code>     <code class=\"COMMENT\">#  0xAA -> MULTIPLICATION SIGN</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\xab'</code>     <code class=\"COMMENT\">#  0xAB -> LEFT-POINTING DOUBLE ANGLE QUOTATION MARK</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\xac'</code>     <code class=\"COMMENT\">#  0xAC -> NOT SIGN</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\xad'</code>     <code class=\"COMMENT\">#  0xAD -> SOFT HYPHEN</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\xae'</code>     <code class=\"COMMENT\">#  0xAE -> REGISTERED SIGN</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\xaf'</code>     <code class=\"COMMENT\">#  0xAF -> MACRON</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\xb0'</code>     <code class=\"COMMENT\">#  0xB0 -> DEGREE SIGN</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\xb1'</code>     <code class=\"COMMENT\">#  0xB1 -> PLUS-MINUS SIGN</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\xb2'</code>     <code class=\"COMMENT\">#  0xB2 -> SUPERSCRIPT TWO</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\xb3'</code>     <code class=\"COMMENT\">#  0xB3 -> SUPERSCRIPT THREE</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\xb4'</code>     <code class=\"COMMENT\">#  0xB4 -> ACUTE ACCENT</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\xb5'</code>     <code class=\"COMMENT\">#  0xB5 -> MICRO SIGN</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\xb6'</code>     <code class=\"COMMENT\">#  0xB6 -> PILCROW SIGN</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\xb7'</code>     <code class=\"COMMENT\">#  0xB7 -> MIDDLE DOT</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\xb8'</code>     <code class=\"COMMENT\">#  0xB8 -> CEDILLA</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\xb9'</code>     <code class=\"COMMENT\">#  0xB9 -> SUPERSCRIPT ONE</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\xf7'</code>     <code class=\"COMMENT\">#  0xBA -> DIVISION SIGN</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\xbb'</code>     <code class=\"COMMENT\">#  0xBB -> RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\xbc'</code>     <code class=\"COMMENT\">#  0xBC -> VULGAR FRACTION ONE QUARTER</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\xbd'</code>     <code class=\"COMMENT\">#  0xBD -> VULGAR FRACTION ONE HALF</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\xbe'</code>     <code class=\"COMMENT\">#  0xBE -> VULGAR FRACTION THREE QUARTERS</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\xbf'</code>     <code class=\"COMMENT\">#  0xBF -> INVERTED QUESTION MARK</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05b0'</code>   <code class=\"COMMENT\">#  0xC0 -> HEBREW POINT SHEVA</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05b1'</code>   <code class=\"COMMENT\">#  0xC1 -> HEBREW POINT HATAF SEGOL</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05b2'</code>   <code class=\"COMMENT\">#  0xC2 -> HEBREW POINT HATAF PATAH</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05b3'</code>   <code class=\"COMMENT\">#  0xC3 -> HEBREW POINT HATAF QAMATS</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05b4'</code>   <code class=\"COMMENT\">#  0xC4 -> HEBREW POINT HIRIQ</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05b5'</code>   <code class=\"COMMENT\">#  0xC5 -> HEBREW POINT TSERE</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05b6'</code>   <code class=\"COMMENT\">#  0xC6 -> HEBREW POINT SEGOL</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05b7'</code>   <code class=\"COMMENT\">#  0xC7 -> HEBREW POINT PATAH</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05b8'</code>   <code class=\"COMMENT\">#  0xC8 -> HEBREW POINT QAMATS</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05b9'</code>   <code class=\"COMMENT\">#  0xC9 -> HEBREW POINT HOLAM</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\ufffe'</code>   <code class=\"COMMENT\">#  0xCA -> UNDEFINED</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05bb'</code>   <code class=\"COMMENT\">#  0xCB -> HEBREW POINT QUBUTS</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05bc'</code>   <code class=\"COMMENT\">#  0xCC -> HEBREW POINT DAGESH OR MAPIQ</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05bd'</code>   <code class=\"COMMENT\">#  0xCD -> HEBREW POINT METEG</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05be'</code>   <code class=\"COMMENT\">#  0xCE -> HEBREW PUNCTUATION MAQAF</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05bf'</code>   <code class=\"COMMENT\">#  0xCF -> HEBREW POINT RAFE</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05c0'</code>   <code class=\"COMMENT\">#  0xD0 -> HEBREW PUNCTUATION PASEQ</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05c1'</code>   <code class=\"COMMENT\">#  0xD1 -> HEBREW POINT SHIN DOT</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05c2'</code>   <code class=\"COMMENT\">#  0xD2 -> HEBREW POINT SIN DOT</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05c3'</code>   <code class=\"COMMENT\">#  0xD3 -> HEBREW PUNCTUATION SOF PASUQ</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05f0'</code>   <code class=\"COMMENT\">#  0xD4 -> HEBREW LIGATURE YIDDISH DOUBLE VAV</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05f1'</code>   <code class=\"COMMENT\">#  0xD5 -> HEBREW LIGATURE YIDDISH VAV YOD</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05f2'</code>   <code class=\"COMMENT\">#  0xD6 -> HEBREW LIGATURE YIDDISH DOUBLE YOD</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05f3'</code>   <code class=\"COMMENT\">#  0xD7 -> HEBREW PUNCTUATION GERESH</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05f4'</code>   <code class=\"COMMENT\">#  0xD8 -> HEBREW PUNCTUATION GERSHAYIM</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\ufffe'</code>   <code class=\"COMMENT\">#  0xD9 -> UNDEFINED</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\ufffe'</code>   <code class=\"COMMENT\">#  0xDA -> UNDEFINED</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\ufffe'</code>   <code class=\"COMMENT\">#  0xDB -> UNDEFINED</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\ufffe'</code>   <code class=\"COMMENT\">#  0xDC -> UNDEFINED</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\ufffe'</code>   <code class=\"COMMENT\">#  0xDD -> UNDEFINED</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\ufffe'</code>   <code class=\"COMMENT\">#  0xDE -> UNDEFINED</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\ufffe'</code>   <code class=\"COMMENT\">#  0xDF -> UNDEFINED</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05d0'</code>   <code class=\"COMMENT\">#  0xE0 -> HEBREW LETTER ALEF</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05d1'</code>   <code class=\"COMMENT\">#  0xE1 -> HEBREW LETTER BET</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05d2'</code>   <code class=\"COMMENT\">#  0xE2 -> HEBREW LETTER GIMEL</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05d3'</code>   <code class=\"COMMENT\">#  0xE3 -> HEBREW LETTER DALET</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05d4'</code>   <code class=\"COMMENT\">#  0xE4 -> HEBREW LETTER HE</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05d5'</code>   <code class=\"COMMENT\">#  0xE5 -> HEBREW LETTER VAV</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05d6'</code>   <code class=\"COMMENT\">#  0xE6 -> HEBREW LETTER ZAYIN</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05d7'</code>   <code class=\"COMMENT\">#  0xE7 -> HEBREW LETTER HET</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05d8'</code>   <code class=\"COMMENT\">#  0xE8 -> HEBREW LETTER TET</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05d9'</code>   <code class=\"COMMENT\">#  0xE9 -> HEBREW LETTER YOD</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05da'</code>   <code class=\"COMMENT\">#  0xEA -> HEBREW LETTER FINAL KAF</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05db'</code>   <code class=\"COMMENT\">#  0xEB -> HEBREW LETTER KAF</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05dc'</code>   <code class=\"COMMENT\">#  0xEC -> HEBREW LETTER LAMED</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05dd'</code>   <code class=\"COMMENT\">#  0xED -> HEBREW LETTER FINAL MEM</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05de'</code>   <code class=\"COMMENT\">#  0xEE -> HEBREW LETTER MEM</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05df'</code>   <code class=\"COMMENT\">#  0xEF -> HEBREW LETTER FINAL NUN</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05e0'</code>   <code class=\"COMMENT\">#  0xF0 -> HEBREW LETTER NUN</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05e1'</code>   <code class=\"COMMENT\">#  0xF1 -> HEBREW LETTER SAMEKH</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05e2'</code>   <code class=\"COMMENT\">#  0xF2 -> HEBREW LETTER AYIN</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05e3'</code>   <code class=\"COMMENT\">#  0xF3 -> HEBREW LETTER FINAL PE</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05e4'</code>   <code class=\"COMMENT\">#  0xF4 -> HEBREW LETTER PE</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05e5'</code>   <code class=\"COMMENT\">#  0xF5 -> HEBREW LETTER FINAL TSADI</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05e6'</code>   <code class=\"COMMENT\">#  0xF6 -> HEBREW LETTER TSADI</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05e7'</code>   <code class=\"COMMENT\">#  0xF7 -> HEBREW LETTER QOF</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05e8'</code>   <code class=\"COMMENT\">#  0xF8 -> HEBREW LETTER RESH</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05e9'</code>   <code class=\"COMMENT\">#  0xF9 -> HEBREW LETTER SHIN</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u05ea'</code>   <code class=\"COMMENT\">#  0xFA -> HEBREW LETTER TAV</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\ufffe'</code>   <code class=\"COMMENT\">#  0xFB -> UNDEFINED</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\ufffe'</code>   <code class=\"COMMENT\">#  0xFC -> UNDEFINED</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u200e'</code>   <code class=\"COMMENT\">#  0xFD -> LEFT-TO-RIGHT MARK</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\u200f'</code>   <code class=\"COMMENT\">#  0xFE -> RIGHT-TO-LEFT MARK</code>\n    <code class=\"CHAR_STRING_LITERAL\">u'\\ufffe'</code>   <code class=\"COMMENT\">#  0xFF -> UNDEFINED</code>\n<code class=\"ANY\">)</code>\n<code class=\"ANY\">\n</code><code class=\"COMMENT\">### Encoding table</code><code class=\"ANY\">\n</code><code class=\"ANY\">encoding_table</code><code class=\"ANY\">=</code><code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">charmap_build</code><code class=\"ANY\">(</code><code class=\"ANY\">decoding_table</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code>\n</pre>\n</html>"},{"_id":{"language":"PYTHON3","lexingTokens":[99,41,99,41,99,41,99,41,99,41,99,41,99,41,99,41,99,41,99,41,99,41,99,41,99,41,42,60,3,41,-1]},"sourceCode":"# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n__version__ = \"2.44.0\" \n","highlightingTokens":[4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,0,0,3,0,0],"highlightingCode":"<!DOCTYPE html>\n<html>\n<style>\n.ANY {\n    color: black;\n    font-weight: normal;\n    font-style: normal;\n}\n.KEYWORD {\n    color: blue;\n    font-weight: bold;\n    font-style: normal;\n}\n.LITERAL {\n    color: lightskyblue;\n    font-weight: bold;\n    font-style: normal;\n}\n.CHAR_STRING_LITERAL {\n    color: darkgoldenrod;\n    font-weight: normal;\n    font-style: normal;\n}\n.COMMENT {\n    color: grey;\n    font-weight: normal;\n    font-style: italic;\n}\n.CLASS_DECLARATOR {\n    color: crimson;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_DECLARATOR {\n    color: fuchsia;\n    font-weight: bold;\n    font-style: normal;\n}\n.VARIABLE_DECLARATOR {\n    color: purple;\n    font-weight: bold;\n    font-style: normal;\n}\n.TYPE_IDENTIFIER {\n    color: darkgreen;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_IDENTIFIER {\n    color: dodgerblue;\n    font-weight: normal;\n    font-style: normal;\n}\n.FIELD_IDENTIFIER {\n    color: coral;\n    font-weight: normal;\n    font-style: normal;\n}\n.ANNOTATION_DECLARATOR {\n    color: lightslategray;\n    font-weight: lighter;\n    font-style: italic;\n}\n</style>\n<pre>\n<code class=\"COMMENT\"># Copyright 2021 Google LLC</code><code class=\"ANY\">\n</code><code class=\"COMMENT\">#</code><code class=\"ANY\">\n</code><code class=\"COMMENT\"># Licensed under the Apache License, Version 2.0 (the \"License\");</code><code class=\"ANY\">\n</code><code class=\"COMMENT\"># you may not use this file except in compliance with the License.</code><code class=\"ANY\">\n</code><code class=\"COMMENT\"># You may obtain a copy of the License at</code><code class=\"ANY\">\n</code><code class=\"COMMENT\">#</code><code class=\"ANY\">\n</code><code class=\"COMMENT\">#     http://www.apache.org/licenses/LICENSE-2.0</code><code class=\"ANY\">\n</code><code class=\"COMMENT\">#</code><code class=\"ANY\">\n</code><code class=\"COMMENT\"># Unless required by applicable law or agreed to in writing, software</code><code class=\"ANY\">\n</code><code class=\"COMMENT\"># distributed under the License is distributed on an \"AS IS\" BASIS,</code><code class=\"ANY\">\n</code><code class=\"COMMENT\"># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</code><code class=\"ANY\">\n</code><code class=\"COMMENT\"># See the License for the specific language governing permissions and</code><code class=\"ANY\">\n</code><code class=\"COMMENT\"># limitations under the License.</code>\n<code class=\"ANY\">\n</code><code class=\"ANY\">__version__</code> <code class=\"ANY\">=</code> <code class=\"CHAR_STRING_LITERAL\">\"2.44.0\"</code> <code class=\"ANY\">\n</code>\n</pre>\n</html>"},{"_id":{"language":"PYTHON3","lexingTokens":[3,41,10,42,41,99,41,42,60,42,51,42,41,6,42,54,42,56,42,60,3,55,57,1,41,7,42,51,42,54,42,56,42,56,31,55,2,33,42,54,42,51,42,55,57,1,41,6,42,54,42,56,42,56,42,60,32,55,57,1,41,7,42,51,42,54,42,56,42,51,42,55,61,4,62,2,33,42,54,42,51,42,55,57,1,41,42,60,42,51,42,2,33,42,54,42,51,42,55,57,1,41,42,60,42,51,42,2,33,42,54,42,51,42,55,57,1,41,42,60,42,51,42,2,99,41,6,42,54,55,57,1,41,7,42,51,42,54,42,60,3,56,42,60,42,56,42,60,42,56,42,60,42,56,42,60,42,56,42,60,42,56,42,60,42,56,55,2,-1]},"sourceCode":"\"\"\"\nPython 'utf-32-be' Codec\n\"\"\"\nimport codecs\n\n### Codec APIs\n\nencode = codecs.utf_32_be_encode\n\ndef decode(input, errors='strict'):\n    return codecs.utf_32_be_decode(input, errors, True)\n\nclass IncrementalEncoder(codecs.IncrementalEncoder):\n    def encode(self, input, final=False):\n        return codecs.utf_32_be_encode(input, self.errors)[0]\n\nclass IncrementalDecoder(codecs.BufferedIncrementalDecoder):\n    _buffer_decode = codecs.utf_32_be_decode\n\nclass StreamWriter(codecs.StreamWriter):\n    encode = codecs.utf_32_be_encode\n\nclass StreamReader(codecs.StreamReader):\n    decode = codecs.utf_32_be_decode\n\n### encodings module API\n\ndef getregentry():\n    return codecs.CodecInfo(\n        name='utf-32-be',\n        encode=encode,\n        decode=decode,\n        incrementalencoder=IncrementalEncoder,\n        incrementaldecoder=IncrementalDecoder,\n        streamreader=StreamReader,\n        streamwriter=StreamWriter,\n    )\n","highlightingTokens":[3,0,1,0,0,4,0,0,0,0,0,10,0,1,6,0,0,0,0,0,3,0,0,0,0,1,0,0,9,0,0,0,0,0,2,0,0,1,5,0,0,0,10,0,0,0,0,1,6,0,0,0,0,0,0,0,2,0,0,0,0,1,0,0,9,0,0,0,0,0,10,0,0,2,0,0,1,5,0,0,0,10,0,0,0,0,0,0,0,0,10,0,1,5,0,0,0,10,0,0,0,0,0,0,0,0,10,0,1,5,0,0,0,10,0,0,0,0,0,0,0,0,10,0,4,0,1,6,0,0,0,0,0,1,0,0,9,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"highlightingCode":"<!DOCTYPE html>\n<html>\n<style>\n.ANY {\n    color: black;\n    font-weight: normal;\n    font-style: normal;\n}\n.KEYWORD {\n    color: blue;\n    font-weight: bold;\n    font-style: normal;\n}\n.LITERAL {\n    color: lightskyblue;\n    font-weight: bold;\n    font-style: normal;\n}\n.CHAR_STRING_LITERAL {\n    color: darkgoldenrod;\n    font-weight: normal;\n    font-style: normal;\n}\n.COMMENT {\n    color: grey;\n    font-weight: normal;\n    font-style: italic;\n}\n.CLASS_DECLARATOR {\n    color: crimson;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_DECLARATOR {\n    color: fuchsia;\n    font-weight: bold;\n    font-style: normal;\n}\n.VARIABLE_DECLARATOR {\n    color: purple;\n    font-weight: bold;\n    font-style: normal;\n}\n.TYPE_IDENTIFIER {\n    color: darkgreen;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_IDENTIFIER {\n    color: dodgerblue;\n    font-weight: normal;\n    font-style: normal;\n}\n.FIELD_IDENTIFIER {\n    color: coral;\n    font-weight: normal;\n    font-style: normal;\n}\n.ANNOTATION_DECLARATOR {\n    color: lightslategray;\n    font-weight: lighter;\n    font-style: italic;\n}\n</style>\n<pre>\n<code class=\"CHAR_STRING_LITERAL\">\"\"\"\nPython 'utf-32-be' Codec\n\"\"\"</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code> <code class=\"ANY\">codecs</code>\n<code class=\"ANY\">\n</code><code class=\"COMMENT\">### Codec APIs</code>\n<code class=\"ANY\">\n</code><code class=\"ANY\">encode</code> <code class=\"ANY\">=</code> <code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">utf_32_be_encode</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">decode</code><code class=\"ANY\">(</code><code class=\"ANY\">input</code><code class=\"ANY\">,</code> <code class=\"ANY\">errors</code><code class=\"ANY\">=</code><code class=\"CHAR_STRING_LITERAL\">'strict'</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">    </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">utf_32_be_decode</code><code class=\"ANY\">(</code><code class=\"ANY\">input</code><code class=\"ANY\">,</code> <code class=\"ANY\">errors</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">True</code><code class=\"ANY\">)</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">IncrementalEncoder</code><code class=\"ANY\">(</code><code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">IncrementalEncoder</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">    </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">encode</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">input</code><code class=\"ANY\">,</code> <code class=\"ANY\">final</code><code class=\"ANY\">=</code><code class=\"LITERAL\">False</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">utf_32_be_encode</code><code class=\"ANY\">(</code><code class=\"ANY\">input</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">errors</code><code class=\"ANY\">)</code><code class=\"ANY\">[</code><code class=\"LITERAL\">0</code><code class=\"ANY\">]</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">IncrementalDecoder</code><code class=\"ANY\">(</code><code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">BufferedIncrementalDecoder</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">    </code><code class=\"ANY\">_buffer_decode</code> <code class=\"ANY\">=</code> <code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">utf_32_be_decode</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">StreamWriter</code><code class=\"ANY\">(</code><code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">StreamWriter</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">    </code><code class=\"ANY\">encode</code> <code class=\"ANY\">=</code> <code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">utf_32_be_encode</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">StreamReader</code><code class=\"ANY\">(</code><code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">StreamReader</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">    </code><code class=\"ANY\">decode</code> <code class=\"ANY\">=</code> <code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">utf_32_be_decode</code>\n<code class=\"ANY\">\n</code><code class=\"COMMENT\">### encodings module API</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">getregentry</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">    </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">CodecInfo</code><code class=\"ANY\">(</code>\n        <code class=\"ANY\">name</code><code class=\"ANY\">=</code><code class=\"CHAR_STRING_LITERAL\">'utf-32-be'</code><code class=\"ANY\">,</code>\n        <code class=\"ANY\">encode</code><code class=\"ANY\">=</code><code class=\"ANY\">encode</code><code class=\"ANY\">,</code>\n        <code class=\"ANY\">decode</code><code class=\"ANY\">=</code><code class=\"ANY\">decode</code><code class=\"ANY\">,</code>\n        <code class=\"ANY\">incrementalencoder</code><code class=\"ANY\">=</code><code class=\"ANY\">IncrementalEncoder</code><code class=\"ANY\">,</code>\n        <code class=\"ANY\">incrementaldecoder</code><code class=\"ANY\">=</code><code class=\"ANY\">IncrementalDecoder</code><code class=\"ANY\">,</code>\n        <code class=\"ANY\">streamreader</code><code class=\"ANY\">=</code><code class=\"ANY\">StreamReader</code><code class=\"ANY\">,</code>\n        <code class=\"ANY\">streamwriter</code><code class=\"ANY\">=</code><code class=\"ANY\">StreamWriter</code><code class=\"ANY\">,</code>\n    <code class=\"ANY\">)</code><code class=\"ANY\">\n</code>\n</pre>\n</html>"},{"_id":{"language":"PYTHON3","lexingTokens":[3,41,10,42,41,99,41,99,41,99,41,99,41,42,60,42,54,30,55,41,42,60,42,41,42,60,42,41,42,60,42,41,42,60,42,41,42,60,42,41,42,60,42,41,21,57,1,41,42,60,42,2,24,42,57,1,41,36,2,42,60,42,41,99,41,99,41,99,41,21,57,1,41,42,60,42,41,42,60,54,42,56,42,55,2,24,42,57,1,41,42,60,54,42,56,55,2,42,60,42,41,42,60,42,41,42,60,42,41,42,60,42,60,42,41,6,42,54,55,57,36,41,42,60,42,54,42,55,41,42,60,42,54,25,57,30,55,99,41,42,60,42,54,42,51,42,55,41,6,42,54,55,57,1,41,34,4,2,42,60,42,54,42,54,55,55,41,33,42,57,1,41,6,42,54,42,55,57,36,2,42,60,42,54,42,55,41,42,60,42,54,42,51,42,55,99,41,42,60,42,54,55,41,42,60,42,54,42,55,41,42,60,42,54,42,51,42,55,41,42,60,42,54,42,55,41,42,60,42,54,61,62,51,42,55,99,41,42,60,42,54,42,55,41,42,60,42,41,42,60,42,41,21,57,1,41,8,42,2,24,42,57,1,41,42,60,42,51,42,54,55,61,4,62,41,42,60,42,54,42,55,41,42,60,42,54,42,51,42,55,41,35,42,2,42,60,42,41,42,60,42,54,42,55,41,42,60,42,54,42,51,42,55,41,42,60,42,54,42,55,41,99,41,42,60,42,54,42,51,42,55,41,42,60,42,54,42,51,42,55,41,35,42,56,42,56,42,56,42,56,42,99,41,-1]},"sourceCode":"\"\"\"Define names for all type symbols known in the standard interpreter.\n\nTypes that are part of optional modules (e.g. array) are not listed.\n\"\"\"\nimport sys\n\n# Iterators in Python aren't a matter of type but of protocol.  A large\n# and changing number of builtin types implement *some* flavor of\n# iterator.  Don't check the type!  Use hasattr to check for both\n# \"__iter__\" and \"next\" attributes instead.\n\nNoneType = type(None)\nTypeType = type\nObjectType = object\n\nIntType = int\nLongType = long\nFloatType = float\nBooleanType = bool\ntry:\n    ComplexType = complex\nexcept NameError:\n    pass\n\nStringType = str\n\n# StringTypes is already outdated.  Instead of writing \"type(x) in\n# types.StringTypes\", you should use \"isinstance(x, basestring)\".  But\n# we keep around for compatibility with Python 2.2.\ntry:\n    UnicodeType = unicode\n    StringTypes = (StringType, UnicodeType)\nexcept NameError:\n    StringTypes = (StringType,)\n\nBufferType = buffer\n\nTupleType = tuple\nListType = list\nDictType = DictionaryType = dict\n\ndef _f(): pass\nFunctionType = type(_f)\nLambdaType = type(lambda: None)         # Same as FunctionType\nCodeType = type(_f.func_code)\n\ndef _g():\n    yield 1\nGeneratorType = type(_g())\n\nclass _C:\n    def _m(self): pass\nClassType = type(_C)\nUnboundMethodType = type(_C._m)         # Same as MethodType\n_x = _C()\nInstanceType = type(_x)\nMethodType = type(_x._m)\n\nBuiltinFunctionType = type(len)\nBuiltinMethodType = type([].append)     # Same as BuiltinFunctionType\n\nModuleType = type(sys)\nFileType = file\nXRangeType = xrange\n\ntry:\n    raise TypeError\nexcept TypeError:\n    tb = sys.exc_info()[2]\n    TracebackType = type(tb)\n    FrameType = type(tb.tb_frame)\n    del tb\n\nSliceType = slice\nEllipsisType = type(Ellipsis)\n\nDictProxyType = type(TypeType.__dict__)\nNotImplementedType = type(NotImplemented)\n\n# For Jython, the following two types are identical\nGetSetDescriptorType = type(FunctionType.func_code)\nMemberDescriptorType = type(FunctionType.func_globals)\n\ndel sys, _f, _g, _C, _x                           # Not for export\n","highlightingTokens":[3,0,1,0,0,4,0,4,0,4,0,4,0,0,0,9,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,4,0,4,0,4,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,6,0,0,0,1,0,0,0,9,0,0,0,0,0,0,9,0,1,0,1,0,4,0,0,0,9,0,0,0,10,0,0,1,6,0,0,0,0,0,1,2,0,0,0,9,0,9,0,0,0,0,1,5,0,0,0,1,6,0,0,0,0,1,0,0,0,9,0,0,0,0,0,0,9,0,0,0,10,0,4,0,0,0,9,0,0,0,0,0,9,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,9,0,0,0,0,0,0,9,0,0,0,0,10,0,4,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,9,0,0,0,2,0,0,0,0,9,0,0,0,0,0,0,9,0,0,0,10,0,0,1,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,9,0,0,0,0,4,0,0,0,9,0,0,0,10,0,0,0,0,9,0,0,0,10,0,0,1,0,0,0,0,0,0,0,0,0,4,0,0],"highlightingCode":"<!DOCTYPE html>\n<html>\n<style>\n.ANY {\n    color: black;\n    font-weight: normal;\n    font-style: normal;\n}\n.KEYWORD {\n    color: blue;\n    font-weight: bold;\n    font-style: normal;\n}\n.LITERAL {\n    color: lightskyblue;\n    font-weight: bold;\n    font-style: normal;\n}\n.CHAR_STRING_LITERAL {\n    color: darkgoldenrod;\n    font-weight: normal;\n    font-style: normal;\n}\n.COMMENT {\n    color: grey;\n    font-weight: normal;\n    font-style: italic;\n}\n.CLASS_DECLARATOR {\n    color: crimson;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_DECLARATOR {\n    color: fuchsia;\n    font-weight: bold;\n    font-style: normal;\n}\n.VARIABLE_DECLARATOR {\n    color: purple;\n    font-weight: bold;\n    font-style: normal;\n}\n.TYPE_IDENTIFIER {\n    color: darkgreen;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_IDENTIFIER {\n    color: dodgerblue;\n    font-weight: normal;\n    font-style: normal;\n}\n.FIELD_IDENTIFIER {\n    color: coral;\n    font-weight: normal;\n    font-style: normal;\n}\n.ANNOTATION_DECLARATOR {\n    color: lightslategray;\n    font-weight: lighter;\n    font-style: italic;\n}\n</style>\n<pre>\n<code class=\"CHAR_STRING_LITERAL\">\"\"\"Define names for all type symbols known in the standard interpreter.\n\nTypes that are part of optional modules (e.g. array) are not listed.\n\"\"\"</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code> <code class=\"ANY\">sys</code>\n<code class=\"ANY\">\n</code><code class=\"COMMENT\"># Iterators in Python aren't a matter of type but of protocol.  A large</code><code class=\"ANY\">\n</code><code class=\"COMMENT\"># and changing number of builtin types implement *some* flavor of</code><code class=\"ANY\">\n</code><code class=\"COMMENT\"># iterator.  Don't check the type!  Use hasattr to check for both</code><code class=\"ANY\">\n</code><code class=\"COMMENT\"># \"__iter__\" and \"next\" attributes instead.</code>\n<code class=\"ANY\">\n</code><code class=\"ANY\">NoneType</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">type</code><code class=\"ANY\">(</code><code class=\"KEYWORD\">None</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">TypeType</code> <code class=\"ANY\">=</code> <code class=\"ANY\">type</code><code class=\"ANY\">\n</code><code class=\"ANY\">ObjectType</code> <code class=\"ANY\">=</code> <code class=\"ANY\">object</code>\n<code class=\"ANY\">\n</code><code class=\"ANY\">IntType</code> <code class=\"ANY\">=</code> <code class=\"ANY\">int</code><code class=\"ANY\">\n</code><code class=\"ANY\">LongType</code> <code class=\"ANY\">=</code> <code class=\"ANY\">long</code><code class=\"ANY\">\n</code><code class=\"ANY\">FloatType</code> <code class=\"ANY\">=</code> <code class=\"ANY\">float</code><code class=\"ANY\">\n</code><code class=\"ANY\">BooleanType</code> <code class=\"ANY\">=</code> <code class=\"ANY\">bool</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">try</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">    </code><code class=\"ANY\">ComplexType</code> <code class=\"ANY\">=</code> <code class=\"ANY\">complex</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">except</code> <code class=\"ANY\">NameError</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">    </code><code class=\"KEYWORD\">pass</code>\n<code class=\"ANY\">\n</code><code class=\"ANY\">StringType</code> <code class=\"ANY\">=</code> <code class=\"ANY\">str</code>\n<code class=\"ANY\">\n</code><code class=\"COMMENT\"># StringTypes is already outdated.  Instead of writing \"type(x) in</code><code class=\"ANY\">\n</code><code class=\"COMMENT\"># types.StringTypes\", you should use \"isinstance(x, basestring)\".  But</code><code class=\"ANY\">\n</code><code class=\"COMMENT\"># we keep around for compatibility with Python 2.2.</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">try</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">    </code><code class=\"ANY\">UnicodeType</code> <code class=\"ANY\">=</code> <code class=\"ANY\">unicode</code>\n   <code class=\"ANY\"> </code><code class=\"ANY\">StringTypes</code> <code class=\"ANY\">=</code> <code class=\"ANY\">(</code><code class=\"ANY\">StringType</code><code class=\"ANY\">,</code> <code class=\"ANY\">UnicodeType</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">except</code> <code class=\"ANY\">NameError</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">    </code><code class=\"ANY\">StringTypes</code> <code class=\"ANY\">=</code> <code class=\"ANY\">(</code><code class=\"ANY\">StringType</code><code class=\"ANY\">,</code><code class=\"ANY\">)</code>\n<code class=\"ANY\">\n</code><code class=\"ANY\">BufferType</code> <code class=\"ANY\">=</code> <code class=\"ANY\">buffer</code>\n<code class=\"ANY\">\n</code><code class=\"ANY\">TupleType</code> <code class=\"ANY\">=</code> <code class=\"ANY\">tuple</code><code class=\"ANY\">\n</code><code class=\"ANY\">ListType</code> <code class=\"ANY\">=</code> <code class=\"ANY\">list</code><code class=\"ANY\">\n</code><code class=\"ANY\">DictType</code> <code class=\"ANY\">=</code> <code class=\"ANY\">DictionaryType</code> <code class=\"ANY\">=</code> <code class=\"ANY\">dict</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_f</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code> <code class=\"KEYWORD\">pass</code><code class=\"ANY\">\n</code><code class=\"ANY\">FunctionType</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">type</code><code class=\"ANY\">(</code><code class=\"ANY\">_f</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">LambdaType</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">type</code><code class=\"ANY\">(</code><code class=\"KEYWORD\">lambda</code><code class=\"ANY\">:</code> <code class=\"KEYWORD\">None</code><code class=\"ANY\">)</code>         <code class=\"COMMENT\"># Same as FunctionType</code><code class=\"ANY\">\n</code><code class=\"ANY\">CodeType</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">type</code><code class=\"ANY\">(</code><code class=\"ANY\">_f</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">func_code</code><code class=\"ANY\">)</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_g</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">    </code><code class=\"KEYWORD\">yield</code> <code class=\"LITERAL\">1</code><code class=\"ANY\">\n</code><code class=\"ANY\">GeneratorType</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">type</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">_g</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">_C</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">    </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_m</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code> <code class=\"KEYWORD\">pass</code><code class=\"ANY\">\n</code><code class=\"ANY\">ClassType</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">type</code><code class=\"ANY\">(</code><code class=\"ANY\">_C</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">UnboundMethodType</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">type</code><code class=\"ANY\">(</code><code class=\"ANY\">_C</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_m</code><code class=\"ANY\">)</code>         <code class=\"COMMENT\"># Same as MethodType</code><code class=\"ANY\">\n</code><code class=\"ANY\">_x</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">_C</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">InstanceType</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">type</code><code class=\"ANY\">(</code><code class=\"ANY\">_x</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">MethodType</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">type</code><code class=\"ANY\">(</code><code class=\"ANY\">_x</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_m</code><code class=\"ANY\">)</code>\n<code class=\"ANY\">\n</code><code class=\"ANY\">BuiltinFunctionType</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">type</code><code class=\"ANY\">(</code><code class=\"ANY\">len</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">BuiltinMethodType</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">type</code><code class=\"ANY\">(</code><code class=\"ANY\">[</code><code class=\"ANY\">]</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">append</code><code class=\"ANY\">)</code>     <code class=\"COMMENT\"># Same as BuiltinFunctionType</code>\n<code class=\"ANY\">\n</code><code class=\"ANY\">ModuleType</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">type</code><code class=\"ANY\">(</code><code class=\"ANY\">sys</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">FileType</code> <code class=\"ANY\">=</code> <code class=\"ANY\">file</code><code class=\"ANY\">\n</code><code class=\"ANY\">XRangeType</code> <code class=\"ANY\">=</code> <code class=\"ANY\">xrange</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">try</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">    </code><code class=\"KEYWORD\">raise</code> <code class=\"ANY\">TypeError</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">except</code> <code class=\"ANY\">TypeError</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">    </code><code class=\"ANY\">tb</code> <code class=\"ANY\">=</code> <code class=\"ANY\">sys</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">exc_info</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">[</code><code class=\"LITERAL\">2</code><code class=\"ANY\">]</code>\n   <code class=\"ANY\"> </code><code class=\"ANY\">TracebackType</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">type</code><code class=\"ANY\">(</code><code class=\"ANY\">tb</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"ANY\">FrameType</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">type</code><code class=\"ANY\">(</code><code class=\"ANY\">tb</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">tb_frame</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">del</code> <code class=\"ANY\">tb</code>\n<code class=\"ANY\">\n</code><code class=\"ANY\">SliceType</code> <code class=\"ANY\">=</code> <code class=\"ANY\">slice</code><code class=\"ANY\">\n</code><code class=\"ANY\">EllipsisType</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">type</code><code class=\"ANY\">(</code><code class=\"ANY\">Ellipsis</code><code class=\"ANY\">)</code>\n<code class=\"ANY\">\n</code><code class=\"ANY\">DictProxyType</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">type</code><code class=\"ANY\">(</code><code class=\"ANY\">TypeType</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">__dict__</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">NotImplementedType</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">type</code><code class=\"ANY\">(</code><code class=\"ANY\">NotImplemented</code><code class=\"ANY\">)</code>\n<code class=\"ANY\">\n</code><code class=\"COMMENT\"># For Jython, the following two types are identical</code><code class=\"ANY\">\n</code><code class=\"ANY\">GetSetDescriptorType</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">type</code><code class=\"ANY\">(</code><code class=\"ANY\">FunctionType</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">func_code</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">MemberDescriptorType</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">type</code><code class=\"ANY\">(</code><code class=\"ANY\">FunctionType</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">func_globals</code><code class=\"ANY\">)</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">del</code> <code class=\"ANY\">sys</code><code class=\"ANY\">,</code> <code class=\"ANY\">_f</code><code class=\"ANY\">,</code> <code class=\"ANY\">_g</code><code class=\"ANY\">,</code> <code class=\"ANY\">_C</code><code class=\"ANY\">,</code> <code class=\"ANY\">_x</code>                           <code class=\"COMMENT\"># Not for export</code><code class=\"ANY\">\n</code>\n</pre>\n</html>"},{"_id":{"language":"PYTHON3","lexingTokens":[3,41,10,42,56,42,41,99,41,6,42,54,42,56,42,60,3,55,57,1,41,3,41,14,42,78,3,41,42,60,42,51,42,54,42,55,41,7,54,42,56,42,54,42,55,55,2,6,42,54,42,56,42,60,3,55,57,1,41,3,41,14,42,78,3,41,42,60,42,51,42,54,42,55,41,7,54,42,56,42,54,42,55,55,2,33,42,54,42,51,42,55,57,1,41,6,42,54,42,56,42,56,42,60,3,55,57,1,41,7,42,54,42,56,42,55,2,6,42,54,42,56,42,56,42,60,3,55,57,1,41,7,42,54,42,56,42,55,2,33,42,54,42,51,42,55,57,1,41,6,42,54,42,56,42,56,42,60,32,55,57,1,41,14,42,51,42,78,3,41,7,42,51,42,54,42,55,2,33,42,54,42,51,42,55,57,1,41,6,42,54,42,56,42,56,42,60,32,55,57,1,41,14,42,51,42,78,3,41,7,42,51,42,54,42,55,2,33,42,54,42,56,42,51,42,55,57,1,41,36,2,33,42,54,42,56,42,51,42,55,57,1,41,36,2,99,41,6,42,54,55,57,1,41,7,42,51,42,54,42,60,3,56,42,60,42,56,42,60,42,56,42,60,42,56,42,60,42,56,42,60,42,56,42,60,42,56,55,2,-1]},"sourceCode":"\"\"\" Python 'base64_codec' Codec - base64 content transfer encoding\n\n    Unlike most of the other codecs which target Unicode, this codec\n    will return Python string objects for both encode and decode.\n\n    Written by Marc-Andre Lemburg (mal@lemburg.com).\n\n\"\"\"\nimport codecs, base64\n\n### Codec APIs\n\ndef base64_encode(input,errors='strict'):\n\n    \"\"\" Encodes the object input and returns a tuple (output\n        object, length consumed).\n\n        errors defines the error handling to apply. It defaults to\n        'strict' handling which is the only currently supported\n        error handling for this codec.\n\n    \"\"\"\n    assert errors == 'strict'\n    output = base64.encodestring(input)\n    return (output, len(input))\n\ndef base64_decode(input,errors='strict'):\n\n    \"\"\" Decodes the object input and returns a tuple (output\n        object, length consumed).\n\n        input must be an object which provides the bf_getreadbuf\n        buffer slot. Python strings, buffer objects and memory\n        mapped files are examples of objects providing this slot.\n\n        errors defines the error handling to apply. It defaults to\n        'strict' handling which is the only currently supported\n        error handling for this codec.\n\n    \"\"\"\n    assert errors == 'strict'\n    output = base64.decodestring(input)\n    return (output, len(input))\n\nclass Codec(codecs.Codec):\n\n    def encode(self, input,errors='strict'):\n        return base64_encode(input,errors)\n    def decode(self, input,errors='strict'):\n        return base64_decode(input,errors)\n\nclass IncrementalEncoder(codecs.IncrementalEncoder):\n    def encode(self, input, final=False):\n        assert self.errors == 'strict'\n        return base64.encodestring(input)\n\nclass IncrementalDecoder(codecs.IncrementalDecoder):\n    def decode(self, input, final=False):\n        assert self.errors == 'strict'\n        return base64.decodestring(input)\n\nclass StreamWriter(Codec,codecs.StreamWriter):\n    pass\n\nclass StreamReader(Codec,codecs.StreamReader):\n    pass\n\n### encodings module API\n\ndef getregentry():\n    return codecs.CodecInfo(\n        name='base64',\n        encode=base64_encode,\n        decode=base64_decode,\n        incrementalencoder=IncrementalEncoder,\n        incrementaldecoder=IncrementalDecoder,\n        streamwriter=StreamWriter,\n        streamreader=StreamReader,\n    )\n","highlightingTokens":[3,0,1,0,0,0,0,4,0,1,6,0,0,0,0,0,3,0,0,0,0,3,0,1,0,0,3,0,0,0,0,0,9,0,0,0,0,1,0,0,0,9,0,0,0,0,0,1,6,0,0,0,0,0,3,0,0,0,0,3,0,1,0,0,3,0,0,0,0,0,9,0,0,0,0,1,0,0,0,9,0,0,0,0,0,1,5,0,0,0,10,0,0,0,0,1,6,0,0,0,0,0,0,0,3,0,0,0,0,1,9,0,0,0,0,0,0,1,6,0,0,0,0,0,0,0,3,0,0,0,0,1,9,0,0,0,0,0,0,1,5,0,0,0,10,0,0,0,0,1,6,0,0,0,0,0,0,0,2,0,0,0,0,1,0,0,10,0,3,0,1,0,0,9,0,0,0,0,1,5,0,0,0,10,0,0,0,0,1,6,0,0,0,0,0,0,0,2,0,0,0,0,1,0,0,10,0,3,0,1,0,0,9,0,0,0,0,1,5,0,0,0,0,0,10,0,0,0,0,1,0,1,5,0,0,0,0,0,10,0,0,0,0,1,0,4,0,1,6,0,0,0,0,0,1,0,0,9,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"highlightingCode":"<!DOCTYPE html>\n<html>\n<style>\n.ANY {\n    color: black;\n    font-weight: normal;\n    font-style: normal;\n}\n.KEYWORD {\n    color: blue;\n    font-weight: bold;\n    font-style: normal;\n}\n.LITERAL {\n    color: lightskyblue;\n    font-weight: bold;\n    font-style: normal;\n}\n.CHAR_STRING_LITERAL {\n    color: darkgoldenrod;\n    font-weight: normal;\n    font-style: normal;\n}\n.COMMENT {\n    color: grey;\n    font-weight: normal;\n    font-style: italic;\n}\n.CLASS_DECLARATOR {\n    color: crimson;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_DECLARATOR {\n    color: fuchsia;\n    font-weight: bold;\n    font-style: normal;\n}\n.VARIABLE_DECLARATOR {\n    color: purple;\n    font-weight: bold;\n    font-style: normal;\n}\n.TYPE_IDENTIFIER {\n    color: darkgreen;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_IDENTIFIER {\n    color: dodgerblue;\n    font-weight: normal;\n    font-style: normal;\n}\n.FIELD_IDENTIFIER {\n    color: coral;\n    font-weight: normal;\n    font-style: normal;\n}\n.ANNOTATION_DECLARATOR {\n    color: lightslategray;\n    font-weight: lighter;\n    font-style: italic;\n}\n</style>\n<pre>\n<code class=\"CHAR_STRING_LITERAL\">\"\"\" Python 'base64_codec' Codec - base64 content transfer encoding\n\n    Unlike most of the other codecs which target Unicode, this codec\n    will return Python string objects for both encode and decode.\n\n    Written by Marc-Andre Lemburg (mal@lemburg.com).\n\n\"\"\"</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code> <code class=\"ANY\">codecs</code><code class=\"ANY\">,</code> <code class=\"ANY\">base64</code>\n<code class=\"ANY\">\n</code><code class=\"COMMENT\">### Codec APIs</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">base64_encode</code><code class=\"ANY\">(</code><code class=\"ANY\">input</code><code class=\"ANY\">,</code><code class=\"ANY\">errors</code><code class=\"ANY\">=</code><code class=\"CHAR_STRING_LITERAL\">'strict'</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n\n<code class=\"ANY\">    </code><code class=\"CHAR_STRING_LITERAL\">\"\"\" Encodes the object input and returns a tuple (output\n        object, length consumed).\n\n        errors defines the error handling to apply. It defaults to\n        'strict' handling which is the only currently supported\n        error handling for this codec.\n\n    \"\"\"</code>\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">assert</code> <code class=\"ANY\">errors</code> <code class=\"ANY\">==</code> <code class=\"CHAR_STRING_LITERAL\">'strict'</code>\n   <code class=\"ANY\"> </code><code class=\"ANY\">output</code> <code class=\"ANY\">=</code> <code class=\"ANY\">base64</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">encodestring</code><code class=\"ANY\">(</code><code class=\"ANY\">input</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">output</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">len</code><code class=\"ANY\">(</code><code class=\"ANY\">input</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">base64_decode</code><code class=\"ANY\">(</code><code class=\"ANY\">input</code><code class=\"ANY\">,</code><code class=\"ANY\">errors</code><code class=\"ANY\">=</code><code class=\"CHAR_STRING_LITERAL\">'strict'</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n\n<code class=\"ANY\">    </code><code class=\"CHAR_STRING_LITERAL\">\"\"\" Decodes the object input and returns a tuple (output\n        object, length consumed).\n\n        input must be an object which provides the bf_getreadbuf\n        buffer slot. Python strings, buffer objects and memory\n        mapped files are examples of objects providing this slot.\n\n        errors defines the error handling to apply. It defaults to\n        'strict' handling which is the only currently supported\n        error handling for this codec.\n\n    \"\"\"</code>\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">assert</code> <code class=\"ANY\">errors</code> <code class=\"ANY\">==</code> <code class=\"CHAR_STRING_LITERAL\">'strict'</code>\n   <code class=\"ANY\"> </code><code class=\"ANY\">output</code> <code class=\"ANY\">=</code> <code class=\"ANY\">base64</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">decodestring</code><code class=\"ANY\">(</code><code class=\"ANY\">input</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">output</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">len</code><code class=\"ANY\">(</code><code class=\"ANY\">input</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">Codec</code><code class=\"ANY\">(</code><code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">Codec</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n\n<code class=\"ANY\">    </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">encode</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">input</code><code class=\"ANY\">,</code><code class=\"ANY\">errors</code><code class=\"ANY\">=</code><code class=\"CHAR_STRING_LITERAL\">'strict'</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"KEYWORD\">return</code> <code class=\"FUNCTION_IDENTIFIER\">base64_encode</code><code class=\"ANY\">(</code><code class=\"ANY\">input</code><code class=\"ANY\">,</code><code class=\"ANY\">errors</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">decode</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">input</code><code class=\"ANY\">,</code><code class=\"ANY\">errors</code><code class=\"ANY\">=</code><code class=\"CHAR_STRING_LITERAL\">'strict'</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"KEYWORD\">return</code> <code class=\"FUNCTION_IDENTIFIER\">base64_decode</code><code class=\"ANY\">(</code><code class=\"ANY\">input</code><code class=\"ANY\">,</code><code class=\"ANY\">errors</code><code class=\"ANY\">)</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">IncrementalEncoder</code><code class=\"ANY\">(</code><code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">IncrementalEncoder</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">    </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">encode</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">input</code><code class=\"ANY\">,</code> <code class=\"ANY\">final</code><code class=\"ANY\">=</code><code class=\"LITERAL\">False</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"KEYWORD\">assert</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">errors</code> <code class=\"ANY\">==</code> <code class=\"CHAR_STRING_LITERAL\">'strict'</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">base64</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">encodestring</code><code class=\"ANY\">(</code><code class=\"ANY\">input</code><code class=\"ANY\">)</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">IncrementalDecoder</code><code class=\"ANY\">(</code><code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">IncrementalDecoder</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">    </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">decode</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">input</code><code class=\"ANY\">,</code> <code class=\"ANY\">final</code><code class=\"ANY\">=</code><code class=\"LITERAL\">False</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"KEYWORD\">assert</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">errors</code> <code class=\"ANY\">==</code> <code class=\"CHAR_STRING_LITERAL\">'strict'</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">base64</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">decodestring</code><code class=\"ANY\">(</code><code class=\"ANY\">input</code><code class=\"ANY\">)</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">StreamWriter</code><code class=\"ANY\">(</code><code class=\"ANY\">Codec</code><code class=\"ANY\">,</code><code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">StreamWriter</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">    </code><code class=\"KEYWORD\">pass</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">StreamReader</code><code class=\"ANY\">(</code><code class=\"ANY\">Codec</code><code class=\"ANY\">,</code><code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">StreamReader</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">    </code><code class=\"KEYWORD\">pass</code>\n<code class=\"ANY\">\n</code><code class=\"COMMENT\">### encodings module API</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">getregentry</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">    </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">CodecInfo</code><code class=\"ANY\">(</code>\n        <code class=\"ANY\">name</code><code class=\"ANY\">=</code><code class=\"CHAR_STRING_LITERAL\">'base64'</code><code class=\"ANY\">,</code>\n        <code class=\"ANY\">encode</code><code class=\"ANY\">=</code><code class=\"ANY\">base64_encode</code><code class=\"ANY\">,</code>\n        <code class=\"ANY\">decode</code><code class=\"ANY\">=</code><code class=\"ANY\">base64_decode</code><code class=\"ANY\">,</code>\n        <code class=\"ANY\">incrementalencoder</code><code class=\"ANY\">=</code><code class=\"ANY\">IncrementalEncoder</code><code class=\"ANY\">,</code>\n        <code class=\"ANY\">incrementaldecoder</code><code class=\"ANY\">=</code><code class=\"ANY\">IncrementalDecoder</code><code class=\"ANY\">,</code>\n        <code class=\"ANY\">streamwriter</code><code class=\"ANY\">=</code><code class=\"ANY\">StreamWriter</code><code class=\"ANY\">,</code>\n        <code class=\"ANY\">streamreader</code><code class=\"ANY\">=</code><code class=\"ANY\">StreamReader</code><code class=\"ANY\">,</code>\n    <code class=\"ANY\">)</code><code class=\"ANY\">\n</code>\n</pre>\n</html>"},{"_id":{"language":"PYTHON3","lexingTokens":[3,41,10,42,56,42,41,99,41,42,60,42,51,42,41,6,42,54,42,56,42,60,3,55,57,1,41,7,42,51,42,54,42,56,42,56,31,55,2,33,42,54,42,51,42,55,57,1,41,6,42,54,42,56,42,60,3,55,57,1,41,42,51,42,51,42,54,42,56,42,55,41,42,51,42,60,30,2,6,42,54,42,56,42,56,42,60,32,55,57,1,41,15,42,51,42,29,30,57,1,41,42,60,42,51,42,54,42,56,42,51,42,55,61,4,62,41,15,42,51,42,78,3,57,1,41,42,51,42,60,42,51,42,2,17,57,1,41,42,51,42,60,42,51,42,2,7,42,2,7,42,51,42,54,42,56,42,51,42,55,61,4,62,2,6,42,54,42,55,57,1,41,42,51,42,51,42,54,42,55,41,42,51,42,60,30,2,6,42,54,42,55,57,1,41,99,41,99,41,99,41,99,41,7,54,4,15,42,51,42,29,30,17,4,55,2,6,42,54,42,56,42,55,57,1,41,15,42,57,1,41,42,51,42,60,30,2,17,57,1,41,15,42,51,42,78,3,57,1,41,42,51,42,60,42,51,42,2,17,57,1,41,42,51,42,60,42,51,42,2,33,42,54,42,51,42,55,57,1,41,6,42,54,42,56,42,60,3,55,57,1,41,42,51,42,51,42,54,42,56,42,55,41,42,51,42,60,30,2,6,42,54,42,56,42,56,42,56,42,55,57,1,41,15,42,51,42,29,30,57,1,41,54,42,56,42,56,42,55,60,42,51,42,54,42,56,42,56,4,56,42,55,41,15,42,78,69,4,57,1,41,42,51,42,60,42,51,42,2,16,42,78,4,57,1,41,42,51,42,60,42,51,42,2,16,42,79,4,57,1,41,8,42,54,3,55,2,7,54,42,56,42,55,2,7,42,51,42,54,42,56,42,51,42,56,42,55,2,6,42,54,42,55,57,1,41,42,51,42,51,42,54,42,55,41,42,51,42,60,30,2,33,42,54,42,51,42,55,57,1,41,6,42,54,42,56,42,56,42,60,3,55,57,1,41,42,51,42,51,42,54,42,56,42,56,42,55,41,42,51,42,60,30,2,6,42,54,42,55,57,1,41,42,51,42,51,42,54,42,55,41,42,51,42,60,30,2,6,42,54,42,56,42,56,42,60,3,55,57,1,41,15,42,51,42,29,30,57,1,41,42,60,42,51,42,54,42,56,42,55,41,15,42,51,42,78,3,57,1,41,42,51,42,60,42,51,42,2,17,57,1,41,42,51,42,60,42,51,42,2,7,42,2,17,57,1,41,7,42,51,42,54,42,56,42,55,2,33,42,54,42,51,42,55,57,1,41,6,42,54,42,55,57,1,41,42,51,42,51,42,54,42,55,41,21,57,1,41,35,42,51,42,2,24,42,57,1,41,36,2,6,42,54,42,56,42,56,42,60,3,55,57,1,41,54,42,56,42,56,42,55,60,42,51,42,54,42,56,42,56,4,56,32,55,41,15,42,78,69,4,57,1,41,42,51,42,60,42,51,42,2,16,42,78,4,57,1,41,42,51,42,60,42,51,42,2,16,42,79,4,57,1,41,8,42,56,3,2,7,54,42,56,42,55,2,99,41,6,42,54,55,57,1,41,7,42,51,42,54,42,60,3,56,42,60,42,56,42,60,42,56,42,60,42,56,42,60,42,56,42,60,42,56,42,60,42,56,55,2,-1]},"sourceCode":"\"\"\" Python 'utf-16' Codec\n\n\nWritten by Marc-Andre Lemburg (mal@lemburg.com).\n\n(c) Copyright CNRI, All Rights Reserved. NO WARRANTY.\n\n\"\"\"\nimport codecs, sys\n\n### Codec APIs\n\nencode = codecs.utf_16_encode\n\ndef decode(input, errors='strict'):\n    return codecs.utf_16_decode(input, errors, True)\n\nclass IncrementalEncoder(codecs.IncrementalEncoder):\n    def __init__(self, errors='strict'):\n        codecs.IncrementalEncoder.__init__(self, errors)\n        self.encoder = None\n\n    def encode(self, input, final=False):\n        if self.encoder is None:\n            result = codecs.utf_16_encode(input, self.errors)[0]\n            if sys.byteorder == 'little':\n                self.encoder = codecs.utf_16_le_encode\n            else:\n                self.encoder = codecs.utf_16_be_encode\n            return result\n        return self.encoder(input, self.errors)[0]\n\n    def reset(self):\n        codecs.IncrementalEncoder.reset(self)\n        self.encoder = None\n\n    def getstate(self):\n        # state info we return to the caller:\n        # 0: stream is in natural order for this platform\n        # 2: endianness hasn't been determined yet\n        # (we're never writing in unnatural order)\n        return (2 if self.encoder is None else 0)\n\n    def setstate(self, state):\n        if state:\n            self.encoder = None\n        else:\n            if sys.byteorder == 'little':\n                self.encoder = codecs.utf_16_le_encode\n            else:\n                self.encoder = codecs.utf_16_be_encode\n\nclass IncrementalDecoder(codecs.BufferedIncrementalDecoder):\n    def __init__(self, errors='strict'):\n        codecs.BufferedIncrementalDecoder.__init__(self, errors)\n        self.decoder = None\n\n    def _buffer_decode(self, input, errors, final):\n        if self.decoder is None:\n            (output, consumed, byteorder) = \\\n                codecs.utf_16_ex_decode(input, errors, 0, final)\n            if byteorder == -1:\n                self.decoder = codecs.utf_16_le_decode\n            elif byteorder == 1:\n                self.decoder = codecs.utf_16_be_decode\n            elif consumed >= 2:\n                raise UnicodeError(\"UTF-16 stream does not start with BOM\")\n            return (output, consumed)\n        return self.decoder(input, self.errors, final)\n\n    def reset(self):\n        codecs.BufferedIncrementalDecoder.reset(self)\n        self.decoder = None\n\nclass StreamWriter(codecs.StreamWriter):\n    def __init__(self, stream, errors='strict'):\n        codecs.StreamWriter.__init__(self, stream, errors)\n        self.encoder = None\n\n    def reset(self):\n        codecs.StreamWriter.reset(self)\n        self.encoder = None\n\n    def encode(self, input, errors='strict'):\n        if self.encoder is None:\n            result = codecs.utf_16_encode(input, errors)\n            if sys.byteorder == 'little':\n                self.encoder = codecs.utf_16_le_encode\n            else:\n                self.encoder = codecs.utf_16_be_encode\n            return result\n        else:\n            return self.encoder(input, errors)\n\nclass StreamReader(codecs.StreamReader):\n\n    def reset(self):\n        codecs.StreamReader.reset(self)\n        try:\n            del self.decode\n        except AttributeError:\n            pass\n\n    def decode(self, input, errors='strict'):\n        (object, consumed, byteorder) = \\\n            codecs.utf_16_ex_decode(input, errors, 0, False)\n        if byteorder == -1:\n            self.decode = codecs.utf_16_le_decode\n        elif byteorder == 1:\n            self.decode = codecs.utf_16_be_decode\n        elif consumed>=2:\n            raise UnicodeError,\"UTF-16 stream does not start with BOM\"\n        return (object, consumed)\n\n### encodings module API\n\ndef getregentry():\n    return codecs.CodecInfo(\n        name='utf-16',\n        encode=encode,\n        decode=decode,\n        incrementalencoder=IncrementalEncoder,\n        incrementaldecoder=IncrementalDecoder,\n        streamreader=StreamReader,\n        streamwriter=StreamWriter,\n    )\n","highlightingTokens":[3,0,1,0,0,0,0,4,0,0,0,0,0,10,0,1,6,0,0,0,0,0,3,0,0,0,0,1,0,0,9,0,0,0,0,0,2,0,0,1,5,0,0,0,10,0,0,0,0,1,6,0,0,0,0,0,3,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,10,0,1,0,1,6,0,0,0,0,0,0,0,2,0,0,0,0,1,0,0,10,1,1,0,0,0,0,0,0,0,9,0,0,0,0,0,10,0,0,2,0,0,1,0,0,10,0,3,0,0,0,0,0,10,0,0,0,10,0,1,0,0,0,0,0,10,0,0,0,10,0,1,0,0,1,0,0,9,0,0,0,0,0,10,0,0,2,0,0,1,6,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,10,0,1,0,1,6,0,0,0,0,0,0,4,0,4,0,4,0,4,0,1,0,2,1,0,0,10,1,1,1,2,0,0,1,6,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,10,0,1,0,1,0,0,0,1,0,0,10,0,3,0,0,0,0,0,10,0,0,0,10,0,1,0,0,0,0,0,10,0,0,0,10,0,1,5,0,0,0,10,0,0,0,0,1,6,0,0,0,0,0,3,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,10,0,1,0,1,6,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,10,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,2,0,0,0,0,1,0,0,0,2,0,0,0,0,0,10,0,0,0,10,0,1,0,0,2,0,0,0,0,0,10,0,0,0,10,0,1,0,0,2,0,0,0,1,9,0,3,0,0,1,0,0,0,0,0,0,1,0,0,9,0,0,0,0,0,10,0,0,0,0,1,6,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,10,0,1,0,1,5,0,0,0,10,0,0,0,0,1,6,0,0,0,0,0,0,0,3,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,0,0,10,0,1,0,1,6,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,10,0,1,0,1,6,0,0,0,0,0,0,0,3,0,0,0,0,1,0,0,10,1,1,0,0,0,0,0,0,0,9,0,0,0,0,0,0,1,0,0,10,0,3,0,0,0,0,0,10,0,0,0,10,0,1,0,0,0,0,0,10,0,0,0,10,0,1,0,0,1,0,0,0,1,0,0,9,0,0,0,0,0,0,1,5,0,0,0,10,0,0,0,0,1,6,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,1,0,0,0,1,0,0,10,0,1,0,0,0,0,1,0,1,6,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,2,0,2,0,0,1,0,0,0,2,0,0,0,0,0,10,0,0,0,10,0,1,0,0,2,0,0,0,0,0,10,0,0,0,10,0,1,0,0,2,0,0,0,1,0,0,3,0,1,0,0,0,0,0,0,4,0,1,6,0,0,0,0,0,1,0,0,9,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"highlightingCode":"<!DOCTYPE html>\n<html>\n<style>\n.ANY {\n    color: black;\n    font-weight: normal;\n    font-style: normal;\n}\n.KEYWORD {\n    color: blue;\n    font-weight: bold;\n    font-style: normal;\n}\n.LITERAL {\n    color: lightskyblue;\n    font-weight: bold;\n    font-style: normal;\n}\n.CHAR_STRING_LITERAL {\n    color: darkgoldenrod;\n    font-weight: normal;\n    font-style: normal;\n}\n.COMMENT {\n    color: grey;\n    font-weight: normal;\n    font-style: italic;\n}\n.CLASS_DECLARATOR {\n    color: crimson;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_DECLARATOR {\n    color: fuchsia;\n    font-weight: bold;\n    font-style: normal;\n}\n.VARIABLE_DECLARATOR {\n    color: purple;\n    font-weight: bold;\n    font-style: normal;\n}\n.TYPE_IDENTIFIER {\n    color: darkgreen;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_IDENTIFIER {\n    color: dodgerblue;\n    font-weight: normal;\n    font-style: normal;\n}\n.FIELD_IDENTIFIER {\n    color: coral;\n    font-weight: normal;\n    font-style: normal;\n}\n.ANNOTATION_DECLARATOR {\n    color: lightslategray;\n    font-weight: lighter;\n    font-style: italic;\n}\n</style>\n<pre>\n<code class=\"CHAR_STRING_LITERAL\">\"\"\" Python 'utf-16' Codec\n\n\nWritten by Marc-Andre Lemburg (mal@lemburg.com).\n\n(c) Copyright CNRI, All Rights Reserved. NO WARRANTY.\n\n\"\"\"</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code> <code class=\"ANY\">codecs</code><code class=\"ANY\">,</code> <code class=\"ANY\">sys</code>\n<code class=\"ANY\">\n</code><code class=\"COMMENT\">### Codec APIs</code>\n<code class=\"ANY\">\n</code><code class=\"ANY\">encode</code> <code class=\"ANY\">=</code> <code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">utf_16_encode</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">decode</code><code class=\"ANY\">(</code><code class=\"ANY\">input</code><code class=\"ANY\">,</code> <code class=\"ANY\">errors</code><code class=\"ANY\">=</code><code class=\"CHAR_STRING_LITERAL\">'strict'</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">    </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">utf_16_decode</code><code class=\"ANY\">(</code><code class=\"ANY\">input</code><code class=\"ANY\">,</code> <code class=\"ANY\">errors</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">True</code><code class=\"ANY\">)</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">IncrementalEncoder</code><code class=\"ANY\">(</code><code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">IncrementalEncoder</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">    </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">__init__</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">errors</code><code class=\"ANY\">=</code><code class=\"CHAR_STRING_LITERAL\">'strict'</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">IncrementalEncoder</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">__init__</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">errors</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">encoder</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">None</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">encode</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">input</code><code class=\"ANY\">,</code> <code class=\"ANY\">final</code><code class=\"ANY\">=</code><code class=\"LITERAL\">False</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">encoder</code> <code class=\"KEYWORD\">is</code> <code class=\"KEYWORD\">None</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">result</code> <code class=\"ANY\">=</code> <code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">utf_16_encode</code><code class=\"ANY\">(</code><code class=\"ANY\">input</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">errors</code><code class=\"ANY\">)</code><code class=\"ANY\">[</code><code class=\"LITERAL\">0</code><code class=\"ANY\">]</code>\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">sys</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">byteorder</code> <code class=\"ANY\">==</code> <code class=\"CHAR_STRING_LITERAL\">'little'</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">encoder</code> <code class=\"ANY\">=</code> <code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">utf_16_le_encode</code>\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">encoder</code> <code class=\"ANY\">=</code> <code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">utf_16_be_encode</code>\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">result</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">encoder</code><code class=\"ANY\">(</code><code class=\"ANY\">input</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">errors</code><code class=\"ANY\">)</code><code class=\"ANY\">[</code><code class=\"LITERAL\">0</code><code class=\"ANY\">]</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">reset</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">IncrementalEncoder</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">reset</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">encoder</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">None</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">getstate</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"COMMENT\"># state info we return to the caller:</code>\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># 0: stream is in natural order for this platform</code>\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># 2: endianness hasn't been determined yet</code>\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># (we're never writing in unnatural order)</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"LITERAL\">2</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">encoder</code> <code class=\"KEYWORD\">is</code> <code class=\"KEYWORD\">None</code> <code class=\"KEYWORD\">else</code> <code class=\"LITERAL\">0</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">setstate</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">state</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">state</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">encoder</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">None</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">sys</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">byteorder</code> <code class=\"ANY\">==</code> <code class=\"CHAR_STRING_LITERAL\">'little'</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">encoder</code> <code class=\"ANY\">=</code> <code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">utf_16_le_encode</code>\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">encoder</code> <code class=\"ANY\">=</code> <code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">utf_16_be_encode</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">IncrementalDecoder</code><code class=\"ANY\">(</code><code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">BufferedIncrementalDecoder</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">    </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">__init__</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">errors</code><code class=\"ANY\">=</code><code class=\"CHAR_STRING_LITERAL\">'strict'</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">BufferedIncrementalDecoder</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">__init__</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">errors</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">decoder</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">None</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_buffer_decode</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">input</code><code class=\"ANY\">,</code> <code class=\"ANY\">errors</code><code class=\"ANY\">,</code> <code class=\"ANY\">final</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">decoder</code> <code class=\"KEYWORD\">is</code> <code class=\"KEYWORD\">None</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">(</code><code class=\"ANY\">output</code><code class=\"ANY\">,</code> <code class=\"ANY\">consumed</code><code class=\"ANY\">,</code> <code class=\"ANY\">byteorder</code><code class=\"ANY\">)</code> <code class=\"ANY\">=</code> \\\n                <code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">utf_16_ex_decode</code><code class=\"ANY\">(</code><code class=\"ANY\">input</code><code class=\"ANY\">,</code> <code class=\"ANY\">errors</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">0</code><code class=\"ANY\">,</code> <code class=\"ANY\">final</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">byteorder</code> <code class=\"ANY\">==</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">decoder</code> <code class=\"ANY\">=</code> <code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">utf_16_le_decode</code>\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">elif</code> <code class=\"ANY\">byteorder</code> <code class=\"ANY\">==</code> <code class=\"LITERAL\">1</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">decoder</code> <code class=\"ANY\">=</code> <code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">utf_16_be_decode</code>\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">elif</code> <code class=\"ANY\">consumed</code> <code class=\"ANY\">>=</code> <code class=\"LITERAL\">2</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"KEYWORD\">raise</code> <code class=\"FUNCTION_IDENTIFIER\">UnicodeError</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"UTF-16 stream does not start with BOM\"</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">output</code><code class=\"ANY\">,</code> <code class=\"ANY\">consumed</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">decoder</code><code class=\"ANY\">(</code><code class=\"ANY\">input</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">errors</code><code class=\"ANY\">,</code> <code class=\"ANY\">final</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">reset</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">BufferedIncrementalDecoder</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">reset</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">decoder</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">None</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">StreamWriter</code><code class=\"ANY\">(</code><code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">StreamWriter</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">    </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">__init__</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">stream</code><code class=\"ANY\">,</code> <code class=\"ANY\">errors</code><code class=\"ANY\">=</code><code class=\"CHAR_STRING_LITERAL\">'strict'</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">StreamWriter</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">__init__</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">stream</code><code class=\"ANY\">,</code> <code class=\"ANY\">errors</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">encoder</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">None</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">reset</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">StreamWriter</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">reset</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">encoder</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">None</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">encode</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">input</code><code class=\"ANY\">,</code> <code class=\"ANY\">errors</code><code class=\"ANY\">=</code><code class=\"CHAR_STRING_LITERAL\">'strict'</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">encoder</code> <code class=\"KEYWORD\">is</code> <code class=\"KEYWORD\">None</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">result</code> <code class=\"ANY\">=</code> <code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">utf_16_encode</code><code class=\"ANY\">(</code><code class=\"ANY\">input</code><code class=\"ANY\">,</code> <code class=\"ANY\">errors</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">sys</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">byteorder</code> <code class=\"ANY\">==</code> <code class=\"CHAR_STRING_LITERAL\">'little'</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">encoder</code> <code class=\"ANY\">=</code> <code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">utf_16_le_encode</code>\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">encoder</code> <code class=\"ANY\">=</code> <code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">utf_16_be_encode</code>\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">result</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">encoder</code><code class=\"ANY\">(</code><code class=\"ANY\">input</code><code class=\"ANY\">,</code> <code class=\"ANY\">errors</code><code class=\"ANY\">)</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">StreamReader</code><code class=\"ANY\">(</code><code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">StreamReader</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n\n<code class=\"ANY\">    </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">reset</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">StreamReader</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">reset</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">try</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"KEYWORD\">del</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">decode</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">except</code> <code class=\"ANY\">AttributeError</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"KEYWORD\">pass</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">decode</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">input</code><code class=\"ANY\">,</code> <code class=\"ANY\">errors</code><code class=\"ANY\">=</code><code class=\"CHAR_STRING_LITERAL\">'strict'</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">(</code><code class=\"ANY\">object</code><code class=\"ANY\">,</code> <code class=\"ANY\">consumed</code><code class=\"ANY\">,</code> <code class=\"ANY\">byteorder</code><code class=\"ANY\">)</code> <code class=\"ANY\">=</code> \\\n            <code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">utf_16_ex_decode</code><code class=\"ANY\">(</code><code class=\"ANY\">input</code><code class=\"ANY\">,</code> <code class=\"ANY\">errors</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">0</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">False</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">byteorder</code> <code class=\"ANY\">==</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">decode</code> <code class=\"ANY\">=</code> <code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">utf_16_le_decode</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">elif</code> <code class=\"ANY\">byteorder</code> <code class=\"ANY\">==</code> <code class=\"LITERAL\">1</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">decode</code> <code class=\"ANY\">=</code> <code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">utf_16_be_decode</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">elif</code> <code class=\"ANY\">consumed</code><code class=\"ANY\">>=</code><code class=\"LITERAL\">2</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"KEYWORD\">raise</code> <code class=\"ANY\">UnicodeError</code><code class=\"ANY\">,</code><code class=\"CHAR_STRING_LITERAL\">\"UTF-16 stream does not start with BOM\"</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">(</code><code class=\"ANY\">object</code><code class=\"ANY\">,</code> <code class=\"ANY\">consumed</code><code class=\"ANY\">)</code>\n<code class=\"ANY\">\n</code><code class=\"COMMENT\">### encodings module API</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">getregentry</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">    </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">codecs</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">CodecInfo</code><code class=\"ANY\">(</code>\n        <code class=\"ANY\">name</code><code class=\"ANY\">=</code><code class=\"CHAR_STRING_LITERAL\">'utf-16'</code><code class=\"ANY\">,</code>\n        <code class=\"ANY\">encode</code><code class=\"ANY\">=</code><code class=\"ANY\">encode</code><code class=\"ANY\">,</code>\n        <code class=\"ANY\">decode</code><code class=\"ANY\">=</code><code class=\"ANY\">decode</code><code class=\"ANY\">,</code>\n        <code class=\"ANY\">incrementalencoder</code><code class=\"ANY\">=</code><code class=\"ANY\">IncrementalEncoder</code><code class=\"ANY\">,</code>\n        <code class=\"ANY\">incrementaldecoder</code><code class=\"ANY\">=</code><code class=\"ANY\">IncrementalDecoder</code><code class=\"ANY\">,</code>\n        <code class=\"ANY\">streamreader</code><code class=\"ANY\">=</code><code class=\"ANY\">StreamReader</code><code class=\"ANY\">,</code>\n        <code class=\"ANY\">streamwriter</code><code class=\"ANY\">=</code><code class=\"ANY\">StreamWriter</code><code class=\"ANY\">,</code>\n    <code class=\"ANY\">)</code><code class=\"ANY\">\n</code>\n</pre>\n</html>"},{"_id":{"language":"PYTHON3","lexingTokens":[99,41,99,41,3,41,9,42,10,42,41,10,42,41,10,42,51,42,41,9,42,10,54,42,56,42,56,42,55,41,9,42,10,42,41,9,42,51,42,51,42,10,42,41,9,42,51,42,51,42,10,42,11,42,41,9,51,42,10,42,41,9,51,42,10,42,41,9,51,42,10,42,41,9,51,42,10,54,42,56,42,56,42,56,42,56,42,55,41,42,60,3,41,42,60,3,41,42,60,42,54,55,41,99,41,6,42,54,42,55,57,1,41,6,42,54,42,55,57,1,41,6,42,54,53,42,56,59,42,55,57,1,41,42,51,42,54,55,41,42,60,42,54,53,42,56,59,42,55,41,42,51,42,54,55,41,7,42,2,7,42,2,7,42,2,33,42,54,42,55,57,1,41,3,41,42,60,54,3,56,3,56,3,56,3,56,3,55,41,42,60,54,3,56,3,56,3,55,41,42,60,54,3,56,3,56,3,55,41,42,60,54,3,56,3,56,3,55,41,6,42,54,42,56,42,56,42,55,57,1,41,42,51,42,60,42,41,42,51,42,60,42,41,42,51,42,60,42,54,42,68,42,54,42,55,55,41,42,51,42,54,55,2,83,42,41,6,42,54,42,55,57,1,41,7,42,51,42,2,83,42,51,42,41,6,42,54,42,56,42,55,57,1,41,15,42,28,20,42,51,42,57,1,41,8,42,54,42,55,2,15,42,78,3,57,1,41,42,51,42,61,3,62,60,42,2,15,42,78,3,57,1,41,42,51,42,61,3,62,60,42,51,42,61,4,62,2,15,42,78,3,57,1,41,42,51,42,61,3,62,60,42,51,42,61,4,62,2,15,42,78,3,57,1,41,42,51,42,61,3,62,60,42,2,15,42,78,3,57,1,41,42,51,42,61,3,62,60,42,51,42,61,4,62,2,42,51,42,60,42,2,6,42,54,42,55,57,1,41,15,42,54,42,56,3,55,27,42,51,42,78,42,51,42,61,4,62,57,1,41,8,42,54,3,55,2,42,51,42,60,42,51,42,61,4,62,41,42,51,42,60,3,41,42,51,42,60,61,62,41,42,51,42,60,61,62,41,42,51,42,60,61,62,41,42,51,42,60,74,3,57,42,51,42,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,42,51,42,56,3,57,3,56,3,57,3,75,41,42,51,42,60,42,54,42,51,42,55,41,99,41,42,51,42,60,32,2,6,42,54,42,55,57,1,41,3,41,42,60,61,62,41,19,42,56,42,20,42,54,42,51,42,55,57,1,41,42,60,42,68,42,51,42,61,42,62,41,42,51,42,54,42,51,42,51,42,54,42,51,42,56,42,55,55,2,7,42,2,6,42,54,42,56,42,55,57,1,41,3,41,14,42,54,42,56,42,55,41,19,42,20,42,57,1,41,15,42,20,42,51,42,57,1,41,42,60,42,61,42,62,41,15,28,42,54,42,56,42,55,26,28,42,57,1,41,42,51,42,61,42,62,60,42,51,42,61,42,62,2,17,57,1,41,42,51,42,61,42,62,60,42,2,99,41,15,3,20,42,57,1,41,42,51,42,60,31,2,15,3,20,42,57,1,41,99,41,15,42,51,42,57,1,41,42,51,42,60,61,62,41,42,51,42,60,61,62,41,42,51,42,60,61,62,41,42,51,42,60,32,2,42,51,42,51,42,54,42,61,3,62,55,2,15,3,20,42,57,1,41,42,51,42,51,42,54,42,61,3,62,55,2,15,3,20,42,57,1,41,42,51,42,60,42,61,3,62,2,15,3,20,42,57,1,41,15,42,61,3,62,78,3,27,42,54,42,51,42,55,76,42,54,42,51,42,55,57,1,41,42,60,42,61,3,62,51,42,54,3,55,99,41,42,51,42,51,42,54,42,54,42,55,55,2,15,3,20,42,57,1,41,99,41,99,41,15,42,61,3,62,78,42,51,42,61,4,62,27,42,54,42,51,42,55,78,4,57,1,41,42,60,42,51,42,61,4,62,68,42,51,42,61,4,62,41,42,51,42,51,42,54,42,55,41,42,51,42,61,3,62,60,42,54,42,55,2,42,51,42,54,42,61,3,62,55,2,6,42,54,42,56,42,55,57,1,41,15,42,20,42,51,42,57,1,41,42,51,42,60,42,51,42,61,4,62,2,15,42,20,42,51,42,57,1,41,42,51,42,60,42,51,42,61,4,62,2,15,42,20,42,51,42,57,1,41,42,51,42,60,42,51,42,61,4,62,2,6,42,54,42,56,42,55,57,1,41,7,42,51,42,78,42,51,42,2,33,42,54,42,55,57,1,41,3,41,6,42,54,42,56,42,60,30,55,57,1,41,14,42,54,42,56,42,55,26,42,29,30,41,15,42,29,30,57,1,41,42,51,42,60,74,75,99,41,42,51,42,60,61,62,99,2,17,57,1,41,42,51,42,60,61,42,51,42,19,42,20,42,62,41,42,51,42,60,74,42,51,42,57,42,19,42,20,42,75,2,83,42,54,42,55,41,6,42,54,42,55,57,1,41,3,41,42,51,42,60,61,62,41,42,51,42,60,74,75,2,83,42,54,42,55,41,6,42,54,42,56,42,55,57,1,41,3,41,42,51,42,51,42,54,42,51,42,55,41,42,51,42,61,42,51,42,62,60,42,2,83,42,54,42,55,41,6,42,54,42,56,42,55,57,1,41,3,41,15,42,51,42,61,42,62,51,42,82,3,57,1,41,42,51,42,51,42,54,42,55,41,35,42,51,42,61,42,62,41,7,31,2,7,32,2,83,42,54,42,55,41,6,42,54,42,55,57,1,41,3,41,19,42,20,42,51,42,57,1,41,42,60,42,51,42,61,42,62,41,15,42,51,42,78,3,57,1,41,7,42,2,7,30,2,83,42,54,42,55,41,6,42,54,42,56,42,55,57,1,41,3,41,42,60,42,51,42,51,42,54,42,55,41,15,42,77,4,57,1,41,42,51,42,54,42,56,42,69,4,55,41,7,31,2,7,32,2,83,42,54,42,55,41,6,42,54,42,56,42,55,57,1,41,3,41,42,60,42,51,42,51,42,54,42,55,41,15,42,76,54,42,54,42,51,42,55,69,4,55,57,1,41,42,51,42,54,42,56,42,68,4,55,41,7,31,2,7,32,2,83,42,54,42,55,41,6,42,54,42,56,42,55,57,1,41,3,41,7,42,51,42,61,42,62,2,83,42,54,42,55,41,6,42,54,42,56,42,55,57,1,41,3,41,7,42,20,42,51,42,2,83,42,54,42,55,41,6,42,54,42,55,57,1,41,3,41,7,61,42,51,42,61,42,62,19,42,20,42,51,42,62,2,83,42,54,42,55,41,6,42,54,42,56,42,56,42,55,57,1,41,3,41,42,51,42,61,42,62,51,42,60,42,2,83,42,54,42,55,41,6,42,54,42,56,42,55,57,1,41,3,41,15,42,20,42,51,42,57,1,41,7,42,51,42,51,42,54,42,55,2,7,69,4,2,83,42,54,42,55,41,6,42,54,42,55,57,1,41,7,42,54,42,51,42,55,2,6,42,54,42,56,42,56,42,55,57,1,41,42,51,42,61,42,62,56,42,51,42,61,42,62,60,42,51,42,61,42,62,56,42,51,42,61,42,62,2,33,42,54,42,55,57,1,41,3,41,42,60,4,41,6,42,54,42,56,42,56,42,56,42,56,42,60,30,55,57,1,41,42,54,42,56,42,55,51,42,54,55,41,42,51,42,60,42,41,42,51,42,60,42,41,42,51,42,60,42,41,42,51,42,60,42,41,42,51,42,60,4,41,42,51,42,60,4,41,42,51,42,60,31,41,99,41,42,60,30,15,42,29,30,17,42,54,55,41,42,60,54,42,56,42,51,42,54,55,56,42,56,42,55,41,42,51,42,60,61,42,54,53,42,55,19,42,20,42,54,42,51,42,61,3,62,55,62,41,42,51,42,54,55,2,83,42,41,6,42,54,42,55,57,1,41,3,41,7,42,51,42,2,83,42,41,6,42,54,42,55,57,1,41,3,41,7,42,51,42,2,6,42,54,42,55,57,1,41,15,28,42,51,42,51,42,61,3,62,57,1,41,42,51,42,54,55,2,42,51,42,60,42,51,42,54,55,41,18,42,51,42,57,1,41,42,60,42,51,42,51,42,54,55,41,15,42,29,28,30,57,1,41,42,60,42,51,42,54,55,41,15,42,29,28,30,57,1,41,42,51,42,54,42,51,42,56,42,51,42,56,42,51,42,55,41,42,51,42,51,42,54,42,51,42,56,3,55,2,15,42,29,30,27,42,51,42,54,55,57,1,41,38,2,42,51,42,54,42,51,42,55,2,99,41,19,42,20,42,51,42,57,1,41,42,51,42,54,55,2,99,41,19,42,20,42,51,42,57,1,41,42,51,42,54,55,41,42,51,42,85,42,51,42,2,42,51,42,60,42,51,42,54,55,69,42,51,42,41,15,28,42,51,42,57,1,41,42,51,42,54,3,55,2,17,57,1,41,42,51,42,54,3,55,2,6,42,54,42,55,57,1,41,3,41,99,41,99,1,41,99,1,41,99,2,99,41,7,42,54,42,51,42,55,2,6,42,54,42,55,57,1,41,3,41,42,51,42,54,3,55,41,42,51,42,60,32,2,6,42,54,42,56,42,55,57,1,41,3,41,42,51,42,51,42,54,42,55,2,6,42,54,42,56,42,55,57,1,41,3,41,15,3,20,42,57,1,41,19,42,20,42,51,42,57,1,41,15,42,51,42,54,42,61,3,62,55,57,1,41,42,51,42,54,42,55,2,6,42,54,42,56,42,55,57,1,41,3,41,42,54,42,51,42,56,42,56,42,55,2,6,42,54,42,55,57,1,41,3,41,15,28,42,54,42,51,42,54,55,55,27,42,51,42,51,42,29,30,57,1,41,42,51,42,51,42,60,42,54,42,51,42,51,42,61,3,62,56,31,55,41,42,51,42,51,42,51,42,54,55,41,42,51,42,51,42,60,30,2,6,42,54,42,55,57,1,41,19,42,20,42,51,42,57,1,41,15,42,51,42,54,55,57,1,41,7,42,2,7,30,2,6,42,54,42,55,57,1,41,3,41,19,42,20,42,51,42,57,1,41,15,28,42,51,42,54,55,57,1,41,7,32,2,7,31,2,6,42,54,42,55,57,1,41,3,41,42,60,42,51,42,51,42,61,3,62,41,42,60,42,51,42,51,42,54,42,56,42,55,41,7,42,2,33,42,54,42,55,57,1,41,3,41,42,60,4,41,6,42,54,42,56,42,56,42,56,42,60,30,56,42,60,30,55,57,1,41,42,54,42,56,42,55,51,42,54,55,41,42,51,42,60,42,41,42,51,42,60,42,41,42,51,42,60,42,41,42,51,42,60,42,54,42,56,42,51,42,56,42,51,42,55,41,42,51,42,60,42,54,55,41,42,51,42,60,4,41,42,51,42,60,31,41,42,51,42,60,30,41,42,51,42,60,32,41,42,51,42,60,74,3,57,30,56,3,57,30,56,3,57,30,56,3,57,30,56,3,57,30,56,3,57,30,56,3,57,30,56,3,57,30,56,3,57,30,56,3,57,30,56,3,57,30,56,3,57,30,56,3,57,30,75,41,42,51,42,54,55,2,6,42,54,42,55,57,1,41,18,42,51,42,57,1,41,15,42,51,42,61,3,62,29,28,30,57,1,41,99,41,42,60,42,51,42,51,42,54,42,51,42,61,3,62,56,42,51,42,55,41,15,54,42,78,42,51,42,26,42,78,42,51,42,26,42,78,42,51,42,55,57,1,41,42,51,42,85,4,2,99,41,99,41,99,41,99,1,41,99,2,42,51,42,54,55,2,42,51,42,54,42,51,42,55,2,99,41,42,51,42,51,42,54,55,2,6,42,54,42,56,42,56,42,56,42,55,57,1,41,3,41,42,51,42,61,3,62,60,42,41,42,51,42,60,42,41,42,51,42,61,3,62,60,42,2,6,42,54,42,55,57,1,41,3,41,42,51,42,51,42,54,55,2,6,42,54,42,55,57,1,41,3,41,42,51,42,60,32,41,42,51,42,51,42,54,55,2,6,42,54,42,55,57,1,41,3,41,7,42,51,42,61,3,62,29,30,2,6,42,54,42,56,42,55,57,1,41,3,41,7,42,51,42,61,3,62,78,42,2,6,42,54,42,56,42,55,57,1,41,3,41,15,42,51,42,57,1,41,99,41,19,42,20,42,57,1,41,42,51,42,61,42,62,60,42,61,42,62,2,42,51,42,60,32,2,83,42,41,6,42,54,42,55,57,1,41,3,41,7,42,51,42,2,6,42,54,42,55,57,1,41,3,41,19,42,20,42,51,42,57,1,41,42,51,42,61,42,62,60,30,2,6,42,54,42,56,42,55,57,1,41,3,41,15,42,51,42,29,28,30,57,1,41,42,51,42,51,42,54,55,41,42,51,42,51,42,54,42,55,41,42,51,42,51,42,54,55,2,6,42,54,42,56,42,55,57,1,41,3,41,99,41,99,41,99,41,99,1,41,99,1,41,99,41,99,2,99,41,99,41,99,1,41,99,1,41,99,1,41,99,41,99,41,99,2,99,2,99,1,41,99,2,42,51,42,54,3,56,42,55,2,6,42,54,42,56,42,56,42,55,57,1,41,3,41,42,61,3,62,60,42,51,42,61,3,62,41,15,42,78,3,57,1,41,42,51,42,60,31,2,42,54,42,51,42,56,42,56,54,42,56,42,55,55,2,41,-1]},"sourceCode":"#!/usr/bin/env python2\n# -*- coding: utf-8 -*-\n\n\"\"\"Youtubedlg module for managing the download process.\n\nThis module is responsible for managing the download process\nand update the GUI interface.\n\nAttributes:\n    MANAGER_PUB_TOPIC (string): wxPublisher subscription topic of the\n        DownloadManager thread.\n\n    WORKER_PUB_TOPIC (string): wxPublisher subscription topic of the\n        Worker thread.\n\nNote:\n    It's not the actual module that downloads the urls\n    thats the job of the 'downloaders' module.\n\n\"\"\"\n\nfrom __future__ import unicode_literals\n\nimport time\nimport os.path\n\nfrom threading import (\n    Thread,\n    RLock,\n    Lock\n)\n\nfrom wx import CallAfter\nfrom wx.lib.pubsub import setuparg1\nfrom wx.lib.pubsub import pub as Publisher\n\nfrom .parsers import OptionsParser\nfrom .updatemanager import UpdateThread\nfrom .downloaders import YoutubeDLDownloader\n\nfrom .utils import (\n    YOUTUBEDL_BIN,\n    os_path_exists,\n    format_bytes,\n    to_string,\n    to_bytes\n)\n\n\nMANAGER_PUB_TOPIC = 'dlmanager'\nWORKER_PUB_TOPIC = 'dlworker'\n\n_SYNC_LOCK = RLock()\n\n# Decorator that adds thread synchronization to a function\ndef synchronized(lock):\n    def _decorator(func):\n        def _wrapper(*args, **kwargs):\n            lock.acquire()\n            ret_value = func(*args, **kwargs)\n            lock.release()\n            return ret_value\n        return _wrapper\n    return _decorator\n\n\nclass DownloadItem(object):\n\n    \"\"\"Object that represents a download.\n\n    Attributes:\n        STAGES (tuple): Main stages of the download item.\n\n        ACTIVE_STAGES (tuple): Sub stages of the 'Active' stage.\n\n        COMPLETED_STAGES (tuple): Sub stages of the 'Completed' stage.\n\n        ERROR_STAGES (tuple): Sub stages of the 'Error' stage.\n\n    Args:\n        url (string): URL that corresponds to the download item.\n\n        options (list): Options list to use during the download phase.\n\n    \"\"\"\n\n    STAGES = (\"Queued\", \"Active\", \"Paused\", \"Completed\", \"Error\")\n\n    ACTIVE_STAGES = (\"Pre Processing\", \"Downloading\", \"Post Processing\")\n\n    COMPLETED_STAGES = (\"Finished\", \"Warning\", \"Already Downloaded\")\n\n    ERROR_STAGES = (\"Error\", \"Stopped\", \"Filesize Abort\")\n\n    def __init__(self, url, options):\n        self.url = url\n        self.options = options\n        self.object_id = hash(url + to_string(options))\n\n        self.reset()\n\n    @property\n    def stage(self):\n        return self._stage\n\n    @stage.setter\n    def stage(self, value):\n        if value not in self.STAGES:\n            raise ValueError(value)\n\n        if value == \"Queued\":\n            self.progress_stats[\"status\"] = value\n        if value == \"Active\":\n            self.progress_stats[\"status\"] = self.ACTIVE_STAGES[0]\n        if value == \"Completed\":\n            self.progress_stats[\"status\"] = self.COMPLETED_STAGES[0]\n        if value == \"Paused\":\n            self.progress_stats[\"status\"] = value\n        if value == \"Error\":\n            self.progress_stats[\"status\"] = self.ERROR_STAGES[0]\n\n        self._stage = value\n\n    def reset(self):\n        if hasattr(self, \"_stage\") and self._stage == self.STAGES[1]:\n            raise RuntimeError(\"Cannot reset an 'Active' item\")\n\n        self._stage = self.STAGES[0]\n        self.path = \"\"\n        self.filenames = []\n        self.extensions = []\n        self.filesizes = []\n\n        self.default_values = {\n            \"filename\": self.url,\n            \"extension\": \"-\",\n            \"filesize\": \"-\",\n            \"percent\": \"0%\",\n            \"speed\": \"-\",\n            \"eta\": \"-\",\n            \"status\": self.stage,\n            \"playlist_size\": \"\",\n            \"playlist_index\": \"\"\n        }\n\n        self.progress_stats = dict(self.default_values)\n\n        # Keep track when the 'playlist_index' changes\n        self.playlist_index_changed = False\n\n    def get_files(self):\n        \"\"\"Returns a list that contains all the system files bind to this object.\"\"\"\n        files = []\n\n        for index, item in enumerate(self.filenames):\n            filename = item + self.extensions[index]\n            files.append(os.path.join(self.path, filename))\n\n        return files\n\n    def update_stats(self, stats_dict):\n        \"\"\"Updates the progress_stats dict from the given dictionary.\"\"\"\n        assert isinstance(stats_dict, dict)\n\n        for key in stats_dict:\n            if key in self.progress_stats:\n                value = stats_dict[key]\n\n                if not isinstance(value, basestring) or not value:\n                    self.progress_stats[key] = self.default_values[key]\n                else:\n                    self.progress_stats[key] = value\n\n        # Extract extra stuff\n        if \"playlist_index\" in stats_dict:\n            self.playlist_index_changed = True\n\n        if \"filename\" in stats_dict:\n\n            # Reset filenames, extensions & filesizes lists when changing playlist item\n            if self.playlist_index_changed:\n                self.filenames = []\n                self.extensions = []\n                self.filesizes = []\n\n                self.playlist_index_changed = False\n\n            self.filenames.append(stats_dict[\"filename\"])\n\n        if \"extension\" in stats_dict:\n            self.extensions.append(stats_dict[\"extension\"])\n\n        if \"path\" in stats_dict:\n            self.path = stats_dict[\"path\"]\n\n        if \"filesize\" in stats_dict:\n            if stats_dict[\"percent\"] == \"100%\" and len(self.filesizes) < len(self.filenames):\n                filesize = stats_dict[\"filesize\"].lstrip(\"~\")  # HLS downloader etc\n                self.filesizes.append(to_bytes(filesize))\n\n        if \"status\" in stats_dict:\n            # If we are post processing try to calculate the size of\n            # the output file since youtube-dl does not\n            if stats_dict[\"status\"] == self.ACTIVE_STAGES[2] and len(self.filesizes) == 2:\n                post_proc_filesize = self.filesizes[0] + self.filesizes[1]\n\n                self.filesizes.append(post_proc_filesize)\n                self.progress_stats[\"filesize\"] = format_bytes(post_proc_filesize)\n\n            self._set_stage(stats_dict[\"status\"])\n\n    def _set_stage(self, status):\n        if status in self.ACTIVE_STAGES:\n            self._stage = self.STAGES[1]\n\n        if status in self.COMPLETED_STAGES:\n            self._stage = self.STAGES[3]\n\n        if status in self.ERROR_STAGES:\n            self._stage = self.STAGES[4]\n\n    def __eq__(self, other):\n        return self.object_id == other.object_id\n\n\n\nclass DownloadList(object):\n\n    \"\"\"List like data structure that contains DownloadItems.\n\n    Args:\n        items (list): List that contains DownloadItems.\n\n    \"\"\"\n\n    def __init__(self, items=None):\n        assert isinstance(items, list) or items is None\n\n        if items is None:\n            self._items_dict = {}  # Speed up lookup\n            self._items_list = []  # Keep the sequence\n        else:\n            self._items_list = [item.object_id for item in items]\n            self._items_dict = {item.object_id: item for item in items}\n\n    @synchronized(_SYNC_LOCK)\n    def clear(self):\n        \"\"\"Removes all the items from the list even the 'Active' ones.\"\"\"\n        self._items_list = []\n        self._items_dict = {}\n\n    @synchronized(_SYNC_LOCK)\n    def insert(self, item):\n        \"\"\"Inserts the given item to the list. Does not check for duplicates. \"\"\"\n        self._items_list.append(item.object_id)\n        self._items_dict[item.object_id] = item\n\n    @synchronized(_SYNC_LOCK)\n    def remove(self, object_id):\n        \"\"\"Removes an item from the list.\n\n        Removes the item with the corresponding object_id from\n        the list if the item is not in 'Active' state.\n\n        Returns:\n            True on success else False.\n\n        \"\"\"\n        if self._items_dict[object_id].stage != \"Active\":\n            self._items_list.remove(object_id)\n            del self._items_dict[object_id]\n\n            return True\n        return False\n\n    @synchronized(_SYNC_LOCK)\n    def fetch_next(self):\n        \"\"\"Returns the next queued item on the list.\n\n        Returns:\n            Next queued item or None if no other item exist.\n\n        \"\"\"\n        for object_id in self._items_list:\n            cur_item = self._items_dict[object_id]\n\n            if cur_item.stage == \"Queued\":\n                return cur_item\n\n        return None\n\n    @synchronized(_SYNC_LOCK)\n    def move_up(self, object_id):\n        \"\"\"Moves the item with the corresponding object_id up to the list.\"\"\"\n        index = self._items_list.index(object_id)\n\n        if index > 0:\n            self._swap(index, index - 1)\n            return True\n\n        return False\n\n    @synchronized(_SYNC_LOCK)\n    def move_down(self, object_id):\n        \"\"\"Moves the item with the corresponding object_id down to the list.\"\"\"\n        index = self._items_list.index(object_id)\n\n        if index < (len(self._items_list) - 1):\n            self._swap(index, index + 1)\n            return True\n\n        return False\n\n    @synchronized(_SYNC_LOCK)\n    def get_item(self, object_id):\n        \"\"\"Returns the DownloadItem with the given object_id.\"\"\"\n        return self._items_dict[object_id]\n\n    @synchronized(_SYNC_LOCK)\n    def has_item(self, object_id):\n        \"\"\"Returns True if the given object_id is in the list else False.\"\"\"\n        return object_id in self._items_list\n\n    @synchronized(_SYNC_LOCK)\n    def get_items(self):\n        \"\"\"Returns a list with all the items.\"\"\"\n        return [self._items_dict[object_id] for object_id in self._items_list]\n\n    @synchronized(_SYNC_LOCK)\n    def change_stage(self, object_id, new_stage):\n        \"\"\"Change the stage of the item with the given object_id.\"\"\"\n        self._items_dict[object_id].stage = new_stage\n\n    @synchronized(_SYNC_LOCK)\n    def index(self, object_id):\n        \"\"\"Get the zero based index of the item with the given object_id.\"\"\"\n        if object_id in self._items_list:\n            return self._items_list.index(object_id)\n        return -1\n\n    @synchronized(_SYNC_LOCK)\n    def __len__(self):\n        return len(self._items_list)\n\n    def _swap(self, index1, index2):\n        self._items_list[index1], self._items_list[index2] = self._items_list[index2], self._items_list[index1]\n\n\nclass DownloadManager(Thread):\n\n    \"\"\"Manages the download process.\n\n    Attributes:\n        WAIT_TIME (float): Time in seconds to sleep.\n\n    Args:\n        download_list (DownloadList): List that contains items to download.\n\n        opt_manager (optionsmanager.OptionsManager): Object responsible for\n            managing the youtubedlg options.\n\n        log_manager (logmanager.LogManager): Object responsible for writing\n            errors to the log.\n\n    \"\"\"\n\n    WAIT_TIME = 0.1\n\n    def __init__(self, parent, download_list, opt_manager, log_manager=None):\n        super(DownloadManager, self).__init__()\n        self.parent = parent\n        self.opt_manager = opt_manager\n        self.log_manager = log_manager\n        self.download_list = download_list\n\n        self._time_it_took = 0\n        self._successful = 0\n        self._running = True\n\n        # Init the custom workers thread pool\n        log_lock = None if log_manager is None else Lock()\n        wparams = (opt_manager, self._youtubedl_path(), log_manager, log_lock)\n        self._workers = [Worker(*wparams) for _ in xrange(opt_manager.options[\"workers_number\"])]\n\n        self.start()\n\n    @property\n    def successful(self):\n        \"\"\"Returns number of successful downloads. \"\"\"\n        return self._successful\n\n    @property\n    def time_it_took(self):\n        \"\"\"Returns time(seconds) it took for the download process\n        to complete. \"\"\"\n        return self._time_it_took\n\n    def run(self):\n        if not self.opt_manager.options[\"disable_update\"]:\n            self._check_youtubedl()\n        self._time_it_took = time.time()\n\n        while self._running:\n            item = self.download_list.fetch_next()\n\n            if item is not None:\n                worker = self._get_worker()\n\n                if worker is not None:\n                    worker.download(item.url, item.options, item.object_id)\n                    self.download_list.change_stage(item.object_id, \"Active\")\n\n            if item is None and self._jobs_done():\n                break\n\n            time.sleep(self.WAIT_TIME)\n\n        # Close all the workers\n        for worker in self._workers:\n            worker.close()\n\n        # Join and collect\n        for worker in self._workers:\n            worker.join()\n            self._successful += worker.successful\n\n        self._time_it_took = time.time() - self._time_it_took\n\n        if not self._running:\n            self._talk_to_gui('closed')\n        else:\n            self._talk_to_gui('finished')\n\n    def active(self):\n        \"\"\"Returns number of active items.\n\n        Note:\n            active_items = (workers that work) + (items waiting in the url_list).\n\n        \"\"\"\n        #counter = 0\n        #for worker in self._workers:\n            #if not worker.available():\n                #counter += 1\n\n        #counter += len(self.download_list)\n\n        return len(self.download_list)\n\n    def stop_downloads(self):\n        \"\"\"Stop the download process. Also send 'closing'\n        signal back to the GUI.\n\n        Note:\n            It does NOT kill the workers thats the job of the\n            clean up task in the run() method.\n\n        \"\"\"\n        self._talk_to_gui('closing')\n        self._running = False\n\n    def add_url(self, url):\n        \"\"\"Add given url to the download_list.\n\n        Args:\n            url (dict): Python dictionary that contains two keys.\n                The url and the index of the corresponding row in which\n                the worker should send back the information about the\n                download process.\n\n        \"\"\"\n        self.download_list.append(url)\n\n    def send_to_worker(self, data):\n        \"\"\"Send data to the Workers.\n\n        Args:\n            data (dict): Python dictionary that holds the 'index'\n            which is used to identify the Worker thread and the data which\n            can be any of the Worker's class valid data. For a list of valid\n            data keys see __init__() under the Worker class.\n\n        \"\"\"\n        if 'index' in data:\n            for worker in self._workers:\n                if worker.has_index(data['index']):\n                    worker.update_data(data)\n\n    def _talk_to_gui(self, data):\n        \"\"\"Send data back to the GUI using wxCallAfter and wxPublisher.\n\n        Args:\n            data (string): Unique signal string that informs the GUI for the\n                download process.\n\n        Note:\n            DownloadManager supports 4 signals.\n                1) closing: The download process is closing.\n                2) closed: The download process has closed.\n                3) finished: The download process was completed normally.\n                4) report_active: Signal the gui to read the number of active\n                    downloads using the active() method.\n\n        \"\"\"\n        CallAfter(Publisher.sendMessage, MANAGER_PUB_TOPIC, data)\n\n    def _check_youtubedl(self):\n        \"\"\"Check if youtube-dl binary exists. If not try to download it. \"\"\"\n        if not os_path_exists(self._youtubedl_path()) and self.parent.update_thread is None:\n            self.parent.update_thread = UpdateThread(self.opt_manager.options['youtubedl_path'], True)\n            self.parent.update_thread.join()\n            self.parent.update_thread = None\n\n    def _get_worker(self):\n        for worker in self._workers:\n            if worker.available():\n                return worker\n\n        return None\n\n    def _jobs_done(self):\n        \"\"\"Returns True if the workers have finished their jobs else False. \"\"\"\n        for worker in self._workers:\n            if not worker.available():\n                return False\n\n        return True\n\n    def _youtubedl_path(self):\n        \"\"\"Returns the path to youtube-dl binary. \"\"\"\n        path = self.opt_manager.options['youtubedl_path']\n        path = os.path.join(path, YOUTUBEDL_BIN)\n        return path\n\n\nclass Worker(Thread):\n\n    \"\"\"Simple worker which downloads the given url using a downloader\n    from the downloaders.py module.\n\n    Attributes:\n        WAIT_TIME (float): Time in seconds to sleep.\n\n    Args:\n        opt_manager (optionsmanager.OptionsManager): Check DownloadManager\n            description.\n\n        youtubedl (string): Absolute path to youtube-dl binary.\n\n        log_manager (logmanager.LogManager): Check DownloadManager\n            description.\n\n        log_lock (threading.Lock): Synchronization lock for the log_manager.\n            If the log_manager is set (not None) then the caller has to make\n            sure that the log_lock is also set.\n\n    Note:\n        For available data keys see self._data under the __init__() method.\n\n    \"\"\"\n\n    WAIT_TIME = 0.1\n\n    def __init__(self, opt_manager, youtubedl, log_manager=None, log_lock=None):\n        super(Worker, self).__init__()\n        self.opt_manager = opt_manager\n        self.log_manager = log_manager\n        self.log_lock = log_lock\n\n        self._downloader = YoutubeDLDownloader(youtubedl, self._data_hook, self._log_data)\n        self._options_parser = OptionsParser()\n        self._successful = 0\n        self._running = True\n        self._options = None\n\n        self._wait_for_reply = False\n\n        self._data = {\n            'playlist_index': None,\n            'playlist_size': None,\n            'new_filename': None,\n            'extension': None,\n            'filesize': None,\n            'filename': None,\n            'percent': None,\n            'status': None,\n            'index': None,\n            'speed': None,\n            'path': None,\n            'eta': None,\n            'url': None\n        }\n\n        self.start()\n\n    def run(self):\n        while self._running:\n            if self._data['url'] is not None:\n                #options = self._options_parser.parse(self.opt_manager.options)\n                ret_code = self._downloader.download(self._data['url'], self._options)\n\n                if (ret_code == YoutubeDLDownloader.OK or\n                        ret_code == YoutubeDLDownloader.ALREADY or\n                        ret_code == YoutubeDLDownloader.WARNING):\n                    self._successful += 1\n\n                # Ask GUI for name updates\n                #self._talk_to_gui('receive', {'source': 'filename', 'dest': 'new_filename'})\n\n                # Wait until you get a reply\n                #while self._wait_for_reply:\n                    #time.sleep(self.WAIT_TIME)\n\n                self._reset()\n\n            time.sleep(self.WAIT_TIME)\n\n        # Call the destructor function of YoutubeDLDownloader object\n        self._downloader.close()\n\n    def download(self, url, options, object_id):\n        \"\"\"Download given item.\n\n        Args:\n            item (dict): Python dictionary that contains two keys.\n                The url and the index of the corresponding row in which\n                the worker should send back the information about the\n                download process.\n\n        \"\"\"\n        self._data['url'] = url\n        self._options = options\n        self._data['index'] = object_id\n\n    def stop_download(self):\n        \"\"\"Stop the download process of the worker. \"\"\"\n        self._downloader.stop()\n\n    def close(self):\n        \"\"\"Kill the worker after stopping the download process. \"\"\"\n        self._running = False\n        self._downloader.stop()\n\n    def available(self):\n        \"\"\"Return True if the worker has no job else False. \"\"\"\n        return self._data['url'] is None\n\n    def has_index(self, index):\n        \"\"\"Return True if index is equal to self._data['index'] else False. \"\"\"\n        return self._data['index'] == index\n\n    def update_data(self, data):\n        \"\"\"Update self._data from the given data. \"\"\"\n        if self._wait_for_reply:\n            # Update data only if a receive request has been issued\n            for key in data:\n                self._data[key] = data[key]\n\n            self._wait_for_reply = False\n\n    @property\n    def successful(self):\n        \"\"\"Return the number of successful downloads for current worker. \"\"\"\n        return self._successful\n\n    def _reset(self):\n        \"\"\"Reset self._data back to the original state. \"\"\"\n        for key in self._data:\n            self._data[key] = None\n\n    def _log_data(self, data):\n        \"\"\"Callback method for self._downloader.\n\n        This method is used to write the given data in a synchronized way\n        to the log file using the self.log_manager and the self.log_lock.\n\n        Args:\n            data (string): String to write to the log file.\n\n        \"\"\"\n        if self.log_manager is not None:\n            self.log_lock.acquire()\n            self.log_manager.log(data)\n            self.log_lock.release()\n\n    def _data_hook(self, data):\n        \"\"\"Callback method for self._downloader.\n\n        This method updates self._data and sends the updates back to the\n        GUI using the self._talk_to_gui() method.\n\n        Args:\n            data (dict): Python dictionary which contains information\n                about the download process. For more info see the\n                extract_data() function under the downloaders.py module.\n\n        \"\"\"\n        ## Temp dictionary which holds the updates\n        #temp_dict = {}\n\n        ## Update each key\n        #for key in data:\n            #if self._data[key] != data[key]:\n                #self._data[key] = data[key]\n                #temp_dict[key] = data[key]\n\n        ## Build the playlist status if there is an update\n        ## REFACTOR re-implement this on DownloadItem or ListCtrl level?\n        ##if self._data['playlist_index'] is not None:\n            ##if 'status' in temp_dict or 'playlist_index' in temp_dict:\n                ##temp_dict['status'] = '{status} {index}/{size}'.format(\n                        ##status=self._data['status'],\n                        ##index=self._data['playlist_index'],\n                        ##size=self._data['playlist_size']\n                    ##)\n\n        #if len(temp_dict):\n            #self._talk_to_gui('send', temp_dict)\n        self._talk_to_gui('send', data)\n\n    def _talk_to_gui(self, signal, data):\n        \"\"\"Communicate with the GUI using wxCallAfter and wxPublisher.\n\n        Send/Ask data to/from the GUI. Note that if the signal is 'receive'\n        then the Worker will wait until it receives a reply from the GUI.\n\n        Args:\n            signal (string): Unique string that informs the GUI about the\n                communication procedure.\n\n            data (dict): Python dictionary which holds the data to be sent\n                back to the GUI. If the signal is 'send' then the dictionary\n                contains the updates for the GUI (e.g. percentage, eta). If\n                the signal is 'receive' then the dictionary contains exactly\n                three keys. The 'index' (row) from which we want to retrieve\n                the data, the 'source' which identifies a column in the\n                wxListCtrl widget and the 'dest' which tells the wxListCtrl\n                under which key to store the retrieved data.\n\n        Note:\n            Worker class supports 2 signals.\n                1) send: The Worker sends data back to the GUI\n                         (e.g. Send status updates).\n                2) receive: The Worker asks data from the GUI\n                            (e.g. Receive the name of a file).\n\n        Structure:\n            ('send', {'index': <item_row>, data_to_send*})\n\n            ('receive', {'index': <item_row>, 'source': 'source_key', 'dest': 'destination_key'})\n\n        \"\"\"\n        data['index'] = self._data['index']\n\n        if signal == 'receive':\n            self._wait_for_reply = True\n\n        CallAfter(Publisher.sendMessage, WORKER_PUB_TOPIC, (signal, data))\n\n","highlightingTokens":[4,0,4,0,3,0,1,0,1,0,0,1,0,0,1,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,3,0,0,0,9,0,0,0,4,0,1,6,0,0,0,0,0,0,1,6,0,0,0,0,0,0,1,6,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,9,0,0,0,1,0,0,1,0,0,1,0,0,1,5,0,0,0,0,0,0,3,0,0,0,0,3,0,3,0,3,0,3,0,3,0,0,0,0,0,3,0,3,0,3,0,0,0,0,0,3,0,3,0,3,0,0,0,0,0,3,0,3,0,3,0,0,1,6,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,10,0,0,0,0,0,10,0,9,0,0,0,9,0,0,0,0,0,0,0,9,0,0,0,11,11,0,1,6,0,0,0,0,0,0,1,0,0,10,0,11,11,0,11,0,1,6,0,0,0,0,0,0,0,0,1,0,1,1,0,0,10,0,0,0,1,9,0,0,0,0,1,0,0,3,0,0,0,0,0,10,0,3,0,0,0,0,1,0,0,3,0,0,0,0,0,10,0,3,0,0,0,0,10,0,2,0,0,1,0,0,3,0,0,0,0,0,10,0,3,0,0,0,0,10,0,2,0,0,1,0,0,3,0,0,0,0,0,10,0,3,0,0,0,0,1,0,0,3,0,0,0,0,0,10,0,3,0,0,0,0,10,0,2,0,0,0,0,10,0,0,0,1,6,0,0,0,0,0,0,1,9,0,0,0,3,0,1,0,0,10,0,0,0,10,0,2,0,0,0,0,1,9,0,3,0,0,0,0,10,0,0,0,10,0,2,0,0,0,0,10,0,3,0,0,0,10,0,0,0,0,0,0,10,0,0,0,0,0,0,10,0,0,0,0,0,0,10,0,0,3,0,0,0,10,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,0,0,10,0,3,0,3,0,3,0,3,0,0,0,0,10,0,9,0,0,0,10,0,0,4,0,0,0,10,0,2,0,1,6,0,0,0,0,0,0,3,0,0,0,0,0,0,1,0,0,0,1,9,0,0,0,10,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,9,0,0,0,10,0,9,0,0,0,10,0,0,0,0,0,1,0,0,1,6,0,0,0,0,0,0,0,0,3,0,1,9,0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,1,0,0,10,0,0,0,0,0,0,0,0,0,0,1,1,9,0,0,0,0,0,1,1,0,0,0,0,0,0,10,0,0,0,0,0,0,10,0,0,0,0,1,0,0,0,0,0,10,0,0,0,0,0,0,4,0,1,3,1,0,0,0,0,0,0,10,0,2,0,1,3,1,0,0,0,0,4,0,1,0,0,10,0,0,0,0,0,10,0,0,0,0,0,0,10,0,0,0,0,0,0,10,0,0,0,0,0,0,10,0,2,0,0,0,10,0,9,0,0,0,3,0,0,0,1,3,1,0,0,0,0,0,0,10,0,9,0,0,0,3,0,0,0,1,3,1,0,0,0,0,0,0,10,0,0,0,3,0,0,1,3,1,0,0,0,0,1,0,0,3,0,0,3,1,9,0,0,0,10,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,3,0,0,9,0,3,0,4,0,0,0,10,0,9,0,9,0,0,0,0,0,1,3,1,0,0,0,0,4,0,4,0,1,0,0,3,0,0,0,0,10,0,2,0,1,9,0,0,0,10,0,0,2,0,0,0,0,0,0,0,10,0,2,0,0,0,0,10,0,2,0,0,0,0,10,0,9,0,0,0,0,0,0,10,0,3,0,0,9,0,0,0,0,0,0,9,0,0,0,3,0,0,0,1,6,0,0,0,0,0,0,0,0,1,0,1,0,0,10,0,0,0,0,0,10,0,0,0,10,0,2,0,0,1,0,1,0,0,10,0,0,0,0,0,10,0,0,0,10,0,2,0,0,1,0,1,0,0,10,0,0,0,0,0,10,0,0,0,10,0,2,0,0,1,6,0,0,0,0,0,0,0,0,1,0,0,10,0,0,0,10,0,1,5,0,0,0,0,0,0,3,0,1,6,0,0,0,0,0,1,0,0,0,0,1,9,0,0,0,0,0,1,0,1,1,0,1,0,1,1,0,0,0,0,0,10,0,0,0,4,0,0,0,10,0,0,0,4,0,1,0,0,0,0,0,10,0,0,0,0,10,1,0,1,0,0,0,0,0,10,0,0,0,0,10,0,0,1,0,1,0,0,0,11,11,0,0,0,0,1,6,0,0,0,0,0,0,3,0,0,0,10,0,0,0,0,0,0,10,0,0,0,0,11,11,0,0,0,0,1,6,0,0,0,0,0,0,0,0,3,0,0,0,10,0,9,0,0,0,10,0,0,0,0,10,0,0,0,10,0,0,0,0,11,11,0,0,0,0,1,6,0,0,0,0,0,0,0,0,3,0,1,0,0,10,0,0,0,0,10,0,3,0,0,0,0,0,10,0,9,0,0,0,0,1,0,0,10,0,0,0,0,1,2,0,1,2,0,11,11,0,0,0,0,1,6,0,0,0,0,0,0,3,0,1,0,1,0,0,10,0,0,0,0,0,0,0,10,0,0,0,0,1,0,0,10,0,3,0,0,0,1,0,0,1,1,0,11,11,0,0,0,0,1,6,0,0,0,0,0,0,0,0,3,0,0,0,0,0,10,0,9,0,0,0,0,1,0,0,2,0,0,0,0,0,9,0,0,0,0,0,2,0,0,1,2,0,1,2,0,11,11,0,0,0,0,1,6,0,0,0,0,0,0,0,0,3,0,0,0,0,0,10,0,9,0,0,0,0,1,0,0,0,9,0,0,0,10,0,0,2,0,0,0,0,0,0,9,0,0,0,0,0,2,0,0,1,2,0,1,2,0,11,11,0,0,0,0,1,6,0,0,0,0,0,0,0,0,3,0,1,0,0,10,0,0,0,0,11,11,0,0,0,0,1,6,0,0,0,0,0,0,0,0,3,0,1,0,1,0,0,10,0,11,11,0,0,0,0,1,6,0,0,0,0,0,0,3,0,1,0,0,0,10,0,0,0,1,0,1,0,0,10,0,0,11,11,0,0,0,0,1,6,0,0,0,0,0,0,0,0,0,0,3,0,0,0,10,0,0,0,0,10,0,0,0,11,11,0,0,0,0,1,6,0,0,0,0,0,0,0,0,3,0,1,0,1,0,0,10,0,0,0,1,0,0,10,0,9,0,0,0,0,1,0,2,0,11,11,0,0,0,0,1,6,0,0,0,0,0,0,1,9,0,0,0,10,0,0,1,6,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,10,0,0,0,0,0,0,10,0,0,0,0,0,0,10,0,0,0,0,1,5,0,0,0,0,0,0,3,0,0,0,2,0,1,6,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,0,0,0,0,0,0,9,0,0,0,0,0,10,0,0,0,0,0,10,0,0,0,0,0,10,0,0,0,0,0,10,0,0,0,0,0,10,0,2,0,0,0,10,0,2,0,0,0,10,0,2,0,4,0,0,0,1,1,0,1,1,1,9,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,10,0,0,9,0,0,0,0,1,0,1,9,0,0,0,10,0,3,0,0,0,0,0,0,9,0,0,0,11,11,0,1,6,0,0,0,0,0,0,3,0,1,0,0,10,0,11,11,0,1,6,0,0,0,0,0,0,3,0,1,0,0,10,0,1,6,0,0,0,0,0,0,1,1,0,0,10,0,10,0,3,0,0,0,0,0,0,9,0,0,0,0,0,10,0,0,0,9,0,0,0,1,0,0,10,0,0,0,0,0,0,0,10,0,9,0,0,0,1,0,1,1,1,0,0,0,0,0,0,0,9,0,0,0,1,0,1,1,1,0,0,0,0,0,9,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,0,10,0,9,0,0,0,10,0,3,0,0,1,0,1,1,1,0,0,9,0,0,0,0,0,1,0,0,0,9,0,0,0,10,0,0,4,0,1,0,1,0,0,10,0,0,0,0,0,9,0,0,0,4,0,1,0,1,0,0,10,0,0,0,0,0,9,0,0,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,9,0,0,0,0,0,10,0,1,1,0,0,10,0,0,0,0,0,9,0,3,0,0,1,0,0,0,0,0,9,0,3,0,0,1,6,0,0,0,0,0,0,3,0,4,0,4,0,0,4,0,0,4,0,4,0,1,9,0,0,0,10,0,0,1,6,0,0,0,0,0,0,3,0,0,0,9,0,3,0,0,0,0,10,0,2,0,1,6,0,0,0,0,0,0,0,0,3,0,0,0,10,0,9,0,0,0,0,1,6,0,0,0,0,0,0,0,0,3,0,1,3,1,0,0,0,0,1,0,1,0,0,10,0,0,0,1,0,0,9,0,0,0,3,0,0,0,0,0,0,0,9,0,0,0,0,1,6,0,0,0,0,0,0,0,0,3,0,9,0,0,0,10,0,0,0,0,0,0,1,6,0,0,0,0,0,0,3,0,1,1,9,0,0,0,9,0,0,0,1,0,0,10,0,10,1,1,0,0,0,0,0,10,0,10,0,9,0,0,0,10,0,10,0,3,0,0,2,0,0,0,0,10,0,10,0,9,0,0,0,0,0,10,0,10,0,1,0,1,6,0,0,0,0,0,0,1,0,1,0,0,10,0,0,0,1,0,0,9,0,0,0,0,0,1,0,0,1,1,0,1,6,0,0,0,0,0,0,3,0,1,0,1,0,0,10,0,0,0,1,1,0,0,9,0,0,0,0,0,1,2,0,1,2,0,1,6,0,0,0,0,0,0,3,0,0,0,0,0,10,0,10,0,3,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,1,0,0,1,5,0,0,0,0,0,0,3,0,0,0,2,0,1,6,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,9,0,0,0,0,0,0,9,0,0,0,0,0,10,0,0,0,0,0,10,0,0,0,0,0,10,0,0,0,0,0,10,0,9,0,0,0,0,0,10,0,0,0,10,0,0,0,0,10,0,9,0,0,0,0,0,10,0,2,0,0,0,10,0,2,0,0,0,10,0,1,0,0,0,10,0,2,0,0,0,10,0,0,3,0,1,0,3,0,1,0,3,0,1,0,3,0,1,0,3,0,1,0,3,0,1,0,3,0,1,0,3,0,1,0,3,0,1,0,3,0,1,0,3,0,1,0,3,0,1,0,3,0,1,0,0,0,0,9,0,0,0,1,6,0,0,0,0,0,0,1,0,0,10,0,0,0,1,0,0,10,0,3,0,1,1,1,0,0,0,4,0,0,0,0,0,10,0,9,0,0,0,10,0,3,0,0,0,0,10,0,0,1,0,0,0,0,0,10,1,0,0,0,0,10,1,0,0,0,0,10,0,0,0,0,0,0,10,0,2,0,4,0,4,0,4,0,4,0,0,4,0,0,0,9,0,0,0,0,0,9,0,0,0,10,0,0,4,0,0,0,10,0,9,0,0,0,1,6,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,10,0,3,0,0,0,0,0,0,10,0,0,0,0,0,10,0,3,0,0,0,0,1,6,0,0,0,0,0,0,3,0,0,0,10,0,9,0,0,0,1,6,0,0,0,0,0,0,3,0,0,0,10,0,2,0,0,0,10,0,9,0,0,0,1,6,0,0,0,0,0,0,3,0,1,0,0,10,0,3,0,1,1,0,1,6,0,0,0,0,0,0,0,0,3,0,1,0,0,10,0,3,0,0,0,0,1,6,0,0,0,0,0,0,0,0,3,0,1,0,0,10,0,0,0,4,0,1,0,1,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,10,0,2,0,11,11,0,1,6,0,0,0,0,0,0,3,0,1,0,0,10,0,1,6,0,0,0,0,0,0,3,0,1,0,1,0,0,10,0,0,0,0,0,10,0,0,0,0,1,0,1,6,0,0,0,0,0,0,0,0,3,0,1,0,0,10,1,1,1,0,0,0,0,0,10,0,9,0,0,0,0,0,10,0,9,0,0,0,0,0,0,10,0,9,0,0,0,1,6,0,0,0,0,0,0,0,0,3,0,4,0,4,0,4,0,4,0,0,4,0,0,4,0,4,0,4,0,4,0,4,0,0,4,0,0,4,0,0,4,0,4,0,4,0,4,0,4,0,0,4,0,0,0,9,0,3,0,0,0,0,1,6,0,0,0,0,0,0,0,0,0,0,3,0,0,0,3,0,0,0,0,10,0,3,0,0,1,0,0,3,0,0,0,0,0,10,0,2,0,9,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0],"highlightingCode":"<!DOCTYPE html>\n<html>\n<style>\n.ANY {\n    color: black;\n    font-weight: normal;\n    font-style: normal;\n}\n.KEYWORD {\n    color: blue;\n    font-weight: bold;\n    font-style: normal;\n}\n.LITERAL {\n    color: lightskyblue;\n    font-weight: bold;\n    font-style: normal;\n}\n.CHAR_STRING_LITERAL {\n    color: darkgoldenrod;\n    font-weight: normal;\n    font-style: normal;\n}\n.COMMENT {\n    color: grey;\n    font-weight: normal;\n    font-style: italic;\n}\n.CLASS_DECLARATOR {\n    color: crimson;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_DECLARATOR {\n    color: fuchsia;\n    font-weight: bold;\n    font-style: normal;\n}\n.VARIABLE_DECLARATOR {\n    color: purple;\n    font-weight: bold;\n    font-style: normal;\n}\n.TYPE_IDENTIFIER {\n    color: darkgreen;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_IDENTIFIER {\n    color: dodgerblue;\n    font-weight: normal;\n    font-style: normal;\n}\n.FIELD_IDENTIFIER {\n    color: coral;\n    font-weight: normal;\n    font-style: normal;\n}\n.ANNOTATION_DECLARATOR {\n    color: lightslategray;\n    font-weight: lighter;\n    font-style: italic;\n}\n</style>\n<pre>\n<code class=\"COMMENT\">#!/usr/bin/env python2</code><code class=\"ANY\">\n</code><code class=\"COMMENT\"># -*- coding: utf-8 -*-</code>\n<code class=\"ANY\">\n</code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Youtubedlg module for managing the download process.\n\nThis module is responsible for managing the download process\nand update the GUI interface.\n\nAttributes:\n    MANAGER_PUB_TOPIC (string): wxPublisher subscription topic of the\n        DownloadManager thread.\n\n    WORKER_PUB_TOPIC (string): wxPublisher subscription topic of the\n        Worker thread.\n\nNote:\n    It's not the actual module that downloads the urls\n    thats the job of the 'downloaders' module.\n\n\"\"\"</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">from</code> <code class=\"ANY\">__future__</code> <code class=\"KEYWORD\">import</code> <code class=\"ANY\">unicode_literals</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code> <code class=\"ANY\">time</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code> <code class=\"ANY\">os</code><code class=\"ANY\">.</code><code class=\"ANY\">path</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">from</code> <code class=\"ANY\">threading</code> <code class=\"KEYWORD\">import</code> <code class=\"ANY\">(</code>\n    <code class=\"ANY\">Thread</code><code class=\"ANY\">,</code>\n    <code class=\"ANY\">RLock</code><code class=\"ANY\">,</code>\n    <code class=\"ANY\">Lock</code>\n<code class=\"ANY\">)</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">from</code> <code class=\"ANY\">wx</code> <code class=\"KEYWORD\">import</code> <code class=\"ANY\">CallAfter</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">from</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"ANY\">lib</code><code class=\"ANY\">.</code><code class=\"ANY\">pubsub</code> <code class=\"KEYWORD\">import</code> <code class=\"ANY\">setuparg1</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">from</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"ANY\">lib</code><code class=\"ANY\">.</code><code class=\"ANY\">pubsub</code> <code class=\"KEYWORD\">import</code> <code class=\"ANY\">pub</code> <code class=\"KEYWORD\">as</code> <code class=\"ANY\">Publisher</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">from</code> <code class=\"ANY\">.</code><code class=\"ANY\">parsers</code> <code class=\"KEYWORD\">import</code> <code class=\"ANY\">OptionsParser</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">from</code> <code class=\"ANY\">.</code><code class=\"ANY\">updatemanager</code> <code class=\"KEYWORD\">import</code> <code class=\"ANY\">UpdateThread</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">from</code> <code class=\"ANY\">.</code><code class=\"ANY\">downloaders</code> <code class=\"KEYWORD\">import</code> <code class=\"ANY\">YoutubeDLDownloader</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">from</code> <code class=\"ANY\">.</code><code class=\"ANY\">utils</code> <code class=\"KEYWORD\">import</code> <code class=\"ANY\">(</code>\n    <code class=\"ANY\">YOUTUBEDL_BIN</code><code class=\"ANY\">,</code>\n    <code class=\"ANY\">os_path_exists</code><code class=\"ANY\">,</code>\n    <code class=\"ANY\">format_bytes</code><code class=\"ANY\">,</code>\n    <code class=\"ANY\">to_string</code><code class=\"ANY\">,</code>\n    <code class=\"ANY\">to_bytes</code>\n<code class=\"ANY\">)</code>\n\n<code class=\"ANY\">\n</code><code class=\"ANY\">MANAGER_PUB_TOPIC</code> <code class=\"ANY\">=</code> <code class=\"CHAR_STRING_LITERAL\">'dlmanager'</code><code class=\"ANY\">\n</code><code class=\"ANY\">WORKER_PUB_TOPIC</code> <code class=\"ANY\">=</code> <code class=\"CHAR_STRING_LITERAL\">'dlworker'</code>\n<code class=\"ANY\">\n</code><code class=\"ANY\">_SYNC_LOCK</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">RLock</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n<code class=\"ANY\">\n</code><code class=\"COMMENT\"># Decorator that adds thread synchronization to a function</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">synchronized</code><code class=\"ANY\">(</code><code class=\"ANY\">lock</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">    </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_decorator</code><code class=\"ANY\">(</code><code class=\"ANY\">func</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_wrapper</code><code class=\"ANY\">(</code><code class=\"ANY\">*</code><code class=\"ANY\">args</code><code class=\"ANY\">,</code> <code class=\"ANY\">**</code><code class=\"ANY\">kwargs</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">lock</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">acquire</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">ret_value</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">func</code><code class=\"ANY\">(</code><code class=\"ANY\">*</code><code class=\"ANY\">args</code><code class=\"ANY\">,</code> <code class=\"ANY\">**</code><code class=\"ANY\">kwargs</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">lock</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">release</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">ret_value</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">_wrapper</code>\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">_decorator</code>\n\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">DownloadItem</code><code class=\"ANY\">(</code><code class=\"ANY\">object</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n\n<code class=\"ANY\">    </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Object that represents a download.\n\n    Attributes:\n        STAGES (tuple): Main stages of the download item.\n\n        ACTIVE_STAGES (tuple): Sub stages of the 'Active' stage.\n\n        COMPLETED_STAGES (tuple): Sub stages of the 'Completed' stage.\n\n        ERROR_STAGES (tuple): Sub stages of the 'Error' stage.\n\n    Args:\n        url (string): URL that corresponds to the download item.\n\n        options (list): Options list to use during the download phase.\n\n    \"\"\"</code>\n\n   <code class=\"ANY\"> </code><code class=\"ANY\">STAGES</code> <code class=\"ANY\">=</code> <code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Queued\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"Active\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"Paused\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"Completed\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"Error\"</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"ANY\">ACTIVE_STAGES</code> <code class=\"ANY\">=</code> <code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Pre Processing\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"Downloading\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"Post Processing\"</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"ANY\">COMPLETED_STAGES</code> <code class=\"ANY\">=</code> <code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Finished\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"Warning\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"Already Downloaded\"</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"ANY\">ERROR_STAGES</code> <code class=\"ANY\">=</code> <code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Error\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"Stopped\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"Filesize Abort\"</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">__init__</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">url</code><code class=\"ANY\">,</code> <code class=\"ANY\">options</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">url</code> <code class=\"ANY\">=</code> <code class=\"ANY\">url</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">options</code> <code class=\"ANY\">=</code> <code class=\"ANY\">options</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">object_id</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">hash</code><code class=\"ANY\">(</code><code class=\"ANY\">url</code> <code class=\"ANY\">+</code> <code class=\"FUNCTION_IDENTIFIER\">to_string</code><code class=\"ANY\">(</code><code class=\"ANY\">options</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">reset</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">property</code>\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">stage</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_stage</code>\n\n   <code class=\"ANY\"> </code><code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">stage</code><code class=\"ANY\">.</code><code class=\"ANNOTATION_DECLARATOR\">setter</code>\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">stage</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">value</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">value</code> <code class=\"KEYWORD\">not</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">STAGES</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"KEYWORD\">raise</code> <code class=\"FUNCTION_IDENTIFIER\">ValueError</code><code class=\"ANY\">(</code><code class=\"ANY\">value</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">value</code> <code class=\"ANY\">==</code> <code class=\"CHAR_STRING_LITERAL\">\"Queued\"</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">progress_stats</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"status\"</code><code class=\"ANY\">]</code> <code class=\"ANY\">=</code> <code class=\"ANY\">value</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">value</code> <code class=\"ANY\">==</code> <code class=\"CHAR_STRING_LITERAL\">\"Active\"</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">progress_stats</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"status\"</code><code class=\"ANY\">]</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ACTIVE_STAGES</code><code class=\"ANY\">[</code><code class=\"LITERAL\">0</code><code class=\"ANY\">]</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">value</code> <code class=\"ANY\">==</code> <code class=\"CHAR_STRING_LITERAL\">\"Completed\"</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">progress_stats</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"status\"</code><code class=\"ANY\">]</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">COMPLETED_STAGES</code><code class=\"ANY\">[</code><code class=\"LITERAL\">0</code><code class=\"ANY\">]</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">value</code> <code class=\"ANY\">==</code> <code class=\"CHAR_STRING_LITERAL\">\"Paused\"</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">progress_stats</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"status\"</code><code class=\"ANY\">]</code> <code class=\"ANY\">=</code> <code class=\"ANY\">value</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">value</code> <code class=\"ANY\">==</code> <code class=\"CHAR_STRING_LITERAL\">\"Error\"</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">progress_stats</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"status\"</code><code class=\"ANY\">]</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ERROR_STAGES</code><code class=\"ANY\">[</code><code class=\"LITERAL\">0</code><code class=\"ANY\">]</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_stage</code> <code class=\"ANY\">=</code> <code class=\"ANY\">value</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">reset</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"KEYWORD\">if</code> <code class=\"FUNCTION_IDENTIFIER\">hasattr</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"_stage\"</code><code class=\"ANY\">)</code> <code class=\"KEYWORD\">and</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_stage</code> <code class=\"ANY\">==</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">STAGES</code><code class=\"ANY\">[</code><code class=\"LITERAL\">1</code><code class=\"ANY\">]</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"KEYWORD\">raise</code> <code class=\"FUNCTION_IDENTIFIER\">RuntimeError</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Cannot reset an 'Active' item\"</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_stage</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">STAGES</code><code class=\"ANY\">[</code><code class=\"LITERAL\">0</code><code class=\"ANY\">]</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">path</code> <code class=\"ANY\">=</code> <code class=\"CHAR_STRING_LITERAL\">\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">filenames</code> <code class=\"ANY\">=</code> <code class=\"ANY\">[</code><code class=\"ANY\">]</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">extensions</code> <code class=\"ANY\">=</code> <code class=\"ANY\">[</code><code class=\"ANY\">]</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">filesizes</code> <code class=\"ANY\">=</code> <code class=\"ANY\">[</code><code class=\"ANY\">]</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">default_values</code> <code class=\"ANY\">=</code> <code class=\"ANY\">{</code>\n            <code class=\"CHAR_STRING_LITERAL\">\"filename\"</code><code class=\"ANY\">:</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">url</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">\"extension\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"-\"</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">\"filesize\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"-\"</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">\"percent\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"0%\"</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">\"speed\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"-\"</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">\"eta\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"-\"</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">\"status\"</code><code class=\"ANY\">:</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">stage</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">\"playlist_size\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"\"</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">\"playlist_index\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"\"</code>\n        <code class=\"ANY\">}</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">progress_stats</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">dict</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">default_values</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># Keep track when the 'playlist_index' changes</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">playlist_index_changed</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">False</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">get_files</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Returns a list that contains all the system files bind to this object.\"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">files</code> <code class=\"ANY\">=</code> <code class=\"ANY\">[</code><code class=\"ANY\">]</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">index</code><code class=\"ANY\">,</code> <code class=\"ANY\">item</code> <code class=\"KEYWORD\">in</code> <code class=\"FUNCTION_IDENTIFIER\">enumerate</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">filenames</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">filename</code> <code class=\"ANY\">=</code> <code class=\"ANY\">item</code> <code class=\"ANY\">+</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">extensions</code><code class=\"ANY\">[</code><code class=\"ANY\">index</code><code class=\"ANY\">]</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">files</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">append</code><code class=\"ANY\">(</code><code class=\"ANY\">os</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">path</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">join</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">path</code><code class=\"ANY\">,</code> <code class=\"ANY\">filename</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">files</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">update_stats</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">stats_dict</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Updates the progress_stats dict from the given dictionary.\"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">assert</code> <code class=\"FUNCTION_IDENTIFIER\">isinstance</code><code class=\"ANY\">(</code><code class=\"ANY\">stats_dict</code><code class=\"ANY\">,</code> <code class=\"ANY\">dict</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">key</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">stats_dict</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">key</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">progress_stats</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">value</code> <code class=\"ANY\">=</code> <code class=\"ANY\">stats_dict</code><code class=\"ANY\">[</code><code class=\"ANY\">key</code><code class=\"ANY\">]</code>\n\n               <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"KEYWORD\">not</code> <code class=\"FUNCTION_IDENTIFIER\">isinstance</code><code class=\"ANY\">(</code><code class=\"ANY\">value</code><code class=\"ANY\">,</code> <code class=\"ANY\">basestring</code><code class=\"ANY\">)</code> <code class=\"KEYWORD\">or</code> <code class=\"KEYWORD\">not</code> <code class=\"ANY\">value</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                    </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">progress_stats</code><code class=\"ANY\">[</code><code class=\"ANY\">key</code><code class=\"ANY\">]</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">default_values</code><code class=\"ANY\">[</code><code class=\"ANY\">key</code><code class=\"ANY\">]</code>\n               <code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                    </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">progress_stats</code><code class=\"ANY\">[</code><code class=\"ANY\">key</code><code class=\"ANY\">]</code> <code class=\"ANY\">=</code> <code class=\"ANY\">value</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># Extract extra stuff</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"CHAR_STRING_LITERAL\">\"playlist_index\"</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">stats_dict</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">playlist_index_changed</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">True</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"CHAR_STRING_LITERAL\">\"filename\"</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">stats_dict</code><code class=\"ANY\">:</code>\n\n<code class=\"ANY\">            </code><code class=\"COMMENT\"># Reset filenames, extensions & filesizes lists when changing playlist item</code>\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">playlist_index_changed</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">filenames</code> <code class=\"ANY\">=</code> <code class=\"ANY\">[</code><code class=\"ANY\">]</code>\n               <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">extensions</code> <code class=\"ANY\">=</code> <code class=\"ANY\">[</code><code class=\"ANY\">]</code>\n               <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">filesizes</code> <code class=\"ANY\">=</code> <code class=\"ANY\">[</code><code class=\"ANY\">]</code>\n\n               <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">playlist_index_changed</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">False</code>\n\n           <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">filenames</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">append</code><code class=\"ANY\">(</code><code class=\"ANY\">stats_dict</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"filename\"</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"CHAR_STRING_LITERAL\">\"extension\"</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">stats_dict</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">extensions</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">append</code><code class=\"ANY\">(</code><code class=\"ANY\">stats_dict</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"extension\"</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"CHAR_STRING_LITERAL\">\"path\"</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">stats_dict</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">path</code> <code class=\"ANY\">=</code> <code class=\"ANY\">stats_dict</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"path\"</code><code class=\"ANY\">]</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"CHAR_STRING_LITERAL\">\"filesize\"</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">stats_dict</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">stats_dict</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"percent\"</code><code class=\"ANY\">]</code> <code class=\"ANY\">==</code> <code class=\"CHAR_STRING_LITERAL\">\"100%\"</code> <code class=\"KEYWORD\">and</code> <code class=\"FUNCTION_IDENTIFIER\">len</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">filesizes</code><code class=\"ANY\">)</code> <code class=\"ANY\"><</code> <code class=\"FUNCTION_IDENTIFIER\">len</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">filenames</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">filesize</code> <code class=\"ANY\">=</code> <code class=\"ANY\">stats_dict</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"filesize\"</code><code class=\"ANY\">]</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">lstrip</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"~\"</code><code class=\"ANY\">)</code>  <code class=\"COMMENT\"># HLS downloader etc</code>\n               <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">filesizes</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">append</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">to_bytes</code><code class=\"ANY\">(</code><code class=\"ANY\">filesize</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"CHAR_STRING_LITERAL\">\"status\"</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">stats_dict</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"COMMENT\"># If we are post processing try to calculate the size of</code>\n           <code class=\"ANY\"> </code><code class=\"COMMENT\"># the output file since youtube-dl does not</code>\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">stats_dict</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"status\"</code><code class=\"ANY\">]</code> <code class=\"ANY\">==</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ACTIVE_STAGES</code><code class=\"ANY\">[</code><code class=\"LITERAL\">2</code><code class=\"ANY\">]</code> <code class=\"KEYWORD\">and</code> <code class=\"FUNCTION_IDENTIFIER\">len</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">filesizes</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"LITERAL\">2</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">post_proc_filesize</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">filesizes</code><code class=\"ANY\">[</code><code class=\"LITERAL\">0</code><code class=\"ANY\">]</code> <code class=\"ANY\">+</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">filesizes</code><code class=\"ANY\">[</code><code class=\"LITERAL\">1</code><code class=\"ANY\">]</code>\n\n               <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">filesizes</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">append</code><code class=\"ANY\">(</code><code class=\"ANY\">post_proc_filesize</code><code class=\"ANY\">)</code>\n               <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">progress_stats</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"filesize\"</code><code class=\"ANY\">]</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">format_bytes</code><code class=\"ANY\">(</code><code class=\"ANY\">post_proc_filesize</code><code class=\"ANY\">)</code>\n\n           <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_set_stage</code><code class=\"ANY\">(</code><code class=\"ANY\">stats_dict</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"status\"</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_set_stage</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">status</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">status</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ACTIVE_STAGES</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_stage</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">STAGES</code><code class=\"ANY\">[</code><code class=\"LITERAL\">1</code><code class=\"ANY\">]</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">status</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">COMPLETED_STAGES</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_stage</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">STAGES</code><code class=\"ANY\">[</code><code class=\"LITERAL\">3</code><code class=\"ANY\">]</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">status</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ERROR_STAGES</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_stage</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">STAGES</code><code class=\"ANY\">[</code><code class=\"LITERAL\">4</code><code class=\"ANY\">]</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">__eq__</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">other</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">object_id</code> <code class=\"ANY\">==</code> <code class=\"ANY\">other</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">object_id</code>\n\n\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">DownloadList</code><code class=\"ANY\">(</code><code class=\"ANY\">object</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n\n<code class=\"ANY\">    </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"List like data structure that contains DownloadItems.\n\n    Args:\n        items (list): List that contains DownloadItems.\n\n    \"\"\"</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">__init__</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">items</code><code class=\"ANY\">=</code><code class=\"KEYWORD\">None</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"KEYWORD\">assert</code> <code class=\"FUNCTION_IDENTIFIER\">isinstance</code><code class=\"ANY\">(</code><code class=\"ANY\">items</code><code class=\"ANY\">,</code> <code class=\"ANY\">list</code><code class=\"ANY\">)</code> <code class=\"KEYWORD\">or</code> <code class=\"ANY\">items</code> <code class=\"KEYWORD\">is</code> <code class=\"KEYWORD\">None</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">items</code> <code class=\"KEYWORD\">is</code> <code class=\"KEYWORD\">None</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_items_dict</code> <code class=\"ANY\">=</code> <code class=\"ANY\">{</code><code class=\"ANY\">}</code>  <code class=\"COMMENT\"># Speed up lookup</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_items_list</code> <code class=\"ANY\">=</code> <code class=\"ANY\">[</code><code class=\"ANY\">]</code>  <code class=\"COMMENT\"># Keep the sequence</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_items_list</code> <code class=\"ANY\">=</code> <code class=\"ANY\">[</code><code class=\"ANY\">item</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">object_id</code> <code class=\"KEYWORD\">for</code> <code class=\"ANY\">item</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">items</code><code class=\"ANY\">]</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_items_dict</code> <code class=\"ANY\">=</code> <code class=\"ANY\">{</code><code class=\"ANY\">item</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">object_id</code><code class=\"ANY\">:</code> <code class=\"ANY\">item</code> <code class=\"KEYWORD\">for</code> <code class=\"ANY\">item</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">items</code><code class=\"ANY\">}</code>\n\n   <code class=\"ANY\"> </code><code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">synchronized</code><code class=\"ANY\">(</code><code class=\"ANY\">_SYNC_LOCK</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">clear</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Removes all the items from the list even the 'Active' ones.\"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_items_list</code> <code class=\"ANY\">=</code> <code class=\"ANY\">[</code><code class=\"ANY\">]</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_items_dict</code> <code class=\"ANY\">=</code> <code class=\"ANY\">{</code><code class=\"ANY\">}</code>\n\n   <code class=\"ANY\"> </code><code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">synchronized</code><code class=\"ANY\">(</code><code class=\"ANY\">_SYNC_LOCK</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">insert</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">item</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Inserts the given item to the list. Does not check for duplicates. \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_items_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">append</code><code class=\"ANY\">(</code><code class=\"ANY\">item</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">object_id</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_items_dict</code><code class=\"ANY\">[</code><code class=\"ANY\">item</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">object_id</code><code class=\"ANY\">]</code> <code class=\"ANY\">=</code> <code class=\"ANY\">item</code>\n\n   <code class=\"ANY\"> </code><code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">synchronized</code><code class=\"ANY\">(</code><code class=\"ANY\">_SYNC_LOCK</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">remove</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">object_id</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Removes an item from the list.\n\n        Removes the item with the corresponding object_id from\n        the list if the item is not in 'Active' state.\n\n        Returns:\n            True on success else False.\n\n        \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_items_dict</code><code class=\"ANY\">[</code><code class=\"ANY\">object_id</code><code class=\"ANY\">]</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">stage</code> <code class=\"ANY\">!=</code> <code class=\"CHAR_STRING_LITERAL\">\"Active\"</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_items_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">remove</code><code class=\"ANY\">(</code><code class=\"ANY\">object_id</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">del</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_items_dict</code><code class=\"ANY\">[</code><code class=\"ANY\">object_id</code><code class=\"ANY\">]</code>\n\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">True</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">False</code>\n\n   <code class=\"ANY\"> </code><code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">synchronized</code><code class=\"ANY\">(</code><code class=\"ANY\">_SYNC_LOCK</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">fetch_next</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Returns the next queued item on the list.\n\n        Returns:\n            Next queued item or None if no other item exist.\n\n        \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">object_id</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_items_list</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">cur_item</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_items_dict</code><code class=\"ANY\">[</code><code class=\"ANY\">object_id</code><code class=\"ANY\">]</code>\n\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">cur_item</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">stage</code> <code class=\"ANY\">==</code> <code class=\"CHAR_STRING_LITERAL\">\"Queued\"</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">cur_item</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"KEYWORD\">None</code>\n\n   <code class=\"ANY\"> </code><code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">synchronized</code><code class=\"ANY\">(</code><code class=\"ANY\">_SYNC_LOCK</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">move_up</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">object_id</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Moves the item with the corresponding object_id up to the list.\"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">index</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_items_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">index</code><code class=\"ANY\">(</code><code class=\"ANY\">object_id</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">index</code> <code class=\"ANY\">></code> <code class=\"LITERAL\">0</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_swap</code><code class=\"ANY\">(</code><code class=\"ANY\">index</code><code class=\"ANY\">,</code> <code class=\"ANY\">index</code> <code class=\"ANY\">-</code> <code class=\"LITERAL\">1</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">True</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">False</code>\n\n   <code class=\"ANY\"> </code><code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">synchronized</code><code class=\"ANY\">(</code><code class=\"ANY\">_SYNC_LOCK</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">move_down</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">object_id</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Moves the item with the corresponding object_id down to the list.\"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">index</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_items_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">index</code><code class=\"ANY\">(</code><code class=\"ANY\">object_id</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">index</code> <code class=\"ANY\"><</code> <code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">len</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_items_list</code><code class=\"ANY\">)</code> <code class=\"ANY\">-</code> <code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_swap</code><code class=\"ANY\">(</code><code class=\"ANY\">index</code><code class=\"ANY\">,</code> <code class=\"ANY\">index</code> <code class=\"ANY\">+</code> <code class=\"LITERAL\">1</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">True</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">False</code>\n\n   <code class=\"ANY\"> </code><code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">synchronized</code><code class=\"ANY\">(</code><code class=\"ANY\">_SYNC_LOCK</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">get_item</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">object_id</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Returns the DownloadItem with the given object_id.\"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_items_dict</code><code class=\"ANY\">[</code><code class=\"ANY\">object_id</code><code class=\"ANY\">]</code>\n\n   <code class=\"ANY\"> </code><code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">synchronized</code><code class=\"ANY\">(</code><code class=\"ANY\">_SYNC_LOCK</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">has_item</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">object_id</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Returns True if the given object_id is in the list else False.\"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">object_id</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_items_list</code>\n\n   <code class=\"ANY\"> </code><code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">synchronized</code><code class=\"ANY\">(</code><code class=\"ANY\">_SYNC_LOCK</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">get_items</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Returns a list with all the items.\"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">[</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_items_dict</code><code class=\"ANY\">[</code><code class=\"ANY\">object_id</code><code class=\"ANY\">]</code> <code class=\"KEYWORD\">for</code> <code class=\"ANY\">object_id</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_items_list</code><code class=\"ANY\">]</code>\n\n   <code class=\"ANY\"> </code><code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">synchronized</code><code class=\"ANY\">(</code><code class=\"ANY\">_SYNC_LOCK</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">change_stage</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">object_id</code><code class=\"ANY\">,</code> <code class=\"ANY\">new_stage</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Change the stage of the item with the given object_id.\"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_items_dict</code><code class=\"ANY\">[</code><code class=\"ANY\">object_id</code><code class=\"ANY\">]</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">stage</code> <code class=\"ANY\">=</code> <code class=\"ANY\">new_stage</code>\n\n   <code class=\"ANY\"> </code><code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">synchronized</code><code class=\"ANY\">(</code><code class=\"ANY\">_SYNC_LOCK</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">index</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">object_id</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Get the zero based index of the item with the given object_id.\"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">object_id</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_items_list</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_items_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">index</code><code class=\"ANY\">(</code><code class=\"ANY\">object_id</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code>\n\n   <code class=\"ANY\"> </code><code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">synchronized</code><code class=\"ANY\">(</code><code class=\"ANY\">_SYNC_LOCK</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">__len__</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"KEYWORD\">return</code> <code class=\"FUNCTION_IDENTIFIER\">len</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_items_list</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_swap</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">index1</code><code class=\"ANY\">,</code> <code class=\"ANY\">index2</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_items_list</code><code class=\"ANY\">[</code><code class=\"ANY\">index1</code><code class=\"ANY\">]</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_items_list</code><code class=\"ANY\">[</code><code class=\"ANY\">index2</code><code class=\"ANY\">]</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_items_list</code><code class=\"ANY\">[</code><code class=\"ANY\">index2</code><code class=\"ANY\">]</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_items_list</code><code class=\"ANY\">[</code><code class=\"ANY\">index1</code><code class=\"ANY\">]</code>\n\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">DownloadManager</code><code class=\"ANY\">(</code><code class=\"ANY\">Thread</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n\n<code class=\"ANY\">    </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Manages the download process.\n\n    Attributes:\n        WAIT_TIME (float): Time in seconds to sleep.\n\n    Args:\n        download_list (DownloadList): List that contains items to download.\n\n        opt_manager (optionsmanager.OptionsManager): Object responsible for\n            managing the youtubedlg options.\n\n        log_manager (logmanager.LogManager): Object responsible for writing\n            errors to the log.\n\n    \"\"\"</code>\n\n   <code class=\"ANY\"> </code><code class=\"ANY\">WAIT_TIME</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">0.1</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">__init__</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">parent</code><code class=\"ANY\">,</code> <code class=\"ANY\">download_list</code><code class=\"ANY\">,</code> <code class=\"ANY\">opt_manager</code><code class=\"ANY\">,</code> <code class=\"ANY\">log_manager</code><code class=\"ANY\">=</code><code class=\"KEYWORD\">None</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"FUNCTION_IDENTIFIER\">super</code><code class=\"ANY\">(</code><code class=\"ANY\">DownloadManager</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">__init__</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">parent</code> <code class=\"ANY\">=</code> <code class=\"ANY\">parent</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">opt_manager</code> <code class=\"ANY\">=</code> <code class=\"ANY\">opt_manager</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">log_manager</code> <code class=\"ANY\">=</code> <code class=\"ANY\">log_manager</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">download_list</code> <code class=\"ANY\">=</code> <code class=\"ANY\">download_list</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_time_it_took</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">0</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_successful</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">0</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_running</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">True</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># Init the custom workers thread pool</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">log_lock</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">None</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">log_manager</code> <code class=\"KEYWORD\">is</code> <code class=\"KEYWORD\">None</code> <code class=\"KEYWORD\">else</code> <code class=\"FUNCTION_IDENTIFIER\">Lock</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">wparams</code> <code class=\"ANY\">=</code> <code class=\"ANY\">(</code><code class=\"ANY\">opt_manager</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_youtubedl_path</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"ANY\">log_manager</code><code class=\"ANY\">,</code> <code class=\"ANY\">log_lock</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_workers</code> <code class=\"ANY\">=</code> <code class=\"ANY\">[</code><code class=\"FUNCTION_IDENTIFIER\">Worker</code><code class=\"ANY\">(</code><code class=\"ANY\">*</code><code class=\"ANY\">wparams</code><code class=\"ANY\">)</code> <code class=\"KEYWORD\">for</code> <code class=\"ANY\">_</code> <code class=\"KEYWORD\">in</code> <code class=\"FUNCTION_IDENTIFIER\">xrange</code><code class=\"ANY\">(</code><code class=\"ANY\">opt_manager</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">options</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"workers_number\"</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code><code class=\"ANY\">]</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">start</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">property</code>\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">successful</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Returns number of successful downloads. \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_successful</code>\n\n   <code class=\"ANY\"> </code><code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">property</code>\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">time_it_took</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Returns time(seconds) it took for the download process\n        to complete. \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_time_it_took</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">run</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"KEYWORD\">if</code> <code class=\"KEYWORD\">not</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">opt_manager</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">options</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"disable_update\"</code><code class=\"ANY\">]</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_check_youtubedl</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_time_it_took</code> <code class=\"ANY\">=</code> <code class=\"ANY\">time</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">time</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">while</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_running</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">item</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">download_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">fetch_next</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">item</code> <code class=\"KEYWORD\">is</code> <code class=\"KEYWORD\">not</code> <code class=\"KEYWORD\">None</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">worker</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_get_worker</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n               <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">worker</code> <code class=\"KEYWORD\">is</code> <code class=\"KEYWORD\">not</code> <code class=\"KEYWORD\">None</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                    </code><code class=\"ANY\">worker</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">download</code><code class=\"ANY\">(</code><code class=\"ANY\">item</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">url</code><code class=\"ANY\">,</code> <code class=\"ANY\">item</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">options</code><code class=\"ANY\">,</code> <code class=\"ANY\">item</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">object_id</code><code class=\"ANY\">)</code>\n                   <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">download_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">change_stage</code><code class=\"ANY\">(</code><code class=\"ANY\">item</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">object_id</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"Active\"</code><code class=\"ANY\">)</code>\n\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">item</code> <code class=\"KEYWORD\">is</code> <code class=\"KEYWORD\">None</code> <code class=\"KEYWORD\">and</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_jobs_done</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"KEYWORD\">break</code>\n\n           <code class=\"ANY\"> </code><code class=\"ANY\">time</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">sleep</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">WAIT_TIME</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># Close all the workers</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">worker</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_workers</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">worker</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">close</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># Join and collect</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">worker</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_workers</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">worker</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">join</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_successful</code> <code class=\"ANY\">+=</code> <code class=\"ANY\">worker</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">successful</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_time_it_took</code> <code class=\"ANY\">=</code> <code class=\"ANY\">time</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">time</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">-</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_time_it_took</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"KEYWORD\">not</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_running</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_talk_to_gui</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">'closed'</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_talk_to_gui</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">'finished'</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">active</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Returns number of active items.\n\n        Note:\n            active_items = (workers that work) + (items waiting in the url_list).\n\n        \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"COMMENT\">#counter = 0</code>\n       <code class=\"ANY\"> </code><code class=\"COMMENT\">#for worker in self._workers:</code>\n<code class=\"ANY\">            </code><code class=\"COMMENT\">#if not worker.available():</code>\n<code class=\"ANY\">                </code><code class=\"COMMENT\">#counter += 1</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\">#counter += len(self.download_list)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"FUNCTION_IDENTIFIER\">len</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">download_list</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">stop_downloads</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Stop the download process. Also send 'closing'\n        signal back to the GUI.\n\n        Note:\n            It does NOT kill the workers thats the job of the\n            clean up task in the run() method.\n\n        \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_talk_to_gui</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">'closing'</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_running</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">False</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">add_url</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">url</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Add given url to the download_list.\n\n        Args:\n            url (dict): Python dictionary that contains two keys.\n                The url and the index of the corresponding row in which\n                the worker should send back the information about the\n                download process.\n\n        \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">download_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">append</code><code class=\"ANY\">(</code><code class=\"ANY\">url</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">send_to_worker</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">data</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Send data to the Workers.\n\n        Args:\n            data (dict): Python dictionary that holds the 'index'\n            which is used to identify the Worker thread and the data which\n            can be any of the Worker's class valid data. For a list of valid\n            data keys see __init__() under the Worker class.\n\n        \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"CHAR_STRING_LITERAL\">'index'</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">data</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">worker</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_workers</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">worker</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">has_index</code><code class=\"ANY\">(</code><code class=\"ANY\">data</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">'index'</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                    </code><code class=\"ANY\">worker</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">update_data</code><code class=\"ANY\">(</code><code class=\"ANY\">data</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_talk_to_gui</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">data</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Send data back to the GUI using wxCallAfter and wxPublisher.\n\n        Args:\n            data (string): Unique signal string that informs the GUI for the\n                download process.\n\n        Note:\n            DownloadManager supports 4 signals.\n                1) closing: The download process is closing.\n                2) closed: The download process has closed.\n                3) finished: The download process was completed normally.\n                4) report_active: Signal the gui to read the number of active\n                    downloads using the active() method.\n\n        \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">CallAfter</code><code class=\"ANY\">(</code><code class=\"ANY\">Publisher</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">sendMessage</code><code class=\"ANY\">,</code> <code class=\"ANY\">MANAGER_PUB_TOPIC</code><code class=\"ANY\">,</code> <code class=\"ANY\">data</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_check_youtubedl</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Check if youtube-dl binary exists. If not try to download it. \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"KEYWORD\">not</code> <code class=\"FUNCTION_IDENTIFIER\">os_path_exists</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_youtubedl_path</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code> <code class=\"KEYWORD\">and</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">parent</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">update_thread</code> <code class=\"KEYWORD\">is</code> <code class=\"KEYWORD\">None</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">parent</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">update_thread</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">UpdateThread</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">opt_manager</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">options</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">'youtubedl_path'</code><code class=\"ANY\">]</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">True</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">parent</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">update_thread</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">join</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">parent</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">update_thread</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">None</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_get_worker</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">worker</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_workers</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">worker</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">available</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">worker</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"KEYWORD\">None</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_jobs_done</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Returns True if the workers have finished their jobs else False. \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">worker</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_workers</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"KEYWORD\">if</code> <code class=\"KEYWORD\">not</code> <code class=\"ANY\">worker</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">available</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">False</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">True</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_youtubedl_path</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Returns the path to youtube-dl binary. \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">path</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">opt_manager</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">options</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">'youtubedl_path'</code><code class=\"ANY\">]</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">path</code> <code class=\"ANY\">=</code> <code class=\"ANY\">os</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">path</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">join</code><code class=\"ANY\">(</code><code class=\"ANY\">path</code><code class=\"ANY\">,</code> <code class=\"ANY\">YOUTUBEDL_BIN</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">path</code>\n\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">Worker</code><code class=\"ANY\">(</code><code class=\"ANY\">Thread</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n\n<code class=\"ANY\">    </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Simple worker which downloads the given url using a downloader\n    from the downloaders.py module.\n\n    Attributes:\n        WAIT_TIME (float): Time in seconds to sleep.\n\n    Args:\n        opt_manager (optionsmanager.OptionsManager): Check DownloadManager\n            description.\n\n        youtubedl (string): Absolute path to youtube-dl binary.\n\n        log_manager (logmanager.LogManager): Check DownloadManager\n            description.\n\n        log_lock (threading.Lock): Synchronization lock for the log_manager.\n            If the log_manager is set (not None) then the caller has to make\n            sure that the log_lock is also set.\n\n    Note:\n        For available data keys see self._data under the __init__() method.\n\n    \"\"\"</code>\n\n   <code class=\"ANY\"> </code><code class=\"ANY\">WAIT_TIME</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">0.1</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">__init__</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">opt_manager</code><code class=\"ANY\">,</code> <code class=\"ANY\">youtubedl</code><code class=\"ANY\">,</code> <code class=\"ANY\">log_manager</code><code class=\"ANY\">=</code><code class=\"KEYWORD\">None</code><code class=\"ANY\">,</code> <code class=\"ANY\">log_lock</code><code class=\"ANY\">=</code><code class=\"KEYWORD\">None</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"FUNCTION_IDENTIFIER\">super</code><code class=\"ANY\">(</code><code class=\"ANY\">Worker</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">__init__</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">opt_manager</code> <code class=\"ANY\">=</code> <code class=\"ANY\">opt_manager</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">log_manager</code> <code class=\"ANY\">=</code> <code class=\"ANY\">log_manager</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">log_lock</code> <code class=\"ANY\">=</code> <code class=\"ANY\">log_lock</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_downloader</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">YoutubeDLDownloader</code><code class=\"ANY\">(</code><code class=\"ANY\">youtubedl</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_data_hook</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_log_data</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_options_parser</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">OptionsParser</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_successful</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">0</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_running</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">True</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_options</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">None</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_wait_for_reply</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">False</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_data</code> <code class=\"ANY\">=</code> <code class=\"ANY\">{</code>\n            <code class=\"CHAR_STRING_LITERAL\">'playlist_index'</code><code class=\"ANY\">:</code> <code class=\"KEYWORD\">None</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'playlist_size'</code><code class=\"ANY\">:</code> <code class=\"KEYWORD\">None</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'new_filename'</code><code class=\"ANY\">:</code> <code class=\"KEYWORD\">None</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'extension'</code><code class=\"ANY\">:</code> <code class=\"KEYWORD\">None</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'filesize'</code><code class=\"ANY\">:</code> <code class=\"KEYWORD\">None</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'filename'</code><code class=\"ANY\">:</code> <code class=\"KEYWORD\">None</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'percent'</code><code class=\"ANY\">:</code> <code class=\"KEYWORD\">None</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'status'</code><code class=\"ANY\">:</code> <code class=\"KEYWORD\">None</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'index'</code><code class=\"ANY\">:</code> <code class=\"KEYWORD\">None</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'speed'</code><code class=\"ANY\">:</code> <code class=\"KEYWORD\">None</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'path'</code><code class=\"ANY\">:</code> <code class=\"KEYWORD\">None</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'eta'</code><code class=\"ANY\">:</code> <code class=\"KEYWORD\">None</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'url'</code><code class=\"ANY\">:</code> <code class=\"KEYWORD\">None</code>\n        <code class=\"ANY\">}</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">start</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">run</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"KEYWORD\">while</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_running</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_data</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">'url'</code><code class=\"ANY\">]</code> <code class=\"KEYWORD\">is</code> <code class=\"KEYWORD\">not</code> <code class=\"KEYWORD\">None</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"COMMENT\">#options = self._options_parser.parse(self.opt_manager.options)</code>\n               <code class=\"ANY\"> </code><code class=\"ANY\">ret_code</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_downloader</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">download</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_data</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">'url'</code><code class=\"ANY\">]</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_options</code><code class=\"ANY\">)</code>\n\n               <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">(</code><code class=\"ANY\">ret_code</code> <code class=\"ANY\">==</code> <code class=\"ANY\">YoutubeDLDownloader</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">OK</code> <code class=\"KEYWORD\">or</code>\n                        <code class=\"ANY\">ret_code</code> <code class=\"ANY\">==</code> <code class=\"ANY\">YoutubeDLDownloader</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ALREADY</code> <code class=\"KEYWORD\">or</code>\n                        <code class=\"ANY\">ret_code</code> <code class=\"ANY\">==</code> <code class=\"ANY\">YoutubeDLDownloader</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">WARNING</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                    </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_successful</code> <code class=\"ANY\">+=</code> <code class=\"LITERAL\">1</code>\n\n               <code class=\"ANY\"> </code><code class=\"COMMENT\"># Ask GUI for name updates</code>\n               <code class=\"ANY\"> </code><code class=\"COMMENT\">#self._talk_to_gui('receive', {'source': 'filename', 'dest': 'new_filename'})</code>\n\n               <code class=\"ANY\"> </code><code class=\"COMMENT\"># Wait until you get a reply</code>\n               <code class=\"ANY\"> </code><code class=\"COMMENT\">#while self._wait_for_reply:</code>\n<code class=\"ANY\">                    </code><code class=\"COMMENT\">#time.sleep(self.WAIT_TIME)</code>\n\n               <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_reset</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n           <code class=\"ANY\"> </code><code class=\"ANY\">time</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">sleep</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">WAIT_TIME</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># Call the destructor function of YoutubeDLDownloader object</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_downloader</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">close</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">download</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">url</code><code class=\"ANY\">,</code> <code class=\"ANY\">options</code><code class=\"ANY\">,</code> <code class=\"ANY\">object_id</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Download given item.\n\n        Args:\n            item (dict): Python dictionary that contains two keys.\n                The url and the index of the corresponding row in which\n                the worker should send back the information about the\n                download process.\n\n        \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_data</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">'url'</code><code class=\"ANY\">]</code> <code class=\"ANY\">=</code> <code class=\"ANY\">url</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_options</code> <code class=\"ANY\">=</code> <code class=\"ANY\">options</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_data</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">'index'</code><code class=\"ANY\">]</code> <code class=\"ANY\">=</code> <code class=\"ANY\">object_id</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">stop_download</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Stop the download process of the worker. \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_downloader</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">stop</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">close</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Kill the worker after stopping the download process. \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_running</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">False</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_downloader</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">stop</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">available</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Return True if the worker has no job else False. \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_data</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">'url'</code><code class=\"ANY\">]</code> <code class=\"KEYWORD\">is</code> <code class=\"KEYWORD\">None</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">has_index</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">index</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Return True if index is equal to self._data['index'] else False. \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_data</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">'index'</code><code class=\"ANY\">]</code> <code class=\"ANY\">==</code> <code class=\"ANY\">index</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">update_data</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">data</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Update self._data from the given data. \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_wait_for_reply</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"COMMENT\"># Update data only if a receive request has been issued</code>\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">key</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">data</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_data</code><code class=\"ANY\">[</code><code class=\"ANY\">key</code><code class=\"ANY\">]</code> <code class=\"ANY\">=</code> <code class=\"ANY\">data</code><code class=\"ANY\">[</code><code class=\"ANY\">key</code><code class=\"ANY\">]</code>\n\n           <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_wait_for_reply</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">False</code>\n\n   <code class=\"ANY\"> </code><code class=\"ANNOTATION_DECLARATOR\">@</code><code class=\"ANNOTATION_DECLARATOR\">property</code>\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">successful</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Return the number of successful downloads for current worker. \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_successful</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_reset</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Reset self._data back to the original state. \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">key</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_data</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_data</code><code class=\"ANY\">[</code><code class=\"ANY\">key</code><code class=\"ANY\">]</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">None</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_log_data</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">data</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Callback method for self._downloader.\n\n        This method is used to write the given data in a synchronized way\n        to the log file using the self.log_manager and the self.log_lock.\n\n        Args:\n            data (string): String to write to the log file.\n\n        \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">log_manager</code> <code class=\"KEYWORD\">is</code> <code class=\"KEYWORD\">not</code> <code class=\"KEYWORD\">None</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">log_lock</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">acquire</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">log_manager</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">log</code><code class=\"ANY\">(</code><code class=\"ANY\">data</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">log_lock</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">release</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_data_hook</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">data</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Callback method for self._downloader.\n\n        This method updates self._data and sends the updates back to the\n        GUI using the self._talk_to_gui() method.\n\n        Args:\n            data (dict): Python dictionary which contains information\n                about the download process. For more info see the\n                extract_data() function under the downloaders.py module.\n\n        \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"COMMENT\">## Temp dictionary which holds the updates</code>\n       <code class=\"ANY\"> </code><code class=\"COMMENT\">#temp_dict = {}</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\">## Update each key</code>\n       <code class=\"ANY\"> </code><code class=\"COMMENT\">#for key in data:</code>\n<code class=\"ANY\">            </code><code class=\"COMMENT\">#if self._data[key] != data[key]:</code>\n<code class=\"ANY\">                </code><code class=\"COMMENT\">#self._data[key] = data[key]</code>\n               <code class=\"ANY\"> </code><code class=\"COMMENT\">#temp_dict[key] = data[key]</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\">## Build the playlist status if there is an update</code>\n       <code class=\"ANY\"> </code><code class=\"COMMENT\">## REFACTOR re-implement this on DownloadItem or ListCtrl level?</code>\n       <code class=\"ANY\"> </code><code class=\"COMMENT\">##if self._data['playlist_index'] is not None:</code>\n<code class=\"ANY\">            </code><code class=\"COMMENT\">##if 'status' in temp_dict or 'playlist_index' in temp_dict:</code>\n<code class=\"ANY\">                </code><code class=\"COMMENT\">##temp_dict['status'] = '{status} {index}/{size}'.format(</code>\n<code class=\"ANY\">                        </code><code class=\"COMMENT\">##status=self._data['status'],</code>\n                       <code class=\"ANY\"> </code><code class=\"COMMENT\">##index=self._data['playlist_index'],</code>\n                       <code class=\"ANY\"> </code><code class=\"COMMENT\">##size=self._data['playlist_size']</code>\n                   <code class=\"ANY\"> </code><code class=\"COMMENT\">##)</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\">#if len(temp_dict):</code>\n<code class=\"ANY\">            </code><code class=\"COMMENT\">#self._talk_to_gui('send', temp_dict)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_talk_to_gui</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">'send'</code><code class=\"ANY\">,</code> <code class=\"ANY\">data</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_talk_to_gui</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">signal</code><code class=\"ANY\">,</code> <code class=\"ANY\">data</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Communicate with the GUI using wxCallAfter and wxPublisher.\n\n        Send/Ask data to/from the GUI. Note that if the signal is 'receive'\n        then the Worker will wait until it receives a reply from the GUI.\n\n        Args:\n            signal (string): Unique string that informs the GUI about the\n                communication procedure.\n\n            data (dict): Python dictionary which holds the data to be sent\n                back to the GUI. If the signal is 'send' then the dictionary\n                contains the updates for the GUI (e.g. percentage, eta). If\n                the signal is 'receive' then the dictionary contains exactly\n                three keys. The 'index' (row) from which we want to retrieve\n                the data, the 'source' which identifies a column in the\n                wxListCtrl widget and the 'dest' which tells the wxListCtrl\n                under which key to store the retrieved data.\n\n        Note:\n            Worker class supports 2 signals.\n                1) send: The Worker sends data back to the GUI\n                         (e.g. Send status updates).\n                2) receive: The Worker asks data from the GUI\n                            (e.g. Receive the name of a file).\n\n        Structure:\n            ('send', {'index': <item_row>, data_to_send*})\n\n            ('receive', {'index': <item_row>, 'source': 'source_key', 'dest': 'destination_key'})\n\n        \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">data</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">'index'</code><code class=\"ANY\">]</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_data</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">'index'</code><code class=\"ANY\">]</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">signal</code> <code class=\"ANY\">==</code> <code class=\"CHAR_STRING_LITERAL\">'receive'</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_wait_for_reply</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">True</code>\n\n       <code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">CallAfter</code><code class=\"ANY\">(</code><code class=\"ANY\">Publisher</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">sendMessage</code><code class=\"ANY\">,</code> <code class=\"ANY\">WORKER_PUB_TOPIC</code><code class=\"ANY\">,</code> <code class=\"ANY\">(</code><code class=\"ANY\">signal</code><code class=\"ANY\">,</code> <code class=\"ANY\">data</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code>\n</pre>\n</html>"},{"_id":{"language":"PYTHON3","lexingTokens":[99,41,99,41,3,41,9,42,10,42,41,10,42,41,10,42,41,9,51,42,10,54,42,56,42,56,42,56,42,56,42,56,42,55,41,9,51,42,10,54,42,56,42,55,41,33,42,54,42,55,57,1,41,3,41,42,60,3,41,42,60,54,3,56,3,56,3,55,41,6,42,54,42,56,42,55,57,1,41,42,51,42,60,42,41,42,51,42,60,42,51,42,51,42,54,42,56,42,51,42,55,41,42,51,42,60,42,54,55,41,42,51,42,54,55,41,42,51,42,54,55,2,6,42,54,42,55,57,1,41,3,41,99,41,42,51,42,60,74,3,57,42,54,3,55,56,3,57,61,42,54,3,55,56,42,51,42,51,42,54,42,54,3,55,56,3,55,56,42,51,42,51,42,54,42,54,3,55,56,3,55,56,42,51,42,51,42,54,42,54,3,55,56,3,55,56,42,51,42,51,42,54,42,54,3,55,56,3,55,56,62,56,3,57,3,56,3,57,3,56,3,57,32,56,3,57,32,56,3,57,3,56,3,57,3,56,3,57,32,56,3,57,4,56,3,57,42,51,42,51,42,54,3,56,3,55,56,3,57,4,56,3,57,4,56,3,57,4,56,3,57,4,56,3,57,4,56,3,57,3,56,3,57,3,56,3,57,32,56,3,57,32,56,3,57,32,56,3,57,32,56,3,57,3,56,3,57,31,56,3,57,32,56,3,57,32,56,3,57,32,56,3,57,32,56,3,57,4,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,32,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,42,51,42,56,3,57,3,56,3,57,31,56,3,57,31,56,3,57,4,56,3,57,42,54,55,56,3,57,54,4,56,4,55,56,3,57,54,4,56,4,55,56,3,57,61,3,56,3,62,56,3,57,61,3,56,3,56,3,62,56,3,57,3,56,3,57,32,56,3,57,31,56,3,57,31,56,3,57,31,56,3,57,31,56,3,57,31,56,3,57,32,56,3,57,32,56,3,57,32,56,3,57,32,75,41,99,41,42,60,3,41,15,42,51,42,61,3,62,27,42,51,42,82,3,27,42,54,42,55,57,1,41,42,51,42,61,3,62,60,42,2,6,42,54,42,55,57,1,41,3,41,15,28,42,54,42,51,42,55,57,1,41,7,2,23,42,54,42,51,42,56,3,55,11,42,57,1,41,21,57,1,41,42,60,42,51,42,54,42,55,41,15,42,51,42,54,42,55,57,1,41,42,51,42,60,42,2,24,57,1,41,42,51,42,54,55,2,6,42,54,42,55,57,1,41,3,41,42,54,42,51,42,55,41,23,42,54,42,51,42,56,3,55,11,42,57,1,41,42,60,42,51,42,54,55,41,42,51,42,54,42,56,42,56,42,60,4,56,42,60,54,3,56,3,55,55,2,6,42,54,42,56,42,55,57,1,41,3,41,42,60,54,3,56,3,56,3,56,3,56,3,56,3,56,3,56,3,56,3,56,3,56,3,56,3,56,3,56,3,56,3,56,3,56,3,56,3,56,3,56,3,56,3,56,3,56,3,56,3,56,3,56,3,56,3,56,3,56,3,56,3,56,3,56,3,56,3,56,3,56,3,56,3,56,3,56,3,56,3,56,3,56,3,55,41,42,60,54,3,56,3,56,3,56,3,56,3,56,3,56,3,56,3,55,41,42,60,54,3,56,3,56,3,55,41,42,60,54,3,56,3,56,3,56,3,56,3,56,3,56,3,56,3,56,3,55,41,42,60,54,3,56,3,56,3,56,3,56,3,56,3,56,3,56,3,56,3,56,3,56,3,55,41,42,60,4,41,99,41,42,61,3,62,60,42,54,42,61,3,62,55,41,42,61,3,62,60,42,54,42,61,3,62,55,41,19,42,20,42,51,42,57,1,41,15,42,28,20,42,57,1,41,7,32,2,15,42,54,42,51,42,61,42,62,55,82,42,54,42,61,42,62,55,57,1,41,7,32,2,99,41,42,60,74,3,57,42,51,42,54,55,56,3,57,42,56,3,57,42,56,3,57,42,56,3,57,42,51,42,54,55,56,3,57,42,56,3,57,42,56,3,57,42,75,41,19,42,56,42,20,42,51,42,54,55,57,1,41,15,42,61,42,62,28,20,42,57,1,41,7,32,2,99,41,15,42,61,3,62,76,4,57,1,41,7,32,2,99,41,19,42,20,42,61,3,62,57,1,41,15,42,76,42,57,1,41,7,32,2,19,42,20,42,61,3,62,57,1,41,15,42,76,42,57,1,41,7,32,2,7,31,2,6,42,54,42,55,57,1,41,3,41,42,60,42,51,42,51,42,54,55,41,19,42,20,42,51,42,57,1,41,42,61,42,62,60,3,2,99,41,42,61,3,62,60,42,54,42,61,3,62,55,41,42,61,3,62,60,42,54,42,61,3,62,55,41,7,42,2,41,-1]},"sourceCode":"#!/usr/bin/env python2\n# -*- coding: utf-8 -*-\n\n\"\"\"Youtubedlg module to handle settings. \"\"\"\n\nfrom __future__ import unicode_literals\n\nimport os\nimport json\n\nfrom .utils import (\n    os_path_expanduser,\n    os_path_exists,\n    encode_tuple,\n    decode_tuple,\n    check_path,\n    get_default_lang\n)\n\nfrom .formats import (\n    OUTPUT_FORMATS,\n    FORMATS\n)\n\n\nclass OptionsManager(object):\n\n    \"\"\"Handles youtubedlg options.\n\n    This class is responsible for storing and retrieving the options.\n\n    Attributes:\n        SETTINGS_FILENAME (string): Filename of the settings file.\n        SENSITIVE_KEYS (tuple): Contains the keys that we don't want\n            to store on the settings file. (SECURITY ISSUES).\n\n    Args:\n        config_path (string): Absolute path where OptionsManager\n            should store the settings file.\n\n    Note:\n        See load_default() method for available options.\n\n    Example:\n        Access the options using the 'options' variable.\n\n        opt_manager = OptionsManager('.')\n        opt_manager.options['save_path'] = '~/Downloads'\n\n    \"\"\"\n\n    SETTINGS_FILENAME = 'settings.json'\n    SENSITIVE_KEYS = ('sudo_password', 'password', 'video_password')\n\n    def __init__(self, config_path):\n        self.config_path = config_path\n        self.settings_file = os.path.join(config_path, self.SETTINGS_FILENAME)\n        self.options = dict()\n        self.load_default()\n        self.load_from_file()\n\n    def load_default(self):\n        \"\"\"Load the default options.\n\n        Note:\n            This method is automatically called by the constructor.\n\n        Options Description:\n\n            save_path (string): Path where youtube-dl should store the\n                downloaded file. Default is $HOME.\n\n            video_format (string): Video format to download.\n                When this options is set to '0' youtube-dl will choose\n                the best video format available for the given URL.\n\n            second_video_format (string): Video format to mix with the first\n                one (-f 18+17).\n\n            to_audio (boolean): If True youtube-dl will post process the\n                video file.\n\n            keep_video (boolen): If True youtube-dl will keep the video file\n                after post processing it.\n\n            audio_format (string): Audio format of the post processed file.\n                Available values are \"mp3\", \"wav\", \"aac\", \"m4a\", \"vorbis\",\n                \"opus\" & \"flac\".\n\n            audio_quality (string): Audio quality of the post processed file.\n                Available values are \"9\", \"5\", \"0\". The lowest the value the\n                better the quality.\n\n            restrict_filenames (boolean): If True youtube-dl will restrict\n                the downloaded file filename to ASCII characters only.\n\n            output_format (int): This option sets the downloaded file\n                output template. See formats.OUTPUT_FORMATS for more info.\n\n            output_template (string): Can be any output template supported\n                by youtube-dl.\n\n            playlist_start (int): Playlist index to start downloading.\n\n            playlist_end (int): Playlist index to stop downloading.\n\n            max_downloads (int): Maximum number of video files to download\n                from the given playlist.\n\n            min_filesize (float): Minimum file size of the video file.\n                If the video file is smaller than the given size then\n                youtube-dl will abort the download process.\n\n            max_filesize (float): Maximum file size of the video file.\n                If the video file is larger than the given size then\n                youtube-dl will abort the download process.\n\n            min_filesize_unit (string): Minimum file size unit.\n                Available values: '', 'k', 'm', 'g', 'y', 'p', 'e', 'z', 'y'.\n\n            max_filesize_unit (string): Maximum file size unit.\n                See 'min_filesize_unit' option for available values.\n\n            write_subs (boolean): If True youtube-dl will try to download\n                the subtitles file for the given URL.\n\n            write_all_subs (boolean): If True youtube-dl will try to download\n                all the available subtitles files for the given URL.\n\n            write_auto_subs (boolean): If True youtube-dl will try to download\n                the automatic subtitles file for the given URL.\n\n            embed_subs (boolean): If True youtube-dl will merge the subtitles\n                file with the video. (ONLY mp4 files).\n\n            subs_lang (string): Language of the subtitles file to download.\n                Needs 'write_subs' option.\n\n            ignore_errors (boolean): If True youtube-dl will ignore the errors\n                and continue the download process.\n\n            open_dl_dir (boolean): If True youtube-dlg will open the\n                destination folder after download process has been completed.\n\n            write_description (boolean): If True youtube-dl will write video\n                description to a .description file.\n\n            write_info (boolean): If True youtube-dl will write video\n                metadata to a .info.json file.\n\n            write_thumbnail (boolean): If True youtube-dl will write\n                thumbnail image to disk.\n\n            retries (int): Number of youtube-dl retries.\n\n            user_agent (string): Specify a custom user agent for youtube-dl.\n\n            referer (string): Specify a custom referer to use if the video\n                access is restricted to one domain.\n\n            proxy (string): Use the specified HTTP/HTTPS proxy.\n\n            shutdown (boolean): If True youtube-dlg will turn the computer\n                off after the download process has been completed.\n\n            sudo_password (string): SUDO password for the shutdown process if\n                the user does not have elevated privileges.\n\n            username (string): Username to login with.\n\n            password (string): Password to login with.\n\n            video_password (string): Video password for the given URL.\n\n            youtubedl_path (string): Absolute path to the youtube-dl binary.\n                Default is the self.config_path. You can change this option\n                to point on /usr/local/bin etc.. if you want to use the\n                youtube-dl binary on your system. This is also the directory\n                where youtube-dlg will auto download the youtube-dl if not\n                exists so you should make sure you have write access if you\n                want to update the youtube-dl binary from within youtube-dlg.\n\n            cmd_args (string): String that contains extra youtube-dl options\n                seperated by spaces.\n\n            enable_log (boolean): If True youtube-dlg will enable\n                the LogManager. See main() function under __init__().\n\n            log_time (boolean): See logmanager.LogManager add_time attribute.\n\n            workers_number (int): Number of download workers that download manager\n                will spawn. Must be greater than zero.\n\n            locale_name (string): Locale name (e.g. ru_RU).\n\n            main_win_size (tuple): Main window size (width, height).\n                If window becomes to small the program will reset its size.\n                See _settings_are_valid method MIN_FRAME_SIZE.\n\n            opts_win_size (tuple): Options window size (width, height).\n                If window becomes to small the program will reset its size.\n                See _settings_are_valid method MIN_FRAME_SIZE.\n\n            save_path_dirs (list): List that contains temporary save paths.\n\n            selected_video_formats (list): List that contains the selected\n                video formats to display on the main window.\n\n            selected_audio_formats (list): List that contains the selected\n                audio formats to display on the main window.\n\n            selected_format (string): Current format selected on the main window.\n\n            youtube_dl_debug (boolean): When True will pass '-v' flag to youtube-dl.\n\n            ignore_config (boolean): When True will ignore youtube-dl config file options.\n\n            confirm_exit (boolean): When True create popup to confirm exiting youtube-dl-gui.\n\n            native_hls (boolean): When True youtube-dl will use the native HLS implementation.\n\n            show_completion_popup (boolean): When True youtube-dl-gui will create a popup\n                to inform the user for the download completion.\n\n            confirm_deletion (boolean): When True ask user before item removal.\n\n            nomtime (boolean): When True will not use the Last-modified header to\n                set the file modification time.\n\n            embed_thumbnail (boolean): When True will embed the thumbnail in\n                the audio file as cover art.\n\n            add_metadata (boolean): When True will write metadata to file.\n\n            disable_update (boolean): When True the update process will be disabled.\n\n        \"\"\"\n        #REFACTOR Remove old options & check options validation\n        self.options = {\n            'save_path': os_path_expanduser('~'),\n            'save_path_dirs': [\n                os_path_expanduser('~'),\n                os.path.join(os_path_expanduser('~'), \"Downloads\"),\n                os.path.join(os_path_expanduser('~'), \"Desktop\"),\n                os.path.join(os_path_expanduser('~'), \"Videos\"),\n                os.path.join(os_path_expanduser('~'), \"Music\"),\n            ],\n            'video_format': '0',\n            'second_video_format': '0',\n            'to_audio': False,\n            'keep_video': False,\n            'audio_format': '',\n            'audio_quality': '5',\n            'restrict_filenames': False,\n            'output_format': 1,\n            'output_template': os.path.join('%(uploader)s', '%(title)s.%(ext)s'),\n            'playlist_start': 1,\n            'playlist_end': 0,\n            'max_downloads': 0,\n            'min_filesize': 0,\n            'max_filesize': 0,\n            'min_filesize_unit': '',\n            'max_filesize_unit': '',\n            'write_subs': False,\n            'write_all_subs': False,\n            'write_auto_subs': False,\n            'embed_subs': False,\n            'subs_lang': 'en',\n            'ignore_errors': True,\n            'open_dl_dir': False,\n            'write_description': False,\n            'write_info': False,\n            'write_thumbnail': False,\n            'retries': 10,\n            'user_agent': '',\n            'referer': '',\n            'proxy': '',\n            'shutdown': False,\n            'sudo_password': '',\n            'username': '',\n            'password': '',\n            'video_password': '',\n            'youtubedl_path': self.config_path,\n            'cmd_args': '',\n            'enable_log': True,\n            'log_time': True,\n            'workers_number': 3,\n            'locale_name': get_default_lang(),\n            'main_win_size': (740, 490),\n            'opts_win_size': (640, 490),\n            'selected_video_formats': ['webm', 'mp4'],\n            'selected_audio_formats': ['mp3', 'm4a', 'vorbis'],\n            'selected_format': '0',\n            'youtube_dl_debug': False,\n            'ignore_config': True,\n            'confirm_exit': True,\n            'native_hls': True,\n            'show_completion_popup': True,\n            'confirm_deletion': True,\n            'nomtime': False,\n            'embed_thumbnail': False,\n            'add_metadata': False,\n            'disable_update': False\n        }\n\n        # Set the youtubedl_path again if the disable_update option is set\n        new_path = '/usr/bin'\n\n        if self.options['disable_update'] and os.name != 'nt' and os_path_exists(new_path):\n            self.options['youtubedl_path'] = new_path\n\n    def load_from_file(self):\n        \"\"\"Load options from settings file. \"\"\"\n        if not os_path_exists(self.settings_file):\n            return\n\n        with open(self.settings_file, 'rb') as settings_file:\n            try:\n                options = json.load(settings_file)\n\n                if self._settings_are_valid(options):\n                    self.options = options\n            except:\n                self.load_default()\n\n    def save_to_file(self):\n        \"\"\"Save options to settings file. \"\"\"\n        check_path(self.config_path)\n\n        with open(self.settings_file, 'wb') as settings_file:\n            options = self._get_options()\n            json.dump(options,\n                      settings_file,\n                      indent=4,\n                      separators=(',', ': '))\n\n    def _settings_are_valid(self, settings_dictionary):\n        \"\"\"Check settings.json dictionary.\n\n        Args:\n            settings_dictionary (dict): Options dictionary loaded\n                from the settings file. See load_from_file() method.\n\n        Returns:\n            True if settings.json dictionary is valid, else False.\n\n        \"\"\"\n        VALID_VIDEO_FORMAT = ('0', '17', '36', '5', '34', '35', '43', '44', '45',\n            '46', '18', '22', '37', '38', '160', '133', '134', '135', '136','137',\n            '264', '138', '242', '243', '244', '247', '248', '271', '272', '82',\n            '83', '84', '85', '100', '101', '102', '139', '140', '141', '171', '172')\n\n        VALID_AUDIO_FORMAT = ('mp3', 'wav', 'aac', 'm4a', 'vorbis', 'opus', 'flac', '')\n\n        VALID_AUDIO_QUALITY = ('0', '5', '9')\n\n        VALID_FILESIZE_UNIT = ('', 'k', 'm', 'g', 't', 'p', 'e', 'z', 'y')\n\n        VALID_SUB_LANGUAGE = ('en', 'el', 'pt', 'fr', 'it', 'ru', 'es', 'de', 'he', 'sv', 'tr')\n\n        MIN_FRAME_SIZE = 100\n\n        # Decode string formatted tuples back to normal tuples\n        settings_dictionary['main_win_size'] = decode_tuple(settings_dictionary['main_win_size'])\n        settings_dictionary['opts_win_size'] = decode_tuple(settings_dictionary['opts_win_size'])\n\n        for key in self.options:\n            if key not in settings_dictionary:\n                return False\n\n            if type(self.options[key]) != type(settings_dictionary[key]):\n                return False\n\n        # Check if each key has a valid value\n        rules_dict = {\n            'video_format': FORMATS.keys(),\n            'second_video_format': VALID_VIDEO_FORMAT,\n            'audio_format': VALID_AUDIO_FORMAT,\n            'audio_quality': VALID_AUDIO_QUALITY,\n            'output_format': OUTPUT_FORMATS.keys(),\n            'min_filesize_unit': VALID_FILESIZE_UNIT,\n            'max_filesize_unit': VALID_FILESIZE_UNIT,\n            'subs_lang': VALID_SUB_LANGUAGE\n        }\n\n        for key, valid_list in rules_dict.items():\n            if settings_dictionary[key] not in valid_list:\n                return False\n\n        # Check workers number value\n        if settings_dictionary['workers_number'] < 1:\n            return False\n\n        # Check main-options frame size\n        for size in settings_dictionary['main_win_size']:\n            if size < MIN_FRAME_SIZE:\n                return False\n\n        for size in settings_dictionary['opts_win_size']:\n            if size < MIN_FRAME_SIZE:\n                return False\n\n        return True\n\n    def _get_options(self):\n        \"\"\"Return options dictionary without SENSITIVE_KEYS. \"\"\"\n        temp_options = self.options.copy()\n\n        for key in self.SENSITIVE_KEYS:\n            temp_options[key] = ''\n\n        # Encode normal tuples to string formatted tuples\n        temp_options['main_win_size'] = encode_tuple(temp_options['main_win_size'])\n        temp_options['opts_win_size'] = encode_tuple(temp_options['opts_win_size'])\n\n        return temp_options\n\n","highlightingTokens":[4,0,4,0,3,0,1,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,1,5,0,0,0,0,0,0,3,0,0,0,3,0,0,0,0,3,0,3,0,3,0,0,1,6,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,10,0,0,0,10,0,9,0,0,0,0,0,10,0,0,0,0,10,0,9,0,0,0,0,0,9,0,0,0,0,0,9,0,0,0,1,6,0,0,0,0,0,0,3,0,4,0,0,0,10,0,0,3,0,9,0,3,0,0,3,0,0,9,0,3,0,0,0,0,10,0,9,0,9,0,3,0,0,3,0,0,0,0,10,0,9,0,9,0,3,0,0,3,0,0,0,0,10,0,9,0,9,0,3,0,0,3,0,0,0,0,10,0,9,0,9,0,3,0,0,3,0,0,0,0,3,0,3,0,3,0,3,0,3,0,2,0,3,0,2,0,3,0,3,0,3,0,3,0,3,0,2,0,3,0,2,0,3,0,0,0,10,0,9,0,3,0,3,0,0,3,0,2,0,3,0,2,0,3,0,2,0,3,0,2,0,3,0,2,0,3,0,3,0,3,0,3,0,3,0,2,0,3,0,2,0,3,0,2,0,3,0,2,0,3,0,3,0,3,0,2,0,3,0,2,0,3,0,2,0,3,0,2,0,3,0,2,0,3,0,2,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,2,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,0,0,10,0,3,0,3,0,3,0,2,0,3,0,2,0,3,0,2,0,3,0,9,0,0,0,3,0,0,2,0,2,0,0,3,0,0,2,0,2,0,0,3,0,0,3,0,3,0,0,3,0,0,3,0,3,0,3,0,0,3,0,3,0,3,0,2,0,3,0,2,0,3,0,2,0,3,0,2,0,3,0,2,0,3,0,2,0,3,0,2,0,3,0,2,0,3,0,2,0,3,0,2,0,0,4,0,0,0,3,0,1,0,0,10,0,3,0,1,0,0,10,0,3,1,9,0,0,0,0,0,0,0,0,10,0,3,0,0,0,0,1,6,0,0,0,0,0,0,3,0,1,1,9,0,0,0,10,0,0,0,0,1,0,1,9,0,0,0,10,0,3,0,1,0,0,0,0,1,0,0,0,0,0,0,0,9,0,0,0,0,1,0,0,9,0,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,9,0,0,0,1,6,0,0,0,0,0,0,3,0,9,0,0,0,10,0,0,1,9,0,0,0,10,0,3,0,1,0,0,0,0,0,0,0,0,9,0,0,0,0,0,9,0,0,0,0,0,0,0,2,0,0,0,0,3,0,3,0,0,0,1,6,0,0,0,0,0,0,0,0,3,0,0,0,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,0,0,0,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,0,0,0,0,3,0,3,0,3,0,0,0,0,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,0,0,0,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,0,0,0,2,0,4,0,0,0,3,0,0,9,0,0,0,3,0,0,0,0,0,3,0,0,9,0,0,0,3,0,0,0,1,0,1,0,0,10,0,0,0,1,0,1,1,0,0,0,0,1,2,0,1,9,0,0,0,10,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,1,2,0,4,0,0,0,0,3,0,0,0,9,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,9,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,0,1,0,0,0,1,0,0,9,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,1,2,0,4,0,1,0,0,3,0,0,2,0,0,0,1,2,0,4,0,1,0,1,0,0,3,0,0,0,0,1,0,0,0,0,0,0,1,2,0,1,0,1,0,0,3,0,0,0,0,1,0,0,0,0,0,0,1,2,0,1,2,0,1,6,0,0,0,0,0,0,3,0,0,0,0,0,10,0,9,0,0,0,1,0,1,0,0,10,0,0,0,0,0,0,0,0,3,0,4,0,0,0,3,0,0,9,0,0,0,3,0,0,0,0,0,3,0,0,9,0,0,0,3,0,0,0,1,0,0,0,0],"highlightingCode":"<!DOCTYPE html>\n<html>\n<style>\n.ANY {\n    color: black;\n    font-weight: normal;\n    font-style: normal;\n}\n.KEYWORD {\n    color: blue;\n    font-weight: bold;\n    font-style: normal;\n}\n.LITERAL {\n    color: lightskyblue;\n    font-weight: bold;\n    font-style: normal;\n}\n.CHAR_STRING_LITERAL {\n    color: darkgoldenrod;\n    font-weight: normal;\n    font-style: normal;\n}\n.COMMENT {\n    color: grey;\n    font-weight: normal;\n    font-style: italic;\n}\n.CLASS_DECLARATOR {\n    color: crimson;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_DECLARATOR {\n    color: fuchsia;\n    font-weight: bold;\n    font-style: normal;\n}\n.VARIABLE_DECLARATOR {\n    color: purple;\n    font-weight: bold;\n    font-style: normal;\n}\n.TYPE_IDENTIFIER {\n    color: darkgreen;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_IDENTIFIER {\n    color: dodgerblue;\n    font-weight: normal;\n    font-style: normal;\n}\n.FIELD_IDENTIFIER {\n    color: coral;\n    font-weight: normal;\n    font-style: normal;\n}\n.ANNOTATION_DECLARATOR {\n    color: lightslategray;\n    font-weight: lighter;\n    font-style: italic;\n}\n</style>\n<pre>\n<code class=\"COMMENT\">#!/usr/bin/env python2</code><code class=\"ANY\">\n</code><code class=\"COMMENT\"># -*- coding: utf-8 -*-</code>\n<code class=\"ANY\">\n</code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Youtubedlg module to handle settings. \"\"\"</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">from</code> <code class=\"ANY\">__future__</code> <code class=\"KEYWORD\">import</code> <code class=\"ANY\">unicode_literals</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code> <code class=\"ANY\">os</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code> <code class=\"ANY\">json</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">from</code> <code class=\"ANY\">.</code><code class=\"ANY\">utils</code> <code class=\"KEYWORD\">import</code> <code class=\"ANY\">(</code>\n    <code class=\"ANY\">os_path_expanduser</code><code class=\"ANY\">,</code>\n    <code class=\"ANY\">os_path_exists</code><code class=\"ANY\">,</code>\n    <code class=\"ANY\">encode_tuple</code><code class=\"ANY\">,</code>\n    <code class=\"ANY\">decode_tuple</code><code class=\"ANY\">,</code>\n    <code class=\"ANY\">check_path</code><code class=\"ANY\">,</code>\n    <code class=\"ANY\">get_default_lang</code>\n<code class=\"ANY\">)</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">from</code> <code class=\"ANY\">.</code><code class=\"ANY\">formats</code> <code class=\"KEYWORD\">import</code> <code class=\"ANY\">(</code>\n    <code class=\"ANY\">OUTPUT_FORMATS</code><code class=\"ANY\">,</code>\n    <code class=\"ANY\">FORMATS</code>\n<code class=\"ANY\">)</code>\n\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">OptionsManager</code><code class=\"ANY\">(</code><code class=\"ANY\">object</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n\n<code class=\"ANY\">    </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Handles youtubedlg options.\n\n    This class is responsible for storing and retrieving the options.\n\n    Attributes:\n        SETTINGS_FILENAME (string): Filename of the settings file.\n        SENSITIVE_KEYS (tuple): Contains the keys that we don't want\n            to store on the settings file. (SECURITY ISSUES).\n\n    Args:\n        config_path (string): Absolute path where OptionsManager\n            should store the settings file.\n\n    Note:\n        See load_default() method for available options.\n\n    Example:\n        Access the options using the 'options' variable.\n\n        opt_manager = OptionsManager('.')\n        opt_manager.options['save_path'] = '~/Downloads'\n\n    \"\"\"</code>\n\n   <code class=\"ANY\"> </code><code class=\"ANY\">SETTINGS_FILENAME</code> <code class=\"ANY\">=</code> <code class=\"CHAR_STRING_LITERAL\">'settings.json'</code>\n   <code class=\"ANY\"> </code><code class=\"ANY\">SENSITIVE_KEYS</code> <code class=\"ANY\">=</code> <code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">'sudo_password'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'password'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'video_password'</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">__init__</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">config_path</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">config_path</code> <code class=\"ANY\">=</code> <code class=\"ANY\">config_path</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">settings_file</code> <code class=\"ANY\">=</code> <code class=\"ANY\">os</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">path</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">join</code><code class=\"ANY\">(</code><code class=\"ANY\">config_path</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">SETTINGS_FILENAME</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">options</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">dict</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">load_default</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">load_from_file</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">load_default</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Load the default options.\n\n        Note:\n            This method is automatically called by the constructor.\n\n        Options Description:\n\n            save_path (string): Path where youtube-dl should store the\n                downloaded file. Default is $HOME.\n\n            video_format (string): Video format to download.\n                When this options is set to '0' youtube-dl will choose\n                the best video format available for the given URL.\n\n            second_video_format (string): Video format to mix with the first\n                one (-f 18+17).\n\n            to_audio (boolean): If True youtube-dl will post process the\n                video file.\n\n            keep_video (boolen): If True youtube-dl will keep the video file\n                after post processing it.\n\n            audio_format (string): Audio format of the post processed file.\n                Available values are \"mp3\", \"wav\", \"aac\", \"m4a\", \"vorbis\",\n                \"opus\" & \"flac\".\n\n            audio_quality (string): Audio quality of the post processed file.\n                Available values are \"9\", \"5\", \"0\". The lowest the value the\n                better the quality.\n\n            restrict_filenames (boolean): If True youtube-dl will restrict\n                the downloaded file filename to ASCII characters only.\n\n            output_format (int): This option sets the downloaded file\n                output template. See formats.OUTPUT_FORMATS for more info.\n\n            output_template (string): Can be any output template supported\n                by youtube-dl.\n\n            playlist_start (int): Playlist index to start downloading.\n\n            playlist_end (int): Playlist index to stop downloading.\n\n            max_downloads (int): Maximum number of video files to download\n                from the given playlist.\n\n            min_filesize (float): Minimum file size of the video file.\n                If the video file is smaller than the given size then\n                youtube-dl will abort the download process.\n\n            max_filesize (float): Maximum file size of the video file.\n                If the video file is larger than the given size then\n                youtube-dl will abort the download process.\n\n            min_filesize_unit (string): Minimum file size unit.\n                Available values: '', 'k', 'm', 'g', 'y', 'p', 'e', 'z', 'y'.\n\n            max_filesize_unit (string): Maximum file size unit.\n                See 'min_filesize_unit' option for available values.\n\n            write_subs (boolean): If True youtube-dl will try to download\n                the subtitles file for the given URL.\n\n            write_all_subs (boolean): If True youtube-dl will try to download\n                all the available subtitles files for the given URL.\n\n            write_auto_subs (boolean): If True youtube-dl will try to download\n                the automatic subtitles file for the given URL.\n\n            embed_subs (boolean): If True youtube-dl will merge the subtitles\n                file with the video. (ONLY mp4 files).\n\n            subs_lang (string): Language of the subtitles file to download.\n                Needs 'write_subs' option.\n\n            ignore_errors (boolean): If True youtube-dl will ignore the errors\n                and continue the download process.\n\n            open_dl_dir (boolean): If True youtube-dlg will open the\n                destination folder after download process has been completed.\n\n            write_description (boolean): If True youtube-dl will write video\n                description to a .description file.\n\n            write_info (boolean): If True youtube-dl will write video\n                metadata to a .info.json file.\n\n            write_thumbnail (boolean): If True youtube-dl will write\n                thumbnail image to disk.\n\n            retries (int): Number of youtube-dl retries.\n\n            user_agent (string): Specify a custom user agent for youtube-dl.\n\n            referer (string): Specify a custom referer to use if the video\n                access is restricted to one domain.\n\n            proxy (string): Use the specified HTTP/HTTPS proxy.\n\n            shutdown (boolean): If True youtube-dlg will turn the computer\n                off after the download process has been completed.\n\n            sudo_password (string): SUDO password for the shutdown process if\n                the user does not have elevated privileges.\n\n            username (string): Username to login with.\n\n            password (string): Password to login with.\n\n            video_password (string): Video password for the given URL.\n\n            youtubedl_path (string): Absolute path to the youtube-dl binary.\n                Default is the self.config_path. You can change this option\n                to point on /usr/local/bin etc.. if you want to use the\n                youtube-dl binary on your system. This is also the directory\n                where youtube-dlg will auto download the youtube-dl if not\n                exists so you should make sure you have write access if you\n                want to update the youtube-dl binary from within youtube-dlg.\n\n            cmd_args (string): String that contains extra youtube-dl options\n                seperated by spaces.\n\n            enable_log (boolean): If True youtube-dlg will enable\n                the LogManager. See main() function under __init__().\n\n            log_time (boolean): See logmanager.LogManager add_time attribute.\n\n            workers_number (int): Number of download workers that download manager\n                will spawn. Must be greater than zero.\n\n            locale_name (string): Locale name (e.g. ru_RU).\n\n            main_win_size (tuple): Main window size (width, height).\n                If window becomes to small the program will reset its size.\n                See _settings_are_valid method MIN_FRAME_SIZE.\n\n            opts_win_size (tuple): Options window size (width, height).\n                If window becomes to small the program will reset its size.\n                See _settings_are_valid method MIN_FRAME_SIZE.\n\n            save_path_dirs (list): List that contains temporary save paths.\n\n            selected_video_formats (list): List that contains the selected\n                video formats to display on the main window.\n\n            selected_audio_formats (list): List that contains the selected\n                audio formats to display on the main window.\n\n            selected_format (string): Current format selected on the main window.\n\n            youtube_dl_debug (boolean): When True will pass '-v' flag to youtube-dl.\n\n            ignore_config (boolean): When True will ignore youtube-dl config file options.\n\n            confirm_exit (boolean): When True create popup to confirm exiting youtube-dl-gui.\n\n            native_hls (boolean): When True youtube-dl will use the native HLS implementation.\n\n            show_completion_popup (boolean): When True youtube-dl-gui will create a popup\n                to inform the user for the download completion.\n\n            confirm_deletion (boolean): When True ask user before item removal.\n\n            nomtime (boolean): When True will not use the Last-modified header to\n                set the file modification time.\n\n            embed_thumbnail (boolean): When True will embed the thumbnail in\n                the audio file as cover art.\n\n            add_metadata (boolean): When True will write metadata to file.\n\n            disable_update (boolean): When True the update process will be disabled.\n\n        \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"COMMENT\">#REFACTOR Remove old options & check options validation</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">options</code> <code class=\"ANY\">=</code> <code class=\"ANY\">{</code>\n            <code class=\"CHAR_STRING_LITERAL\">'save_path'</code><code class=\"ANY\">:</code> <code class=\"FUNCTION_IDENTIFIER\">os_path_expanduser</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">'~'</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'save_path_dirs'</code><code class=\"ANY\">:</code> <code class=\"ANY\">[</code>\n                <code class=\"FUNCTION_IDENTIFIER\">os_path_expanduser</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">'~'</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code>\n                <code class=\"ANY\">os</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">path</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">join</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">os_path_expanduser</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">'~'</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"Downloads\"</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code>\n                <code class=\"ANY\">os</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">path</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">join</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">os_path_expanduser</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">'~'</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"Desktop\"</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code>\n                <code class=\"ANY\">os</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">path</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">join</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">os_path_expanduser</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">'~'</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"Videos\"</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code>\n                <code class=\"ANY\">os</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">path</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">join</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">os_path_expanduser</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">'~'</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"Music\"</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code>\n            <code class=\"ANY\">]</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'video_format'</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">'0'</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'second_video_format'</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">'0'</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'to_audio'</code><code class=\"ANY\">:</code> <code class=\"LITERAL\">False</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'keep_video'</code><code class=\"ANY\">:</code> <code class=\"LITERAL\">False</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'audio_format'</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">''</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'audio_quality'</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">'5'</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'restrict_filenames'</code><code class=\"ANY\">:</code> <code class=\"LITERAL\">False</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'output_format'</code><code class=\"ANY\">:</code> <code class=\"LITERAL\">1</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'output_template'</code><code class=\"ANY\">:</code> <code class=\"ANY\">os</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">path</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">join</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">'%(uploader)s'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'%(title)s.%(ext)s'</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'playlist_start'</code><code class=\"ANY\">:</code> <code class=\"LITERAL\">1</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'playlist_end'</code><code class=\"ANY\">:</code> <code class=\"LITERAL\">0</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'max_downloads'</code><code class=\"ANY\">:</code> <code class=\"LITERAL\">0</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'min_filesize'</code><code class=\"ANY\">:</code> <code class=\"LITERAL\">0</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'max_filesize'</code><code class=\"ANY\">:</code> <code class=\"LITERAL\">0</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'min_filesize_unit'</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">''</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'max_filesize_unit'</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">''</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'write_subs'</code><code class=\"ANY\">:</code> <code class=\"LITERAL\">False</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'write_all_subs'</code><code class=\"ANY\">:</code> <code class=\"LITERAL\">False</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'write_auto_subs'</code><code class=\"ANY\">:</code> <code class=\"LITERAL\">False</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'embed_subs'</code><code class=\"ANY\">:</code> <code class=\"LITERAL\">False</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'subs_lang'</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">'en'</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'ignore_errors'</code><code class=\"ANY\">:</code> <code class=\"LITERAL\">True</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'open_dl_dir'</code><code class=\"ANY\">:</code> <code class=\"LITERAL\">False</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'write_description'</code><code class=\"ANY\">:</code> <code class=\"LITERAL\">False</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'write_info'</code><code class=\"ANY\">:</code> <code class=\"LITERAL\">False</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'write_thumbnail'</code><code class=\"ANY\">:</code> <code class=\"LITERAL\">False</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'retries'</code><code class=\"ANY\">:</code> <code class=\"LITERAL\">10</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'user_agent'</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">''</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'referer'</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">''</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'proxy'</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">''</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'shutdown'</code><code class=\"ANY\">:</code> <code class=\"LITERAL\">False</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'sudo_password'</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">''</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'username'</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">''</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'password'</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">''</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'video_password'</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">''</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'youtubedl_path'</code><code class=\"ANY\">:</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">config_path</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'cmd_args'</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">''</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'enable_log'</code><code class=\"ANY\">:</code> <code class=\"LITERAL\">True</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'log_time'</code><code class=\"ANY\">:</code> <code class=\"LITERAL\">True</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'workers_number'</code><code class=\"ANY\">:</code> <code class=\"LITERAL\">3</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'locale_name'</code><code class=\"ANY\">:</code> <code class=\"FUNCTION_IDENTIFIER\">get_default_lang</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'main_win_size'</code><code class=\"ANY\">:</code> <code class=\"ANY\">(</code><code class=\"LITERAL\">740</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">490</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'opts_win_size'</code><code class=\"ANY\">:</code> <code class=\"ANY\">(</code><code class=\"LITERAL\">640</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">490</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'selected_video_formats'</code><code class=\"ANY\">:</code> <code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">'webm'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'mp4'</code><code class=\"ANY\">]</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'selected_audio_formats'</code><code class=\"ANY\">:</code> <code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">'mp3'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'m4a'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'vorbis'</code><code class=\"ANY\">]</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'selected_format'</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">'0'</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'youtube_dl_debug'</code><code class=\"ANY\">:</code> <code class=\"LITERAL\">False</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'ignore_config'</code><code class=\"ANY\">:</code> <code class=\"LITERAL\">True</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'confirm_exit'</code><code class=\"ANY\">:</code> <code class=\"LITERAL\">True</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'native_hls'</code><code class=\"ANY\">:</code> <code class=\"LITERAL\">True</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'show_completion_popup'</code><code class=\"ANY\">:</code> <code class=\"LITERAL\">True</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'confirm_deletion'</code><code class=\"ANY\">:</code> <code class=\"LITERAL\">True</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'nomtime'</code><code class=\"ANY\">:</code> <code class=\"LITERAL\">False</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'embed_thumbnail'</code><code class=\"ANY\">:</code> <code class=\"LITERAL\">False</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'add_metadata'</code><code class=\"ANY\">:</code> <code class=\"LITERAL\">False</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'disable_update'</code><code class=\"ANY\">:</code> <code class=\"LITERAL\">False</code>\n        <code class=\"ANY\">}</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># Set the youtubedl_path again if the disable_update option is set</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">new_path</code> <code class=\"ANY\">=</code> <code class=\"CHAR_STRING_LITERAL\">'/usr/bin'</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">options</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">'disable_update'</code><code class=\"ANY\">]</code> <code class=\"KEYWORD\">and</code> <code class=\"ANY\">os</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">name</code> <code class=\"ANY\">!=</code> <code class=\"CHAR_STRING_LITERAL\">'nt'</code> <code class=\"KEYWORD\">and</code> <code class=\"FUNCTION_IDENTIFIER\">os_path_exists</code><code class=\"ANY\">(</code><code class=\"ANY\">new_path</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">options</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">'youtubedl_path'</code><code class=\"ANY\">]</code> <code class=\"ANY\">=</code> <code class=\"ANY\">new_path</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">load_from_file</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Load options from settings file. \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"KEYWORD\">not</code> <code class=\"FUNCTION_IDENTIFIER\">os_path_exists</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">settings_file</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"KEYWORD\">return</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">with</code> <code class=\"FUNCTION_IDENTIFIER\">open</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">settings_file</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'rb'</code><code class=\"ANY\">)</code> <code class=\"KEYWORD\">as</code> <code class=\"ANY\">settings_file</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"KEYWORD\">try</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">options</code> <code class=\"ANY\">=</code> <code class=\"ANY\">json</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">load</code><code class=\"ANY\">(</code><code class=\"ANY\">settings_file</code><code class=\"ANY\">)</code>\n\n               <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_settings_are_valid</code><code class=\"ANY\">(</code><code class=\"ANY\">options</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                    </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">options</code> <code class=\"ANY\">=</code> <code class=\"ANY\">options</code>\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">except</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">load_default</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">save_to_file</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Save options to settings file. \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">check_path</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">config_path</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">with</code> <code class=\"FUNCTION_IDENTIFIER\">open</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">settings_file</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'wb'</code><code class=\"ANY\">)</code> <code class=\"KEYWORD\">as</code> <code class=\"ANY\">settings_file</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">options</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_get_options</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">json</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">dump</code><code class=\"ANY\">(</code><code class=\"ANY\">options</code><code class=\"ANY\">,</code>\n                      <code class=\"ANY\">settings_file</code><code class=\"ANY\">,</code>\n                      <code class=\"ANY\">indent</code><code class=\"ANY\">=</code><code class=\"LITERAL\">4</code><code class=\"ANY\">,</code>\n                      <code class=\"ANY\">separators</code><code class=\"ANY\">=</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">','</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">': '</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_settings_are_valid</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">settings_dictionary</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Check settings.json dictionary.\n\n        Args:\n            settings_dictionary (dict): Options dictionary loaded\n                from the settings file. See load_from_file() method.\n\n        Returns:\n            True if settings.json dictionary is valid, else False.\n\n        \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">VALID_VIDEO_FORMAT</code> <code class=\"ANY\">=</code> <code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">'0'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'17'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'36'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'5'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'34'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'35'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'43'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'44'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'45'</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'46'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'18'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'22'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'37'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'38'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'160'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'133'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'134'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'135'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'136'</code><code class=\"ANY\">,</code><code class=\"CHAR_STRING_LITERAL\">'137'</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'264'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'138'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'242'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'243'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'244'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'247'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'248'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'271'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'272'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'82'</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'83'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'84'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'85'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'100'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'101'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'102'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'139'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'140'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'141'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'171'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'172'</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">VALID_AUDIO_FORMAT</code> <code class=\"ANY\">=</code> <code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">'mp3'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'wav'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'aac'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'m4a'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'vorbis'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'opus'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'flac'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">''</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">VALID_AUDIO_QUALITY</code> <code class=\"ANY\">=</code> <code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">'0'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'5'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'9'</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">VALID_FILESIZE_UNIT</code> <code class=\"ANY\">=</code> <code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">''</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'k'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'m'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'g'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'t'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'p'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'e'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'z'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'y'</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">VALID_SUB_LANGUAGE</code> <code class=\"ANY\">=</code> <code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">'en'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'el'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'pt'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'fr'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'it'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'ru'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'es'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'de'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'he'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'sv'</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">'tr'</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">MIN_FRAME_SIZE</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">100</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># Decode string formatted tuples back to normal tuples</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">settings_dictionary</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">'main_win_size'</code><code class=\"ANY\">]</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">decode_tuple</code><code class=\"ANY\">(</code><code class=\"ANY\">settings_dictionary</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">'main_win_size'</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">settings_dictionary</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">'opts_win_size'</code><code class=\"ANY\">]</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">decode_tuple</code><code class=\"ANY\">(</code><code class=\"ANY\">settings_dictionary</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">'opts_win_size'</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">key</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">options</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">key</code> <code class=\"KEYWORD\">not</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">settings_dictionary</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">False</code>\n\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"FUNCTION_IDENTIFIER\">type</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">options</code><code class=\"ANY\">[</code><code class=\"ANY\">key</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code> <code class=\"ANY\">!=</code> <code class=\"FUNCTION_IDENTIFIER\">type</code><code class=\"ANY\">(</code><code class=\"ANY\">settings_dictionary</code><code class=\"ANY\">[</code><code class=\"ANY\">key</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">False</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># Check if each key has a valid value</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">rules_dict</code> <code class=\"ANY\">=</code> <code class=\"ANY\">{</code>\n            <code class=\"CHAR_STRING_LITERAL\">'video_format'</code><code class=\"ANY\">:</code> <code class=\"ANY\">FORMATS</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">keys</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'second_video_format'</code><code class=\"ANY\">:</code> <code class=\"ANY\">VALID_VIDEO_FORMAT</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'audio_format'</code><code class=\"ANY\">:</code> <code class=\"ANY\">VALID_AUDIO_FORMAT</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'audio_quality'</code><code class=\"ANY\">:</code> <code class=\"ANY\">VALID_AUDIO_QUALITY</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'output_format'</code><code class=\"ANY\">:</code> <code class=\"ANY\">OUTPUT_FORMATS</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">keys</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'min_filesize_unit'</code><code class=\"ANY\">:</code> <code class=\"ANY\">VALID_FILESIZE_UNIT</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'max_filesize_unit'</code><code class=\"ANY\">:</code> <code class=\"ANY\">VALID_FILESIZE_UNIT</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">'subs_lang'</code><code class=\"ANY\">:</code> <code class=\"ANY\">VALID_SUB_LANGUAGE</code>\n        <code class=\"ANY\">}</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">key</code><code class=\"ANY\">,</code> <code class=\"ANY\">valid_list</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">rules_dict</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">items</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">settings_dictionary</code><code class=\"ANY\">[</code><code class=\"ANY\">key</code><code class=\"ANY\">]</code> <code class=\"KEYWORD\">not</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">valid_list</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">False</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># Check workers number value</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">settings_dictionary</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">'workers_number'</code><code class=\"ANY\">]</code> <code class=\"ANY\"><</code> <code class=\"LITERAL\">1</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">False</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># Check main-options frame size</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">size</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">settings_dictionary</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">'main_win_size'</code><code class=\"ANY\">]</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">size</code> <code class=\"ANY\"><</code> <code class=\"ANY\">MIN_FRAME_SIZE</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">False</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">size</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">settings_dictionary</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">'opts_win_size'</code><code class=\"ANY\">]</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">size</code> <code class=\"ANY\"><</code> <code class=\"ANY\">MIN_FRAME_SIZE</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">False</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"LITERAL\">True</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_get_options</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Return options dictionary without SENSITIVE_KEYS. \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">temp_options</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">options</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">copy</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">key</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">SENSITIVE_KEYS</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">temp_options</code><code class=\"ANY\">[</code><code class=\"ANY\">key</code><code class=\"ANY\">]</code> <code class=\"ANY\">=</code> <code class=\"CHAR_STRING_LITERAL\">''</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># Encode normal tuples to string formatted tuples</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">temp_options</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">'main_win_size'</code><code class=\"ANY\">]</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">encode_tuple</code><code class=\"ANY\">(</code><code class=\"ANY\">temp_options</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">'main_win_size'</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">temp_options</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">'opts_win_size'</code><code class=\"ANY\">]</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">encode_tuple</code><code class=\"ANY\">(</code><code class=\"ANY\">temp_options</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">'opts_win_size'</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">temp_options</code><code class=\"ANY\">\n</code><code class=\"ANY\">\n</code>\n</pre>\n</html>"},{"_id":{"language":"PYTHON3","lexingTokens":[99,41,99,41,3,41,9,42,10,42,41,10,42,41,10,42,41,10,42,41,9,42,51,42,51,42,10,42,99,41,9,42,51,42,51,42,10,42,11,42,41,9,42,51,42,51,42,51,42,10,42,41,9,51,42,10,42,41,9,51,42,10,54,42,56,42,55,41,9,51,42,10,54,42,56,42,55,41,9,51,42,10,54,42,56,42,56,42,56,42,56,42,55,41,9,51,42,10,54,42,56,42,56,42,56,42,56,42,56,42,56,42,55,41,9,51,42,10,42,41,9,51,42,10,54,42,56,42,56,42,56,42,55,41,9,51,42,10,54,42,56,42,56,42,56,42,56,42,55,41,9,51,42,10,42,41,33,42,54,42,51,42,55,57,1,41,3,41,42,60,54,4,56,4,55,41,99,41,42,60,42,54,3,55,41,42,60,42,54,3,55,41,42,60,42,54,3,55,41,42,60,42,54,3,55,41,42,60,42,54,3,55,41,42,60,42,54,3,55,41,42,60,42,54,3,55,41,42,60,42,54,3,55,41,42,60,42,54,3,55,41,42,60,42,54,3,55,41,42,60,42,54,3,55,41,42,60,42,54,3,55,41,42,60,42,54,3,55,41,42,60,42,54,3,55,41,42,60,42,54,3,55,41,42,60,42,54,3,55,41,42,60,42,54,3,55,41,42,60,42,54,3,55,41,42,60,42,54,3,3,55,41,42,60,42,54,3,55,41,42,60,42,54,3,55,41,42,60,42,54,3,55,41,42,60,42,54,3,55,41,42,60,42,54,3,55,41,42,60,42,54,3,55,41,42,60,42,54,3,55,41,42,60,42,54,3,55,41,42,60,42,54,3,55,41,42,60,42,54,3,55,41,42,60,42,54,3,55,41,42,60,42,54,3,55,41,42,60,42,54,3,3,55,41,42,60,42,54,3,3,55,41,42,60,42,54,3,55,41,42,60,42,54,3,55,41,42,60,42,54,3,55,41,42,60,42,54,3,55,41,42,60,42,54,3,55,41,42,60,42,54,3,55,41,42,60,42,54,3,55,41,42,60,42,54,3,55,41,99,41,99,41,99,41,99,41,99,41,99,41,99,41,99,41,42,60,74,3,57,54,4,56,42,56,4,56,31,55,56,3,57,54,4,56,42,56,4,56,32,55,56,3,57,54,4,56,42,56,4,56,32,55,56,3,57,54,4,56,42,56,4,56,32,55,56,3,57,54,4,56,42,56,4,56,32,55,56,3,57,54,4,56,42,56,4,56,32,55,56,3,57,54,4,56,42,56,4,56,32,55,75,41,6,42,54,42,56,42,56,42,56,42,60,30,55,57,1,41,42,54,42,56,42,55,51,42,54,42,56,42,51,42,56,42,56,42,60,42,51,42,61,3,62,55,41,42,51,42,60,42,41,42,51,42,60,42,41,42,51,42,60,30,41,42,51,42,60,30,41,42,51,42,60,30,99,41,42,51,42,60,42,54,55,41,99,41,42,51,42,60,42,54,55,41,99,41,42,51,42,60,42,54,55,41,99,41,42,51,42,60,42,51,42,54,42,55,41,99,41,42,60,42,54,55,41,15,42,29,28,30,57,1,41,42,51,42,60,42,51,42,54,42,56,42,51,42,55,41,42,51,42,54,42,51,42,55,2,42,60,54,54,3,56,3,55,56,54,3,56,3,55,56,54,3,56,3,55,56,54,3,56,3,55,56,54,3,56,3,55,56,54,3,56,3,55,56,54,3,56,3,55,56,54,3,56,3,55,56,54,3,56,3,55,56,54,3,56,3,55,56,54,3,56,3,55,55,41,42,51,42,60,74,75,41,19,42,20,42,57,1,41,42,56,42,60,42,41,42,51,42,61,42,62,60,42,51,42,54,42,51,42,51,42,54,42,51,42,56,42,55,55,2,99,41,99,41,42,60,54,54,3,56,42,51,42,56,54,69,4,56,69,4,55,56,42,51,42,56,42,51,42,55,56,54,3,56,42,51,42,56,54,69,4,56,69,4,55,56,42,51,42,56,42,51,42,55,56,54,3,56,42,51,42,56,54,69,4,56,69,4,55,56,42,51,42,56,42,51,42,55,56,54,3,56,42,51,42,56,54,69,4,56,69,4,55,56,42,51,42,56,42,51,42,55,56,54,3,56,42,51,42,56,54,69,4,56,69,4,55,56,42,51,42,56,42,51,42,55,56,54,3,56,42,51,42,56,54,69,4,56,69,4,55,56,42,51,42,56,42,51,42,55,56,54,3,56,42,51,42,56,54,69,4,56,69,4,55,56,42,51,42,56,42,51,42,55,56,54,3,56,3,56,54,4,56,69,4,55,56,42,51,42,56,42,51,42,55,56,54,3,56,42,51,42,56,54,69,4,56,69,4,55,56,42,51,42,56,42,51,42,55,55,41,99,41,99,41,42,60,54,54,42,51,42,56,42,51,42,55,56,54,42,51,42,56,42,51,42,55,56,54,42,51,42,56,42,51,42,55,56,54,42,51,42,56,42,51,42,55,55,41,42,60,54,54,42,54,3,55,56,42,51,42,55,56,54,42,54,3,55,56,42,51,42,55,56,54,42,54,3,55,56,42,51,42,55,56,54,42,54,3,55,56,42,51,42,55,55,41,99,41,42,51,42,60,42,54,42,55,41,99,41,42,51,42,60,42,51,42,54,42,55,41,42,51,42,60,42,51,42,54,42,51,42,55,41,99,41,42,51,42,60,42,51,42,54,42,51,42,61,3,62,56,54,4,56,4,55,56,42,51,42,55,41,42,51,42,60,42,51,42,54,42,51,42,63,42,51,42,56,42,51,42,55,41,42,51,42,60,42,51,42,54,42,51,42,61,3,62,56,42,51,42,55,41,42,51,42,60,42,54,42,51,42,56,4,56,42,60,42,51,42,55,41,42,51,42,60,42,54,42,51,42,56,42,60,42,51,42,55,41,42,51,42,60,42,51,42,54,42,51,42,55,41,42,51,42,60,42,54,42,51,42,56,42,60,42,51,42,56,42,60,42,51,42,63,42,51,42,63,42,51,42,55,41,99,41,42,51,42,60,74,75,41,19,42,20,42,57,1,41,42,56,42,56,42,56,42,56,42,60,42,41,42,60,42,54,42,51,42,56,42,60,42,55,41,15,42,78,42,51,42,57,1,41,42,51,42,54,42,55,2,16,42,78,42,51,42,57,1,41,42,51,42,54,42,51,42,54,42,55,55,2,15,42,20,42,51,42,57,1,41,42,51,42,54,42,51,42,61,42,62,56,42,51,42,55,2,15,42,29,28,30,57,1,41,42,51,42,54,42,51,42,56,42,55,2,42,51,42,61,42,62,60,42,2,42,51,42,60,42,51,42,54,55,41,99,41,42,51,42,60,42,51,42,54,42,55,41,42,51,42,60,42,51,42,54,42,55,41,99,41,42,51,42,54,42,51,42,56,25,42,57,30,55,41,99,41,42,51,42,54,42,51,42,56,42,51,42,56,42,51,42,55,41,42,51,42,54,42,51,42,56,42,51,42,56,42,51,42,55,41,42,51,42,54,42,51,42,56,42,51,42,56,42,51,42,55,41,42,51,42,54,42,51,42,56,42,51,42,56,42,51,42,55,41,42,51,42,54,42,51,42,56,42,51,42,55,41,42,51,42,54,42,51,42,56,42,51,42,56,42,51,42,55,41,42,51,42,51,42,54,42,51,42,56,42,51,42,55,41,99,41,42,51,42,54,42,51,42,56,42,55,41,42,51,42,54,42,51,42,56,42,55,41,42,51,42,54,42,51,42,56,42,55,41,99,41,42,51,42,54,55,41,42,51,42,54,42,51,42,55,41,42,51,42,54,42,51,42,55,41,42,51,42,54,55,41,42,51,42,51,42,54,42,51,42,51,42,61,3,62,55,41,42,51,42,51,42,54,42,51,42,51,42,61,3,62,55,41,42,51,42,54,55,41,42,51,42,51,42,54,55,2,6,42,54,42,56,42,55,57,1,41,42,60,42,51,42,54,55,41,19,42,20,42,57,1,41,42,56,42,60,42,41,42,60,42,51,42,54,69,4,56,42,55,41,42,51,42,54,42,51,42,56,42,56,42,55,2,7,42,2,6,42,54,42,56,42,55,57,1,41,42,60,42,51,42,54,55,41,15,42,82,69,4,57,1,41,42,51,42,51,42,54,55,41,42,51,42,51,42,54,42,56,42,60,4,55,41,42,51,42,54,42,51,42,55,2,6,42,54,42,56,42,55,57,1,41,42,60,42,51,42,51,42,54,55,41,15,42,82,69,4,57,1,41,42,60,42,51,42,51,42,54,42,55,41,42,60,42,51,42,51,42,54,42,55,41,15,42,51,42,82,3,57,1,41,42,51,42,51,42,54,42,55,41,42,51,42,51,42,54,42,55,41,42,60,42,51,42,51,42,54,42,51,42,51,42,55,41,42,60,42,54,42,51,42,56,42,55,41,42,51,42,60,42,51,42,51,42,61,3,62,41,15,28,42,51,42,51,42,54,42,51,42,55,57,1,41,42,51,42,51,42,54,42,55,41,42,51,42,51,42,54,42,55,2,6,42,54,42,55,57,1,41,42,51,42,54,55,41,42,51,42,51,42,54,42,51,42,51,42,61,3,62,55,41,42,51,42,51,42,54,42,51,42,51,42,61,3,62,55,2,6,42,54,42,56,42,55,57,1,41,42,60,42,51,42,51,42,54,55,41,15,42,82,69,4,57,1,41,42,60,42,51,42,51,42,54,42,55,41,42,60,42,51,42,51,42,54,42,55,41,15,42,51,42,57,1,41,42,54,42,51,42,55,2,6,42,54,42,56,42,55,57,1,41,42,54,42,51,42,51,42,54,55,55,2,6,42,54,42,56,42,55,57,1,41,42,60,42,51,42,51,42,54,55,41,15,42,82,69,4,57,1,41,42,60,42,51,42,51,42,54,42,55,41,42,60,42,51,42,51,42,54,42,55,41,42,60,42,51,42,41,15,28,42,51,42,51,42,54,55,57,1,41,42,60,42,51,42,54,55,41,42,51,42,54,42,55,41,42,51,42,51,42,54,55,41,42,51,42,51,42,54,42,55,41,42,51,42,51,42,54,55,2,6,42,54,42,56,42,55,57,1,41,42,60,42,51,42,51,42,54,55,41,15,42,82,69,4,57,1,41,42,60,42,51,42,51,42,54,42,55,41,42,60,42,51,42,51,42,54,42,55,41,42,60,42,54,42,51,42,56,42,51,42,55,41,15,28,42,51,42,51,42,54,55,57,1,41,42,60,42,51,42,54,55,41,42,51,42,54,42,55,41,42,51,42,51,42,54,55,41,42,51,42,51,42,54,42,55,41,42,51,42,51,42,54,55,2,6,42,54,42,56,42,55,57,1,41,42,60,4,41,42,60,42,60,42,60,42,60,42,60,4,41,19,42,20,42,51,42,51,42,54,55,57,1,41,15,42,51,42,78,3,57,1,41,42,85,4,2,15,42,51,42,78,3,57,1,41,42,85,4,2,15,42,51,42,78,3,57,1,41,42,85,4,41,42,85,42,54,42,51,42,61,3,62,51,42,54,3,55,61,4,62,55,2,15,42,51,42,78,3,57,1,41,42,85,4,2,15,42,51,42,78,3,57,1,41,42,85,4,2,99,41,99,41,42,60,42,68,42,68,42,68,42,41,42,85,42,53,4,68,42,53,4,41,15,42,57,1,41,42,89,42,2,42,60,42,51,42,51,42,54,42,56,42,56,42,56,42,56,42,56,42,55,41,15,42,51,42,29,30,57,1,41,99,41,42,51,42,54,42,55,2,6,42,54,42,56,42,55,57,1,41,42,60,42,51,42,51,42,54,55,41,42,60,42,54,3,55,41,42,60,42,51,42,61,3,62,41,19,42,20,42,57,1,41,42,60,42,51,42,51,42,54,42,55,41,42,60,42,51,42,51,42,54,42,55,41,15,42,51,42,78,3,57,1,41,99,41,99,41,42,60,42,54,3,55,41,42,60,42,51,42,61,3,62,41,38,2,42,51,42,61,3,62,51,42,54,42,55,41,42,51,42,61,3,62,51,42,54,42,51,42,54,42,55,55,41,42,51,42,61,3,62,51,42,54,42,56,42,51,42,55,2,6,42,54,42,55,57,1,41,42,51,42,51,42,54,55,41,42,51,42,51,42,54,42,54,42,51,42,54,55,55,56,32,55,41,42,60,61,62,41,19,42,20,42,51,42,51,42,61,3,62,57,1,41,42,51,42,54,42,61,42,62,55,2,42,60,61,62,41,19,42,20,42,51,42,51,42,61,3,62,57,1,41,42,51,42,54,42,61,42,62,55,2,15,42,57,1,41,42,51,42,51,42,54,42,54,3,55,55,41,42,51,42,51,42,54,42,55,2,15,42,57,1,41,42,51,42,51,42,54,42,54,3,55,55,41,42,51,42,51,42,54,42,55,2,42,60,42,51,42,51,42,54,42,61,42,51,42,51,42,61,3,62,62,55,41,15,42,78,42,51,42,57,1,41,42,51,42,51,42,54,4,55,2,17,57,1,41,42,51,42,51,42,54,42,55,2,42,51,42,54,30,55,2,6,42,54,42,56,42,55,57,1,41,42,51,42,51,42,61,3,62,60,42,60,42,61,42,51,42,51,42,54,55,62,41,15,42,20,42,57,1,41,42,51,42,51,42,61,3,62,60,42,41,42,51,42,51,42,61,3,62,60,3,99,2,16,42,20,42,57,1,41,42,51,42,51,42,61,3,62,60,42,61,42,54,3,55,62,41,42,51,42,51,42,61,3,62,60,42,2,17,57,1,41,42,51,42,51,42,61,3,62,60,42,61,42,54,3,55,62,41,42,51,42,51,42,61,3,62,60,3,2,6,42,54,42,56,42,55,57,1,41,42,51,42,51,42,61,3,62,60,42,51,42,51,42,54,55,2,6,42,54,42,56,42,55,57,1,41,42,60,42,51,42,51,42,54,55,41,15,42,78,69,4,57,1,41,42,60,42,54,42,56,61,42,54,3,55,56,42,54,3,55,62,56,42,54,3,55,56,42,54,3,55,55,41,42,60,42,51,42,54,55,41,42,51,42,54,55,41,99,41,15,42,78,4,57,1,41,19,42,20,42,51,42,51,42,54,55,57,1,41,15,42,51,42,82,3,57,1,41,42,51,42,51,42,54,42,51,42,51,42,54,42,51,42,55,55,41,42,51,42,51,42,54,42,51,42,55,2,15,42,78,4,57,1,41,19,42,20,42,51,42,51,42,54,55,57,1,41,15,42,51,42,78,3,57,1,41,42,51,42,51,42,54,42,51,42,51,42,54,42,51,42,55,55,41,42,51,42,51,42,54,42,51,42,55,2,17,57,1,41,15,42,51,42,51,42,61,3,62,57,1,41,42,60,42,51,42,54,42,56,42,54,3,55,56,42,54,3,55,56,42,51,42,63,42,51,42,55,41,42,60,42,51,42,54,55,78,42,51,42,41,42,51,42,54,55,2,17,57,1,41,42,60,31,2,15,42,57,1,41,18,42,79,4,57,1,41,42,60,42,51,42,51,42,54,42,55,41,42,60,42,51,42,51,42,54,42,55,41,15,42,51,42,78,3,57,1,41,42,51,42,54,42,54,3,55,56,42,51,42,56,42,51,42,63,42,51,42,55,2,17,57,1,41,99,1,41,99,41,99,41,99,41,99,1,41,99,1,41,99,2,42,51,42,51,42,54,42,55,41,42,51,42,51,42,54,42,55,41,42,86,4,2,42,60,42,51,42,51,42,54,42,55,2,42,51,42,54,30,55,2,6,42,54,42,56,42,55,57,1,41,42,60,42,51,42,51,42,54,55,41,15,42,57,1,41,19,42,20,42,57,1,41,42,60,42,51,42,51,42,54,42,55,41,42,60,42,51,42,51,42,54,42,55,41,15,42,51,42,78,3,57,1,41,15,42,51,42,57,1,41,42,60,42,51,42,54,55,61,69,4,62,41,42,54,42,55,2,17,57,1,41,42,51,42,54,42,54,3,55,56,42,51,42,56,42,51,42,63,42,51,42,55,2,6,42,54,42,56,42,55,57,1,41,42,60,42,51,42,51,42,54,55,41,15,42,82,69,4,57,1,41,18,42,79,4,57,1,41,42,60,42,51,42,51,42,54,42,55,41,42,60,42,51,42,51,42,54,42,55,41,42,60,42,69,4,41,15,42,76,4,57,1,41,42,60,4,2,15,28,42,51,42,51,42,54,42,55,57,1,41,42,51,42,51,42,54,42,55,41,42,51,42,51,42,54,42,55,41,42,51,42,51,42,54,42,56,42,55,2,42,60,42,51,42,51,42,54,42,55,2,6,42,54,42,56,42,55,57,1,41,42,60,42,51,42,51,42,54,42,60,31,55,41,15,42,82,69,4,57,1,41,18,42,79,4,57,1,41,42,60,42,51,42,51,42,54,42,55,41,42,60,42,51,42,51,42,54,42,55,41,42,60,42,68,4,41,15,42,79,42,51,42,51,42,54,55,57,1,41,42,60,42,51,42,51,42,54,55,69,4,2,15,28,42,51,42,51,42,54,42,55,57,1,41,42,51,42,51,42,54,42,55,41,42,51,42,51,42,54,42,55,41,42,51,42,51,42,54,42,56,42,55,2,42,60,42,51,42,51,42,54,42,56,31,55,2,6,42,54,42,56,42,55,57,1,41,42,60,42,51,42,51,42,54,55,41,15,28,42,57,1,41,19,42,56,42,20,42,54,42,51,42,51,42,54,55,55,57,1,41,15,42,51,42,20,54,3,56,3,56,3,55,57,1,41,99,41,42,60,42,51,42,41,42,51,42,54,55,41,42,51,42,60,42,41,42,51,42,51,42,54,42,56,42,55,2,17,57,1,41,19,42,20,42,57,1,41,42,60,42,51,42,51,42,54,42,55,41,42,60,42,51,42,51,42,54,42,55,41,15,42,51,42,20,54,3,56,3,56,3,55,57,1,41,99,41,42,60,42,51,42,41,42,51,42,54,55,41,42,51,42,60,42,41,42,51,42,51,42,54,42,56,42,55,2,42,51,42,54,30,55,2,6,42,54,42,56,42,55,57,1,41,42,60,42,51,42,51,42,54,55,41,15,42,57,1,41,99,41,15,42,51,42,61,3,62,51,42,54,55,78,42,54,3,55,57,1,41,42,60,3,2,17,57,1,41,42,60,3,2,19,42,20,42,57,1,41,42,60,42,51,42,51,42,54,42,55,41,42,60,42,51,42,51,42,54,42,55,41,15,42,51,42,78,3,26,42,51,42,78,3,57,1,41,42,51,42,51,42,54,42,56,42,55,2,42,51,42,51,42,54,42,56,42,55,2,42,51,42,54,30,55,2,6,42,54,42,56,42,55,57,1,41,15,42,51,42,29,30,57,1,41,15,42,51,42,29,28,30,27,42,51,42,51,42,54,55,57,1,41,42,51,42,54,42,54,3,55,56,42,51,42,56,42,51,42,63,42,51,42,55,2,17,57,1,41,42,51,42,54,55,2,17,57,1,41,42,51,42,51,42,54,55,2,6,42,54,42,56,42,55,57,1,41,42,60,42,51,42,54,42,56,42,51,42,56,42,51,42,51,42,54,55,55,41,15,42,51,42,54,55,78,42,51,42,57,1,41,42,60,42,51,42,54,55,41,42,51,42,51,42,54,42,55,41,42,51,42,51,42,54,42,55,41,42,51,42,54,30,55,2,42,51,42,54,55,2,6,42,54,42,56,42,55,57,1,41,42,60,42,51,42,54,55,41,15,28,42,57,1,41,42,51,42,54,42,51,42,56,42,51,42,56,42,51,42,63,42,51,42,55,2,17,57,1,41,42,51,42,51,42,54,55,41,42,60,42,51,42,51,42,54,42,51,42,51,42,55,41,19,42,20,42,57,1,41,42,60,42,54,42,56,42,55,41,42,51,42,60,42,51,42,51,42,61,3,62,41,15,28,42,51,42,51,42,54,42,51,42,55,57,1,41,42,51,42,51,42,54,42,55,41,42,51,42,51,42,54,42,55,2,6,42,54,42,56,42,55,57,1,41,42,60,42,51,42,51,42,54,55,41,42,60,42,51,42,51,42,54,55,61,4,62,41,42,60,54,42,61,4,62,56,42,61,4,62,68,42,55,41,42,51,42,54,42,51,42,56,42,55,2,6,42,54,42,56,42,55,57,1,41,15,42,51,42,29,30,57,1,41,42,51,42,54,42,54,3,55,56,42,51,42,56,42,51,42,63,42,51,42,55,2,17,57,1,41,42,60,42,54,42,55,41,42,51,42,54,42,51,42,51,42,55,41,42,51,42,54,55,2,6,42,54,42,56,42,55,57,1,41,42,60,42,51,42,54,55,41,15,42,51,42,29,28,30,57,1,41,42,51,42,54,42,51,42,55,2,42,51,42,54,42,55,41,42,51,42,54,42,55,41,42,51,42,54,42,55,41,42,51,42,54,42,55,41,42,51,42,54,42,55,41,42,51,42,54,42,55,41,42,51,42,54,42,55,2,6,42,54,42,56,42,56,42,55,57,1,41,3,41,42,51,42,54,42,56,42,55,2,6,42,54,42,56,42,55,57,1,41,7,42,51,42,54,42,51,42,56,42,60,42,55,2,6,42,54,42,56,42,56,42,60,54,69,4,56,69,4,55,56,42,60,30,55,57,1,41,42,60,42,51,42,54,42,51,42,56,42,60,42,56,42,60,42,56,42,60,42,51,42,55,41,15,42,29,28,30,57,1,41,42,51,42,54,42,51,42,56,42,55,2,7,42,2,6,42,54,42,56,42,56,42,60,30,55,57,1,41,42,60,42,51,42,54,42,51,42,56,42,60,42,55,41,15,42,29,28,30,57,1,41,42,51,42,54,42,51,42,56,42,55,2,7,42,2,6,42,54,42,56,42,60,30,56,42,60,30,55,57,1,41,15,42,29,30,57,1,41,42,60,42,51,42,54,42,51,42,55,2,17,57,1,41,42,60,42,51,42,54,42,51,42,56,42,60,42,55,2,15,42,29,28,30,57,1,41,42,51,42,54,42,51,42,56,42,55,41,42,51,42,54,42,51,42,56,42,55,2,15,42,51,42,78,3,57,1,41,99,41,6,42,54,42,55,57,1,41,15,42,51,42,54,55,78,42,51,42,57,1,41,42,51,42,54,55,51,42,54,55,2,42,51,42,54,55,2,42,51,42,54,42,51,42,56,42,55,2,7,42,2,6,42,54,42,56,42,56,42,56,42,55,57,1,41,42,51,42,54,42,56,42,56,42,55,2,6,42,54,42,55,57,1,41,3,41,42,60,42,51,42,54,55,41,42,60,42,51,42,54,42,51,42,55,41,42,60,42,51,42,54,42,51,42,55,41,42,51,42,54,42,51,42,56,4,56,42,51,42,63,42,51,42,56,4,55,41,42,51,42,54,54,69,4,56,69,4,55,56,4,55,41,42,51,42,54,42,51,42,55,41,42,51,42,54,42,56,4,56,42,51,42,55,41,42,51,42,54,42,51,42,56,4,56,42,51,42,55,41,42,60,42,51,42,54,42,51,42,55,41,42,51,42,54,42,51,42,55,41,42,51,42,54,54,4,56,69,4,55,55,41,42,51,42,54,42,51,42,56,4,56,42,51,42,55,41,42,51,42,54,54,4,56,69,4,55,55,41,42,51,42,54,42,51,42,61,3,62,56,42,60,42,51,42,55,41,42,51,42,54,54,4,56,69,4,55,56,4,55,41,42,51,42,54,42,51,42,56,4,56,42,51,42,55,41,42,51,42,54,54,4,56,69,4,55,55,41,42,51,42,54,42,51,42,61,3,62,56,42,60,42,51,42,55,41,42,51,42,54,42,56,4,56,42,51,42,63,42,51,42,56,4,55,41,42,51,42,54,42,51,42,56,4,56,42,51,42,56,4,55,41,42,51,42,54,42,51,42,56,4,56,42,51,42,55,41,42,60,42,51,42,54,42,51,42,55,41,42,51,42,54,42,51,42,61,3,62,55,41,42,51,42,54,54,4,56,69,4,55,55,41,42,51,42,54,42,51,42,61,3,62,55,41,42,51,42,54,54,4,56,69,4,55,55,41,42,51,42,54,42,51,42,61,3,62,55,41,42,51,42,54,54,4,56,69,4,55,55,41,42,51,42,54,42,51,42,61,3,62,55,41,42,51,42,54,54,4,56,69,4,55,55,41,42,51,42,54,42,51,42,61,3,62,55,41,42,51,42,54,54,4,56,69,4,55,55,41,42,51,42,54,42,51,42,61,3,62,55,41,42,51,42,54,54,4,56,69,4,55,56,4,55,41,42,51,42,54,42,51,42,61,3,62,55,41,42,51,42,54,42,56,4,56,42,51,42,63,42,51,42,56,4,55,41,42,51,42,54,42,56,4,56,42,51,42,63,42,51,42,56,4,55,41,42,51,42,51,42,54,42,55,41,42,51,42,51,42,54,55,2,6,42,54,42,55,57,1,41,3,41,15,42,51,42,29,28,30,27,42,51,42,51,42,54,55,57,1,41,42,51,42,54,42,51,42,56,42,51,42,56,42,51,42,63,42,51,42,55,2,16,42,51,42,29,28,30,27,42,51,42,51,42,54,55,57,1,41,42,51,42,54,42,51,42,56,42,51,42,56,42,51,42,63,42,51,42,55,2,17,57,1,41,42,51,42,60,42,54,42,51,42,51,42,61,3,62,55,2,6,42,54,42,56,42,55,57,1,41,3,41,42,51,42,51,42,54,42,55,2,6,42,54,42,55,57,1,41,3,41,42,51,42,61,3,62,51,42,54,42,54,3,55,55,41,42,51,42,61,3,62,51,42,54,42,51,42,54,42,54,3,55,55,55,41,42,51,42,61,3,62,51,42,54,42,51,42,61,3,62,56,42,51,42,55,2,6,42,54,42,55,57,1,41,3,41,42,60,42,51,42,51,42,41,42,60,42,54,42,51,42,51,42,55,41,42,60,42,51,42,51,42,54,42,56,42,61,3,62,56,42,61,3,62,56,42,61,3,62,56,42,61,3,62,55,41,42,51,42,54,42,55,2,6,42,54,42,55,57,1,41,3,41,15,42,51,42,51,42,61,3,62,57,1,41,42,60,42,54,42,56,4,56,42,54,3,55,56,42,54,3,55,55,41,42,60,42,51,42,54,55,78,42,51,42,41,42,51,42,54,55,41,15,42,57,1,41,42,51,42,51,42,54,55,41,42,60,42,54,42,51,42,51,42,61,3,62,55,41,15,42,57,1,41,42,51,42,54,42,51,42,55,2,17,57,1,41,42,51,42,54,42,51,42,55,2,17,57,1,41,15,42,51,42,51,42,61,3,62,57,1,41,42,51,42,54,42,51,42,56,42,51,42,56,42,51,42,63,42,51,42,55,2,6,42,54,42,56,42,55,57,1,41,3,41,42,56,42,60,42,51,42,41,42,60,42,51,42,51,42,54,42,61,3,62,55,41,42,51,42,54,42,55,41,42,60,42,51,42,51,42,54,42,61,3,62,55,41,42,51,42,51,42,54,42,56,42,55,2,6,42,54,42,56,42,55,57,1,41,3,41,42,60,42,51,42,41,15,42,78,3,57,1,41,42,51,42,54,55,41,42,51,42,54,55,41,42,51,42,60,30,41,42,51,42,51,42,54,55,41,42,51,42,54,55,2,16,42,78,3,57,1,41,42,51,42,54,42,51,42,55,41,42,51,42,54,55,41,42,51,42,60,30,41,42,51,42,51,42,54,55,2,16,42,78,3,57,1,41,42,51,42,54,42,51,42,55,2,16,42,78,3,57,1,41,36,41,99,41,99,2,6,42,54,42,56,42,55,57,1,41,3,41,42,60,42,51,42,41,15,42,61,4,62,78,3,57,1,41,42,51,42,54,42,51,42,55,2,16,42,61,4,62,78,3,57,1,41,42,51,42,54,42,51,42,51,42,54,42,61,4,62,55,55,2,16,42,61,4,62,78,3,57,1,41,42,51,42,54,42,51,42,55,2,17,57,1,41,42,51,42,54,55,41,42,51,42,60,30,2,6,42,54,42,55,57,1,41,3,41,7,61,42,19,42,20,42,51,42,51,42,54,55,51,42,54,3,55,15,42,62,2,6,42,54,42,55,57,1,41,15,42,51,42,51,42,54,55,57,1,41,42,51,42,54,42,54,3,55,56,42,51,42,56,42,51,42,63,42,51,42,55,2,17,57,1,41,42,51,42,51,42,54,4,55,41,42,51,42,60,42,54,42,56,42,51,42,56,42,51,42,56,42,51,42,55,41,42,51,42,54,42,51,42,55,41,42,51,42,61,3,62,51,42,54,42,51,42,55,41,42,51,42,61,3,62,51,42,54,42,51,42,54,42,51,42,55,55,41,42,51,42,61,3,62,51,42,54,42,51,42,61,3,62,56,42,51,42,55,2,6,42,54,42,55,57,1,41,3,41,15,28,42,51,42,51,42,54,55,57,1,41,15,42,51,42,51,42,54,55,57,1,41,15,42,51,42,51,42,54,42,51,42,54,42,51,42,55,55,57,1,41,42,60,42,51,42,54,55,41,42,51,42,51,42,54,42,55,41,42,60,42,51,42,54,55,41,15,42,61,69,4,62,82,3,57,1,41,42,85,3,2,42,51,42,51,42,54,42,55,2,42,51,42,51,42,54,55,2,6,42,54,42,56,42,55,57,1,41,3,41,15,42,51,42,54,55,78,42,51,42,51,42,57,1,41,42,51,42,54,55,2,17,57,1,41,42,51,42,51,42,54,31,55,41,42,51,42,54,55,41,42,51,42,51,42,54,32,55,2,6,42,54,42,56,42,55,57,1,41,3,41,15,42,51,42,51,42,61,3,62,57,1,41,42,51,42,54,42,54,3,55,56,42,51,42,56,42,51,42,63,42,51,42,55,2,17,57,1,41,42,51,42,54,55,2,6,42,54,42,56,42,55,57,1,41,3,41,42,51,42,51,42,54,55,41,42,51,42,51,42,54,55,2,6,42,54,42,56,42,55,57,1,41,3,41,15,42,51,42,51,42,61,3,62,57,1,41,42,60,42,51,42,54,42,56,42,54,3,55,56,42,54,3,55,56,42,51,42,63,42,51,42,55,41,42,60,42,51,42,54,55,78,42,51,42,41,42,51,42,54,55,2,17,57,1,41,42,60,31,2,15,42,57,1,41,42,51,42,54,55,2,6,42,54,42,55,57,1,41,15,42,51,42,29,28,30,57,1,41,42,51,42,51,42,54,55,41,42,51,42,51,42,54,55,2,15,42,51,42,29,28,30,57,1,41,42,51,42,51,42,54,55,2,99,41,42,51,42,51,42,61,3,62,60,42,51,42,54,55,41,42,51,42,51,42,61,3,62,60,42,51,42,51,42,54,55,41,42,51,42,51,42,61,3,62,60,42,51,42,51,42,54,55,41,42,51,42,51,42,54,55,41,42,51,42,51,42,54,55,41,42,51,42,54,55,2,33,42,54,42,51,42,56,42,55,57,1,41,3,41,6,42,54,42,56,42,56,53,42,56,59,42,55,57,1,41,42,54,42,56,42,55,51,42,54,53,42,56,59,42,55,41,42,51,42,54,42,55,41,42,51,42,60,42,41,42,51,42,60,4,41,42,51,42,60,42,54,55,41,42,51,42,54,55,2,6,42,54,42,56,42,55,57,1,41,42,51,42,54,42,55,41,42,51,42,86,4,2,6,42,54,42,56,42,55,57,1,41,42,51,42,54,42,56,42,69,4,55,2,6,42,54,42,56,42,55,57,1,41,42,51,42,54,42,56,42,68,4,55,2,6,42,54,42,56,42,56,42,55,57,1,41,42,51,42,54,55,41,42,60,42,51,42,54,42,55,41,42,51,42,54,42,55,41,42,51,42,54,42,55,41,42,51,42,54,42,55,41,42,51,42,54,42,55,41,42,51,42,54,55,2,6,42,54,42,56,42,55,57,1,41,3,41,7,42,20,42,51,42,2,6,42,54,42,56,42,55,57,1,41,42,51,42,54,42,51,42,56,42,51,42,55,41,42,51,42,54,42,51,42,56,42,51,42,55,41,42,51,42,54,42,51,42,56,42,55,41,42,51,42,85,4,2,6,42,54,42,56,42,56,42,55,57,1,41,42,60,42,51,42,41,19,42,20,42,51,42,57,1,41,42,60,42,51,42,61,42,62,61,4,62,41,15,42,78,3,27,42,61,3,62,57,1,41,99,41,42,60,3,51,42,54,42,61,3,62,56,42,61,3,62,56,42,61,3,62,55,41,42,51,42,54,42,56,42,56,42,55,2,17,57,1,41,42,51,42,54,42,56,42,56,42,61,42,62,55,2,6,42,54,42,55,57,1,41,3,41,42,51,42,54,55,41,42,51,42,60,4,41,42,51,42,60,42,54,55,2,6,42,54,42,55,57,1,41,3,41,7,42,51,42,78,4,2,6,42,54,42,55,57,1,41,7,42,51,42,54,69,4,56,42,51,42,56,42,51,42,55,2,6,42,54,42,55,57,1,41,7,61,42,19,42,20,42,54,42,51,42,55,15,42,51,42,54,42,55,62,2,6,42,54,42,55,57,1,41,19,42,20,42,54,42,51,42,55,57,1,41,42,51,42,54,42,56,42,60,4,55,2,6,42,54,42,56,42,60,69,4,56,42,60,32,55,57,1,41,15,42,78,69,4,57,1,41,42,60,42,51,42,69,4,15,42,17,4,2,17,57,1,41,99,41,15,42,57,1,41,42,86,4,2,17,57,1,41,42,85,4,2,42,60,69,4,15,42,17,42,51,42,41,42,60,69,4,15,42,17,4,41,19,42,20,42,54,42,56,42,56,42,55,57,1,41,15,42,51,42,54,42,55,57,1,41,7,42,2,7,69,4,2,6,42,54,42,55,57,1,41,3,41,19,42,20,42,54,42,51,42,51,42,54,55,55,57,1,41,42,51,42,54,42,61,4,62,56,42,61,4,62,56,42,60,42,51,42,55,41,99,41,99,41,99,41,15,42,51,42,54,42,61,4,62,55,76,42,61,4,62,57,1,41,42,51,42,54,42,61,4,62,56,42,61,4,62,55,2,99,41,15,42,61,4,62,57,1,41,42,51,42,54,42,61,4,62,55,2,99,41,33,42,54,42,51,42,55,57,1,41,6,42,54,42,56,42,56,42,60,69,4,56,53,42,56,59,42,55,57,1,41,42,54,42,56,42,55,51,42,54,42,56,53,42,56,59,42,55,41,14,42,77,4,26,42,78,69,4,41,42,51,42,60,42,2,6,42,54,42,56,42,55,57,1,41,15,42,51,42,54,42,55,78,42,51,42,57,1,41,42,54,42,56,42,55,51,42,54,42,55,41,15,42,51,42,82,69,4,27,42,51,42,54,55,77,42,51,42,57,1,41,42,51,42,54,42,51,42,54,55,61,4,57,62,55,2,6,42,54,42,56,42,55,57,1,41,15,42,51,42,54,42,55,78,42,51,42,57,1,41,42,51,42,54,42,55,2,42,51,42,54,42,51,42,54,42,55,55,2,6,42,54,42,56,42,55,57,1,41,19,42,20,42,57,1,41,42,51,42,54,42,55,2,33,42,54,42,51,42,55,57,1,41,6,42,54,42,56,42,56,42,56,42,56,42,60,42,51,42,56,53,42,56,59,42,55,57,1,41,42,54,42,56,42,55,51,42,54,42,56,53,42,56,59,42,55,41,14,42,54,42,56,42,55,27,42,54,42,56,42,55,41,14,42,54,42,55,78,4,41,14,42,54,42,55,78,4,26,42,54,42,55,78,4,41,42,51,42,60,42,41,42,51,42,60,42,41,42,51,42,60,42,41,42,51,42,60,4,41,42,51,42,54,55,2,6,42,54,42,55,57,1,41,42,51,42,54,42,51,42,61,42,51,42,62,55,41,15,42,54,42,51,42,55,57,1,41,42,51,42,54,42,51,42,61,42,51,42,62,56,42,51,42,55,2,6,42,54,42,55,57,1,41,42,51,42,60,4,15,42,51,42,17,4,41,42,51,42,54,55,2,6,42,54,42,56,42,55,57,1,41,14,42,78,4,26,42,78,4,41,42,51,42,60,42,41,42,51,42,54,55,2,33,42,54,42,51,42,55,57,1,41,15,42,51,42,78,3,57,1,41,42,60,42,51,42,2,17,57,1,41,42,60,42,51,42,63,42,51,42,2,42,60,4,41,6,42,54,42,56,42,56,42,56,42,56,53,42,56,59,42,55,57,1,41,42,54,42,56,42,55,51,42,54,42,56,42,51,42,56,53,42,56,42,60,42,51,42,56,59,42,55,41,42,60,61,62,41,99,41,42,60,42,51,42,54,42,55,41,42,60,42,51,42,51,42,54,42,51,42,56,42,51,42,55,41,42,60,42,51,42,54,42,56,42,51,42,56,42,55,41,42,60,42,51,42,54,42,56,42,51,42,56,42,55,41,42,51,42,54,42,51,42,54,42,56,42,51,42,56,42,54,3,55,55,55,41,19,42,56,42,20,42,54,42,55,57,1,41,42,51,42,54,42,51,42,54,42,56,42,68,4,56,42,55,55,2,99,41,42,60,42,60,69,4,41,19,42,20,42,57,1,41,42,56,42,60,42,51,42,54,55,41,15,42,77,42,57,1,41,42,60,42,2,15,42,77,42,57,1,41,42,60,42,2,42,85,4,41,99,41,19,42,20,42,57,1,41,15,42,82,42,61,4,62,57,1,41,42,51,42,54,54,42,56,42,55,55,2,17,57,1,41,99,41,42,51,42,54,54,69,4,56,42,55,55,2,42,51,42,54,42,51,42,56,42,51,42,55,2,99,41,42,60,42,51,42,54,42,51,42,55,41,42,60,42,51,42,54,42,51,42,55,41,42,51,42,54,42,55,41,42,51,42,54,54,4,56,4,55,55,41,42,51,42,54,42,56,42,60,42,51,42,55,41,42,51,42,54,42,56,4,56,42,51,42,56,42,60,42,51,42,55,41,42,60,42,51,42,54,42,51,42,55,41,19,42,20,42,61,4,57,62,57,1,41,42,51,42,54,42,55,41,42,51,42,54,54,4,56,69,4,55,55,2,42,51,42,54,54,69,4,56,69,4,55,56,4,55,41,42,51,42,54,42,61,4,62,56,42,60,42,51,42,55,41,42,51,42,54,42,56,42,60,42,51,42,63,42,51,42,56,42,60,42,51,42,55,41,42,51,42,54,42,55,41,42,56,42,60,42,51,42,54,55,41,42,51,42,54,54,42,56,42,53,4,55,55,41,42,51,42,54,55,2,6,42,54,42,56,42,55,57,1,41,42,51,42,54,42,51,42,54,55,51,42,54,55,55,2,33,42,54,42,55,57,1,41,42,60,4,41,42,60,4,41,6,42,54,42,56,42,60,30,56,42,60,32,55,57,1,41,15,42,29,30,57,1,41,42,51,42,60,61,62,2,17,57,1,41,42,51,42,60,42,2,42,51,42,60,42,2,6,42,54,42,56,42,55,57,1,41,14,42,54,42,55,78,4,41,42,56,42,60,42,41,15,42,78,69,4,57,1,41,19,42,20,42,51,42,57,1,41,42,60,42,51,42,54,55,61,42,51,42,62,41,15,42,77,42,57,1,41,42,60,42,2,15,42,78,69,4,57,1,41,19,42,20,42,51,42,57,1,41,42,60,42,51,42,54,55,61,42,51,42,62,41,15,42,77,42,57,1,41,42,60,42,2,15,42,51,42,57,1,41,42,60,42,60,54,42,15,42,77,42,17,42,55,2,19,42,20,42,51,42,57,1,41,42,51,42,54,54,42,56,42,55,55,2,6,42,54,42,56,42,60,42,51,42,56,42,60,69,4,55,57,1,41,42,60,42,51,42,54,42,55,41,19,42,20,42,51,42,57,1,41,42,51,42,54,42,55,41,15,42,82,69,4,57,1,41,42,51,42,54,54,42,56,42,55,55,2,7,42,2,6,42,54,42,56,42,56,42,55,57,1,41,19,42,20,42,51,42,57,1,41,42,51,42,54,42,56,42,55,2,6,42,54,42,55,57,1,41,19,42,20,42,51,42,57,1,41,42,51,42,54,32,55,2,6,42,54,42,55,57,1,41,19,42,20,42,51,42,57,1,41,42,51,42,54,31,55,2,6,42,54,42,56,42,55,57,1,41,42,51,42,51,42,54,42,55,2,33,42,54,42,51,42,55,57,1,41,15,42,51,42,78,3,57,1,41,42,60,42,51,42,2,17,57,1,41,42,60,42,51,42,63,42,51,42,2,42,60,4,99,41,42,60,4,41,6,42,54,42,56,42,56,42,56,42,56,53,42,56,59,42,55,57,1,41,42,54,42,56,42,55,51,42,54,42,56,42,51,42,56,53,42,56,42,60,42,51,42,56,59,42,55,41,14,42,77,4,41,42,51,42,60,42,41,42,51,42,60,42,41,99,41,42,60,42,51,42,54,42,55,41,42,60,42,51,42,51,42,54,42,51,42,56,42,51,42,55,41,42,60,42,51,42,54,42,56,42,51,42,56,42,55,41,42,51,42,60,42,60,42,51,42,54,42,56,42,51,42,56,42,51,42,54,55,55,41,42,60,42,51,42,54,42,56,42,51,42,56,42,54,3,55,55,41,42,60,42,51,42,54,42,56,42,51,42,56,42,54,3,55,55,41,99,41,42,60,42,51,42,54,42,51,42,55,41,42,60,42,51,42,54,42,51,42,55,41,42,51,42,54,42,55,41,42,51,42,54,54,4,56,4,55,55,41,42,51,42,54,42,56,42,60,42,51,42,55,41,42,51,42,54,42,56,4,56,42,51,42,56,42,60,42,51,42,55,41,42,60,42,51,42,54,42,51,42,55,41,42,51,42,54,42,55,41,42,51,42,54,54,4,56,69,4,55,55,41,42,51,42,54,42,55,41,42,51,42,54,42,56,42,60,42,51,42,63,42,51,42,56,42,60,42,51,42,55,41,42,51,42,54,42,55,41,42,56,42,60,42,51,42,54,55,41,42,51,42,54,54,42,53,4,56,42,53,4,55,55,41,42,51,42,54,55,41,99,41,42,51,42,60,42,51,42,54,42,55,41,42,51,42,54,42,51,42,56,42,51,42,56,42,51,42,55,41,42,51,42,51,42,54,42,51,42,55,2,6,42,54,42,55,57,1,41,7,42,51,42,51,42,54,42,51,42,55,2,6,42,54,42,56,42,55,57,1,41,42,51,42,86,4,41,42,51,42,51,42,54,42,51,42,54,55,55,41,15,42,51,42,80,4,57,1,41,42,51,42,54,42,51,42,55,2,6,42,54,42,55,57,1,41,42,51,42,51,42,54,55,41,7,42,54,42,56,42,55,51,42,54,55,2,-1]},"sourceCode":"#!/usr/bin/env python2\n# -*- coding: utf-8 -*-\n\n\"\"\"Youtubedlg module responsible for the main app window. \"\"\"\n\nfrom __future__ import unicode_literals\n\nimport os\nimport gettext\n\nimport wx\nfrom wx.lib.pubsub import setuparg1 #NOTE Should remove deprecated\nfrom wx.lib.pubsub import pub as Publisher\n\nfrom wx.lib.mixins.listctrl import ListCtrlAutoWidthMixin\n\nfrom .parsers import OptionsParser\n\nfrom .optionsframe import (\n    OptionsFrame,\n    LogGUI\n)\n\nfrom .updatemanager import (\n    UPDATE_PUB_TOPIC,\n    UpdateThread\n)\n\nfrom .downloadmanager import (\n    MANAGER_PUB_TOPIC,\n    WORKER_PUB_TOPIC,\n    DownloadManager,\n    DownloadList,\n    DownloadItem\n)\n\nfrom .utils import (\n    get_pixmaps_dir,\n    build_command,\n    get_icon_file,\n    shutdown_sys,\n    remove_file,\n    open_file,\n    get_time\n)\n\nfrom .widgets import CustomComboBox\n\nfrom .formats import (\n    DEFAULT_FORMATS,\n    VIDEO_FORMATS,\n    AUDIO_FORMATS,\n    FORMATS\n)\n\nfrom .info import (\n    __descriptionfull__,\n    __licensefull__,\n    __projecturl__,\n    __appname__,\n    __author__\n)\n\nfrom .version import __version__\n\n\nclass MainFrame(wx.Frame):\n\n    \"\"\"Main window class.\n\n    This class is responsible for creating the main app window\n    and binding the events.\n\n    Attributes:\n        FRAMES_MIN_SIZE (tuple): Tuple that contains the minumum width, height of the frame.\n\n        Labels area (strings): Strings for the widgets labels.\n\n        STATUSLIST_COLUMNS (dict): Python dictionary which holds informations\n            about the wxListCtrl columns. For more informations read the\n            comments above the STATUSLIST_COLUMNS declaration.\n\n    Args:\n        opt_manager (optionsmanager.OptionsManager): Object responsible for\n            handling the settings.\n\n        log_manager (logmanager.LogManager): Object responsible for handling\n            the log stuff.\n\n        parent (wx.Window): Frame parent.\n\n    \"\"\"\n\n    FRAMES_MIN_SIZE = (560, 360)\n\n    # Labels area\n    URLS_LABEL = _(\"Enter URLs below\")\n    UPDATE_LABEL = _(\"Update\")\n    OPTIONS_LABEL = _(\"Options\")\n    STOP_LABEL = _(\"Stop\")\n    INFO_LABEL = _(\"Info\")\n    WELCOME_MSG = _(\"Welcome\")\n    WARNING_LABEL = _(\"Warning\")\n\n    ADD_LABEL = _(\"Add\")\n    DOWNLOAD_LIST_LABEL = _(\"Download list\")\n    DELETE_LABEL = _(\"Delete\")\n    PLAY_LABEL = _(\"Play\")\n    UP_LABEL = _(\"Up\")\n    DOWN_LABEL = _(\"Down\")\n    RELOAD_LABEL = _(\"Reload\")\n    PAUSE_LABEL = _(\"Pause\")\n    START_LABEL = _(\"Start\")\n    ABOUT_LABEL = _(\"About\")\n    VIEWLOG_LABEL = _(\"View Log\")\n\n    SUCC_REPORT_MSG = _(\"Successfully downloaded {0} URL(s) in {1} \"\n                       \"day(s) {2} hour(s) {3} minute(s) {4} second(s)\")\n    DL_COMPLETED_MSG = _(\"Downloads completed\")\n    URL_REPORT_MSG = _(\"Total Progress: {0:.1f}% | Queued ({1}) Paused ({2}) Active ({3}) Completed ({4}) Error ({5})\")\n    CLOSING_MSG = _(\"Stopping downloads\")\n    CLOSED_MSG = _(\"Downloads stopped\")\n    PROVIDE_URL_MSG = _(\"You need to provide at least one URL\")\n    DOWNLOAD_STARTED = _(\"Downloads started\")\n    CHOOSE_DIRECTORY = _(\"Choose Directory\")\n\n    DOWNLOAD_ACTIVE = _(\"Download in progress. Please wait for all downloads to complete\")\n    UPDATE_ACTIVE = _(\"Update already in progress\")\n\n    UPDATING_MSG = _(\"Downloading latest youtube-dl. Please wait...\")\n    UPDATE_ERR_MSG = _(\"Youtube-dl download failed [{0}]\")\n    UPDATE_SUCC_MSG = _(\"Successfully downloaded youtube-dl\")\n\n    OPEN_DIR_ERR = _(\"Unable to open directory: '{dir}'. \"\n                    \"The specified path does not exist\")\n    SHUTDOWN_ERR = _(\"Error while shutting down. \"\n                    \"Make sure you typed the correct password\")\n    SHUTDOWN_MSG = _(\"Shutting down system\")\n\n    VIDEO_LABEL = _(\"Title\")\n    EXTENSION_LABEL = _(\"Extension\")\n    SIZE_LABEL = _(\"Size\")\n    PERCENT_LABEL = _(\"Percent\")\n    ETA_LABEL = _(\"ETA\")\n    SPEED_LABEL = _(\"Speed\")\n    STATUS_LABEL = _(\"Status\")\n    #################################\n\n    # STATUSLIST_COLUMNS\n    #\n    # Dictionary which contains the columns for the wxListCtrl widget.\n    # Each key represents a column and holds informations about itself.\n    # Structure informations:\n    #  column_key: (column_number, column_label, minimum_width, is_resizable)\n    #\n    STATUSLIST_COLUMNS = {\n        'filename': (0, VIDEO_LABEL, 150, True),\n        'extension': (1, EXTENSION_LABEL, 60, False),\n        'filesize': (2, SIZE_LABEL, 80, False),\n        'percent': (3, PERCENT_LABEL, 65, False),\n        'eta': (4, ETA_LABEL, 45, False),\n        'speed': (5, SPEED_LABEL, 90, False),\n        'status': (6, STATUS_LABEL, 160, False)\n    }\n\n    def __init__(self, opt_manager, log_manager, parent=None):\n        super(MainFrame, self).__init__(parent, wx.ID_ANY, __appname__, size=opt_manager.options[\"main_win_size\"])\n        self.opt_manager = opt_manager\n        self.log_manager = log_manager\n        self.download_manager = None\n        self.update_thread = None\n        self.app_icon = None  #REFACTOR Get and set on __init__.py\n\n        self._download_list = DownloadList()\n\n        # Set up youtube-dl options parser\n        self._options_parser = OptionsParser()\n\n        # Get the pixmaps directory\n        self._pixmaps_path = get_pixmaps_dir()\n\n        # Set the Timer\n        self._app_timer = wx.Timer(self)\n\n        # Set the app icon\n        app_icon_path = get_icon_file()\n        if app_icon_path is not None:\n            self.app_icon = wx.Icon(app_icon_path, wx.BITMAP_TYPE_PNG)\n            self.SetIcon(self.app_icon)\n\n        bitmap_data = (\n           (\"down\", \"arrow_down_32px.png\"),\n           (\"up\", \"arrow_up_32px.png\"),\n           (\"play\", \"camera_32px.png\"),\n           (\"start\", \"cloud_download_32px.png\"),\n           (\"delete\", \"delete_32px.png\"),\n           (\"folder\", \"folder_32px.png\"),\n           (\"pause\", \"pause_32px.png\"),\n           (\"resume\", \"play_arrow_32px.png\"),\n           (\"reload\", \"reload_32px.png\"),\n           (\"settings\", \"settings_20px.png\"),\n           (\"stop\", \"stop_32px.png\")\n        )\n\n        self._bitmaps = {}\n\n        for item in bitmap_data:\n            target, name = item\n            self._bitmaps[target] = wx.Bitmap(os.path.join(self._pixmaps_path, name))\n\n        # Set the data for all the wx.Button items\n        # name, label, size, event_handler\n        buttons_data = (\n            (\"delete\", self.DELETE_LABEL, (-1, -1), self._on_delete, wx.BitmapButton),\n            (\"play\", self.PLAY_LABEL, (-1, -1), self._on_play, wx.BitmapButton),\n            (\"up\", self.UP_LABEL, (-1, -1), self._on_arrow_up, wx.BitmapButton),\n            (\"down\", self.DOWN_LABEL, (-1, -1), self._on_arrow_down, wx.BitmapButton),\n            (\"reload\", self.RELOAD_LABEL, (-1, -1), self._on_reload, wx.BitmapButton),\n            (\"pause\", self.PAUSE_LABEL, (-1, -1), self._on_pause, wx.BitmapButton),\n            (\"start\", self.START_LABEL, (-1, -1), self._on_start, wx.BitmapButton),\n            (\"savepath\", \"...\", (35, -1), self._on_savepath, wx.Button),\n            (\"add\", self.ADD_LABEL, (-1, -1), self._on_add, wx.Button)\n        )\n\n        # Set the data for the settings menu item\n        # label, event_handler\n        settings_menu_data = (\n            (self.OPTIONS_LABEL, self._on_options),\n            (self.UPDATE_LABEL, self._on_update),\n            (self.VIEWLOG_LABEL, self._on_viewlog),\n            (self.ABOUT_LABEL, self._on_about)\n        )\n\n        statuslist_menu_data = (\n            (_(\"Get URL\"), self._on_geturl),\n            (_(\"Get command\"), self._on_getcmd),\n            (_(\"Open destination\"), self._on_open_dest),\n            (_(\"Re-enter\"), self._on_reenter)\n        )\n\n        # Create options frame\n        self._options_frame = OptionsFrame(self)\n\n        # Create frame components\n        self._panel = wx.Panel(self)\n\n        self._url_text = self._create_statictext(self.URLS_LABEL)\n\n        #REFACTOR Move to buttons_data\n        self._settings_button = self._create_bitmap_button(self._bitmaps[\"settings\"], (30, 30), self._on_settings)\n\n        self._url_list = self._create_textctrl(wx.TE_MULTILINE | wx.TE_DONTWRAP, self._on_urllist_edit)\n\n        self._folder_icon = self._create_static_bitmap(self._bitmaps[\"folder\"], self._on_open_path)\n\n        self._path_combobox = ExtComboBox(self._panel, 5, style=wx.CB_READONLY)\n        self._videoformat_combobox = CustomComboBox(self._panel, style=wx.CB_READONLY)\n\n        self._download_text = self._create_statictext(self.DOWNLOAD_LIST_LABEL)\n        self._status_list = ListCtrl(self.STATUSLIST_COLUMNS,\n                                     parent=self._panel,\n                                     style=wx.LC_REPORT | wx.LC_HRULES | wx.LC_VRULES)\n\n        # Dictionary to store all the buttons\n        self._buttons = {}\n\n        for item in buttons_data:\n            name, label, size, evt_handler, parent = item\n\n            button = parent(self._panel, size=size)\n\n            if parent == wx.Button:\n                button.SetLabel(label)\n            elif parent == wx.BitmapButton:\n                button.SetToolTip(wx.ToolTip(label))\n\n            if name in self._bitmaps:\n                button.SetBitmap(self._bitmaps[name], wx.TOP)\n\n            if evt_handler is not None:\n                button.Bind(wx.EVT_BUTTON, evt_handler)\n\n            self._buttons[name] = button\n\n        self._status_bar = self.CreateStatusBar()\n\n        # Create extra components\n        self._settings_menu = self._create_menu_item(settings_menu_data)\n        self._statuslist_menu = self._create_menu_item(statuslist_menu_data)\n\n        # Overwrite the menu hover event to avoid changing the statusbar\n        self.Bind(wx.EVT_MENU_HIGHLIGHT, lambda event: None)\n\n        # Bind extra events\n        self.Bind(wx.EVT_LIST_ITEM_RIGHT_CLICK, self._on_statuslist_right_click, self._status_list)\n        self.Bind(wx.EVT_TEXT, self._update_savepath, self._path_combobox)\n        self.Bind(wx.EVT_LIST_ITEM_SELECTED, self._update_pause_button, self._status_list)\n        self.Bind(wx.EVT_LIST_ITEM_DESELECTED, self._update_pause_button, self._status_list)\n        self.Bind(wx.EVT_CLOSE, self._on_close)\n        self.Bind(wx.EVT_TIMER, self._on_timer, self._app_timer)\n\n        self._videoformat_combobox.Bind(wx.EVT_COMBOBOX, self._update_videoformat)\n\n        # Set threads wxCallAfter handlers\n        self._set_publisher(self._update_handler, UPDATE_PUB_TOPIC)\n        self._set_publisher(self._download_worker_handler, WORKER_PUB_TOPIC)\n        self._set_publisher(self._download_manager_handler, MANAGER_PUB_TOPIC)\n\n        # Set up extra stuff\n        self.Center()\n        self.SetMinSize(self.FRAMES_MIN_SIZE)\n\n        self._status_bar_write(self.WELCOME_MSG)\n\n        self._update_videoformat_combobox()\n        self._path_combobox.LoadMultiple(self.opt_manager.options[\"save_path_dirs\"])\n        self._path_combobox.SetValue(self.opt_manager.options[\"save_path\"])\n\n        self._set_layout()\n\n        self._url_list.SetFocus()\n\n    def _create_menu_item(self, items):\n        menu = wx.Menu()\n\n        for item in items:\n            label, evt_handler = item\n            menu_item = menu.Append(-1, label)\n\n            menu.Bind(wx.EVT_MENU, evt_handler, menu_item)\n\n        return menu\n\n    def _on_statuslist_right_click(self, event):\n        selected = event.GetIndex()\n\n        if selected != -1:\n            self._status_list.deselect_all()\n            self._status_list.Select(selected, on=1)\n\n            self.PopupMenu(self._statuslist_menu)\n\n    def _on_reenter(self, event):\n        selected = self._status_list.get_selected()\n\n        if selected != -1:\n            object_id = self._status_list.GetItemData(selected)\n            download_item = self._download_list.get_item(object_id)\n\n            if download_item.stage != \"Active\":\n                self._status_list.remove_row(selected)\n                self._download_list.remove(object_id)\n\n                options = self._options_parser.parse(self.opt_manager.options)\n\n                download_item = DownloadItem(download_item.url, options)\n                download_item.path = self.opt_manager.options[\"save_path\"]\n\n                if not self._download_list.has_item(download_item.object_id):\n                    self._status_list.bind_item(download_item)\n                    self._download_list.insert(download_item)\n\n    def reset(self):\n        self._update_videoformat_combobox()\n        self._path_combobox.LoadMultiple(self.opt_manager.options[\"save_path_dirs\"])\n        self._path_combobox.SetValue(self.opt_manager.options[\"save_path\"])\n\n    def _on_open_dest(self, event):\n        selected = self._status_list.get_selected()\n\n        if selected != -1:\n            object_id = self._status_list.GetItemData(selected)\n            download_item = self._download_list.get_item(object_id)\n\n            if download_item.path:\n                open_file(download_item.path)\n\n    def _on_open_path(self, event):\n        open_file(self._path_combobox.GetValue())\n\n    def _on_geturl(self, event):\n        selected = self._status_list.get_selected()\n\n        if selected != -1:\n            object_id = self._status_list.GetItemData(selected)\n            download_item = self._download_list.get_item(object_id)\n\n            url = download_item.url\n\n            if not wx.TheClipboard.IsOpened():\n                clipdata = wx.TextDataObject()\n                clipdata.SetText(url)\n                wx.TheClipboard.Open()\n                wx.TheClipboard.SetData(clipdata)\n                wx.TheClipboard.Close()\n\n    def _on_getcmd(self, event):\n        selected = self._status_list.get_selected()\n\n        if selected != -1:\n            object_id = self._status_list.GetItemData(selected)\n            download_item = self._download_list.get_item(object_id)\n\n            cmd = build_command(download_item.options, download_item.url)\n\n            if not wx.TheClipboard.IsOpened():\n                clipdata = wx.TextDataObject()\n                clipdata.SetText(cmd)\n                wx.TheClipboard.Open()\n                wx.TheClipboard.SetData(clipdata)\n                wx.TheClipboard.Close()\n\n    def _on_timer(self, event):\n        total_percentage = 0.0\n        queued = paused = active = completed = error = 0\n\n        for item in self._download_list.get_items():\n            if item.stage == \"Queued\":\n                queued += 1\n            if item.stage == \"Paused\":\n                paused += 1\n            if item.stage == \"Active\":\n                active += 1\n                total_percentage += float(item.progress_stats[\"percent\"].split('%')[0])\n            if item.stage == \"Completed\":\n                completed += 1\n            if item.stage == \"Error\":\n                error += 1\n\n        # REFACTOR Store percentage as float in the DownloadItem?\n        # REFACTOR DownloadList keep track for each item stage?\n\n        items_count = active + completed + error + queued\n        total_percentage += completed * 100.0 + error * 100.0\n\n        if items_count:\n            total_percentage /= items_count\n\n        msg = self.URL_REPORT_MSG.format(total_percentage, queued, paused, active, completed, error)\n\n        if self.update_thread is None:\n            # Dont overwrite the update messages\n            self._status_bar_write(msg)\n\n    def _update_pause_button(self, event):\n        selected_rows = self._status_list.get_all_selected()\n\n        label = _(\"Pause\")\n        bitmap = self._bitmaps[\"pause\"]\n\n        for row in selected_rows:\n            object_id = self._status_list.GetItemData(row)\n            download_item = self._download_list.get_item(object_id)\n\n            if download_item.stage == \"Paused\":\n                # If we find one or more items in Paused\n                # state set the button functionality to resume\n                label = _(\"Resume\")\n                bitmap = self._bitmaps[\"resume\"]\n                break\n\n        self._buttons[\"pause\"].SetLabel(label)\n        self._buttons[\"pause\"].SetToolTip(wx.ToolTip(label))\n        self._buttons[\"pause\"].SetBitmap(bitmap, wx.TOP)\n\n    def _update_videoformat_combobox(self):\n        self._videoformat_combobox.Clear()\n\n        self._videoformat_combobox.add_items(list(DEFAULT_FORMATS.values()), False)\n\n        vformats = []\n        for vformat in self.opt_manager.options[\"selected_video_formats\"]:\n            vformats.append(FORMATS[vformat])\n\n        aformats = []\n        for aformat in self.opt_manager.options[\"selected_audio_formats\"]:\n            aformats.append(FORMATS[aformat])\n\n        if vformats:\n            self._videoformat_combobox.add_header(_(\"Video\"))\n            self._videoformat_combobox.add_items(vformats)\n\n        if aformats:\n            self._videoformat_combobox.add_header(_(\"Audio\"))\n            self._videoformat_combobox.add_items(aformats)\n\n        current_index = self._videoformat_combobox.FindString(FORMATS[self.opt_manager.options[\"selected_format\"]])\n\n        if current_index == wx.NOT_FOUND:\n            self._videoformat_combobox.SetSelection(0)\n        else:\n            self._videoformat_combobox.SetSelection(current_index)\n\n        self._update_videoformat(None)\n\n    def _update_videoformat(self, event):\n        self.opt_manager.options[\"selected_format\"] = selected_format = FORMATS[self._videoformat_combobox.GetValue()]\n\n        if selected_format in VIDEO_FORMATS:\n            self.opt_manager.options[\"video_format\"] = selected_format\n            self.opt_manager.options[\"audio_format\"] = \"\"  #NOTE Set to default value, check parsers.py\n        elif selected_format in AUDIO_FORMATS:\n            self.opt_manager.options[\"video_format\"] = DEFAULT_FORMATS[_(\"default\")]\n            self.opt_manager.options[\"audio_format\"] = selected_format\n        else:\n            self.opt_manager.options[\"video_format\"] = DEFAULT_FORMATS[_(\"default\")]\n            self.opt_manager.options[\"audio_format\"] = \"\"\n\n    def _update_savepath(self, event):\n        self.opt_manager.options[\"save_path\"] = self._path_combobox.GetValue()\n\n    def _on_delete(self, event):\n        index = self._status_list.get_next_selected()\n\n        if index == -1:\n            dlg = ButtonsChoiceDialog(self, [_(\"Remove all\"), _(\"Remove completed\")], _(\"No items selected. Please pick an action\"), _(\"Delete\"))\n            ret_code = dlg.ShowModal()\n            dlg.Destroy()\n\n            #REFACTOR Maybe add this functionality directly to DownloadList?\n            if ret_code == 1:\n                for ditem in self._download_list.get_items():\n                    if ditem.stage != \"Active\":\n                        self._status_list.remove_row(self._download_list.index(ditem.object_id))\n                        self._download_list.remove(ditem.object_id)\n\n            if ret_code == 2:\n                for ditem in self._download_list.get_items():\n                    if ditem.stage == \"Completed\":\n                        self._status_list.remove_row(self._download_list.index(ditem.object_id))\n                        self._download_list.remove(ditem.object_id)\n        else:\n            if self.opt_manager.options[\"confirm_deletion\"]:\n                dlg = wx.MessageDialog(self, _(\"Are you sure you want to remove selected items?\"), _(\"Delete\"), wx.YES_NO | wx.ICON_QUESTION)\n                result = dlg.ShowModal() == wx.ID_YES\n                dlg.Destroy()\n            else:\n                result = True\n\n            if result:\n                while index >= 0:\n                    object_id = self._status_list.GetItemData(index)\n                    selected_download_item = self._download_list.get_item(object_id)\n\n                    if selected_download_item.stage == \"Active\":\n                        self._create_popup(_(\"Item is active, cannot remove\"), self.WARNING_LABEL, wx.OK | wx.ICON_EXCLAMATION)\n                    else:\n                        #if selected_download_item.stage == \"Completed\":\n                            #dlg = wx.MessageDialog(self, \"Do you want to remove the files associated with this item?\", \"Remove files\", wx.YES_NO | wx.ICON_QUESTION)\n\n                            #result = dlg.ShowModal() == wx.ID_YES\n                            #dlg.Destroy()\n\n                            #if result:\n                                #for cur_file in selected_download_item.get_files():\n                                    #remove_file(cur_file)\n\n                        self._status_list.remove_row(index)\n                        self._download_list.remove(object_id)\n                        index -= 1\n\n                    index = self._status_list.get_next_selected(index)\n\n        self._update_pause_button(None)\n\n    def _on_play(self, event):\n        selected_rows = self._status_list.get_all_selected()\n\n        if selected_rows:\n            for selected_row in selected_rows:\n                object_id = self._status_list.GetItemData(selected_row)\n                selected_download_item = self._download_list.get_item(object_id)\n\n                if selected_download_item.stage == \"Completed\":\n                    if selected_download_item.filenames:\n                        filename = selected_download_item.get_files()[-1]\n                        open_file(filename)\n                else:\n                    self._create_popup(_(\"Item is not completed\"), self.INFO_LABEL, wx.OK | wx.ICON_INFORMATION)\n\n    def _on_arrow_up(self, event):\n        index = self._status_list.get_next_selected()\n\n        if index != -1:\n            while index >= 0:\n                object_id = self._status_list.GetItemData(index)\n                download_item = self._download_list.get_item(object_id)\n\n                new_index = index - 1\n                if new_index < 0:\n                    new_index = 0\n\n                if not self._status_list.IsSelected(new_index):\n                    self._download_list.move_up(object_id)\n                    self._status_list.move_item_up(index)\n                    self._status_list._update_from_item(new_index, download_item)\n\n                index = self._status_list.get_next_selected(index)\n\n    def _on_arrow_down(self, event):\n        index = self._status_list.get_next_selected(reverse=True)\n\n        if index != -1:\n            while index >= 0:\n                object_id = self._status_list.GetItemData(index)\n                download_item = self._download_list.get_item(object_id)\n\n                new_index = index + 1\n                if new_index >= self._status_list.GetItemCount():\n                    new_index = self._status_list.GetItemCount() - 1\n\n                if not self._status_list.IsSelected(new_index):\n                    self._download_list.move_down(object_id)\n                    self._status_list.move_item_down(index)\n                    self._status_list._update_from_item(new_index, download_item)\n\n                index = self._status_list.get_next_selected(index, True)\n\n    def _on_reload(self, event):\n        selected_rows = self._status_list.get_all_selected()\n\n        if not selected_rows:\n            for index, item in enumerate(self._download_list.get_items()):\n                if item.stage in (\"Paused\", \"Completed\", \"Error\"):\n                    # Store the old savepath because reset is going to remove it\n                    savepath = item.path\n                    item.reset()\n                    item.path = savepath\n                    self._status_list._update_from_item(index, item)\n        else:\n            for selected_row in selected_rows:\n                object_id = self._status_list.GetItemData(selected_row)\n                item = self._download_list.get_item(object_id)\n\n                if item.stage in (\"Paused\", \"Completed\", \"Error\"):\n                    # Store the old savepath because reset is going to remove it\n                    savepath = item.path\n                    item.reset()\n                    item.path = savepath\n                    self._status_list._update_from_item(selected_row, item)\n\n            self._update_pause_button(None)\n\n    def _on_pause(self, event):\n        selected_rows = self._status_list.get_all_selected()\n\n        if selected_rows:\n            #REFACTOR Use DoubleStageButton for this and check stage\n            if self._buttons[\"pause\"].GetLabel() == _(\"Pause\"):\n                new_state = \"Paused\"\n            else:\n                new_state = \"Queued\"\n\n            for selected_row in selected_rows:\n                object_id = self._status_list.GetItemData(selected_row)\n                download_item = self._download_list.get_item(object_id)\n\n                if download_item.stage == \"Queued\" or download_item.stage == \"Paused\":\n                    self._download_list.change_stage(object_id, new_state)\n\n                self._status_list._update_from_item(selected_row, download_item)\n\n            self._update_pause_button(None)\n\n    def _on_start(self, event):\n        if self.download_manager is None:\n            if self.update_thread is not None and self.update_thread.is_alive():\n                self._create_popup(_(\"Update in progress. Please wait for the update to complete\"),\n                                   self.WARNING_LABEL,\n                                   wx.OK | wx.ICON_EXCLAMATION)\n            else:\n                self._start_download()\n        else:\n            self.download_manager.stop_downloads()\n\n    def _on_savepath(self, event):\n        dlg = wx.DirDialog(self, self.CHOOSE_DIRECTORY, self._path_combobox.GetStringSelection())\n\n        if dlg.ShowModal() == wx.ID_OK:\n            path = dlg.GetPath()\n\n            self._path_combobox.Append(path)\n            self._path_combobox.SetValue(path)\n            self._update_savepath(None)\n\n        dlg.Destroy()\n\n    def _on_add(self, event):\n        urls = self._get_urls()\n\n        if not urls:\n            self._create_popup(self.PROVIDE_URL_MSG,\n                               self.WARNING_LABEL,\n                               wx.OK | wx.ICON_EXCLAMATION)\n        else:\n            self._url_list.Clear()\n            options = self._options_parser.parse(self.opt_manager.options)\n\n            for url in urls:\n                download_item = DownloadItem(url, options)\n                download_item.path = self.opt_manager.options[\"save_path\"]\n\n                if not self._download_list.has_item(download_item.object_id):\n                    self._status_list.bind_item(download_item)\n                    self._download_list.insert(download_item)\n\n\n    def _on_settings(self, event):\n        event_object_pos = event.EventObject.GetPosition()\n        event_object_height = event.EventObject.GetSize()[1]\n        event_object_pos = (event_object_pos[0], event_object_pos[1] + event_object_height)\n        self.PopupMenu(self._settings_menu, event_object_pos)\n\n    def _on_viewlog(self, event):\n        if self.log_manager is None:\n            self._create_popup(_(\"Logging is disabled\"),\n                               self.WARNING_LABEL,\n                               wx.OK | wx.ICON_EXCLAMATION)\n        else:\n            log_window = LogGUI(self)\n            log_window.load(self.log_manager.log_file)\n            log_window.Show()\n\n    def _on_about(self, event):\n        info = wx.AboutDialogInfo()\n\n        if self.app_icon is not None:\n            info.SetIcon(self.app_icon)\n\n        info.SetName(__appname__)\n        info.SetVersion(__version__)\n        info.SetDescription(__descriptionfull__)\n        info.SetWebSite(__projecturl__)\n        info.SetLicense(__licensefull__)\n        info.AddDeveloper(__author__)\n\n        wx.AboutBox(info)\n\n    def _set_publisher(self, handler, topic):\n        \"\"\"Sets a handler for the given topic.\n\n        Args:\n            handler (function): Can be any function with one parameter\n                the message that the caller sends.\n\n            topic (string): Can be any string that identifies the caller.\n                You can bind multiple handlers on the same topic or\n                multiple topics on the same handler.\n\n        \"\"\"\n        Publisher.subscribe(handler, topic)\n\n    def _create_statictext(self, label):\n        return wx.StaticText(self._panel, label=label)\n\n    def _create_bitmap_button(self, icon, size=(-1, -1), handler=None):\n        button = wx.BitmapButton(self._panel, bitmap=icon, size=size, style=wx.NO_BORDER)\n\n        if handler is not None:\n            button.Bind(wx.EVT_BUTTON, handler)\n\n        return button\n\n    def _create_static_bitmap(self, icon, event_handler=None):\n        static_bitmap = wx.StaticBitmap(self._panel, bitmap=icon)\n\n        if event_handler is not None:\n            static_bitmap.Bind(wx.EVT_LEFT_DCLICK, event_handler)\n\n        return static_bitmap\n\n    def _create_textctrl(self, style=None, event_handler=None):\n        if style is None:\n            textctrl = wx.TextCtrl(self._panel)\n        else:\n            textctrl = wx.TextCtrl(self._panel, style=style)\n\n        if event_handler is not None:\n            textctrl.Bind(wx.EVT_TEXT_PASTE, event_handler)\n            textctrl.Bind(wx.EVT_MIDDLE_DOWN, event_handler)\n\n        if os.name == 'nt':\n            # Enable CTRL+A on Windows\n            def win_ctrla_eventhandler(event):\n                if event.GetKeyCode() == wx.WXK_CONTROL_A:\n                    event.GetEventObject().SelectAll()\n\n                event.Skip()\n\n            textctrl.Bind(wx.EVT_CHAR, win_ctrla_eventhandler)\n\n        return textctrl\n\n    def _create_popup(self, text, title, style):\n        wx.MessageBox(text, title, style)\n\n    def _set_layout(self):\n        \"\"\"Sets the layout of the main window. \"\"\"\n        main_sizer = wx.BoxSizer()\n        panel_sizer = wx.BoxSizer(wx.VERTICAL)\n\n        top_sizer = wx.BoxSizer(wx.HORIZONTAL)\n        top_sizer.Add(self._url_text, 0, wx.ALIGN_BOTTOM | wx.BOTTOM, 5)\n        top_sizer.AddSpacer((-1, -1), 1)\n        top_sizer.Add(self._settings_button)\n        panel_sizer.Add(top_sizer, 0, wx.EXPAND)\n\n        panel_sizer.Add(self._url_list, 1, wx.EXPAND)\n\n        mid_sizer = wx.BoxSizer(wx.HORIZONTAL)\n        mid_sizer.Add(self._folder_icon)\n        mid_sizer.AddSpacer((3, -1))\n        mid_sizer.Add(self._path_combobox, 2, wx.ALIGN_CENTER_VERTICAL)\n        mid_sizer.AddSpacer((5, -1))\n        mid_sizer.Add(self._buttons[\"savepath\"], flag=wx.ALIGN_CENTER_VERTICAL)\n        mid_sizer.AddSpacer((10, -1), 1)\n        mid_sizer.Add(self._videoformat_combobox, 1, wx.ALIGN_CENTER_VERTICAL)\n        mid_sizer.AddSpacer((5, -1))\n        mid_sizer.Add(self._buttons[\"add\"], flag=wx.ALIGN_CENTER_VERTICAL)\n        panel_sizer.Add(mid_sizer, 0, wx.EXPAND | wx.ALL, 10)\n\n        panel_sizer.Add(self._download_text, 0, wx.BOTTOM, 5)\n        panel_sizer.Add(self._status_list, 2, wx.EXPAND)\n\n        bottom_sizer = wx.BoxSizer(wx.HORIZONTAL)\n        bottom_sizer.Add(self._buttons[\"delete\"])\n        bottom_sizer.AddSpacer((5, -1))\n        bottom_sizer.Add(self._buttons[\"play\"])\n        bottom_sizer.AddSpacer((5, -1))\n        bottom_sizer.Add(self._buttons[\"up\"])\n        bottom_sizer.AddSpacer((5, -1))\n        bottom_sizer.Add(self._buttons[\"down\"])\n        bottom_sizer.AddSpacer((5, -1))\n        bottom_sizer.Add(self._buttons[\"reload\"])\n        bottom_sizer.AddSpacer((5, -1))\n        bottom_sizer.Add(self._buttons[\"pause\"])\n        bottom_sizer.AddSpacer((10, -1), 1)\n        bottom_sizer.Add(self._buttons[\"start\"])\n        panel_sizer.Add(bottom_sizer, 0, wx.EXPAND | wx.TOP, 5)\n\n        main_sizer.Add(panel_sizer, 1, wx.ALL | wx.EXPAND, 10)\n        self._panel.SetSizer(main_sizer)\n\n        self._panel.Layout()\n\n    def _update_youtubedl(self):\n        \"\"\"Update youtube-dl binary to the latest version. \"\"\"\n        if self.download_manager is not None and self.download_manager.is_alive():\n            self._create_popup(self.DOWNLOAD_ACTIVE,\n                               self.WARNING_LABEL,\n                               wx.OK | wx.ICON_EXCLAMATION)\n        elif self.update_thread is not None and self.update_thread.is_alive():\n            self._create_popup(self.UPDATE_ACTIVE,\n                               self.INFO_LABEL,\n                               wx.OK | wx.ICON_INFORMATION)\n        else:\n            self.update_thread = UpdateThread(self.opt_manager.options['youtubedl_path'])\n\n    def _status_bar_write(self, msg):\n        \"\"\"Display msg in the status bar. \"\"\"\n        self._status_bar.SetStatusText(msg)\n\n    def _reset_widgets(self):\n        \"\"\"Resets GUI widgets after update or download process. \"\"\"\n        self._buttons[\"start\"].SetLabel(_(\"Start\"))\n        self._buttons[\"start\"].SetToolTip(wx.ToolTip(_(\"Start\")))\n        self._buttons[\"start\"].SetBitmap(self._bitmaps[\"start\"], wx.TOP)\n\n    def _print_stats(self):\n        \"\"\"Display download stats in the status bar. \"\"\"\n        suc_downloads = self.download_manager.successful\n        dtime = get_time(self.download_manager.time_it_took)\n\n        msg = self.SUCC_REPORT_MSG.format(suc_downloads,\n                                          dtime['days'],\n                                          dtime['hours'],\n                                          dtime['minutes'],\n                                          dtime['seconds'])\n\n        self._status_bar_write(msg)\n\n    def _after_download(self):\n        \"\"\"Run tasks after download process has been completed.\n\n        Note:\n            Here you can add any tasks you want to run after the\n            download process has been completed.\n\n        \"\"\"\n        if self.opt_manager.options['shutdown']:\n            dlg = ShutdownDialog(self, 60, _(\"Shutting down in {0} second(s)\"), _(\"Shutdown\"))\n            result = dlg.ShowModal() == wx.ID_OK\n            dlg.Destroy()\n\n            if result:\n                self.opt_manager.save_to_file()\n                success = shutdown_sys(self.opt_manager.options['sudo_password'])\n\n                if success:\n                    self._status_bar_write(self.SHUTDOWN_MSG)\n                else:\n                    self._status_bar_write(self.SHUTDOWN_ERR)\n        else:\n            if self.opt_manager.options[\"show_completion_popup\"]:\n                self._create_popup(self.DL_COMPLETED_MSG, self.INFO_LABEL, wx.OK | wx.ICON_INFORMATION)\n\n    def _download_worker_handler(self, msg):\n        \"\"\"downloadmanager.Worker thread handler.\n\n        Handles messages from the Worker thread.\n\n        Args:\n            See downloadmanager.Worker _talk_to_gui() method.\n\n        \"\"\"\n        signal, data = msg.data\n\n        download_item = self._download_list.get_item(data[\"index\"])\n        download_item.update_stats(data)\n        row = self._download_list.index(data[\"index\"])\n\n        self._status_list._update_from_item(row, download_item)\n\n    def _download_manager_handler(self, msg):\n        \"\"\"downloadmanager.DownloadManager thread handler.\n\n        Handles messages from the DownloadManager thread.\n\n        Args:\n            See downloadmanager.DownloadManager _talk_to_gui() method.\n\n        \"\"\"\n        data = msg.data\n\n        if data == 'finished':\n            self._print_stats()\n            self._reset_widgets()\n            self.download_manager = None\n            self._app_timer.Stop()\n            self._after_download()\n        elif data == 'closed':\n            self._status_bar_write(self.CLOSED_MSG)\n            self._reset_widgets()\n            self.download_manager = None\n            self._app_timer.Stop()\n        elif data == 'closing':\n            self._status_bar_write(self.CLOSING_MSG)\n        elif data == 'report_active':\n            pass\n            #NOTE Remove from here and downloadmanager\n            #since now we have the wx.Timer to check progress\n\n    def _update_handler(self, msg):\n        \"\"\"updatemanager.UpdateThread thread handler.\n\n        Handles messages from the UpdateThread thread.\n\n        Args:\n            See updatemanager.UpdateThread _talk_to_gui() method.\n\n        \"\"\"\n        data = msg.data\n\n        if data[0] == 'download':\n            self._status_bar_write(self.UPDATING_MSG)\n        elif data[0] == 'error':\n            self._status_bar_write(self.UPDATE_ERR_MSG.format(data[1]))\n        elif data[0] == 'correct':\n            self._status_bar_write(self.UPDATE_SUCC_MSG)\n        else:\n            self._reset_widgets()\n            self.update_thread = None\n\n    def _get_urls(self):\n        \"\"\"Returns urls list. \"\"\"\n        return [line for line in self._url_list.GetValue().split('\\n') if line]\n\n    def _start_download(self):\n        if self._status_list.is_empty():\n            self._create_popup(_(\"No items to download\"),\n                               self.WARNING_LABEL,\n                               wx.OK | wx.ICON_EXCLAMATION)\n        else:\n            self._app_timer.Start(100)\n            self.download_manager = DownloadManager(self, self._download_list, self.opt_manager, self.log_manager)\n\n            self._status_bar_write(self.DOWNLOAD_STARTED)\n            self._buttons[\"start\"].SetLabel(self.STOP_LABEL)\n            self._buttons[\"start\"].SetToolTip(wx.ToolTip(self.STOP_LABEL))\n            self._buttons[\"start\"].SetBitmap(self._bitmaps[\"stop\"], wx.TOP)\n\n    def _paste_from_clipboard(self):\n        \"\"\"Paste the content of the clipboard to the self._url_list widget.\n        It also adds a new line at the end of the data if not exist.\n\n        \"\"\"\n        if not wx.TheClipboard.IsOpened():\n\n            if wx.TheClipboard.Open():\n                if wx.TheClipboard.IsSupported(wx.DataFormat(wx.DF_TEXT)):\n\n                    data = wx.TextDataObject()\n                    wx.TheClipboard.GetData(data)\n\n                    data = data.GetText()\n\n                    if data[-1] != '\\n':\n                        data += '\\n'\n\n                    self._url_list.WriteText(data)\n\n                wx.TheClipboard.Close()\n\n    def _on_urllist_edit(self, event):\n        \"\"\"Event handler of the self._url_list widget.\n\n        This method is triggered when the users pastes text into\n        the URLs list either by using CTRL+V or by using the middle\n        click of the mouse.\n\n        \"\"\"\n        if event.GetEventType() == wx.EVT_TEXT_PASTE.typeId:\n            self._paste_from_clipboard()\n        else:\n            wx.TheClipboard.UsePrimarySelection(True)\n            self._paste_from_clipboard()\n            wx.TheClipboard.UsePrimarySelection(False)\n\n    def _on_update(self, event):\n        \"\"\"Event handler of the self._update_btn widget.\n\n        This method is used when the update button is pressed to start\n        the update process.\n\n        Note:\n            Currently there is not way to stop the update process.\n\n        \"\"\"\n        if self.opt_manager.options[\"disable_update\"]:\n            self._create_popup(_(\"Updates are disabled for your system. Please use the system's package manager to update youtube-dl.\"),\n                               self.INFO_LABEL,\n                               wx.OK | wx.ICON_INFORMATION)\n        else:\n            self._update_youtubedl()\n\n    def _on_options(self, event):\n        \"\"\"Event handler of the self._options_btn widget.\n\n        This method is used when the options button is pressed to show\n        the options window.\n\n        \"\"\"\n        self._options_frame.load_all_options()\n        self._options_frame.Show()\n\n    def _on_close(self, event):\n        \"\"\"Event handler for the wx.EVT_CLOSE event.\n\n        This method is used when the user tries to close the program\n        to save the options and make sure that the download & update\n        processes are not running.\n\n        \"\"\"\n        if self.opt_manager.options[\"confirm_exit\"]:\n            dlg = wx.MessageDialog(self, _(\"Are you sure you want to exit?\"), _(\"Exit\"), wx.YES_NO | wx.ICON_QUESTION)\n\n            result = dlg.ShowModal() == wx.ID_YES\n            dlg.Destroy()\n        else:\n            result = True\n\n        if result:\n            self.close()\n\n    def close(self):\n        if self.download_manager is not None:\n            self.download_manager.stop_downloads()\n            self.download_manager.join()\n\n        if self.update_thread is not None:\n            self.update_thread.join()\n\n        # Store main-options frame size\n        self.opt_manager.options['main_win_size'] = self.GetSize()\n        self.opt_manager.options['opts_win_size'] = self._options_frame.GetSize()\n\n        self.opt_manager.options[\"save_path_dirs\"] = self._path_combobox.GetStrings()\n\n        self._options_frame.save_all_options()\n        self.opt_manager.save_to_file()\n\n        self.Destroy()\n\n\nclass ListCtrl(wx.ListCtrl, ListCtrlAutoWidthMixin):\n\n    \"\"\"Custom ListCtrl widget.\n\n    Args:\n        columns (dict): See MainFrame class STATUSLIST_COLUMNS attribute.\n\n    \"\"\"\n\n    def __init__(self, columns, *args, **kwargs):\n        super(ListCtrl, self).__init__(*args, **kwargs)\n        ListCtrlAutoWidthMixin.__init__(self)\n        self.columns = columns\n        self._list_index = 0\n        self._url_list = set()\n        self._set_columns()\n\n    def remove_row(self, row_number):\n        self.DeleteItem(row_number)\n        self._list_index -= 1\n\n    def move_item_up(self, row_number):\n        self._move_item(row_number, row_number - 1)\n\n    def move_item_down(self, row_number):\n        self._move_item(row_number, row_number + 1)\n\n    def _move_item(self, cur_row, new_row):\n        self.Freeze()\n        item = self.GetItem(cur_row)\n        self.DeleteItem(cur_row)\n\n        item.SetId(new_row)\n        self.InsertItem(item)\n\n        self.Select(new_row)\n        self.Thaw()\n\n    def has_url(self, url):\n        \"\"\"Returns True if the url is aleady in the ListCtrl else False.\n\n        Args:\n            url (string): URL string.\n\n        \"\"\"\n        return url in self._url_list\n\n    def bind_item(self, download_item):\n        self.InsertStringItem(self._list_index, download_item.url)\n\n        self.SetItemData(self._list_index, download_item.object_id)\n\n        self._update_from_item(self._list_index, download_item)\n\n        self._list_index += 1\n\n    def _update_from_item(self, row, download_item):\n        progress_stats = download_item.progress_stats\n\n        for key in self.columns:\n            column = self.columns[key][0]\n\n            if key == \"status\" and progress_stats[\"playlist_index\"]:\n                # Not the best place but we build the playlist status here\n                status = \"{0} {1}/{2}\".format(progress_stats[\"status\"],\n                                              progress_stats[\"playlist_index\"],\n                                              progress_stats[\"playlist_size\"])\n\n                self.SetStringItem(row, column, status)\n            else:\n                self.SetStringItem(row, column, progress_stats[key])\n\n    def clear(self):\n        \"\"\"Clear the ListCtrl widget & reset self._list_index and\n        self._url_list. \"\"\"\n        self.DeleteAllItems()\n        self._list_index = 0\n        self._url_list = set()\n\n    def is_empty(self):\n        \"\"\"Returns True if the list is empty else False. \"\"\"\n        return self._list_index == 0\n\n    def get_selected(self):\n        return self.GetNextItem(-1, wx.LIST_NEXT_ALL, wx.LIST_STATE_SELECTED)\n\n    def get_all_selected(self):\n        return [index for index in xrange(self._list_index) if self.IsSelected(index)]\n\n    def deselect_all(self):\n        for index in xrange(self._list_index):\n            self.Select(index, on=0)\n\n    def get_next_selected(self, start=-1, reverse=False):\n        if start == -1:\n            start = self._list_index - 1 if reverse else 0\n        else:\n            # start from next item\n            if reverse:\n                start -= 1\n            else:\n                start += 1\n\n        end = -1 if reverse else self._list_index\n        step = -1 if reverse else 1\n\n        for index in xrange(start, end, step):\n            if self.IsSelected(index):\n                return index\n\n        return -1\n\n    def _set_columns(self):\n        \"\"\"Initializes ListCtrl columns.\n        See MainFrame STATUSLIST_COLUMNS attribute for more info. \"\"\"\n        for column_item in sorted(self.columns.values()):\n            self.InsertColumn(column_item[0], column_item[1], width=wx.LIST_AUTOSIZE_USEHEADER)\n\n            # If the column width obtained from wxLIST_AUTOSIZE_USEHEADER\n            # is smaller than the minimum allowed column width\n            # then set the column width to the minumum allowed size\n            if self.GetColumnWidth(column_item[0]) < column_item[2]:\n                self.SetColumnWidth(column_item[0], column_item[2])\n\n            # Set auto-resize if enabled\n            if column_item[3]:\n                self.setResizeColumn(column_item[0])\n\n# REFACTOR Extra widgets below should move to other module with widgets\n\nclass ExtComboBox(wx.ComboBox):\n\n    def __init__(self, parent, max_items=-1, *args, **kwargs):\n        super(ExtComboBox, self).__init__(parent, *args, **kwargs)\n\n        assert max_items > 0 or max_items == -1\n        self.max_items = max_items\n\n    def Append(self, new_value):\n        if self.FindString(new_value) == wx.NOT_FOUND:\n            super(ExtComboBox, self).Append(new_value)\n\n            if self.max_items != -1 and self.GetCount() > self.max_items:\n                self.SetItems(self.GetStrings()[1:])\n\n    def SetValue(self, new_value):\n        if self.FindString(new_value) == wx.NOT_FOUND:\n            self.Append(new_value)\n\n        self.SetSelection(self.FindString(new_value))\n\n    def LoadMultiple(self, items_list):\n        for item in items_list:\n            self.Append(item)\n\n\nclass DoubleStageButton(wx.Button):\n\n    def __init__(self, parent, labels, bitmaps, bitmap_pos=wx.TOP, *args, **kwargs):\n        super(DoubleStageButton, self).__init__(parent, *args, **kwargs)\n\n        assert isinstance(labels, tuple) and isinstance(bitmaps, tuple)\n        assert len(labels) == 2\n        assert len(bitmaps) == 0 or len(bitmaps) == 2\n\n        self.labels = labels\n        self.bitmaps = bitmaps\n        self.bitmap_pos = bitmap_pos\n\n        self._stage = 0\n        self._set_layout()\n\n    def _set_layout(self):\n        self.SetLabel(self.labels[self._stage])\n\n        if len(self.bitmaps):\n            self.SetBitmap(self.bitmaps[self._stage], self.bitmap_pos)\n\n    def change_stage(self):\n        self._stage = 0 if self._stage else 1\n        self._set_layout()\n\n    def set_stage(self, new_stage):\n        assert new_stage == 0 or new_stage == 1\n\n        self._stage = new_stage\n        self._set_layout()\n\n\nclass ButtonsChoiceDialog(wx.Dialog):\n\n    if os.name == \"nt\":\n        STYLE = wx.DEFAULT_DIALOG_STYLE\n    else:\n        STYLE = wx.DEFAULT_DIALOG_STYLE | wx.MAXIMIZE_BOX\n\n    BORDER = 10\n\n    def __init__(self, parent, choices, message, *args, **kwargs):\n        super(ButtonsChoiceDialog, self).__init__(parent, wx.ID_ANY, *args, style=self.STYLE, **kwargs)\n\n        buttons = []\n\n        # Create components\n        panel = wx.Panel(self)\n\n        info_bmp = wx.ArtProvider.GetBitmap(wx.ART_INFORMATION, wx.ART_MESSAGE_BOX)\n\n        info_icon = wx.StaticBitmap(panel, wx.ID_ANY, info_bmp)\n        msg_text = wx.StaticText(panel, wx.ID_ANY, message)\n\n        buttons.append(wx.Button(panel, wx.ID_CANCEL, _(\"Cancel\")))\n\n        for index, label in enumerate(choices):\n            buttons.append(wx.Button(panel, index + 1, label))\n\n        # Get the maximum button width & height\n        max_width = max_height = -1\n\n        for button in buttons:\n            button_width, button_height = button.GetSize()\n\n            if button_width > max_width:\n                max_width = button_width\n\n            if button_height > max_height:\n                max_height = button_height\n\n        max_width += 10\n\n        # Set buttons width & bind events\n        for button in buttons:\n            if button != buttons[0]:\n                button.SetMinSize((max_width, max_height))\n            else:\n                # On Close button change only the height\n                button.SetMinSize((-1, max_height))\n\n            button.Bind(wx.EVT_BUTTON, self._on_close)\n\n        # Set sizers\n        vertical_sizer = wx.BoxSizer(wx.VERTICAL)\n\n        message_sizer = wx.BoxSizer(wx.HORIZONTAL)\n        message_sizer.Add(info_icon)\n        message_sizer.AddSpacer((10, 10))\n        message_sizer.Add(msg_text, flag=wx.EXPAND)\n\n        vertical_sizer.Add(message_sizer, 1, wx.ALL, border=self.BORDER)\n\n        buttons_sizer = wx.BoxSizer(wx.HORIZONTAL)\n        for button in buttons[1:]:\n            buttons_sizer.Add(button)\n            buttons_sizer.AddSpacer((5, -1))\n\n        buttons_sizer.AddSpacer((-1, -1), 1)\n        buttons_sizer.Add(buttons[0], flag=wx.ALIGN_RIGHT)\n        vertical_sizer.Add(buttons_sizer, flag=wx.EXPAND | wx.ALL, border=self.BORDER)\n\n        panel.SetSizer(vertical_sizer)\n\n        width, height = panel.GetBestSize()\n        self.SetSize((width, height * 1.3))\n\n        self.Center()\n\n    def _on_close(self, event):\n        self.EndModal(event.GetEventObject().GetId())\n\n\nclass ButtonsGroup(object):\n\n    WIDTH = 0\n    HEIGHT = 1\n\n    def __init__(self, buttons_list=None, squared=False):\n        if buttons_list is None:\n            self._buttons_list = []\n        else:\n            self._buttons_list = buttons_list\n\n        self._squared = squared\n\n    def set_size(self, size):\n        assert len(size) == 2\n\n        width, height = size\n\n        if width == -1:\n            for button in self._buttons_list:\n                cur_width = button.GetSize()[self.WIDTH]\n\n                if cur_width > width:\n                    width = cur_width\n\n        if height == -1:\n            for button in self._buttons_list:\n                cur_height = button.GetSize()[self.HEIGHT]\n\n                if cur_height > height:\n                    height = cur_height\n\n        if self._squared:\n            width = height = (width if width > height else height)\n\n        for button in self._buttons_list:\n            button.SetMinSize((width, height))\n\n    def create_sizer(self, orient=wx.HORIZONTAL, space=-1):\n        box_sizer = wx.BoxSizer(orient)\n\n        for button in self._buttons_list:\n            box_sizer.Add(button)\n\n            if space != -1:\n                box_sizer.AddSpacer((space, space))\n\n        return box_sizer\n\n    def bind_event(self, event, event_handler):\n        for button in self._buttons_list:\n            button.Bind(event, event_handler)\n\n    def disable_all(self):\n        for button in self._buttons_list:\n            button.Enable(False)\n\n    def enable_all(self):\n        for button in self._buttons_list:\n            button.Enable(True)\n\n    def add(self, button):\n        self._buttons_list.append(button)\n\n\nclass ShutdownDialog(wx.Dialog):\n\n    if os.name == \"nt\":\n        STYLE = wx.DEFAULT_DIALOG_STYLE\n    else:\n        STYLE = wx.DEFAULT_DIALOG_STYLE | wx.MAXIMIZE_BOX\n\n    TIMER_INTERVAL = 1000  # milliseconds\n\n    BORDER = 10\n\n    def __init__(self, parent, timeout, message, *args, **kwargs):\n        super(ShutdownDialog, self).__init__(parent, wx.ID_ANY, *args, style=self.STYLE, **kwargs)\n        assert timeout > 0\n\n        self.timeout = timeout\n        self.message = message\n\n        # Create components\n        panel = wx.Panel(self)\n\n        info_bmp = wx.ArtProvider.GetBitmap(wx.ART_INFORMATION, wx.ART_MESSAGE_BOX)\n        info_icon = wx.StaticBitmap(panel, wx.ID_ANY, info_bmp)\n\n        self.msg_text = msg_text = wx.StaticText(panel, wx.ID_ANY, self._get_message())\n        ok_button = wx.Button(panel, wx.ID_OK, _(\"OK\"))\n        cancel_button = wx.Button(panel, wx.ID_CANCEL, _(\"Cancel\"))\n\n        # Set layout\n        vertical_sizer = wx.BoxSizer(wx.VERTICAL)\n\n        message_sizer = wx.BoxSizer(wx.HORIZONTAL)\n        message_sizer.Add(info_icon)\n        message_sizer.AddSpacer((10, 10))\n        message_sizer.Add(msg_text, flag=wx.EXPAND)\n\n        vertical_sizer.Add(message_sizer, 1, wx.ALL, border=self.BORDER)\n\n        buttons_sizer = wx.BoxSizer(wx.HORIZONTAL)\n        buttons_sizer.Add(ok_button)\n        buttons_sizer.AddSpacer((5, -1))\n        buttons_sizer.Add(cancel_button)\n\n        vertical_sizer.Add(buttons_sizer, flag=wx.ALIGN_RIGHT | wx.ALL, border=self.BORDER)\n\n        panel.SetSizer(vertical_sizer)\n\n        width, height = panel.GetBestSize()\n        self.SetSize((width * 1.3, height * 1.3))\n\n        self.Center()\n\n        # Set up timer\n        self.timer = wx.Timer(self)\n        self.Bind(wx.EVT_TIMER, self._on_timer, self.timer)\n        self.timer.Start(self.TIMER_INTERVAL)\n\n    def _get_message(self):\n        return self.message.format(self.timeout)\n\n    def _on_timer(self, event):\n        self.timeout -= 1\n        self.msg_text.SetLabel(self._get_message())\n\n        if self.timeout <= 0:\n            self.EndModal(wx.ID_OK)\n\n    def Destroy(self):\n        self.timer.Stop()\n        return super(ShutdownDialog, self).Destroy()\n","highlightingTokens":[4,0,4,0,3,0,1,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,0,0,1,0,4,0,1,0,0,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,5,0,0,0,10,0,0,0,0,3,0,0,0,0,2,0,2,0,0,4,0,0,0,9,0,3,0,0,0,0,9,0,3,0,0,0,0,9,0,3,0,0,0,0,9,0,3,0,0,0,0,9,0,3,0,0,0,0,9,0,3,0,0,0,0,9,0,3,0,0,0,0,9,0,3,0,0,0,0,9,0,3,0,0,0,0,9,0,3,0,0,0,0,9,0,3,0,0,0,0,9,0,3,0,0,0,0,9,0,3,0,0,0,0,9,0,3,0,0,0,0,9,0,3,0,0,0,0,9,0,3,0,0,0,0,9,0,3,0,0,0,0,9,0,3,0,0,0,0,9,0,3,3,0,0,0,0,9,0,3,0,0,0,0,9,0,3,0,0,0,0,9,0,3,0,0,0,0,9,0,3,0,0,0,0,9,0,3,0,0,0,0,9,0,3,0,0,0,0,9,0,3,0,0,0,0,9,0,3,0,0,0,0,9,0,3,0,0,0,0,9,0,3,0,0,0,0,9,0,3,0,0,0,0,9,0,3,0,0,0,0,9,0,3,3,0,0,0,0,9,0,3,3,0,0,0,0,9,0,3,0,0,0,0,9,0,3,0,0,0,0,9,0,3,0,0,0,0,9,0,3,0,0,0,0,9,0,3,0,0,0,0,9,0,3,0,0,0,0,9,0,3,0,0,0,0,9,0,3,0,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,0,0,0,3,0,0,2,0,0,0,2,0,2,0,0,3,0,0,2,0,0,0,2,0,2,0,0,3,0,0,2,0,0,0,2,0,2,0,0,3,0,0,2,0,0,0,2,0,2,0,0,3,0,0,2,0,0,0,2,0,2,0,0,3,0,0,2,0,0,0,2,0,2,0,0,3,0,0,2,0,0,0,2,0,2,0,0,0,1,6,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,0,0,0,0,0,0,9,0,0,0,0,0,10,0,0,0,0,0,0,0,10,0,3,0,0,0,0,0,10,0,0,0,0,0,10,0,0,0,0,0,10,0,1,0,0,0,10,0,1,0,0,0,10,0,1,4,0,0,0,10,0,9,0,0,0,4,0,0,0,10,0,9,0,0,0,4,0,0,0,10,0,9,0,0,0,4,0,0,0,10,0,0,0,9,0,0,0,0,4,0,0,0,9,0,0,0,1,0,1,1,1,0,0,0,0,0,10,0,0,0,9,0,0,0,0,0,10,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,3,0,3,0,0,0,3,0,3,0,0,0,3,0,3,0,0,0,3,0,3,0,0,0,3,0,3,0,0,0,3,0,3,0,0,0,3,0,3,0,0,0,3,0,3,0,0,0,3,0,3,0,0,0,3,0,3,0,0,0,3,0,3,0,0,0,0,0,10,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,9,0,0,0,10,0,9,0,0,0,10,0,0,0,0,0,4,0,4,0,0,0,0,0,3,0,0,0,10,0,0,0,2,0,0,2,0,0,0,0,10,0,0,0,10,0,0,0,3,0,0,0,10,0,0,0,2,0,0,2,0,0,0,0,10,0,0,0,10,0,0,0,3,0,0,0,10,0,0,0,2,0,0,2,0,0,0,0,10,0,0,0,10,0,0,0,3,0,0,0,10,0,0,0,2,0,0,2,0,0,0,0,10,0,0,0,10,0,0,0,3,0,0,0,10,0,0,0,2,0,0,2,0,0,0,0,10,0,0,0,10,0,0,0,3,0,0,0,10,0,0,0,2,0,0,2,0,0,0,0,10,0,0,0,10,0,0,0,3,0,0,0,10,0,0,0,2,0,0,2,0,0,0,0,10,0,0,0,10,0,0,0,3,0,3,0,0,2,0,0,2,0,0,0,0,10,0,0,0,10,0,0,0,3,0,0,0,10,0,0,0,2,0,0,2,0,0,0,0,10,0,0,0,10,0,0,0,4,0,4,0,0,0,0,0,0,0,10,0,0,0,10,0,0,0,0,0,10,0,0,0,10,0,0,0,0,0,10,0,0,0,10,0,0,0,0,0,10,0,0,0,10,0,0,0,0,0,0,0,9,0,3,0,0,0,0,10,0,0,0,9,0,3,0,0,0,0,10,0,0,0,9,0,3,0,0,0,0,10,0,0,0,9,0,3,0,0,0,0,10,0,0,0,4,0,0,0,10,0,9,0,0,0,0,4,0,0,0,10,0,0,0,9,0,0,0,0,0,0,10,0,0,0,9,0,0,0,10,0,0,4,0,0,0,10,0,0,0,9,0,0,0,10,0,3,0,0,0,2,0,2,0,0,0,0,10,0,0,0,0,10,0,0,0,9,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,0,10,0,0,0,9,0,0,0,10,0,3,0,0,0,0,10,0,0,0,0,10,0,9,0,0,0,10,0,2,0,0,0,0,0,10,0,0,0,0,10,0,9,0,0,0,10,0,0,0,0,0,10,0,0,0,0,10,0,0,0,9,0,0,0,10,0,0,0,0,10,0,9,0,0,0,10,0,0,0,0,0,10,0,0,0,0,0,10,0,0,0,10,0,0,0,10,0,0,4,0,0,0,10,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,1,0,0,0,0,10,0,0,0,0,0,9,0,0,0,0,1,0,0,0,0,10,0,0,0,0,0,9,0,0,0,9,0,0,0,0,0,1,0,1,0,0,10,0,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,10,0,0,1,0,1,1,1,0,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,10,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,9,0,0,0,0,0,0,10,0,0,0,9,0,0,0,0,4,0,0,0,9,0,0,0,10,0,1,0,0,1,0,0,4,0,0,0,9,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,0,9,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,0,9,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,0,9,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,0,9,0,0,0,10,0,0,0,10,0,0,0,0,9,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,0,10,0,9,0,0,0,10,0,0,0,10,0,0,4,0,0,0,9,0,0,0,10,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,4,0,0,0,9,0,0,0,0,0,9,0,0,0,10,0,0,0,0,9,0,0,0,10,0,0,0,0,9,0,0,0,0,0,10,0,9,0,0,0,10,0,10,0,3,0,0,0,0,0,10,0,9,0,0,0,10,0,10,0,3,0,0,0,0,0,9,0,0,0,0,0,10,0,9,0,0,0,1,6,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,2,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,1,0,0,1,6,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,1,0,0,0,2,0,0,0,0,0,10,0,9,0,0,0,0,0,10,0,9,0,0,0,0,0,2,0,0,0,0,9,0,0,0,10,0,0,1,6,0,0,0,0,0,0,0,0,0,0,0,0,10,0,9,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,1,0,0,10,0,3,0,0,0,0,0,10,0,9,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,10,0,9,0,0,0,10,0,10,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,10,0,0,0,10,0,10,0,3,0,0,1,1,0,0,10,0,9,0,0,0,10,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,10,0,9,0,0,0,0,1,6,0,0,0,0,0,0,0,0,9,0,0,0,0,0,10,0,9,0,0,0,10,0,10,0,3,0,0,0,0,0,10,0,9,0,0,0,10,0,10,0,3,0,0,0,1,6,0,0,0,0,0,0,0,0,0,0,0,0,10,0,9,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,1,0,0,10,0,0,0,9,0,0,0,10,0,0,1,6,0,0,0,0,0,0,0,0,9,0,0,0,10,0,9,0,0,0,0,1,6,0,0,0,0,0,0,0,0,0,0,0,0,10,0,9,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,10,0,1,1,0,0,10,0,9,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,9,0,0,0,0,0,0,10,0,9,0,0,0,0,0,10,0,9,0,0,0,0,0,0,10,0,9,0,0,0,1,6,0,0,0,0,0,0,0,0,0,0,0,0,10,0,9,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,9,0,0,0,10,0,0,0,10,0,0,1,1,0,0,10,0,9,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,9,0,0,0,0,0,0,10,0,9,0,0,0,0,0,10,0,9,0,0,0,0,0,0,10,0,9,0,0,0,1,6,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,1,0,0,10,0,9,0,0,0,0,0,1,0,0,10,0,3,0,0,0,0,0,2,0,1,0,0,10,0,3,0,0,0,0,0,2,0,1,0,0,10,0,3,0,0,0,0,0,2,0,0,0,9,0,0,0,10,0,3,0,0,9,0,3,0,0,2,0,0,0,1,0,0,10,0,3,0,0,0,0,0,2,0,1,0,0,10,0,3,0,0,0,0,0,2,0,4,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,1,0,0,0,0,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,10,1,1,0,0,0,4,0,0,0,9,0,0,0,0,1,6,0,0,0,0,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,9,0,3,0,0,0,0,0,0,10,0,3,0,0,1,0,1,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,1,0,0,10,0,3,0,0,0,4,0,4,0,0,0,9,0,3,0,0,0,0,0,0,10,0,3,0,0,1,0,0,0,10,0,3,0,0,9,0,0,0,0,0,0,10,0,3,0,0,9,0,0,0,9,0,0,0,0,0,0,0,10,0,3,0,0,9,0,0,0,0,0,10,0,0,1,6,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,10,0,9,0,9,0,0,0,9,0,0,0,0,2,0,0,0,0,0,0,0,1,0,1,0,0,10,0,10,0,3,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,0,10,0,3,0,0,0,0,0,0,9,0,0,0,0,0,0,0,1,0,0,0,0,0,0,10,0,9,0,9,0,3,0,0,0,0,0,10,0,9,0,0,0,0,1,0,0,0,0,0,0,10,0,9,0,9,0,3,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,10,0,10,0,3,0,0,0,0,1,0,0,0,0,10,0,0,0,0,0,10,0,9,0,2,0,0,1,0,0,0,0,0,10,0,9,0,0,0,0,0,0,9,0,1,0,0,1,6,0,0,0,0,0,0,0,0,0,0,10,0,10,0,3,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,1,0,1,0,0,0,0,0,0,10,0,10,0,3,0,0,0,0,0,0,10,0,10,0,3,0,0,3,4,0,1,0,1,0,0,0,0,0,0,10,0,10,0,3,0,0,0,0,9,0,3,0,0,0,0,0,10,0,10,0,3,0,0,0,0,1,0,0,0,0,0,10,0,10,0,3,0,0,0,0,9,0,3,0,0,0,0,0,10,0,10,0,3,0,0,3,0,1,6,0,0,0,0,0,0,0,0,0,0,10,0,10,0,3,0,0,0,0,10,0,9,0,0,0,1,6,0,0,0,0,0,0,0,0,0,0,0,0,10,0,9,0,0,0,1,0,0,0,2,0,0,0,0,0,9,0,0,0,0,9,0,3,0,0,9,0,3,0,0,0,9,0,3,0,0,9,0,3,0,0,0,0,0,0,0,9,0,0,0,0,0,9,0,0,0,4,0,1,0,0,2,0,0,0,1,0,1,0,0,10,0,9,0,0,0,0,0,1,0,0,10,0,3,0,0,0,0,0,10,0,9,0,0,0,10,0,9,0,0,0,10,0,0,0,0,0,10,0,9,0,0,0,10,0,0,1,0,0,2,0,0,0,1,0,1,0,0,10,0,9,0,0,0,0,0,1,0,0,10,0,3,0,0,0,0,0,10,0,9,0,0,0,10,0,9,0,0,0,10,0,0,0,0,0,10,0,9,0,0,0,10,0,0,1,0,0,0,1,0,0,10,0,10,0,3,0,0,0,0,0,0,0,0,9,0,0,0,9,0,3,0,0,9,0,3,0,0,0,0,10,0,0,0,10,0,0,0,0,0,0,9,0,0,0,0,0,10,0,0,0,9,0,0,0,1,0,0,0,0,0,2,0,1,0,0,0,0,1,0,0,2,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,1,0,0,10,0,3,0,0,0,0,0,9,0,9,0,3,0,0,0,0,10,0,0,0,10,0,0,0,10,0,0,1,0,0,0,4,0,0,4,0,4,0,4,0,4,0,0,4,0,0,4,0,0,0,10,0,9,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,2,0,0,0,0,0,10,0,9,0,0,0,0,0,0,9,0,1,0,0,1,6,0,0,0,0,0,0,0,0,0,0,0,0,10,0,9,0,0,0,1,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,1,0,0,10,0,3,0,0,0,1,0,0,10,0,0,0,0,0,0,0,9,0,0,0,0,2,0,0,9,0,0,0,0,1,0,0,0,0,0,9,0,9,0,3,0,0,0,0,10,0,0,0,10,0,0,0,10,0,0,1,6,0,0,0,0,0,0,0,0,0,0,0,0,10,0,9,0,0,0,1,0,0,0,2,0,0,0,1,0,0,2,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,2,0,1,0,0,2,0,0,0,0,0,2,0,1,1,0,0,10,0,9,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,1,6,0,0,0,0,0,0,0,0,0,0,0,0,10,0,9,0,0,0,2,0,0,1,0,0,0,2,0,0,0,1,0,0,2,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,2,0,1,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,0,10,0,9,0,0,0,2,0,1,1,0,0,10,0,9,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,0,0,10,0,9,0,0,0,2,0,0,1,6,0,0,0,0,0,0,0,0,0,0,0,0,10,0,9,0,0,0,1,1,0,0,0,0,1,0,0,0,1,9,0,0,0,10,0,9,0,0,0,0,0,0,1,0,0,10,1,0,3,0,3,0,3,0,0,0,0,4,0,0,0,0,0,10,0,0,0,9,0,0,0,0,0,10,0,0,0,0,0,10,0,9,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,1,0,0,10,1,0,3,0,3,0,3,0,0,0,0,4,0,0,0,0,0,10,0,0,0,9,0,0,0,0,0,10,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,9,0,1,0,0,1,6,0,0,0,0,0,0,0,0,0,0,0,0,10,0,9,0,0,0,1,0,0,0,0,4,0,1,0,0,10,0,3,0,0,9,0,0,0,9,0,3,0,0,0,0,0,0,3,0,1,0,0,0,0,0,3,0,1,0,1,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,1,0,0,10,0,3,1,0,0,10,0,3,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,9,0,1,0,0,1,6,0,0,0,0,0,0,0,0,1,0,0,10,1,1,0,0,0,1,0,0,10,1,1,1,1,0,0,10,0,9,0,0,0,0,0,0,0,9,0,9,0,3,0,0,0,0,10,0,0,0,10,0,0,0,10,0,0,1,0,0,0,0,0,9,0,0,0,1,0,0,0,0,0,10,0,9,0,0,0,1,6,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,10,0,0,0,10,0,9,0,0,0,0,1,0,0,9,0,0,0,0,0,10,0,0,0,0,0,0,0,9,0,0,0,0,0,10,0,9,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,9,0,1,0,0,0,0,9,0,0,0,1,6,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,1,1,0,0,0,0,0,0,9,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,1,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,10,0,9,0,0,0,10,0,10,0,0,1,0,1,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,10,0,0,0,10,0,10,0,3,0,0,1,1,0,0,10,0,9,0,0,0,10,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,10,0,9,0,0,0,0,1,6,0,0,0,0,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,10,0,9,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,2,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,1,6,0,0,0,0,0,0,0,0,1,0,0,10,1,1,0,0,0,0,0,9,0,9,0,3,0,0,0,0,10,0,0,0,10,0,0,0,10,0,0,1,0,0,0,0,0,9,0,0,0,0,0,0,9,0,0,0,10,0,10,0,0,0,0,9,0,0,0,1,6,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,1,0,0,10,1,1,1,0,0,0,0,0,9,0,0,0,10,0,0,0,0,9,0,0,0,0,0,0,9,0,0,0,0,0,0,9,0,0,0,0,0,0,9,0,0,0,0,0,0,9,0,0,0,0,0,0,9,0,0,0,0,0,0,9,0,0,0,0,1,6,0,0,0,0,0,0,0,0,0,0,3,0,0,0,9,0,0,0,0,0,0,1,6,0,0,0,0,0,0,0,0,1,0,0,9,0,0,0,10,0,0,0,0,0,0,1,6,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,0,1,0,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,1,0,1,1,1,0,0,0,0,0,9,0,0,0,10,0,0,0,0,1,0,0,1,6,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,1,0,1,1,1,0,0,0,0,0,9,0,0,0,10,0,0,0,0,1,0,0,1,6,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,9,0,0,0,10,0,0,1,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,1,0,1,1,1,0,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,1,0,0,10,0,3,0,0,0,4,0,1,6,0,0,0,0,0,0,1,0,0,9,0,0,0,0,0,10,0,0,0,0,0,9,0,0,0,9,0,0,0,0,0,9,0,0,0,0,0,9,0,0,0,10,0,0,0,0,1,0,0,1,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,1,6,0,0,0,0,0,0,3,0,0,0,0,0,9,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,9,0,0,0,10,0,2,0,0,0,10,0,0,0,10,0,2,0,0,0,0,9,0,0,0,2,0,0,2,0,0,2,0,0,0,0,9,0,0,0,10,0,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,0,9,0,0,0,10,0,2,0,0,0,10,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,9,0,0,0,10,0,0,0,0,9,0,0,2,0,0,2,0,0,0,0,0,9,0,0,0,10,0,2,0,0,0,10,0,0,0,0,9,0,0,2,0,0,2,0,0,0,0,0,9,0,0,0,10,0,3,0,0,0,0,0,0,10,0,0,0,0,9,0,0,2,0,0,2,0,0,2,0,0,0,0,9,0,0,0,10,0,2,0,0,0,10,0,0,0,0,9,0,0,2,0,0,2,0,0,0,0,0,9,0,0,0,10,0,3,0,0,0,0,0,0,10,0,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,10,0,2,0,0,0,0,9,0,0,0,10,0,2,0,0,0,10,0,2,0,0,0,0,9,0,0,0,10,0,2,0,0,0,10,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,9,0,0,0,10,0,3,0,0,0,0,0,9,0,0,2,0,0,2,0,0,0,0,0,9,0,0,0,10,0,3,0,0,0,0,0,9,0,0,2,0,0,2,0,0,0,0,0,9,0,0,0,10,0,3,0,0,0,0,0,9,0,0,2,0,0,2,0,0,0,0,0,9,0,0,0,10,0,3,0,0,0,0,0,9,0,0,2,0,0,2,0,0,0,0,0,9,0,0,0,10,0,3,0,0,0,0,0,9,0,0,2,0,0,2,0,0,0,0,0,9,0,0,0,10,0,3,0,0,0,0,0,9,0,0,2,0,0,2,0,0,2,0,0,0,0,9,0,0,0,10,0,3,0,0,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,10,0,2,0,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,10,0,2,0,0,0,0,10,0,9,0,0,0,0,0,0,10,0,9,0,0,0,1,6,0,0,0,0,0,0,3,0,1,0,0,10,1,1,1,1,0,0,10,0,9,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,1,0,0,10,1,1,1,1,0,0,10,0,9,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,1,0,0,0,0,0,10,0,9,0,0,0,10,0,10,0,3,0,0,0,1,6,0,0,0,0,0,0,0,0,3,0,0,0,10,0,9,0,0,0,0,1,6,0,0,0,0,0,0,3,0,0,0,10,0,3,0,0,9,0,9,0,3,0,0,0,0,0,10,0,3,0,0,9,0,0,0,9,0,9,0,3,0,0,0,0,0,0,10,0,3,0,0,9,0,0,0,10,0,3,0,0,0,0,10,0,0,1,6,0,0,0,0,0,0,3,0,0,0,0,0,10,0,10,0,0,0,9,0,0,0,10,0,10,0,0,0,0,0,0,10,0,9,0,0,0,0,0,3,0,0,0,0,3,0,0,0,0,3,0,0,0,0,3,0,0,0,0,0,9,0,0,0,0,1,6,0,0,0,0,0,0,3,0,1,0,0,10,0,10,0,3,0,0,0,0,0,0,9,0,0,0,2,0,9,0,3,0,0,9,0,3,0,0,0,0,0,0,0,9,0,0,0,0,0,10,0,0,0,9,0,0,0,1,0,0,0,0,0,0,10,0,9,0,0,0,0,0,9,0,0,0,10,0,10,0,3,0,0,0,1,0,0,0,0,0,0,9,0,0,0,10,0,0,1,0,0,0,0,0,9,0,0,0,10,0,0,1,0,0,0,1,0,0,10,0,10,0,3,0,0,0,0,0,0,9,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,1,6,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,10,0,0,0,0,0,10,0,9,0,0,0,3,0,0,0,0,0,9,0,0,0,0,0,0,0,0,10,0,9,0,0,0,3,0,0,0,0,0,10,0,9,0,0,0,0,0,0,1,6,0,0,0,0,0,0,0,0,3,0,0,0,0,0,10,0,1,0,0,3,0,0,0,0,0,9,0,0,0,0,0,9,0,0,0,0,0,10,0,1,0,0,0,10,0,9,0,0,0,0,0,9,0,0,0,1,0,0,3,0,0,0,0,0,9,0,0,0,10,0,0,0,0,9,0,0,0,0,0,10,0,1,0,0,0,10,0,9,0,0,0,1,0,0,3,0,0,0,0,0,9,0,0,0,10,0,0,1,0,0,3,0,0,0,1,0,4,0,4,0,1,6,0,0,0,0,0,0,0,0,3,0,0,0,0,0,10,0,1,0,0,2,0,0,3,0,0,0,0,0,9,0,0,0,10,0,0,1,0,0,2,0,0,3,0,0,0,0,0,9,0,0,0,10,0,9,0,0,0,2,0,0,0,0,1,0,0,2,0,0,3,0,0,0,0,0,9,0,0,0,10,0,0,1,0,0,0,0,0,9,0,0,0,0,0,10,0,1,0,1,6,0,0,0,0,0,0,3,0,1,0,0,1,0,1,0,0,10,0,9,0,0,0,9,0,3,0,1,0,0,0,1,6,0,0,0,0,0,0,1,0,0,10,0,9,0,0,0,0,0,0,0,9,0,9,0,3,0,0,0,0,10,0,0,0,10,0,0,0,10,0,0,1,0,0,0,0,0,10,0,9,0,2,0,0,0,0,10,0,9,0,0,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,0,9,0,0,0,10,0,0,0,0,10,0,3,0,0,9,0,0,0,10,0,0,0,0,10,0,3,0,0,9,0,0,0,9,0,0,0,10,0,0,0,0,0,10,0,3,0,0,9,0,0,0,10,0,3,0,0,0,0,10,0,0,1,6,0,0,0,0,0,0,3,0,1,1,0,0,10,0,9,0,0,0,0,0,1,0,0,10,0,9,0,0,0,0,0,1,0,0,10,0,9,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,10,0,9,0,0,0,0,0,0,0,0,9,0,0,0,1,0,0,0,2,0,0,3,0,0,0,0,0,3,0,0,0,10,0,9,0,0,0,0,0,0,10,0,9,0,0,0,1,6,0,0,0,0,0,0,0,0,3,0,1,0,0,9,0,0,0,0,0,10,0,10,0,0,0,0,0,9,0,0,0,1,0,0,0,0,0,10,0,9,0,2,0,0,0,0,9,0,0,0,0,0,10,0,9,0,2,0,0,1,6,0,0,0,0,0,0,0,0,3,0,1,0,0,10,0,10,0,3,0,0,0,0,0,0,9,0,9,0,3,0,0,0,0,10,0,0,0,10,0,0,0,10,0,0,1,0,0,0,0,0,9,0,0,0,1,6,0,0,0,0,0,0,0,0,3,0,0,0,10,0,9,0,0,0,0,0,10,0,9,0,0,0,1,6,0,0,0,0,0,0,0,0,3,0,1,0,0,10,0,10,0,3,0,0,0,0,0,0,0,0,9,0,0,0,9,0,3,0,0,9,0,3,0,0,0,0,10,0,0,0,10,0,0,0,0,0,0,9,0,0,0,0,0,10,0,0,0,9,0,0,0,1,0,0,0,0,0,2,0,1,0,0,0,0,0,0,9,0,0,0,1,6,0,0,0,0,0,0,1,0,0,10,1,1,1,0,0,0,0,0,10,0,9,0,0,0,0,0,10,0,9,0,0,0,1,0,0,10,1,1,1,0,0,0,0,0,10,0,9,0,0,0,4,0,0,0,10,0,10,0,3,0,0,0,0,9,0,0,0,0,0,10,0,10,0,3,0,0,0,0,10,0,9,0,0,0,0,0,10,0,10,0,3,0,0,0,0,10,0,9,0,0,0,0,0,10,0,9,0,0,0,0,0,10,0,9,0,0,0,0,0,9,0,0,0,1,5,0,0,0,10,0,0,0,0,0,0,3,0,1,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,10,0,0,0,0,0,10,0,2,0,0,0,10,0,9,0,0,0,0,0,9,0,0,0,1,6,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,10,0,2,0,1,6,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,2,0,0,1,6,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,2,0,0,1,6,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,9,0,0,0,0,0,0,9,0,0,0,0,0,0,9,0,0,0,0,0,0,9,0,0,0,0,0,0,9,0,0,0,0,0,0,9,0,0,0,1,6,0,0,0,0,0,0,0,0,3,0,1,0,1,0,0,10,0,1,6,0,0,0,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,10,0,0,0,0,9,0,0,0,10,0,0,0,10,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,10,0,2,0,1,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,1,0,1,0,0,10,0,0,0,0,0,0,0,10,0,0,0,0,2,0,0,1,0,0,3,1,0,0,3,0,0,0,0,4,0,0,0,3,0,9,0,0,0,3,0,0,0,0,3,0,0,0,0,3,0,0,0,0,0,9,0,0,0,0,0,0,0,0,1,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,1,6,0,0,0,0,0,0,3,0,0,0,9,0,0,0,0,0,10,0,2,0,0,0,10,0,9,0,0,0,1,6,0,0,0,0,0,0,3,0,1,0,0,10,0,2,0,1,6,0,0,0,0,0,0,1,0,0,9,0,0,2,0,0,0,10,0,0,0,10,0,0,1,6,0,0,0,0,0,0,1,0,0,1,0,1,9,0,0,0,10,0,1,0,0,9,0,0,0,0,0,1,6,0,0,0,0,0,0,1,0,1,9,0,0,0,10,0,0,0,0,0,0,9,0,0,0,0,0,2,0,0,1,6,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,10,0,2,1,0,1,2,0,1,0,0,0,4,0,1,0,0,0,0,0,0,2,0,1,0,0,0,0,0,2,0,0,0,0,2,1,0,1,0,0,10,0,0,0,0,2,1,0,1,2,0,1,0,1,9,0,0,0,0,0,0,0,0,0,0,1,0,0,9,0,0,0,0,0,0,1,0,0,1,0,2,0,1,6,0,0,0,0,0,0,3,0,1,0,1,9,0,0,0,10,0,9,0,0,0,0,0,0,0,0,9,0,0,0,2,0,0,0,0,2,0,0,0,0,0,0,10,0,0,4,0,4,0,4,0,1,0,0,9,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,9,0,0,0,2,0,0,0,0,2,0,0,0,4,0,1,0,0,2,0,0,0,0,0,0,9,0,0,0,2,0,0,0,4,0,1,5,0,0,0,10,0,0,0,0,1,6,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,1,0,0,2,1,0,0,0,2,0,0,0,10,0,0,0,1,6,0,0,0,0,0,0,0,0,1,0,0,9,0,0,0,0,0,0,10,0,0,0,9,0,0,0,0,0,0,9,0,0,0,0,1,0,0,10,0,0,2,1,0,0,9,0,0,0,0,0,10,0,0,0,0,0,9,0,0,0,9,0,0,0,2,0,0,0,0,1,6,0,0,0,0,0,0,0,0,1,0,0,9,0,0,0,0,0,0,10,0,0,0,0,0,9,0,0,0,0,0,0,9,0,0,0,9,0,0,0,0,0,1,6,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,9,0,0,0,0,1,5,0,0,0,10,0,0,0,0,1,6,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,1,9,0,0,0,0,0,1,9,0,0,0,0,0,0,1,9,0,0,0,0,2,0,1,9,0,0,0,0,2,1,9,0,0,0,0,2,0,0,0,10,0,0,0,0,0,10,0,0,0,0,0,10,0,0,0,0,0,10,0,2,0,0,0,9,0,0,0,1,6,0,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,10,0,0,0,1,9,0,0,0,10,0,0,0,0,0,0,9,0,0,0,10,0,0,0,10,0,0,0,0,10,0,0,1,6,0,0,0,0,0,0,0,0,10,0,2,1,0,0,10,1,2,0,0,0,9,0,0,0,1,6,0,0,0,0,0,0,0,0,1,0,0,2,1,0,0,2,0,0,0,10,0,0,0,0,0,9,0,0,0,1,5,0,0,0,10,0,0,0,0,1,0,0,10,0,3,0,0,0,0,0,0,0,10,0,1,0,0,0,0,0,0,0,10,0,0,0,10,0,0,0,2,0,1,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,9,0,0,0,0,0,10,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,9,0,0,0,0,0,0,0,0,10,0,9,0,0,0,10,0,0,0,10,0,0,0,0,0,0,9,0,0,0,0,0,10,0,0,0,0,0,0,0,0,9,0,0,0,0,0,10,0,0,0,0,0,0,9,0,0,0,9,0,0,0,0,0,10,0,9,0,3,0,0,0,0,1,0,0,0,1,9,0,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,0,0,2,0,0,0,0,0,4,0,0,0,0,0,0,2,0,1,0,1,0,0,0,0,0,0,0,0,0,0,9,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,2,0,4,0,1,0,1,0,0,0,0,1,0,0,0,0,2,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,9,0,0,0,2,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,10,0,0,4,0,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,9,0,0,0,0,0,0,9,0,0,2,0,2,0,0,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,0,0,10,0,0,0,0,0,0,9,0,0,0,10,0,0,1,0,1,0,0,2,0,0,0,0,0,0,0,9,0,0,0,0,0,0,9,0,0,2,0,0,2,0,0,0,0,0,9,0,0,0,2,0,0,2,0,0,2,0,0,0,0,9,0,0,0,2,0,0,0,0,0,0,10,0,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,10,0,0,0,0,0,10,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,9,0,0,0,0,0,0,2,0,0,0,0,0,9,0,0,0,1,6,0,0,0,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,0,1,5,0,0,0,0,0,0,0,0,2,0,0,0,2,0,1,6,0,0,0,0,0,1,0,0,0,2,0,0,0,0,1,0,1,1,0,0,0,0,0,10,0,0,0,0,1,0,0,0,0,0,10,0,0,0,0,0,10,0,0,0,1,6,0,0,0,0,0,0,0,0,1,9,0,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,1,0,1,0,0,10,0,0,0,0,0,0,0,9,0,0,0,0,0,10,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,1,0,1,0,0,10,0,0,0,0,0,0,0,9,0,0,0,0,0,10,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,10,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,1,0,0,10,0,0,0,0,0,9,0,0,0,0,0,0,0,0,1,6,0,0,0,0,0,0,0,10,0,0,0,0,2,0,0,0,0,0,0,0,0,9,0,0,0,0,1,0,1,0,0,10,0,0,0,0,0,9,0,0,0,0,1,0,0,0,2,0,0,0,0,0,9,0,0,0,0,0,0,0,0,1,0,0,1,6,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,0,0,0,0,0,9,0,0,0,0,0,0,1,6,0,0,0,0,0,0,1,0,1,0,0,10,0,0,0,0,0,9,0,2,0,0,1,6,0,0,0,0,0,0,1,0,1,0,0,10,0,0,0,0,0,9,0,2,0,0,1,6,0,0,0,0,0,0,0,0,0,0,10,0,9,0,0,0,0,1,5,0,0,0,10,0,0,0,0,1,0,0,10,0,3,0,0,0,0,0,0,0,10,0,1,0,0,0,0,0,0,0,10,0,0,0,10,0,0,0,2,4,0,0,0,2,0,1,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,9,0,0,0,0,0,10,0,0,0,0,0,0,0,0,10,0,0,0,0,0,1,0,0,2,0,0,0,10,0,0,0,0,0,10,0,0,0,4,0,0,0,0,0,9,0,0,0,0,0,0,0,0,10,0,9,0,0,0,10,0,0,0,10,0,0,0,0,0,0,9,0,0,0,0,0,10,0,0,0,0,0,0,10,0,0,0,0,0,9,0,0,0,0,0,10,0,0,0,9,0,0,0,0,0,0,0,0,9,0,0,0,0,0,10,0,9,0,3,0,0,0,0,0,0,0,9,0,0,0,0,0,10,0,9,0,3,0,0,0,4,0,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,9,0,0,0,0,0,0,9,0,0,2,0,2,0,0,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,0,0,10,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,9,0,0,0,0,0,0,9,0,0,2,0,0,2,0,0,0,0,0,9,0,0,0,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,10,0,0,0,0,0,10,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,9,0,0,0,0,2,0,0,0,2,0,0,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,9,0,0,0,0,0,0,9,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,0,10,0,9,0,0,0,10,0,0,1,6,0,0,0,0,0,0,1,0,0,10,0,9,0,0,0,10,0,0,1,6,0,0,0,0,0,0,0,0,0,0,10,0,2,0,0,0,10,0,9,0,0,0,9,0,0,0,0,1,0,0,10,0,2,0,0,0,0,0,9,0,0,0,10,0,0,1,6,0,0,0,0,0,0,0,0,10,0,9,0,0,0,1,9,0,0,0,0,0,0,9,0,0,0,0],"highlightingCode":"<!DOCTYPE html>\n<html>\n<style>\n.ANY {\n    color: black;\n    font-weight: normal;\n    font-style: normal;\n}\n.KEYWORD {\n    color: blue;\n    font-weight: bold;\n    font-style: normal;\n}\n.LITERAL {\n    color: lightskyblue;\n    font-weight: bold;\n    font-style: normal;\n}\n.CHAR_STRING_LITERAL {\n    color: darkgoldenrod;\n    font-weight: normal;\n    font-style: normal;\n}\n.COMMENT {\n    color: grey;\n    font-weight: normal;\n    font-style: italic;\n}\n.CLASS_DECLARATOR {\n    color: crimson;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_DECLARATOR {\n    color: fuchsia;\n    font-weight: bold;\n    font-style: normal;\n}\n.VARIABLE_DECLARATOR {\n    color: purple;\n    font-weight: bold;\n    font-style: normal;\n}\n.TYPE_IDENTIFIER {\n    color: darkgreen;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_IDENTIFIER {\n    color: dodgerblue;\n    font-weight: normal;\n    font-style: normal;\n}\n.FIELD_IDENTIFIER {\n    color: coral;\n    font-weight: normal;\n    font-style: normal;\n}\n.ANNOTATION_DECLARATOR {\n    color: lightslategray;\n    font-weight: lighter;\n    font-style: italic;\n}\n</style>\n<pre>\n<code class=\"COMMENT\">#!/usr/bin/env python2</code><code class=\"ANY\">\n</code><code class=\"COMMENT\"># -*- coding: utf-8 -*-</code>\n<code class=\"ANY\">\n</code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Youtubedlg module responsible for the main app window. \"\"\"</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">from</code> <code class=\"ANY\">__future__</code> <code class=\"KEYWORD\">import</code> <code class=\"ANY\">unicode_literals</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code> <code class=\"ANY\">os</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code> <code class=\"ANY\">gettext</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code> <code class=\"ANY\">wx</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">from</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"ANY\">lib</code><code class=\"ANY\">.</code><code class=\"ANY\">pubsub</code> <code class=\"KEYWORD\">import</code> <code class=\"ANY\">setuparg1</code> <code class=\"COMMENT\">#NOTE Should remove deprecated</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">from</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"ANY\">lib</code><code class=\"ANY\">.</code><code class=\"ANY\">pubsub</code> <code class=\"KEYWORD\">import</code> <code class=\"ANY\">pub</code> <code class=\"KEYWORD\">as</code> <code class=\"ANY\">Publisher</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">from</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"ANY\">lib</code><code class=\"ANY\">.</code><code class=\"ANY\">mixins</code><code class=\"ANY\">.</code><code class=\"ANY\">listctrl</code> <code class=\"KEYWORD\">import</code> <code class=\"ANY\">ListCtrlAutoWidthMixin</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">from</code> <code class=\"ANY\">.</code><code class=\"ANY\">parsers</code> <code class=\"KEYWORD\">import</code> <code class=\"ANY\">OptionsParser</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">from</code> <code class=\"ANY\">.</code><code class=\"ANY\">optionsframe</code> <code class=\"KEYWORD\">import</code> <code class=\"ANY\">(</code>\n    <code class=\"ANY\">OptionsFrame</code><code class=\"ANY\">,</code>\n    <code class=\"ANY\">LogGUI</code>\n<code class=\"ANY\">)</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">from</code> <code class=\"ANY\">.</code><code class=\"ANY\">updatemanager</code> <code class=\"KEYWORD\">import</code> <code class=\"ANY\">(</code>\n    <code class=\"ANY\">UPDATE_PUB_TOPIC</code><code class=\"ANY\">,</code>\n    <code class=\"ANY\">UpdateThread</code>\n<code class=\"ANY\">)</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">from</code> <code class=\"ANY\">.</code><code class=\"ANY\">downloadmanager</code> <code class=\"KEYWORD\">import</code> <code class=\"ANY\">(</code>\n    <code class=\"ANY\">MANAGER_PUB_TOPIC</code><code class=\"ANY\">,</code>\n    <code class=\"ANY\">WORKER_PUB_TOPIC</code><code class=\"ANY\">,</code>\n    <code class=\"ANY\">DownloadManager</code><code class=\"ANY\">,</code>\n    <code class=\"ANY\">DownloadList</code><code class=\"ANY\">,</code>\n    <code class=\"ANY\">DownloadItem</code>\n<code class=\"ANY\">)</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">from</code> <code class=\"ANY\">.</code><code class=\"ANY\">utils</code> <code class=\"KEYWORD\">import</code> <code class=\"ANY\">(</code>\n    <code class=\"ANY\">get_pixmaps_dir</code><code class=\"ANY\">,</code>\n    <code class=\"ANY\">build_command</code><code class=\"ANY\">,</code>\n    <code class=\"ANY\">get_icon_file</code><code class=\"ANY\">,</code>\n    <code class=\"ANY\">shutdown_sys</code><code class=\"ANY\">,</code>\n    <code class=\"ANY\">remove_file</code><code class=\"ANY\">,</code>\n    <code class=\"ANY\">open_file</code><code class=\"ANY\">,</code>\n    <code class=\"ANY\">get_time</code>\n<code class=\"ANY\">)</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">from</code> <code class=\"ANY\">.</code><code class=\"ANY\">widgets</code> <code class=\"KEYWORD\">import</code> <code class=\"ANY\">CustomComboBox</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">from</code> <code class=\"ANY\">.</code><code class=\"ANY\">formats</code> <code class=\"KEYWORD\">import</code> <code class=\"ANY\">(</code>\n    <code class=\"ANY\">DEFAULT_FORMATS</code><code class=\"ANY\">,</code>\n    <code class=\"ANY\">VIDEO_FORMATS</code><code class=\"ANY\">,</code>\n    <code class=\"ANY\">AUDIO_FORMATS</code><code class=\"ANY\">,</code>\n    <code class=\"ANY\">FORMATS</code>\n<code class=\"ANY\">)</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">from</code> <code class=\"ANY\">.</code><code class=\"ANY\">info</code> <code class=\"KEYWORD\">import</code> <code class=\"ANY\">(</code>\n    <code class=\"ANY\">__descriptionfull__</code><code class=\"ANY\">,</code>\n    <code class=\"ANY\">__licensefull__</code><code class=\"ANY\">,</code>\n    <code class=\"ANY\">__projecturl__</code><code class=\"ANY\">,</code>\n    <code class=\"ANY\">__appname__</code><code class=\"ANY\">,</code>\n    <code class=\"ANY\">__author__</code>\n<code class=\"ANY\">)</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">from</code> <code class=\"ANY\">.</code><code class=\"ANY\">version</code> <code class=\"KEYWORD\">import</code> <code class=\"ANY\">__version__</code>\n\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">MainFrame</code><code class=\"ANY\">(</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">Frame</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n\n<code class=\"ANY\">    </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Main window class.\n\n    This class is responsible for creating the main app window\n    and binding the events.\n\n    Attributes:\n        FRAMES_MIN_SIZE (tuple): Tuple that contains the minumum width, height of the frame.\n\n        Labels area (strings): Strings for the widgets labels.\n\n        STATUSLIST_COLUMNS (dict): Python dictionary which holds informations\n            about the wxListCtrl columns. For more informations read the\n            comments above the STATUSLIST_COLUMNS declaration.\n\n    Args:\n        opt_manager (optionsmanager.OptionsManager): Object responsible for\n            handling the settings.\n\n        log_manager (logmanager.LogManager): Object responsible for handling\n            the log stuff.\n\n        parent (wx.Window): Frame parent.\n\n    \"\"\"</code>\n\n   <code class=\"ANY\"> </code><code class=\"ANY\">FRAMES_MIN_SIZE</code> <code class=\"ANY\">=</code> <code class=\"ANY\">(</code><code class=\"LITERAL\">560</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">360</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"COMMENT\"># Labels area</code>\n   <code class=\"ANY\"> </code><code class=\"ANY\">URLS_LABEL</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Enter URLs below\"</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"ANY\">UPDATE_LABEL</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Update\"</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"ANY\">OPTIONS_LABEL</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Options\"</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"ANY\">STOP_LABEL</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Stop\"</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"ANY\">INFO_LABEL</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Info\"</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"ANY\">WELCOME_MSG</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Welcome\"</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"ANY\">WARNING_LABEL</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Warning\"</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"ANY\">ADD_LABEL</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Add\"</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"ANY\">DOWNLOAD_LIST_LABEL</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Download list\"</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"ANY\">DELETE_LABEL</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Delete\"</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"ANY\">PLAY_LABEL</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Play\"</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"ANY\">UP_LABEL</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Up\"</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"ANY\">DOWN_LABEL</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Down\"</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"ANY\">RELOAD_LABEL</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Reload\"</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"ANY\">PAUSE_LABEL</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Pause\"</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"ANY\">START_LABEL</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Start\"</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"ANY\">ABOUT_LABEL</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"About\"</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"ANY\">VIEWLOG_LABEL</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"View Log\"</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"ANY\">SUCC_REPORT_MSG</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Successfully downloaded {0} URL(s) in {1} \"</code>\n                       <code class=\"CHAR_STRING_LITERAL\">\"day(s) {2} hour(s) {3} minute(s) {4} second(s)\"</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"ANY\">DL_COMPLETED_MSG</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Downloads completed\"</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"ANY\">URL_REPORT_MSG</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Total Progress: {0:.1f}% | Queued ({1}) Paused ({2}) Active ({3}) Completed ({4}) Error ({5})\"</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"ANY\">CLOSING_MSG</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Stopping downloads\"</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"ANY\">CLOSED_MSG</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Downloads stopped\"</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"ANY\">PROVIDE_URL_MSG</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"You need to provide at least one URL\"</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"ANY\">DOWNLOAD_STARTED</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Downloads started\"</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"ANY\">CHOOSE_DIRECTORY</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Choose Directory\"</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"ANY\">DOWNLOAD_ACTIVE</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Download in progress. Please wait for all downloads to complete\"</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"ANY\">UPDATE_ACTIVE</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Update already in progress\"</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"ANY\">UPDATING_MSG</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Downloading latest youtube-dl. Please wait...\"</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"ANY\">UPDATE_ERR_MSG</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Youtube-dl download failed [{0}]\"</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"ANY\">UPDATE_SUCC_MSG</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Successfully downloaded youtube-dl\"</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"ANY\">OPEN_DIR_ERR</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Unable to open directory: '{dir}'. \"</code>\n                    <code class=\"CHAR_STRING_LITERAL\">\"The specified path does not exist\"</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"ANY\">SHUTDOWN_ERR</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Error while shutting down. \"</code>\n                    <code class=\"CHAR_STRING_LITERAL\">\"Make sure you typed the correct password\"</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"ANY\">SHUTDOWN_MSG</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Shutting down system\"</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"ANY\">VIDEO_LABEL</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Title\"</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"ANY\">EXTENSION_LABEL</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Extension\"</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"ANY\">SIZE_LABEL</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Size\"</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"ANY\">PERCENT_LABEL</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Percent\"</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"ANY\">ETA_LABEL</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"ETA\"</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"ANY\">SPEED_LABEL</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Speed\"</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"ANY\">STATUS_LABEL</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Status\"</code><code class=\"ANY\">)</code>\n   <code class=\"ANY\"> </code><code class=\"COMMENT\">#################################</code>\n\n   <code class=\"ANY\"> </code><code class=\"COMMENT\"># STATUSLIST_COLUMNS</code>\n   <code class=\"ANY\"> </code><code class=\"COMMENT\">#</code>\n   <code class=\"ANY\"> </code><code class=\"COMMENT\"># Dictionary which contains the columns for the wxListCtrl widget.</code>\n   <code class=\"ANY\"> </code><code class=\"COMMENT\"># Each key represents a column and holds informations about itself.</code>\n   <code class=\"ANY\"> </code><code class=\"COMMENT\"># Structure informations:</code>\n   <code class=\"ANY\"> </code><code class=\"COMMENT\">#  column_key: (column_number, column_label, minimum_width, is_resizable)</code>\n   <code class=\"ANY\"> </code><code class=\"COMMENT\">#</code>\n   <code class=\"ANY\"> </code><code class=\"ANY\">STATUSLIST_COLUMNS</code> <code class=\"ANY\">=</code> <code class=\"ANY\">{</code>\n        <code class=\"CHAR_STRING_LITERAL\">'filename'</code><code class=\"ANY\">:</code> <code class=\"ANY\">(</code><code class=\"LITERAL\">0</code><code class=\"ANY\">,</code> <code class=\"ANY\">VIDEO_LABEL</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">150</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">True</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code>\n        <code class=\"CHAR_STRING_LITERAL\">'extension'</code><code class=\"ANY\">:</code> <code class=\"ANY\">(</code><code class=\"LITERAL\">1</code><code class=\"ANY\">,</code> <code class=\"ANY\">EXTENSION_LABEL</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">60</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">False</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code>\n        <code class=\"CHAR_STRING_LITERAL\">'filesize'</code><code class=\"ANY\">:</code> <code class=\"ANY\">(</code><code class=\"LITERAL\">2</code><code class=\"ANY\">,</code> <code class=\"ANY\">SIZE_LABEL</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">80</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">False</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code>\n        <code class=\"CHAR_STRING_LITERAL\">'percent'</code><code class=\"ANY\">:</code> <code class=\"ANY\">(</code><code class=\"LITERAL\">3</code><code class=\"ANY\">,</code> <code class=\"ANY\">PERCENT_LABEL</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">65</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">False</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code>\n        <code class=\"CHAR_STRING_LITERAL\">'eta'</code><code class=\"ANY\">:</code> <code class=\"ANY\">(</code><code class=\"LITERAL\">4</code><code class=\"ANY\">,</code> <code class=\"ANY\">ETA_LABEL</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">45</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">False</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code>\n        <code class=\"CHAR_STRING_LITERAL\">'speed'</code><code class=\"ANY\">:</code> <code class=\"ANY\">(</code><code class=\"LITERAL\">5</code><code class=\"ANY\">,</code> <code class=\"ANY\">SPEED_LABEL</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">90</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">False</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code>\n        <code class=\"CHAR_STRING_LITERAL\">'status'</code><code class=\"ANY\">:</code> <code class=\"ANY\">(</code><code class=\"LITERAL\">6</code><code class=\"ANY\">,</code> <code class=\"ANY\">STATUS_LABEL</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">160</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">False</code><code class=\"ANY\">)</code>\n    <code class=\"ANY\">}</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">__init__</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">opt_manager</code><code class=\"ANY\">,</code> <code class=\"ANY\">log_manager</code><code class=\"ANY\">,</code> <code class=\"ANY\">parent</code><code class=\"ANY\">=</code><code class=\"KEYWORD\">None</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"FUNCTION_IDENTIFIER\">super</code><code class=\"ANY\">(</code><code class=\"ANY\">MainFrame</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">__init__</code><code class=\"ANY\">(</code><code class=\"ANY\">parent</code><code class=\"ANY\">,</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ID_ANY</code><code class=\"ANY\">,</code> <code class=\"ANY\">__appname__</code><code class=\"ANY\">,</code> <code class=\"ANY\">size</code><code class=\"ANY\">=</code><code class=\"ANY\">opt_manager</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">options</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"main_win_size\"</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">opt_manager</code> <code class=\"ANY\">=</code> <code class=\"ANY\">opt_manager</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">log_manager</code> <code class=\"ANY\">=</code> <code class=\"ANY\">log_manager</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">download_manager</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">None</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">update_thread</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">None</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">app_icon</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">None</code>  <code class=\"COMMENT\">#REFACTOR Get and set on __init__.py</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_download_list</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">DownloadList</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># Set up youtube-dl options parser</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_options_parser</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">OptionsParser</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># Get the pixmaps directory</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_pixmaps_path</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">get_pixmaps_dir</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># Set the Timer</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_app_timer</code> <code class=\"ANY\">=</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Timer</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># Set the app icon</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">app_icon_path</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">get_icon_file</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">app_icon_path</code> <code class=\"KEYWORD\">is</code> <code class=\"KEYWORD\">not</code> <code class=\"KEYWORD\">None</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">app_icon</code> <code class=\"ANY\">=</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Icon</code><code class=\"ANY\">(</code><code class=\"ANY\">app_icon_path</code><code class=\"ANY\">,</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">BITMAP_TYPE_PNG</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetIcon</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">app_icon</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">bitmap_data</code> <code class=\"ANY\">=</code> <code class=\"ANY\">(</code>\n           <code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"down\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"arrow_down_32px.png\"</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code>\n           <code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"up\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"arrow_up_32px.png\"</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code>\n           <code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"play\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"camera_32px.png\"</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code>\n           <code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"start\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"cloud_download_32px.png\"</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code>\n           <code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"delete\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"delete_32px.png\"</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code>\n           <code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"folder\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"folder_32px.png\"</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code>\n           <code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"pause\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"pause_32px.png\"</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code>\n           <code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"resume\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"play_arrow_32px.png\"</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code>\n           <code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"reload\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"reload_32px.png\"</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code>\n           <code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"settings\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"settings_20px.png\"</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code>\n           <code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"stop\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"stop_32px.png\"</code><code class=\"ANY\">)</code>\n        <code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_bitmaps</code> <code class=\"ANY\">=</code> <code class=\"ANY\">{</code><code class=\"ANY\">}</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">item</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">bitmap_data</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">target</code><code class=\"ANY\">,</code> <code class=\"ANY\">name</code> <code class=\"ANY\">=</code> <code class=\"ANY\">item</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_bitmaps</code><code class=\"ANY\">[</code><code class=\"ANY\">target</code><code class=\"ANY\">]</code> <code class=\"ANY\">=</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Bitmap</code><code class=\"ANY\">(</code><code class=\"ANY\">os</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">path</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">join</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_pixmaps_path</code><code class=\"ANY\">,</code> <code class=\"ANY\">name</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># Set the data for all the wx.Button items</code>\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># name, label, size, event_handler</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">buttons_data</code> <code class=\"ANY\">=</code> <code class=\"ANY\">(</code>\n            <code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"delete\"</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">DELETE_LABEL</code><code class=\"ANY\">,</code> <code class=\"ANY\">(</code><code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">,</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_on_delete</code><code class=\"ANY\">,</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">BitmapButton</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code>\n            <code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"play\"</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">PLAY_LABEL</code><code class=\"ANY\">,</code> <code class=\"ANY\">(</code><code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">,</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_on_play</code><code class=\"ANY\">,</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">BitmapButton</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code>\n            <code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"up\"</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">UP_LABEL</code><code class=\"ANY\">,</code> <code class=\"ANY\">(</code><code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">,</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_on_arrow_up</code><code class=\"ANY\">,</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">BitmapButton</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code>\n            <code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"down\"</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">DOWN_LABEL</code><code class=\"ANY\">,</code> <code class=\"ANY\">(</code><code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">,</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_on_arrow_down</code><code class=\"ANY\">,</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">BitmapButton</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code>\n            <code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"reload\"</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">RELOAD_LABEL</code><code class=\"ANY\">,</code> <code class=\"ANY\">(</code><code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">,</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_on_reload</code><code class=\"ANY\">,</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">BitmapButton</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code>\n            <code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"pause\"</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">PAUSE_LABEL</code><code class=\"ANY\">,</code> <code class=\"ANY\">(</code><code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">,</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_on_pause</code><code class=\"ANY\">,</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">BitmapButton</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code>\n            <code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"start\"</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">START_LABEL</code><code class=\"ANY\">,</code> <code class=\"ANY\">(</code><code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">,</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_on_start</code><code class=\"ANY\">,</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">BitmapButton</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code>\n            <code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"savepath\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"...\"</code><code class=\"ANY\">,</code> <code class=\"ANY\">(</code><code class=\"LITERAL\">35</code><code class=\"ANY\">,</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_on_savepath</code><code class=\"ANY\">,</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">Button</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code>\n            <code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"add\"</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ADD_LABEL</code><code class=\"ANY\">,</code> <code class=\"ANY\">(</code><code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">,</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_on_add</code><code class=\"ANY\">,</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">Button</code><code class=\"ANY\">)</code>\n        <code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># Set the data for the settings menu item</code>\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># label, event_handler</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">settings_menu_data</code> <code class=\"ANY\">=</code> <code class=\"ANY\">(</code>\n            <code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">OPTIONS_LABEL</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_on_options</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code>\n            <code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">UPDATE_LABEL</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_on_update</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code>\n            <code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">VIEWLOG_LABEL</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_on_viewlog</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code>\n            <code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ABOUT_LABEL</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_on_about</code><code class=\"ANY\">)</code>\n        <code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">statuslist_menu_data</code> <code class=\"ANY\">=</code> <code class=\"ANY\">(</code>\n            <code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Get URL\"</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_on_geturl</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code>\n            <code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Get command\"</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_on_getcmd</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code>\n            <code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Open destination\"</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_on_open_dest</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code>\n            <code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Re-enter\"</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_on_reenter</code><code class=\"ANY\">)</code>\n        <code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># Create options frame</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_options_frame</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">OptionsFrame</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># Create frame components</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_panel</code> <code class=\"ANY\">=</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Panel</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_url_text</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_create_statictext</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">URLS_LABEL</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\">#REFACTOR Move to buttons_data</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_settings_button</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_create_bitmap_button</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_bitmaps</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"settings\"</code><code class=\"ANY\">]</code><code class=\"ANY\">,</code> <code class=\"ANY\">(</code><code class=\"LITERAL\">30</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">30</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_on_settings</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_url_list</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_create_textctrl</code><code class=\"ANY\">(</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">TE_MULTILINE</code> <code class=\"ANY\">|</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">TE_DONTWRAP</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_on_urllist_edit</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_folder_icon</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_create_static_bitmap</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_bitmaps</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"folder\"</code><code class=\"ANY\">]</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_on_open_path</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_path_combobox</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">ExtComboBox</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_panel</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">5</code><code class=\"ANY\">,</code> <code class=\"ANY\">style</code><code class=\"ANY\">=</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">CB_READONLY</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_videoformat_combobox</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">CustomComboBox</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_panel</code><code class=\"ANY\">,</code> <code class=\"ANY\">style</code><code class=\"ANY\">=</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">CB_READONLY</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_download_text</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_create_statictext</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">DOWNLOAD_LIST_LABEL</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">ListCtrl</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">STATUSLIST_COLUMNS</code><code class=\"ANY\">,</code>\n                                     <code class=\"ANY\">parent</code><code class=\"ANY\">=</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_panel</code><code class=\"ANY\">,</code>\n                                     <code class=\"ANY\">style</code><code class=\"ANY\">=</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">LC_REPORT</code> <code class=\"ANY\">|</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">LC_HRULES</code> <code class=\"ANY\">|</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">LC_VRULES</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># Dictionary to store all the buttons</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_buttons</code> <code class=\"ANY\">=</code> <code class=\"ANY\">{</code><code class=\"ANY\">}</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">item</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">buttons_data</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">name</code><code class=\"ANY\">,</code> <code class=\"ANY\">label</code><code class=\"ANY\">,</code> <code class=\"ANY\">size</code><code class=\"ANY\">,</code> <code class=\"ANY\">evt_handler</code><code class=\"ANY\">,</code> <code class=\"ANY\">parent</code> <code class=\"ANY\">=</code> <code class=\"ANY\">item</code>\n\n           <code class=\"ANY\"> </code><code class=\"ANY\">button</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">parent</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_panel</code><code class=\"ANY\">,</code> <code class=\"ANY\">size</code><code class=\"ANY\">=</code><code class=\"ANY\">size</code><code class=\"ANY\">)</code>\n\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">parent</code> <code class=\"ANY\">==</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">Button</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">button</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetLabel</code><code class=\"ANY\">(</code><code class=\"ANY\">label</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">elif</code> <code class=\"ANY\">parent</code> <code class=\"ANY\">==</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">BitmapButton</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">button</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetToolTip</code><code class=\"ANY\">(</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">ToolTip</code><code class=\"ANY\">(</code><code class=\"ANY\">label</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">name</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_bitmaps</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">button</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetBitmap</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_bitmaps</code><code class=\"ANY\">[</code><code class=\"ANY\">name</code><code class=\"ANY\">]</code><code class=\"ANY\">,</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">TOP</code><code class=\"ANY\">)</code>\n\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">evt_handler</code> <code class=\"KEYWORD\">is</code> <code class=\"KEYWORD\">not</code> <code class=\"KEYWORD\">None</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">button</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Bind</code><code class=\"ANY\">(</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">EVT_BUTTON</code><code class=\"ANY\">,</code> <code class=\"ANY\">evt_handler</code><code class=\"ANY\">)</code>\n\n           <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_buttons</code><code class=\"ANY\">[</code><code class=\"ANY\">name</code><code class=\"ANY\">]</code> <code class=\"ANY\">=</code> <code class=\"ANY\">button</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_bar</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">CreateStatusBar</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># Create extra components</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_settings_menu</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_create_menu_item</code><code class=\"ANY\">(</code><code class=\"ANY\">settings_menu_data</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_statuslist_menu</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_create_menu_item</code><code class=\"ANY\">(</code><code class=\"ANY\">statuslist_menu_data</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># Overwrite the menu hover event to avoid changing the statusbar</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Bind</code><code class=\"ANY\">(</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">EVT_MENU_HIGHLIGHT</code><code class=\"ANY\">,</code> <code class=\"KEYWORD\">lambda</code> <code class=\"ANY\">event</code><code class=\"ANY\">:</code> <code class=\"KEYWORD\">None</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># Bind extra events</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Bind</code><code class=\"ANY\">(</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">EVT_LIST_ITEM_RIGHT_CLICK</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_on_statuslist_right_click</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Bind</code><code class=\"ANY\">(</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">EVT_TEXT</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_update_savepath</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_path_combobox</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Bind</code><code class=\"ANY\">(</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">EVT_LIST_ITEM_SELECTED</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_update_pause_button</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Bind</code><code class=\"ANY\">(</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">EVT_LIST_ITEM_DESELECTED</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_update_pause_button</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Bind</code><code class=\"ANY\">(</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">EVT_CLOSE</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_on_close</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Bind</code><code class=\"ANY\">(</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">EVT_TIMER</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_on_timer</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_app_timer</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_videoformat_combobox</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Bind</code><code class=\"ANY\">(</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">EVT_COMBOBOX</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_update_videoformat</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># Set threads wxCallAfter handlers</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_set_publisher</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_update_handler</code><code class=\"ANY\">,</code> <code class=\"ANY\">UPDATE_PUB_TOPIC</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_set_publisher</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_download_worker_handler</code><code class=\"ANY\">,</code> <code class=\"ANY\">WORKER_PUB_TOPIC</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_set_publisher</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_download_manager_handler</code><code class=\"ANY\">,</code> <code class=\"ANY\">MANAGER_PUB_TOPIC</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># Set up extra stuff</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Center</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetMinSize</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">FRAMES_MIN_SIZE</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_status_bar_write</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">WELCOME_MSG</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_update_videoformat_combobox</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_path_combobox</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">LoadMultiple</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">opt_manager</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">options</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"save_path_dirs\"</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_path_combobox</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetValue</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">opt_manager</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">options</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"save_path\"</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_set_layout</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_url_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetFocus</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_create_menu_item</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">items</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">menu</code> <code class=\"ANY\">=</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Menu</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">item</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">items</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">label</code><code class=\"ANY\">,</code> <code class=\"ANY\">evt_handler</code> <code class=\"ANY\">=</code> <code class=\"ANY\">item</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">menu_item</code> <code class=\"ANY\">=</code> <code class=\"ANY\">menu</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Append</code><code class=\"ANY\">(</code><code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">,</code> <code class=\"ANY\">label</code><code class=\"ANY\">)</code>\n\n           <code class=\"ANY\"> </code><code class=\"ANY\">menu</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Bind</code><code class=\"ANY\">(</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">EVT_MENU</code><code class=\"ANY\">,</code> <code class=\"ANY\">evt_handler</code><code class=\"ANY\">,</code> <code class=\"ANY\">menu_item</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">menu</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_on_statuslist_right_click</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">event</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">selected</code> <code class=\"ANY\">=</code> <code class=\"ANY\">event</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">GetIndex</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">selected</code> <code class=\"ANY\">!=</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">deselect_all</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Select</code><code class=\"ANY\">(</code><code class=\"ANY\">selected</code><code class=\"ANY\">,</code> <code class=\"ANY\">on</code><code class=\"ANY\">=</code><code class=\"LITERAL\">1</code><code class=\"ANY\">)</code>\n\n           <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">PopupMenu</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_statuslist_menu</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_on_reenter</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">event</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">selected</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get_selected</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">selected</code> <code class=\"ANY\">!=</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">object_id</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">GetItemData</code><code class=\"ANY\">(</code><code class=\"ANY\">selected</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">download_item</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_download_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get_item</code><code class=\"ANY\">(</code><code class=\"ANY\">object_id</code><code class=\"ANY\">)</code>\n\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">download_item</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">stage</code> <code class=\"ANY\">!=</code> <code class=\"CHAR_STRING_LITERAL\">\"Active\"</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">remove_row</code><code class=\"ANY\">(</code><code class=\"ANY\">selected</code><code class=\"ANY\">)</code>\n               <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_download_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">remove</code><code class=\"ANY\">(</code><code class=\"ANY\">object_id</code><code class=\"ANY\">)</code>\n\n               <code class=\"ANY\"> </code><code class=\"ANY\">options</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_options_parser</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">parse</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">opt_manager</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">options</code><code class=\"ANY\">)</code>\n\n               <code class=\"ANY\"> </code><code class=\"ANY\">download_item</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">DownloadItem</code><code class=\"ANY\">(</code><code class=\"ANY\">download_item</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">url</code><code class=\"ANY\">,</code> <code class=\"ANY\">options</code><code class=\"ANY\">)</code>\n               <code class=\"ANY\"> </code><code class=\"ANY\">download_item</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">path</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">opt_manager</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">options</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"save_path\"</code><code class=\"ANY\">]</code>\n\n               <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"KEYWORD\">not</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_download_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">has_item</code><code class=\"ANY\">(</code><code class=\"ANY\">download_item</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">object_id</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                    </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">bind_item</code><code class=\"ANY\">(</code><code class=\"ANY\">download_item</code><code class=\"ANY\">)</code>\n                   <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_download_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">insert</code><code class=\"ANY\">(</code><code class=\"ANY\">download_item</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">reset</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_update_videoformat_combobox</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_path_combobox</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">LoadMultiple</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">opt_manager</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">options</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"save_path_dirs\"</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_path_combobox</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetValue</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">opt_manager</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">options</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"save_path\"</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_on_open_dest</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">event</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">selected</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get_selected</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">selected</code> <code class=\"ANY\">!=</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">object_id</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">GetItemData</code><code class=\"ANY\">(</code><code class=\"ANY\">selected</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">download_item</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_download_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get_item</code><code class=\"ANY\">(</code><code class=\"ANY\">object_id</code><code class=\"ANY\">)</code>\n\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">download_item</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">path</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"FUNCTION_IDENTIFIER\">open_file</code><code class=\"ANY\">(</code><code class=\"ANY\">download_item</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">path</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_on_open_path</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">event</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"FUNCTION_IDENTIFIER\">open_file</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_path_combobox</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">GetValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_on_geturl</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">event</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">selected</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get_selected</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">selected</code> <code class=\"ANY\">!=</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">object_id</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">GetItemData</code><code class=\"ANY\">(</code><code class=\"ANY\">selected</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">download_item</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_download_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get_item</code><code class=\"ANY\">(</code><code class=\"ANY\">object_id</code><code class=\"ANY\">)</code>\n\n           <code class=\"ANY\"> </code><code class=\"ANY\">url</code> <code class=\"ANY\">=</code> <code class=\"ANY\">download_item</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">url</code>\n\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"KEYWORD\">not</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">TheClipboard</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">IsOpened</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">clipdata</code> <code class=\"ANY\">=</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">TextDataObject</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n               <code class=\"ANY\"> </code><code class=\"ANY\">clipdata</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetText</code><code class=\"ANY\">(</code><code class=\"ANY\">url</code><code class=\"ANY\">)</code>\n               <code class=\"ANY\"> </code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">TheClipboard</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Open</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n               <code class=\"ANY\"> </code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">TheClipboard</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetData</code><code class=\"ANY\">(</code><code class=\"ANY\">clipdata</code><code class=\"ANY\">)</code>\n               <code class=\"ANY\"> </code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">TheClipboard</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Close</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_on_getcmd</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">event</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">selected</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get_selected</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">selected</code> <code class=\"ANY\">!=</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">object_id</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">GetItemData</code><code class=\"ANY\">(</code><code class=\"ANY\">selected</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">download_item</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_download_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get_item</code><code class=\"ANY\">(</code><code class=\"ANY\">object_id</code><code class=\"ANY\">)</code>\n\n           <code class=\"ANY\"> </code><code class=\"ANY\">cmd</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">build_command</code><code class=\"ANY\">(</code><code class=\"ANY\">download_item</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">options</code><code class=\"ANY\">,</code> <code class=\"ANY\">download_item</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">url</code><code class=\"ANY\">)</code>\n\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"KEYWORD\">not</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">TheClipboard</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">IsOpened</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">clipdata</code> <code class=\"ANY\">=</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">TextDataObject</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n               <code class=\"ANY\"> </code><code class=\"ANY\">clipdata</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetText</code><code class=\"ANY\">(</code><code class=\"ANY\">cmd</code><code class=\"ANY\">)</code>\n               <code class=\"ANY\"> </code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">TheClipboard</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Open</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n               <code class=\"ANY\"> </code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">TheClipboard</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetData</code><code class=\"ANY\">(</code><code class=\"ANY\">clipdata</code><code class=\"ANY\">)</code>\n               <code class=\"ANY\"> </code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">TheClipboard</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Close</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_on_timer</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">event</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">total_percentage</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">0.0</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">queued</code> <code class=\"ANY\">=</code> <code class=\"ANY\">paused</code> <code class=\"ANY\">=</code> <code class=\"ANY\">active</code> <code class=\"ANY\">=</code> <code class=\"ANY\">completed</code> <code class=\"ANY\">=</code> <code class=\"ANY\">error</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">0</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">item</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_download_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get_items</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">item</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">stage</code> <code class=\"ANY\">==</code> <code class=\"CHAR_STRING_LITERAL\">\"Queued\"</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">queued</code> <code class=\"ANY\">+=</code> <code class=\"LITERAL\">1</code>\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">item</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">stage</code> <code class=\"ANY\">==</code> <code class=\"CHAR_STRING_LITERAL\">\"Paused\"</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">paused</code> <code class=\"ANY\">+=</code> <code class=\"LITERAL\">1</code>\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">item</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">stage</code> <code class=\"ANY\">==</code> <code class=\"CHAR_STRING_LITERAL\">\"Active\"</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">active</code> <code class=\"ANY\">+=</code> <code class=\"LITERAL\">1</code>\n               <code class=\"ANY\"> </code><code class=\"ANY\">total_percentage</code> <code class=\"ANY\">+=</code> <code class=\"FUNCTION_IDENTIFIER\">float</code><code class=\"ANY\">(</code><code class=\"ANY\">item</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">progress_stats</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"percent\"</code><code class=\"ANY\">]</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">split</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">'%'</code><code class=\"ANY\">)</code><code class=\"ANY\">[</code><code class=\"LITERAL\">0</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">item</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">stage</code> <code class=\"ANY\">==</code> <code class=\"CHAR_STRING_LITERAL\">\"Completed\"</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">completed</code> <code class=\"ANY\">+=</code> <code class=\"LITERAL\">1</code>\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">item</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">stage</code> <code class=\"ANY\">==</code> <code class=\"CHAR_STRING_LITERAL\">\"Error\"</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">error</code> <code class=\"ANY\">+=</code> <code class=\"LITERAL\">1</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># REFACTOR Store percentage as float in the DownloadItem?</code>\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># REFACTOR DownloadList keep track for each item stage?</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">items_count</code> <code class=\"ANY\">=</code> <code class=\"ANY\">active</code> <code class=\"ANY\">+</code> <code class=\"ANY\">completed</code> <code class=\"ANY\">+</code> <code class=\"ANY\">error</code> <code class=\"ANY\">+</code> <code class=\"ANY\">queued</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">total_percentage</code> <code class=\"ANY\">+=</code> <code class=\"ANY\">completed</code> <code class=\"ANY\">*</code> <code class=\"LITERAL\">100.0</code> <code class=\"ANY\">+</code> <code class=\"ANY\">error</code> <code class=\"ANY\">*</code> <code class=\"LITERAL\">100.0</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">items_count</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">total_percentage</code> <code class=\"ANY\">/=</code> <code class=\"ANY\">items_count</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">msg</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">URL_REPORT_MSG</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">format</code><code class=\"ANY\">(</code><code class=\"ANY\">total_percentage</code><code class=\"ANY\">,</code> <code class=\"ANY\">queued</code><code class=\"ANY\">,</code> <code class=\"ANY\">paused</code><code class=\"ANY\">,</code> <code class=\"ANY\">active</code><code class=\"ANY\">,</code> <code class=\"ANY\">completed</code><code class=\"ANY\">,</code> <code class=\"ANY\">error</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">update_thread</code> <code class=\"KEYWORD\">is</code> <code class=\"KEYWORD\">None</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"COMMENT\"># Dont overwrite the update messages</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_status_bar_write</code><code class=\"ANY\">(</code><code class=\"ANY\">msg</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_update_pause_button</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">event</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">selected_rows</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get_all_selected</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">label</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Pause\"</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">bitmap</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_bitmaps</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"pause\"</code><code class=\"ANY\">]</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">row</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">selected_rows</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">object_id</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">GetItemData</code><code class=\"ANY\">(</code><code class=\"ANY\">row</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">download_item</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_download_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get_item</code><code class=\"ANY\">(</code><code class=\"ANY\">object_id</code><code class=\"ANY\">)</code>\n\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">download_item</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">stage</code> <code class=\"ANY\">==</code> <code class=\"CHAR_STRING_LITERAL\">\"Paused\"</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"COMMENT\"># If we find one or more items in Paused</code>\n               <code class=\"ANY\"> </code><code class=\"COMMENT\"># state set the button functionality to resume</code>\n               <code class=\"ANY\"> </code><code class=\"ANY\">label</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Resume\"</code><code class=\"ANY\">)</code>\n               <code class=\"ANY\"> </code><code class=\"ANY\">bitmap</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_bitmaps</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"resume\"</code><code class=\"ANY\">]</code>\n               <code class=\"ANY\"> </code><code class=\"KEYWORD\">break</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_buttons</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"pause\"</code><code class=\"ANY\">]</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetLabel</code><code class=\"ANY\">(</code><code class=\"ANY\">label</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_buttons</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"pause\"</code><code class=\"ANY\">]</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetToolTip</code><code class=\"ANY\">(</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">ToolTip</code><code class=\"ANY\">(</code><code class=\"ANY\">label</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_buttons</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"pause\"</code><code class=\"ANY\">]</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetBitmap</code><code class=\"ANY\">(</code><code class=\"ANY\">bitmap</code><code class=\"ANY\">,</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">TOP</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_update_videoformat_combobox</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_videoformat_combobox</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Clear</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_videoformat_combobox</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">add_items</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">list</code><code class=\"ANY\">(</code><code class=\"ANY\">DEFAULT_FORMATS</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">values</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">False</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">vformats</code> <code class=\"ANY\">=</code> <code class=\"ANY\">[</code><code class=\"ANY\">]</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">vformat</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">opt_manager</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">options</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"selected_video_formats\"</code><code class=\"ANY\">]</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">vformats</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">append</code><code class=\"ANY\">(</code><code class=\"ANY\">FORMATS</code><code class=\"ANY\">[</code><code class=\"ANY\">vformat</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">aformats</code> <code class=\"ANY\">=</code> <code class=\"ANY\">[</code><code class=\"ANY\">]</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">aformat</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">opt_manager</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">options</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"selected_audio_formats\"</code><code class=\"ANY\">]</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">aformats</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">append</code><code class=\"ANY\">(</code><code class=\"ANY\">FORMATS</code><code class=\"ANY\">[</code><code class=\"ANY\">aformat</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">vformats</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_videoformat_combobox</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">add_header</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Video\"</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_videoformat_combobox</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">add_items</code><code class=\"ANY\">(</code><code class=\"ANY\">vformats</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">aformats</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_videoformat_combobox</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">add_header</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Audio\"</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_videoformat_combobox</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">add_items</code><code class=\"ANY\">(</code><code class=\"ANY\">aformats</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">current_index</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_videoformat_combobox</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">FindString</code><code class=\"ANY\">(</code><code class=\"ANY\">FORMATS</code><code class=\"ANY\">[</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">opt_manager</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">options</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"selected_format\"</code><code class=\"ANY\">]</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">current_index</code> <code class=\"ANY\">==</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">NOT_FOUND</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_videoformat_combobox</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetSelection</code><code class=\"ANY\">(</code><code class=\"LITERAL\">0</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_videoformat_combobox</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetSelection</code><code class=\"ANY\">(</code><code class=\"ANY\">current_index</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_update_videoformat</code><code class=\"ANY\">(</code><code class=\"KEYWORD\">None</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_update_videoformat</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">event</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">opt_manager</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">options</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"selected_format\"</code><code class=\"ANY\">]</code> <code class=\"ANY\">=</code> <code class=\"ANY\">selected_format</code> <code class=\"ANY\">=</code> <code class=\"ANY\">FORMATS</code><code class=\"ANY\">[</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_videoformat_combobox</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">GetValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">]</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">selected_format</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">VIDEO_FORMATS</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">opt_manager</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">options</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"video_format\"</code><code class=\"ANY\">]</code> <code class=\"ANY\">=</code> <code class=\"ANY\">selected_format</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">opt_manager</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">options</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"audio_format\"</code><code class=\"ANY\">]</code> <code class=\"ANY\">=</code> <code class=\"CHAR_STRING_LITERAL\">\"\"</code>  <code class=\"COMMENT\">#NOTE Set to default value, check parsers.py</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">elif</code> <code class=\"ANY\">selected_format</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">AUDIO_FORMATS</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">opt_manager</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">options</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"video_format\"</code><code class=\"ANY\">]</code> <code class=\"ANY\">=</code> <code class=\"ANY\">DEFAULT_FORMATS</code><code class=\"ANY\">[</code><code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"default\"</code><code class=\"ANY\">)</code><code class=\"ANY\">]</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">opt_manager</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">options</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"audio_format\"</code><code class=\"ANY\">]</code> <code class=\"ANY\">=</code> <code class=\"ANY\">selected_format</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">opt_manager</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">options</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"video_format\"</code><code class=\"ANY\">]</code> <code class=\"ANY\">=</code> <code class=\"ANY\">DEFAULT_FORMATS</code><code class=\"ANY\">[</code><code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"default\"</code><code class=\"ANY\">)</code><code class=\"ANY\">]</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">opt_manager</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">options</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"audio_format\"</code><code class=\"ANY\">]</code> <code class=\"ANY\">=</code> <code class=\"CHAR_STRING_LITERAL\">\"\"</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_update_savepath</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">event</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">opt_manager</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">options</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"save_path\"</code><code class=\"ANY\">]</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_path_combobox</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">GetValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_on_delete</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">event</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">index</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get_next_selected</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">index</code> <code class=\"ANY\">==</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">dlg</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">ButtonsChoiceDialog</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">[</code><code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Remove all\"</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Remove completed\"</code><code class=\"ANY\">)</code><code class=\"ANY\">]</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"No items selected. Please pick an action\"</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Delete\"</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">ret_code</code> <code class=\"ANY\">=</code> <code class=\"ANY\">dlg</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">ShowModal</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">dlg</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Destroy</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n           <code class=\"ANY\"> </code><code class=\"COMMENT\">#REFACTOR Maybe add this functionality directly to DownloadList?</code>\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">ret_code</code> <code class=\"ANY\">==</code> <code class=\"LITERAL\">1</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">ditem</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_download_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get_items</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                    </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">stage</code> <code class=\"ANY\">!=</code> <code class=\"CHAR_STRING_LITERAL\">\"Active\"</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                        </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">remove_row</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_download_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">index</code><code class=\"ANY\">(</code><code class=\"ANY\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">object_id</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n                       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_download_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">remove</code><code class=\"ANY\">(</code><code class=\"ANY\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">object_id</code><code class=\"ANY\">)</code>\n\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">ret_code</code> <code class=\"ANY\">==</code> <code class=\"LITERAL\">2</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">ditem</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_download_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get_items</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                    </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">stage</code> <code class=\"ANY\">==</code> <code class=\"CHAR_STRING_LITERAL\">\"Completed\"</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                        </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">remove_row</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_download_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">index</code><code class=\"ANY\">(</code><code class=\"ANY\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">object_id</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n                       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_download_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">remove</code><code class=\"ANY\">(</code><code class=\"ANY\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">object_id</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">opt_manager</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">options</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"confirm_deletion\"</code><code class=\"ANY\">]</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">dlg</code> <code class=\"ANY\">=</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">MessageDialog</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Are you sure you want to remove selected items?\"</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Delete\"</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">YES_NO</code> <code class=\"ANY\">|</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ICON_QUESTION</code><code class=\"ANY\">)</code>\n               <code class=\"ANY\"> </code><code class=\"ANY\">result</code> <code class=\"ANY\">=</code> <code class=\"ANY\">dlg</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">ShowModal</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ID_YES</code>\n               <code class=\"ANY\"> </code><code class=\"ANY\">dlg</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Destroy</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">result</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">True</code>\n\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">result</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"KEYWORD\">while</code> <code class=\"ANY\">index</code> <code class=\"ANY\">>=</code> <code class=\"LITERAL\">0</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                    </code><code class=\"ANY\">object_id</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">GetItemData</code><code class=\"ANY\">(</code><code class=\"ANY\">index</code><code class=\"ANY\">)</code>\n                   <code class=\"ANY\"> </code><code class=\"ANY\">selected_download_item</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_download_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get_item</code><code class=\"ANY\">(</code><code class=\"ANY\">object_id</code><code class=\"ANY\">)</code>\n\n                   <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">selected_download_item</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">stage</code> <code class=\"ANY\">==</code> <code class=\"CHAR_STRING_LITERAL\">\"Active\"</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                        </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_create_popup</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Item is active, cannot remove\"</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">WARNING_LABEL</code><code class=\"ANY\">,</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">OK</code> <code class=\"ANY\">|</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ICON_EXCLAMATION</code><code class=\"ANY\">)</code>\n                   <code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                        </code><code class=\"COMMENT\">#if selected_download_item.stage == \"Completed\":</code>\n<code class=\"ANY\">                            </code><code class=\"COMMENT\">#dlg = wx.MessageDialog(self, \"Do you want to remove the files associated with this item?\", \"Remove files\", wx.YES_NO | wx.ICON_QUESTION)</code>\n\n                           <code class=\"ANY\"> </code><code class=\"COMMENT\">#result = dlg.ShowModal() == wx.ID_YES</code>\n                           <code class=\"ANY\"> </code><code class=\"COMMENT\">#dlg.Destroy()</code>\n\n                           <code class=\"ANY\"> </code><code class=\"COMMENT\">#if result:</code>\n<code class=\"ANY\">                                </code><code class=\"COMMENT\">#for cur_file in selected_download_item.get_files():</code>\n<code class=\"ANY\">                                    </code><code class=\"COMMENT\">#remove_file(cur_file)</code>\n\n                       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">remove_row</code><code class=\"ANY\">(</code><code class=\"ANY\">index</code><code class=\"ANY\">)</code>\n                       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_download_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">remove</code><code class=\"ANY\">(</code><code class=\"ANY\">object_id</code><code class=\"ANY\">)</code>\n                       <code class=\"ANY\"> </code><code class=\"ANY\">index</code> <code class=\"ANY\">-=</code> <code class=\"LITERAL\">1</code>\n\n                   <code class=\"ANY\"> </code><code class=\"ANY\">index</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get_next_selected</code><code class=\"ANY\">(</code><code class=\"ANY\">index</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_update_pause_button</code><code class=\"ANY\">(</code><code class=\"KEYWORD\">None</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_on_play</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">event</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">selected_rows</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get_all_selected</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">selected_rows</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">selected_row</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">selected_rows</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">object_id</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">GetItemData</code><code class=\"ANY\">(</code><code class=\"ANY\">selected_row</code><code class=\"ANY\">)</code>\n               <code class=\"ANY\"> </code><code class=\"ANY\">selected_download_item</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_download_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get_item</code><code class=\"ANY\">(</code><code class=\"ANY\">object_id</code><code class=\"ANY\">)</code>\n\n               <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">selected_download_item</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">stage</code> <code class=\"ANY\">==</code> <code class=\"CHAR_STRING_LITERAL\">\"Completed\"</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                    </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">selected_download_item</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">filenames</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                        </code><code class=\"ANY\">filename</code> <code class=\"ANY\">=</code> <code class=\"ANY\">selected_download_item</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get_files</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">[</code><code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">]</code>\n                       <code class=\"ANY\"> </code><code class=\"FUNCTION_IDENTIFIER\">open_file</code><code class=\"ANY\">(</code><code class=\"ANY\">filename</code><code class=\"ANY\">)</code>\n               <code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                    </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_create_popup</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Item is not completed\"</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">INFO_LABEL</code><code class=\"ANY\">,</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">OK</code> <code class=\"ANY\">|</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ICON_INFORMATION</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_on_arrow_up</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">event</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">index</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get_next_selected</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">index</code> <code class=\"ANY\">!=</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"KEYWORD\">while</code> <code class=\"ANY\">index</code> <code class=\"ANY\">>=</code> <code class=\"LITERAL\">0</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">object_id</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">GetItemData</code><code class=\"ANY\">(</code><code class=\"ANY\">index</code><code class=\"ANY\">)</code>\n               <code class=\"ANY\"> </code><code class=\"ANY\">download_item</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_download_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get_item</code><code class=\"ANY\">(</code><code class=\"ANY\">object_id</code><code class=\"ANY\">)</code>\n\n               <code class=\"ANY\"> </code><code class=\"ANY\">new_index</code> <code class=\"ANY\">=</code> <code class=\"ANY\">index</code> <code class=\"ANY\">-</code> <code class=\"LITERAL\">1</code>\n               <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">new_index</code> <code class=\"ANY\"><</code> <code class=\"LITERAL\">0</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                    </code><code class=\"ANY\">new_index</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">0</code>\n\n               <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"KEYWORD\">not</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">IsSelected</code><code class=\"ANY\">(</code><code class=\"ANY\">new_index</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                    </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_download_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">move_up</code><code class=\"ANY\">(</code><code class=\"ANY\">object_id</code><code class=\"ANY\">)</code>\n                   <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">move_item_up</code><code class=\"ANY\">(</code><code class=\"ANY\">index</code><code class=\"ANY\">)</code>\n                   <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_update_from_item</code><code class=\"ANY\">(</code><code class=\"ANY\">new_index</code><code class=\"ANY\">,</code> <code class=\"ANY\">download_item</code><code class=\"ANY\">)</code>\n\n               <code class=\"ANY\"> </code><code class=\"ANY\">index</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get_next_selected</code><code class=\"ANY\">(</code><code class=\"ANY\">index</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_on_arrow_down</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">event</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">index</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get_next_selected</code><code class=\"ANY\">(</code><code class=\"ANY\">reverse</code><code class=\"ANY\">=</code><code class=\"LITERAL\">True</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">index</code> <code class=\"ANY\">!=</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"KEYWORD\">while</code> <code class=\"ANY\">index</code> <code class=\"ANY\">>=</code> <code class=\"LITERAL\">0</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">object_id</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">GetItemData</code><code class=\"ANY\">(</code><code class=\"ANY\">index</code><code class=\"ANY\">)</code>\n               <code class=\"ANY\"> </code><code class=\"ANY\">download_item</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_download_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get_item</code><code class=\"ANY\">(</code><code class=\"ANY\">object_id</code><code class=\"ANY\">)</code>\n\n               <code class=\"ANY\"> </code><code class=\"ANY\">new_index</code> <code class=\"ANY\">=</code> <code class=\"ANY\">index</code> <code class=\"ANY\">+</code> <code class=\"LITERAL\">1</code>\n               <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">new_index</code> <code class=\"ANY\">>=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">GetItemCount</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                    </code><code class=\"ANY\">new_index</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">GetItemCount</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">-</code> <code class=\"LITERAL\">1</code>\n\n               <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"KEYWORD\">not</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">IsSelected</code><code class=\"ANY\">(</code><code class=\"ANY\">new_index</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                    </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_download_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">move_down</code><code class=\"ANY\">(</code><code class=\"ANY\">object_id</code><code class=\"ANY\">)</code>\n                   <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">move_item_down</code><code class=\"ANY\">(</code><code class=\"ANY\">index</code><code class=\"ANY\">)</code>\n                   <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_update_from_item</code><code class=\"ANY\">(</code><code class=\"ANY\">new_index</code><code class=\"ANY\">,</code> <code class=\"ANY\">download_item</code><code class=\"ANY\">)</code>\n\n               <code class=\"ANY\"> </code><code class=\"ANY\">index</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get_next_selected</code><code class=\"ANY\">(</code><code class=\"ANY\">index</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">True</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_on_reload</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">event</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">selected_rows</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get_all_selected</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"KEYWORD\">not</code> <code class=\"ANY\">selected_rows</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">index</code><code class=\"ANY\">,</code> <code class=\"ANY\">item</code> <code class=\"KEYWORD\">in</code> <code class=\"FUNCTION_IDENTIFIER\">enumerate</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_download_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get_items</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">item</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">stage</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Paused\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"Completed\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"Error\"</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                    </code><code class=\"COMMENT\"># Store the old savepath because reset is going to remove it</code>\n                   <code class=\"ANY\"> </code><code class=\"ANY\">savepath</code> <code class=\"ANY\">=</code> <code class=\"ANY\">item</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">path</code>\n                   <code class=\"ANY\"> </code><code class=\"ANY\">item</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">reset</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n                   <code class=\"ANY\"> </code><code class=\"ANY\">item</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">path</code> <code class=\"ANY\">=</code> <code class=\"ANY\">savepath</code>\n                   <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_update_from_item</code><code class=\"ANY\">(</code><code class=\"ANY\">index</code><code class=\"ANY\">,</code> <code class=\"ANY\">item</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">selected_row</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">selected_rows</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">object_id</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">GetItemData</code><code class=\"ANY\">(</code><code class=\"ANY\">selected_row</code><code class=\"ANY\">)</code>\n               <code class=\"ANY\"> </code><code class=\"ANY\">item</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_download_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get_item</code><code class=\"ANY\">(</code><code class=\"ANY\">object_id</code><code class=\"ANY\">)</code>\n\n               <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">item</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">stage</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Paused\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"Completed\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"Error\"</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                    </code><code class=\"COMMENT\"># Store the old savepath because reset is going to remove it</code>\n                   <code class=\"ANY\"> </code><code class=\"ANY\">savepath</code> <code class=\"ANY\">=</code> <code class=\"ANY\">item</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">path</code>\n                   <code class=\"ANY\"> </code><code class=\"ANY\">item</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">reset</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n                   <code class=\"ANY\"> </code><code class=\"ANY\">item</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">path</code> <code class=\"ANY\">=</code> <code class=\"ANY\">savepath</code>\n                   <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_update_from_item</code><code class=\"ANY\">(</code><code class=\"ANY\">selected_row</code><code class=\"ANY\">,</code> <code class=\"ANY\">item</code><code class=\"ANY\">)</code>\n\n           <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_update_pause_button</code><code class=\"ANY\">(</code><code class=\"KEYWORD\">None</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_on_pause</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">event</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">selected_rows</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get_all_selected</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">selected_rows</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"COMMENT\">#REFACTOR Use DoubleStageButton for this and check stage</code>\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_buttons</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"pause\"</code><code class=\"ANY\">]</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">GetLabel</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Pause\"</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">new_state</code> <code class=\"ANY\">=</code> <code class=\"CHAR_STRING_LITERAL\">\"Paused\"</code>\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">new_state</code> <code class=\"ANY\">=</code> <code class=\"CHAR_STRING_LITERAL\">\"Queued\"</code>\n\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">selected_row</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">selected_rows</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">object_id</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">GetItemData</code><code class=\"ANY\">(</code><code class=\"ANY\">selected_row</code><code class=\"ANY\">)</code>\n               <code class=\"ANY\"> </code><code class=\"ANY\">download_item</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_download_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get_item</code><code class=\"ANY\">(</code><code class=\"ANY\">object_id</code><code class=\"ANY\">)</code>\n\n               <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">download_item</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">stage</code> <code class=\"ANY\">==</code> <code class=\"CHAR_STRING_LITERAL\">\"Queued\"</code> <code class=\"KEYWORD\">or</code> <code class=\"ANY\">download_item</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">stage</code> <code class=\"ANY\">==</code> <code class=\"CHAR_STRING_LITERAL\">\"Paused\"</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                    </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_download_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">change_stage</code><code class=\"ANY\">(</code><code class=\"ANY\">object_id</code><code class=\"ANY\">,</code> <code class=\"ANY\">new_state</code><code class=\"ANY\">)</code>\n\n               <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_update_from_item</code><code class=\"ANY\">(</code><code class=\"ANY\">selected_row</code><code class=\"ANY\">,</code> <code class=\"ANY\">download_item</code><code class=\"ANY\">)</code>\n\n           <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_update_pause_button</code><code class=\"ANY\">(</code><code class=\"KEYWORD\">None</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_on_start</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">event</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">download_manager</code> <code class=\"KEYWORD\">is</code> <code class=\"KEYWORD\">None</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">update_thread</code> <code class=\"KEYWORD\">is</code> <code class=\"KEYWORD\">not</code> <code class=\"KEYWORD\">None</code> <code class=\"KEYWORD\">and</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">update_thread</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">is_alive</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_create_popup</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Update in progress. Please wait for the update to complete\"</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code>\n                                   <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">WARNING_LABEL</code><code class=\"ANY\">,</code>\n                                   <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">OK</code> <code class=\"ANY\">|</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ICON_EXCLAMATION</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_start_download</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">download_manager</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">stop_downloads</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_on_savepath</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">event</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">dlg</code> <code class=\"ANY\">=</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">DirDialog</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">CHOOSE_DIRECTORY</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_path_combobox</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">GetStringSelection</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">dlg</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">ShowModal</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ID_OK</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">path</code> <code class=\"ANY\">=</code> <code class=\"ANY\">dlg</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">GetPath</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n           <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_path_combobox</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Append</code><code class=\"ANY\">(</code><code class=\"ANY\">path</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_path_combobox</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetValue</code><code class=\"ANY\">(</code><code class=\"ANY\">path</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_update_savepath</code><code class=\"ANY\">(</code><code class=\"KEYWORD\">None</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">dlg</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Destroy</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_on_add</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">event</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">urls</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_get_urls</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"KEYWORD\">not</code> <code class=\"ANY\">urls</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_create_popup</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">PROVIDE_URL_MSG</code><code class=\"ANY\">,</code>\n                               <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">WARNING_LABEL</code><code class=\"ANY\">,</code>\n                               <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">OK</code> <code class=\"ANY\">|</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ICON_EXCLAMATION</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_url_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Clear</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">options</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_options_parser</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">parse</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">opt_manager</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">options</code><code class=\"ANY\">)</code>\n\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">url</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">urls</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">download_item</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">DownloadItem</code><code class=\"ANY\">(</code><code class=\"ANY\">url</code><code class=\"ANY\">,</code> <code class=\"ANY\">options</code><code class=\"ANY\">)</code>\n               <code class=\"ANY\"> </code><code class=\"ANY\">download_item</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">path</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">opt_manager</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">options</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"save_path\"</code><code class=\"ANY\">]</code>\n\n               <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"KEYWORD\">not</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_download_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">has_item</code><code class=\"ANY\">(</code><code class=\"ANY\">download_item</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">object_id</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                    </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">bind_item</code><code class=\"ANY\">(</code><code class=\"ANY\">download_item</code><code class=\"ANY\">)</code>\n                   <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_download_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">insert</code><code class=\"ANY\">(</code><code class=\"ANY\">download_item</code><code class=\"ANY\">)</code>\n\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_on_settings</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">event</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">event_object_pos</code> <code class=\"ANY\">=</code> <code class=\"ANY\">event</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">EventObject</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">GetPosition</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">event_object_height</code> <code class=\"ANY\">=</code> <code class=\"ANY\">event</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">EventObject</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">GetSize</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">[</code><code class=\"LITERAL\">1</code><code class=\"ANY\">]</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">event_object_pos</code> <code class=\"ANY\">=</code> <code class=\"ANY\">(</code><code class=\"ANY\">event_object_pos</code><code class=\"ANY\">[</code><code class=\"LITERAL\">0</code><code class=\"ANY\">]</code><code class=\"ANY\">,</code> <code class=\"ANY\">event_object_pos</code><code class=\"ANY\">[</code><code class=\"LITERAL\">1</code><code class=\"ANY\">]</code> <code class=\"ANY\">+</code> <code class=\"ANY\">event_object_height</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">PopupMenu</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_settings_menu</code><code class=\"ANY\">,</code> <code class=\"ANY\">event_object_pos</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_on_viewlog</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">event</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">log_manager</code> <code class=\"KEYWORD\">is</code> <code class=\"KEYWORD\">None</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_create_popup</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Logging is disabled\"</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code>\n                               <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">WARNING_LABEL</code><code class=\"ANY\">,</code>\n                               <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">OK</code> <code class=\"ANY\">|</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ICON_EXCLAMATION</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">log_window</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">LogGUI</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">log_window</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">load</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">log_manager</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">log_file</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">log_window</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Show</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_on_about</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">event</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">info</code> <code class=\"ANY\">=</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">AboutDialogInfo</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">app_icon</code> <code class=\"KEYWORD\">is</code> <code class=\"KEYWORD\">not</code> <code class=\"KEYWORD\">None</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">info</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetIcon</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">app_icon</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">info</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetName</code><code class=\"ANY\">(</code><code class=\"ANY\">__appname__</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">info</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetVersion</code><code class=\"ANY\">(</code><code class=\"ANY\">__version__</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">info</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetDescription</code><code class=\"ANY\">(</code><code class=\"ANY\">__descriptionfull__</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">info</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetWebSite</code><code class=\"ANY\">(</code><code class=\"ANY\">__projecturl__</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">info</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetLicense</code><code class=\"ANY\">(</code><code class=\"ANY\">__licensefull__</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">info</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">AddDeveloper</code><code class=\"ANY\">(</code><code class=\"ANY\">__author__</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">AboutBox</code><code class=\"ANY\">(</code><code class=\"ANY\">info</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_set_publisher</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">handler</code><code class=\"ANY\">,</code> <code class=\"ANY\">topic</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Sets a handler for the given topic.\n\n        Args:\n            handler (function): Can be any function with one parameter\n                the message that the caller sends.\n\n            topic (string): Can be any string that identifies the caller.\n                You can bind multiple handlers on the same topic or\n                multiple topics on the same handler.\n\n        \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">Publisher</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">subscribe</code><code class=\"ANY\">(</code><code class=\"ANY\">handler</code><code class=\"ANY\">,</code> <code class=\"ANY\">topic</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_create_statictext</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">label</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">StaticText</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_panel</code><code class=\"ANY\">,</code> <code class=\"ANY\">label</code><code class=\"ANY\">=</code><code class=\"ANY\">label</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_create_bitmap_button</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">icon</code><code class=\"ANY\">,</code> <code class=\"ANY\">size</code><code class=\"ANY\">=</code><code class=\"ANY\">(</code><code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">,</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"ANY\">handler</code><code class=\"ANY\">=</code><code class=\"KEYWORD\">None</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">button</code> <code class=\"ANY\">=</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">BitmapButton</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_panel</code><code class=\"ANY\">,</code> <code class=\"ANY\">bitmap</code><code class=\"ANY\">=</code><code class=\"ANY\">icon</code><code class=\"ANY\">,</code> <code class=\"ANY\">size</code><code class=\"ANY\">=</code><code class=\"ANY\">size</code><code class=\"ANY\">,</code> <code class=\"ANY\">style</code><code class=\"ANY\">=</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">NO_BORDER</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">handler</code> <code class=\"KEYWORD\">is</code> <code class=\"KEYWORD\">not</code> <code class=\"KEYWORD\">None</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">button</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Bind</code><code class=\"ANY\">(</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">EVT_BUTTON</code><code class=\"ANY\">,</code> <code class=\"ANY\">handler</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">button</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_create_static_bitmap</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">icon</code><code class=\"ANY\">,</code> <code class=\"ANY\">event_handler</code><code class=\"ANY\">=</code><code class=\"KEYWORD\">None</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">static_bitmap</code> <code class=\"ANY\">=</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">StaticBitmap</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_panel</code><code class=\"ANY\">,</code> <code class=\"ANY\">bitmap</code><code class=\"ANY\">=</code><code class=\"ANY\">icon</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">event_handler</code> <code class=\"KEYWORD\">is</code> <code class=\"KEYWORD\">not</code> <code class=\"KEYWORD\">None</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">static_bitmap</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Bind</code><code class=\"ANY\">(</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">EVT_LEFT_DCLICK</code><code class=\"ANY\">,</code> <code class=\"ANY\">event_handler</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">static_bitmap</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_create_textctrl</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">style</code><code class=\"ANY\">=</code><code class=\"KEYWORD\">None</code><code class=\"ANY\">,</code> <code class=\"ANY\">event_handler</code><code class=\"ANY\">=</code><code class=\"KEYWORD\">None</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">style</code> <code class=\"KEYWORD\">is</code> <code class=\"KEYWORD\">None</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">textctrl</code> <code class=\"ANY\">=</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">TextCtrl</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_panel</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">textctrl</code> <code class=\"ANY\">=</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">TextCtrl</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_panel</code><code class=\"ANY\">,</code> <code class=\"ANY\">style</code><code class=\"ANY\">=</code><code class=\"ANY\">style</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">event_handler</code> <code class=\"KEYWORD\">is</code> <code class=\"KEYWORD\">not</code> <code class=\"KEYWORD\">None</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">textctrl</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Bind</code><code class=\"ANY\">(</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">EVT_TEXT_PASTE</code><code class=\"ANY\">,</code> <code class=\"ANY\">event_handler</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">textctrl</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Bind</code><code class=\"ANY\">(</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">EVT_MIDDLE_DOWN</code><code class=\"ANY\">,</code> <code class=\"ANY\">event_handler</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">os</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">name</code> <code class=\"ANY\">==</code> <code class=\"CHAR_STRING_LITERAL\">'nt'</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"COMMENT\"># Enable CTRL+A on Windows</code>\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">win_ctrla_eventhandler</code><code class=\"ANY\">(</code><code class=\"ANY\">event</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">event</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">GetKeyCode</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">WXK_CONTROL_A</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                    </code><code class=\"ANY\">event</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">GetEventObject</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SelectAll</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n               <code class=\"ANY\"> </code><code class=\"ANY\">event</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Skip</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n           <code class=\"ANY\"> </code><code class=\"ANY\">textctrl</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Bind</code><code class=\"ANY\">(</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">EVT_CHAR</code><code class=\"ANY\">,</code> <code class=\"ANY\">win_ctrla_eventhandler</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">textctrl</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_create_popup</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">text</code><code class=\"ANY\">,</code> <code class=\"ANY\">title</code><code class=\"ANY\">,</code> <code class=\"ANY\">style</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">MessageBox</code><code class=\"ANY\">(</code><code class=\"ANY\">text</code><code class=\"ANY\">,</code> <code class=\"ANY\">title</code><code class=\"ANY\">,</code> <code class=\"ANY\">style</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_set_layout</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Sets the layout of the main window. \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">main_sizer</code> <code class=\"ANY\">=</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">BoxSizer</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">panel_sizer</code> <code class=\"ANY\">=</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">BoxSizer</code><code class=\"ANY\">(</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">VERTICAL</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">top_sizer</code> <code class=\"ANY\">=</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">BoxSizer</code><code class=\"ANY\">(</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">HORIZONTAL</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">top_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Add</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_url_text</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">0</code><code class=\"ANY\">,</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ALIGN_BOTTOM</code> <code class=\"ANY\">|</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">BOTTOM</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">5</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">top_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">AddSpacer</code><code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">,</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">1</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">top_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Add</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_settings_button</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">panel_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Add</code><code class=\"ANY\">(</code><code class=\"ANY\">top_sizer</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">0</code><code class=\"ANY\">,</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">EXPAND</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">panel_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Add</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_url_list</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">1</code><code class=\"ANY\">,</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">EXPAND</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">mid_sizer</code> <code class=\"ANY\">=</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">BoxSizer</code><code class=\"ANY\">(</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">HORIZONTAL</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">mid_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Add</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_folder_icon</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">mid_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">AddSpacer</code><code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"LITERAL\">3</code><code class=\"ANY\">,</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">mid_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Add</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_path_combobox</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">2</code><code class=\"ANY\">,</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ALIGN_CENTER_VERTICAL</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">mid_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">AddSpacer</code><code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"LITERAL\">5</code><code class=\"ANY\">,</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">mid_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Add</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_buttons</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"savepath\"</code><code class=\"ANY\">]</code><code class=\"ANY\">,</code> <code class=\"ANY\">flag</code><code class=\"ANY\">=</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ALIGN_CENTER_VERTICAL</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">mid_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">AddSpacer</code><code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"LITERAL\">10</code><code class=\"ANY\">,</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">1</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">mid_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Add</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_videoformat_combobox</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">1</code><code class=\"ANY\">,</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ALIGN_CENTER_VERTICAL</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">mid_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">AddSpacer</code><code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"LITERAL\">5</code><code class=\"ANY\">,</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">mid_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Add</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_buttons</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"add\"</code><code class=\"ANY\">]</code><code class=\"ANY\">,</code> <code class=\"ANY\">flag</code><code class=\"ANY\">=</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ALIGN_CENTER_VERTICAL</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">panel_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Add</code><code class=\"ANY\">(</code><code class=\"ANY\">mid_sizer</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">0</code><code class=\"ANY\">,</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">EXPAND</code> <code class=\"ANY\">|</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ALL</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">10</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">panel_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Add</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_download_text</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">0</code><code class=\"ANY\">,</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">BOTTOM</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">5</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">panel_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Add</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">2</code><code class=\"ANY\">,</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">EXPAND</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">bottom_sizer</code> <code class=\"ANY\">=</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">BoxSizer</code><code class=\"ANY\">(</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">HORIZONTAL</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">bottom_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Add</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_buttons</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"delete\"</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">bottom_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">AddSpacer</code><code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"LITERAL\">5</code><code class=\"ANY\">,</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">bottom_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Add</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_buttons</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"play\"</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">bottom_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">AddSpacer</code><code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"LITERAL\">5</code><code class=\"ANY\">,</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">bottom_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Add</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_buttons</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"up\"</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">bottom_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">AddSpacer</code><code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"LITERAL\">5</code><code class=\"ANY\">,</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">bottom_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Add</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_buttons</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"down\"</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">bottom_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">AddSpacer</code><code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"LITERAL\">5</code><code class=\"ANY\">,</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">bottom_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Add</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_buttons</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"reload\"</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">bottom_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">AddSpacer</code><code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"LITERAL\">5</code><code class=\"ANY\">,</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">bottom_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Add</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_buttons</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"pause\"</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">bottom_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">AddSpacer</code><code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"LITERAL\">10</code><code class=\"ANY\">,</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">1</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">bottom_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Add</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_buttons</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"start\"</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">panel_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Add</code><code class=\"ANY\">(</code><code class=\"ANY\">bottom_sizer</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">0</code><code class=\"ANY\">,</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">EXPAND</code> <code class=\"ANY\">|</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">TOP</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">5</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">main_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Add</code><code class=\"ANY\">(</code><code class=\"ANY\">panel_sizer</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">1</code><code class=\"ANY\">,</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ALL</code> <code class=\"ANY\">|</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">EXPAND</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">10</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_panel</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetSizer</code><code class=\"ANY\">(</code><code class=\"ANY\">main_sizer</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_panel</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Layout</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_update_youtubedl</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Update youtube-dl binary to the latest version. \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">download_manager</code> <code class=\"KEYWORD\">is</code> <code class=\"KEYWORD\">not</code> <code class=\"KEYWORD\">None</code> <code class=\"KEYWORD\">and</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">download_manager</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">is_alive</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_create_popup</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">DOWNLOAD_ACTIVE</code><code class=\"ANY\">,</code>\n                               <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">WARNING_LABEL</code><code class=\"ANY\">,</code>\n                               <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">OK</code> <code class=\"ANY\">|</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ICON_EXCLAMATION</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">elif</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">update_thread</code> <code class=\"KEYWORD\">is</code> <code class=\"KEYWORD\">not</code> <code class=\"KEYWORD\">None</code> <code class=\"KEYWORD\">and</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">update_thread</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">is_alive</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_create_popup</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">UPDATE_ACTIVE</code><code class=\"ANY\">,</code>\n                               <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">INFO_LABEL</code><code class=\"ANY\">,</code>\n                               <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">OK</code> <code class=\"ANY\">|</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ICON_INFORMATION</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">update_thread</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">UpdateThread</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">opt_manager</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">options</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">'youtubedl_path'</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_status_bar_write</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">msg</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Display msg in the status bar. \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_bar</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetStatusText</code><code class=\"ANY\">(</code><code class=\"ANY\">msg</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_reset_widgets</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Resets GUI widgets after update or download process. \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_buttons</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"start\"</code><code class=\"ANY\">]</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetLabel</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Start\"</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_buttons</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"start\"</code><code class=\"ANY\">]</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetToolTip</code><code class=\"ANY\">(</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">ToolTip</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Start\"</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_buttons</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"start\"</code><code class=\"ANY\">]</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetBitmap</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_bitmaps</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"start\"</code><code class=\"ANY\">]</code><code class=\"ANY\">,</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">TOP</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_print_stats</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Display download stats in the status bar. \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">suc_downloads</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">download_manager</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">successful</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">dtime</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">get_time</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">download_manager</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">time_it_took</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">msg</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">SUCC_REPORT_MSG</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">format</code><code class=\"ANY\">(</code><code class=\"ANY\">suc_downloads</code><code class=\"ANY\">,</code>\n                                          <code class=\"ANY\">dtime</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">'days'</code><code class=\"ANY\">]</code><code class=\"ANY\">,</code>\n                                          <code class=\"ANY\">dtime</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">'hours'</code><code class=\"ANY\">]</code><code class=\"ANY\">,</code>\n                                          <code class=\"ANY\">dtime</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">'minutes'</code><code class=\"ANY\">]</code><code class=\"ANY\">,</code>\n                                          <code class=\"ANY\">dtime</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">'seconds'</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_status_bar_write</code><code class=\"ANY\">(</code><code class=\"ANY\">msg</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_after_download</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Run tasks after download process has been completed.\n\n        Note:\n            Here you can add any tasks you want to run after the\n            download process has been completed.\n\n        \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">opt_manager</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">options</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">'shutdown'</code><code class=\"ANY\">]</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">dlg</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">ShutdownDialog</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">60</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Shutting down in {0} second(s)\"</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Shutdown\"</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">result</code> <code class=\"ANY\">=</code> <code class=\"ANY\">dlg</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">ShowModal</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ID_OK</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">dlg</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Destroy</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">result</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">opt_manager</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">save_to_file</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n               <code class=\"ANY\"> </code><code class=\"ANY\">success</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">shutdown_sys</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">opt_manager</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">options</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">'sudo_password'</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n\n               <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">success</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                    </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_status_bar_write</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">SHUTDOWN_MSG</code><code class=\"ANY\">)</code>\n               <code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                    </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_status_bar_write</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">SHUTDOWN_ERR</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">opt_manager</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">options</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"show_completion_popup\"</code><code class=\"ANY\">]</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_create_popup</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">DL_COMPLETED_MSG</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">INFO_LABEL</code><code class=\"ANY\">,</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">OK</code> <code class=\"ANY\">|</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ICON_INFORMATION</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_download_worker_handler</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">msg</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"downloadmanager.Worker thread handler.\n\n        Handles messages from the Worker thread.\n\n        Args:\n            See downloadmanager.Worker _talk_to_gui() method.\n\n        \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">signal</code><code class=\"ANY\">,</code> <code class=\"ANY\">data</code> <code class=\"ANY\">=</code> <code class=\"ANY\">msg</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">data</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">download_item</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_download_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get_item</code><code class=\"ANY\">(</code><code class=\"ANY\">data</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"index\"</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">download_item</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">update_stats</code><code class=\"ANY\">(</code><code class=\"ANY\">data</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">row</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_download_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">index</code><code class=\"ANY\">(</code><code class=\"ANY\">data</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"index\"</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_update_from_item</code><code class=\"ANY\">(</code><code class=\"ANY\">row</code><code class=\"ANY\">,</code> <code class=\"ANY\">download_item</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_download_manager_handler</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">msg</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"downloadmanager.DownloadManager thread handler.\n\n        Handles messages from the DownloadManager thread.\n\n        Args:\n            See downloadmanager.DownloadManager _talk_to_gui() method.\n\n        \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">data</code> <code class=\"ANY\">=</code> <code class=\"ANY\">msg</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">data</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">data</code> <code class=\"ANY\">==</code> <code class=\"CHAR_STRING_LITERAL\">'finished'</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_print_stats</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_reset_widgets</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">download_manager</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">None</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_app_timer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Stop</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_after_download</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">elif</code> <code class=\"ANY\">data</code> <code class=\"ANY\">==</code> <code class=\"CHAR_STRING_LITERAL\">'closed'</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_status_bar_write</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">CLOSED_MSG</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_reset_widgets</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">download_manager</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">None</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_app_timer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Stop</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">elif</code> <code class=\"ANY\">data</code> <code class=\"ANY\">==</code> <code class=\"CHAR_STRING_LITERAL\">'closing'</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_status_bar_write</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">CLOSING_MSG</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">elif</code> <code class=\"ANY\">data</code> <code class=\"ANY\">==</code> <code class=\"CHAR_STRING_LITERAL\">'report_active'</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"KEYWORD\">pass</code>\n           <code class=\"ANY\"> </code><code class=\"COMMENT\">#NOTE Remove from here and downloadmanager</code>\n           <code class=\"ANY\"> </code><code class=\"COMMENT\">#since now we have the wx.Timer to check progress</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_update_handler</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">msg</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"updatemanager.UpdateThread thread handler.\n\n        Handles messages from the UpdateThread thread.\n\n        Args:\n            See updatemanager.UpdateThread _talk_to_gui() method.\n\n        \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">data</code> <code class=\"ANY\">=</code> <code class=\"ANY\">msg</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">data</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">data</code><code class=\"ANY\">[</code><code class=\"LITERAL\">0</code><code class=\"ANY\">]</code> <code class=\"ANY\">==</code> <code class=\"CHAR_STRING_LITERAL\">'download'</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_status_bar_write</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">UPDATING_MSG</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">elif</code> <code class=\"ANY\">data</code><code class=\"ANY\">[</code><code class=\"LITERAL\">0</code><code class=\"ANY\">]</code> <code class=\"ANY\">==</code> <code class=\"CHAR_STRING_LITERAL\">'error'</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_status_bar_write</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">UPDATE_ERR_MSG</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">format</code><code class=\"ANY\">(</code><code class=\"ANY\">data</code><code class=\"ANY\">[</code><code class=\"LITERAL\">1</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">elif</code> <code class=\"ANY\">data</code><code class=\"ANY\">[</code><code class=\"LITERAL\">0</code><code class=\"ANY\">]</code> <code class=\"ANY\">==</code> <code class=\"CHAR_STRING_LITERAL\">'correct'</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_status_bar_write</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">UPDATE_SUCC_MSG</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_reset_widgets</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">update_thread</code> <code class=\"ANY\">=</code> <code class=\"KEYWORD\">None</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_get_urls</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Returns urls list. \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">[</code><code class=\"ANY\">line</code> <code class=\"KEYWORD\">for</code> <code class=\"ANY\">line</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_url_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">GetValue</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">split</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">'\\n'</code><code class=\"ANY\">)</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">line</code><code class=\"ANY\">]</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_start_download</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_status_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">is_empty</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_create_popup</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"No items to download\"</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code>\n                               <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">WARNING_LABEL</code><code class=\"ANY\">,</code>\n                               <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">OK</code> <code class=\"ANY\">|</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ICON_EXCLAMATION</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_app_timer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Start</code><code class=\"ANY\">(</code><code class=\"LITERAL\">100</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">download_manager</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">DownloadManager</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_download_list</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">opt_manager</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">log_manager</code><code class=\"ANY\">)</code>\n\n           <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_status_bar_write</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">DOWNLOAD_STARTED</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_buttons</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"start\"</code><code class=\"ANY\">]</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetLabel</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">STOP_LABEL</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_buttons</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"start\"</code><code class=\"ANY\">]</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetToolTip</code><code class=\"ANY\">(</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">ToolTip</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">STOP_LABEL</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_buttons</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"start\"</code><code class=\"ANY\">]</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetBitmap</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_bitmaps</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"stop\"</code><code class=\"ANY\">]</code><code class=\"ANY\">,</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">TOP</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_paste_from_clipboard</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Paste the content of the clipboard to the self._url_list widget.\n        It also adds a new line at the end of the data if not exist.\n\n        \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"KEYWORD\">not</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">TheClipboard</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">IsOpened</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n\n<code class=\"ANY\">            </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">TheClipboard</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Open</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">TheClipboard</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">IsSupported</code><code class=\"ANY\">(</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">DataFormat</code><code class=\"ANY\">(</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">DF_TEXT</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n\n<code class=\"ANY\">                    </code><code class=\"ANY\">data</code> <code class=\"ANY\">=</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">TextDataObject</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n                   <code class=\"ANY\"> </code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">TheClipboard</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">GetData</code><code class=\"ANY\">(</code><code class=\"ANY\">data</code><code class=\"ANY\">)</code>\n\n                   <code class=\"ANY\"> </code><code class=\"ANY\">data</code> <code class=\"ANY\">=</code> <code class=\"ANY\">data</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">GetText</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n                   <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">data</code><code class=\"ANY\">[</code><code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">]</code> <code class=\"ANY\">!=</code> <code class=\"CHAR_STRING_LITERAL\">'\\n'</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                        </code><code class=\"ANY\">data</code> <code class=\"ANY\">+=</code> <code class=\"CHAR_STRING_LITERAL\">'\\n'</code>\n\n                   <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_url_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">WriteText</code><code class=\"ANY\">(</code><code class=\"ANY\">data</code><code class=\"ANY\">)</code>\n\n               <code class=\"ANY\"> </code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">TheClipboard</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Close</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_on_urllist_edit</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">event</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Event handler of the self._url_list widget.\n\n        This method is triggered when the users pastes text into\n        the URLs list either by using CTRL+V or by using the middle\n        click of the mouse.\n\n        \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">event</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">GetEventType</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">EVT_TEXT_PASTE</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">typeId</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_paste_from_clipboard</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">TheClipboard</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">UsePrimarySelection</code><code class=\"ANY\">(</code><code class=\"LITERAL\">True</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_paste_from_clipboard</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">TheClipboard</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">UsePrimarySelection</code><code class=\"ANY\">(</code><code class=\"LITERAL\">False</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_on_update</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">event</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Event handler of the self._update_btn widget.\n\n        This method is used when the update button is pressed to start\n        the update process.\n\n        Note:\n            Currently there is not way to stop the update process.\n\n        \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">opt_manager</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">options</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"disable_update\"</code><code class=\"ANY\">]</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_create_popup</code><code class=\"ANY\">(</code><code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Updates are disabled for your system. Please use the system's package manager to update youtube-dl.\"</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code>\n                               <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">INFO_LABEL</code><code class=\"ANY\">,</code>\n                               <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">OK</code> <code class=\"ANY\">|</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ICON_INFORMATION</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_update_youtubedl</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_on_options</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">event</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Event handler of the self._options_btn widget.\n\n        This method is used when the options button is pressed to show\n        the options window.\n\n        \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_options_frame</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">load_all_options</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_options_frame</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Show</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_on_close</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">event</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Event handler for the wx.EVT_CLOSE event.\n\n        This method is used when the user tries to close the program\n        to save the options and make sure that the download & update\n        processes are not running.\n\n        \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">opt_manager</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">options</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"confirm_exit\"</code><code class=\"ANY\">]</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">dlg</code> <code class=\"ANY\">=</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">MessageDialog</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Are you sure you want to exit?\"</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Exit\"</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">YES_NO</code> <code class=\"ANY\">|</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ICON_QUESTION</code><code class=\"ANY\">)</code>\n\n           <code class=\"ANY\"> </code><code class=\"ANY\">result</code> <code class=\"ANY\">=</code> <code class=\"ANY\">dlg</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">ShowModal</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ID_YES</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">dlg</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Destroy</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">result</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">True</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">result</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">close</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">close</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">download_manager</code> <code class=\"KEYWORD\">is</code> <code class=\"KEYWORD\">not</code> <code class=\"KEYWORD\">None</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">download_manager</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">stop_downloads</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">download_manager</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">join</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">update_thread</code> <code class=\"KEYWORD\">is</code> <code class=\"KEYWORD\">not</code> <code class=\"KEYWORD\">None</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">update_thread</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">join</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># Store main-options frame size</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">opt_manager</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">options</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">'main_win_size'</code><code class=\"ANY\">]</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">GetSize</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">opt_manager</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">options</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">'opts_win_size'</code><code class=\"ANY\">]</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_options_frame</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">GetSize</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">opt_manager</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">options</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"save_path_dirs\"</code><code class=\"ANY\">]</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_path_combobox</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">GetStrings</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_options_frame</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">save_all_options</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">opt_manager</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">save_to_file</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Destroy</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">ListCtrl</code><code class=\"ANY\">(</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ListCtrl</code><code class=\"ANY\">,</code> <code class=\"ANY\">ListCtrlAutoWidthMixin</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n\n<code class=\"ANY\">    </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Custom ListCtrl widget.\n\n    Args:\n        columns (dict): See MainFrame class STATUSLIST_COLUMNS attribute.\n\n    \"\"\"</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">__init__</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">columns</code><code class=\"ANY\">,</code> <code class=\"ANY\">*</code><code class=\"ANY\">args</code><code class=\"ANY\">,</code> <code class=\"ANY\">**</code><code class=\"ANY\">kwargs</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"FUNCTION_IDENTIFIER\">super</code><code class=\"ANY\">(</code><code class=\"ANY\">ListCtrl</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">__init__</code><code class=\"ANY\">(</code><code class=\"ANY\">*</code><code class=\"ANY\">args</code><code class=\"ANY\">,</code> <code class=\"ANY\">**</code><code class=\"ANY\">kwargs</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">ListCtrlAutoWidthMixin</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">__init__</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">columns</code> <code class=\"ANY\">=</code> <code class=\"ANY\">columns</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_list_index</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">0</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_url_list</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">set</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_set_columns</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">remove_row</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">row_number</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">DeleteItem</code><code class=\"ANY\">(</code><code class=\"ANY\">row_number</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_list_index</code> <code class=\"ANY\">-=</code> <code class=\"LITERAL\">1</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">move_item_up</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">row_number</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_move_item</code><code class=\"ANY\">(</code><code class=\"ANY\">row_number</code><code class=\"ANY\">,</code> <code class=\"ANY\">row_number</code> <code class=\"ANY\">-</code> <code class=\"LITERAL\">1</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">move_item_down</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">row_number</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_move_item</code><code class=\"ANY\">(</code><code class=\"ANY\">row_number</code><code class=\"ANY\">,</code> <code class=\"ANY\">row_number</code> <code class=\"ANY\">+</code> <code class=\"LITERAL\">1</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_move_item</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">cur_row</code><code class=\"ANY\">,</code> <code class=\"ANY\">new_row</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Freeze</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">item</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">GetItem</code><code class=\"ANY\">(</code><code class=\"ANY\">cur_row</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">DeleteItem</code><code class=\"ANY\">(</code><code class=\"ANY\">cur_row</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">item</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetId</code><code class=\"ANY\">(</code><code class=\"ANY\">new_row</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">InsertItem</code><code class=\"ANY\">(</code><code class=\"ANY\">item</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Select</code><code class=\"ANY\">(</code><code class=\"ANY\">new_row</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Thaw</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">has_url</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">url</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Returns True if the url is aleady in the ListCtrl else False.\n\n        Args:\n            url (string): URL string.\n\n        \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">url</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_url_list</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">bind_item</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">download_item</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">InsertStringItem</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_list_index</code><code class=\"ANY\">,</code> <code class=\"ANY\">download_item</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">url</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetItemData</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_list_index</code><code class=\"ANY\">,</code> <code class=\"ANY\">download_item</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">object_id</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_update_from_item</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_list_index</code><code class=\"ANY\">,</code> <code class=\"ANY\">download_item</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_list_index</code> <code class=\"ANY\">+=</code> <code class=\"LITERAL\">1</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_update_from_item</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">row</code><code class=\"ANY\">,</code> <code class=\"ANY\">download_item</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">progress_stats</code> <code class=\"ANY\">=</code> <code class=\"ANY\">download_item</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">progress_stats</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">key</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">columns</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">column</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">columns</code><code class=\"ANY\">[</code><code class=\"ANY\">key</code><code class=\"ANY\">]</code><code class=\"ANY\">[</code><code class=\"LITERAL\">0</code><code class=\"ANY\">]</code>\n\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">key</code> <code class=\"ANY\">==</code> <code class=\"CHAR_STRING_LITERAL\">\"status\"</code> <code class=\"KEYWORD\">and</code> <code class=\"ANY\">progress_stats</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"playlist_index\"</code><code class=\"ANY\">]</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"COMMENT\"># Not the best place but we build the playlist status here</code>\n               <code class=\"ANY\"> </code><code class=\"ANY\">status</code> <code class=\"ANY\">=</code> <code class=\"CHAR_STRING_LITERAL\">\"{0} {1}/{2}\"</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">format</code><code class=\"ANY\">(</code><code class=\"ANY\">progress_stats</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"status\"</code><code class=\"ANY\">]</code><code class=\"ANY\">,</code>\n                                              <code class=\"ANY\">progress_stats</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"playlist_index\"</code><code class=\"ANY\">]</code><code class=\"ANY\">,</code>\n                                              <code class=\"ANY\">progress_stats</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"playlist_size\"</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n\n               <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetStringItem</code><code class=\"ANY\">(</code><code class=\"ANY\">row</code><code class=\"ANY\">,</code> <code class=\"ANY\">column</code><code class=\"ANY\">,</code> <code class=\"ANY\">status</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetStringItem</code><code class=\"ANY\">(</code><code class=\"ANY\">row</code><code class=\"ANY\">,</code> <code class=\"ANY\">column</code><code class=\"ANY\">,</code> <code class=\"ANY\">progress_stats</code><code class=\"ANY\">[</code><code class=\"ANY\">key</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">clear</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Clear the ListCtrl widget & reset self._list_index and\n        self._url_list. \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">DeleteAllItems</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_list_index</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">0</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_url_list</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">set</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">is_empty</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Returns True if the list is empty else False. \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_list_index</code> <code class=\"ANY\">==</code> <code class=\"LITERAL\">0</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">get_selected</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">GetNextItem</code><code class=\"ANY\">(</code><code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">,</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">LIST_NEXT_ALL</code><code class=\"ANY\">,</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">LIST_STATE_SELECTED</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">get_all_selected</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">[</code><code class=\"ANY\">index</code> <code class=\"KEYWORD\">for</code> <code class=\"ANY\">index</code> <code class=\"KEYWORD\">in</code> <code class=\"FUNCTION_IDENTIFIER\">xrange</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_list_index</code><code class=\"ANY\">)</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">IsSelected</code><code class=\"ANY\">(</code><code class=\"ANY\">index</code><code class=\"ANY\">)</code><code class=\"ANY\">]</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">deselect_all</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">index</code> <code class=\"KEYWORD\">in</code> <code class=\"FUNCTION_IDENTIFIER\">xrange</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_list_index</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Select</code><code class=\"ANY\">(</code><code class=\"ANY\">index</code><code class=\"ANY\">,</code> <code class=\"ANY\">on</code><code class=\"ANY\">=</code><code class=\"LITERAL\">0</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">get_next_selected</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">start</code><code class=\"ANY\">=</code><code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">,</code> <code class=\"ANY\">reverse</code><code class=\"ANY\">=</code><code class=\"LITERAL\">False</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">start</code> <code class=\"ANY\">==</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">start</code> <code class=\"ANY\">=</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_list_index</code> <code class=\"ANY\">-</code> <code class=\"LITERAL\">1</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">reverse</code> <code class=\"KEYWORD\">else</code> <code class=\"LITERAL\">0</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"COMMENT\"># start from next item</code>\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">reverse</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">start</code> <code class=\"ANY\">-=</code> <code class=\"LITERAL\">1</code>\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">start</code> <code class=\"ANY\">+=</code> <code class=\"LITERAL\">1</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">end</code> <code class=\"ANY\">=</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">reverse</code> <code class=\"KEYWORD\">else</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_list_index</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">step</code> <code class=\"ANY\">=</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">reverse</code> <code class=\"KEYWORD\">else</code> <code class=\"LITERAL\">1</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">index</code> <code class=\"KEYWORD\">in</code> <code class=\"FUNCTION_IDENTIFIER\">xrange</code><code class=\"ANY\">(</code><code class=\"ANY\">start</code><code class=\"ANY\">,</code> <code class=\"ANY\">end</code><code class=\"ANY\">,</code> <code class=\"ANY\">step</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">IsSelected</code><code class=\"ANY\">(</code><code class=\"ANY\">index</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">index</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_set_columns</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Initializes ListCtrl columns.\n        See MainFrame STATUSLIST_COLUMNS attribute for more info. \"\"\"</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">column_item</code> <code class=\"KEYWORD\">in</code> <code class=\"FUNCTION_IDENTIFIER\">sorted</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">columns</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">values</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">InsertColumn</code><code class=\"ANY\">(</code><code class=\"ANY\">column_item</code><code class=\"ANY\">[</code><code class=\"LITERAL\">0</code><code class=\"ANY\">]</code><code class=\"ANY\">,</code> <code class=\"ANY\">column_item</code><code class=\"ANY\">[</code><code class=\"LITERAL\">1</code><code class=\"ANY\">]</code><code class=\"ANY\">,</code> <code class=\"ANY\">width</code><code class=\"ANY\">=</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">LIST_AUTOSIZE_USEHEADER</code><code class=\"ANY\">)</code>\n\n           <code class=\"ANY\"> </code><code class=\"COMMENT\"># If the column width obtained from wxLIST_AUTOSIZE_USEHEADER</code>\n           <code class=\"ANY\"> </code><code class=\"COMMENT\"># is smaller than the minimum allowed column width</code>\n           <code class=\"ANY\"> </code><code class=\"COMMENT\"># then set the column width to the minumum allowed size</code>\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">GetColumnWidth</code><code class=\"ANY\">(</code><code class=\"ANY\">column_item</code><code class=\"ANY\">[</code><code class=\"LITERAL\">0</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code> <code class=\"ANY\"><</code> <code class=\"ANY\">column_item</code><code class=\"ANY\">[</code><code class=\"LITERAL\">2</code><code class=\"ANY\">]</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetColumnWidth</code><code class=\"ANY\">(</code><code class=\"ANY\">column_item</code><code class=\"ANY\">[</code><code class=\"LITERAL\">0</code><code class=\"ANY\">]</code><code class=\"ANY\">,</code> <code class=\"ANY\">column_item</code><code class=\"ANY\">[</code><code class=\"LITERAL\">2</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n\n           <code class=\"ANY\"> </code><code class=\"COMMENT\"># Set auto-resize if enabled</code>\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">column_item</code><code class=\"ANY\">[</code><code class=\"LITERAL\">3</code><code class=\"ANY\">]</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">setResizeColumn</code><code class=\"ANY\">(</code><code class=\"ANY\">column_item</code><code class=\"ANY\">[</code><code class=\"LITERAL\">0</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n<code class=\"ANY\">\n</code><code class=\"COMMENT\"># REFACTOR Extra widgets below should move to other module with widgets</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">ExtComboBox</code><code class=\"ANY\">(</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ComboBox</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n\n<code class=\"ANY\">    </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">__init__</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">parent</code><code class=\"ANY\">,</code> <code class=\"ANY\">max_items</code><code class=\"ANY\">=</code><code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">,</code> <code class=\"ANY\">*</code><code class=\"ANY\">args</code><code class=\"ANY\">,</code> <code class=\"ANY\">**</code><code class=\"ANY\">kwargs</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"FUNCTION_IDENTIFIER\">super</code><code class=\"ANY\">(</code><code class=\"ANY\">ExtComboBox</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">__init__</code><code class=\"ANY\">(</code><code class=\"ANY\">parent</code><code class=\"ANY\">,</code> <code class=\"ANY\">*</code><code class=\"ANY\">args</code><code class=\"ANY\">,</code> <code class=\"ANY\">**</code><code class=\"ANY\">kwargs</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">assert</code> <code class=\"ANY\">max_items</code> <code class=\"ANY\">></code> <code class=\"LITERAL\">0</code> <code class=\"KEYWORD\">or</code> <code class=\"ANY\">max_items</code> <code class=\"ANY\">==</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">max_items</code> <code class=\"ANY\">=</code> <code class=\"ANY\">max_items</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">Append</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">new_value</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">FindString</code><code class=\"ANY\">(</code><code class=\"ANY\">new_value</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">NOT_FOUND</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"FUNCTION_IDENTIFIER\">super</code><code class=\"ANY\">(</code><code class=\"ANY\">ExtComboBox</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Append</code><code class=\"ANY\">(</code><code class=\"ANY\">new_value</code><code class=\"ANY\">)</code>\n\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">max_items</code> <code class=\"ANY\">!=</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code> <code class=\"KEYWORD\">and</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">GetCount</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code> <code class=\"ANY\">></code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">max_items</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetItems</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">GetStrings</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">[</code><code class=\"LITERAL\">1</code><code class=\"ANY\">:</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">SetValue</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">new_value</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">FindString</code><code class=\"ANY\">(</code><code class=\"ANY\">new_value</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">NOT_FOUND</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Append</code><code class=\"ANY\">(</code><code class=\"ANY\">new_value</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetSelection</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">FindString</code><code class=\"ANY\">(</code><code class=\"ANY\">new_value</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">LoadMultiple</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">items_list</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">item</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">items_list</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Append</code><code class=\"ANY\">(</code><code class=\"ANY\">item</code><code class=\"ANY\">)</code>\n\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">DoubleStageButton</code><code class=\"ANY\">(</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">Button</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n\n<code class=\"ANY\">    </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">__init__</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">parent</code><code class=\"ANY\">,</code> <code class=\"ANY\">labels</code><code class=\"ANY\">,</code> <code class=\"ANY\">bitmaps</code><code class=\"ANY\">,</code> <code class=\"ANY\">bitmap_pos</code><code class=\"ANY\">=</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">TOP</code><code class=\"ANY\">,</code> <code class=\"ANY\">*</code><code class=\"ANY\">args</code><code class=\"ANY\">,</code> <code class=\"ANY\">**</code><code class=\"ANY\">kwargs</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"FUNCTION_IDENTIFIER\">super</code><code class=\"ANY\">(</code><code class=\"ANY\">DoubleStageButton</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">__init__</code><code class=\"ANY\">(</code><code class=\"ANY\">parent</code><code class=\"ANY\">,</code> <code class=\"ANY\">*</code><code class=\"ANY\">args</code><code class=\"ANY\">,</code> <code class=\"ANY\">**</code><code class=\"ANY\">kwargs</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">assert</code> <code class=\"FUNCTION_IDENTIFIER\">isinstance</code><code class=\"ANY\">(</code><code class=\"ANY\">labels</code><code class=\"ANY\">,</code> <code class=\"ANY\">tuple</code><code class=\"ANY\">)</code> <code class=\"KEYWORD\">and</code> <code class=\"FUNCTION_IDENTIFIER\">isinstance</code><code class=\"ANY\">(</code><code class=\"ANY\">bitmaps</code><code class=\"ANY\">,</code> <code class=\"ANY\">tuple</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">assert</code> <code class=\"FUNCTION_IDENTIFIER\">len</code><code class=\"ANY\">(</code><code class=\"ANY\">labels</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"LITERAL\">2</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">assert</code> <code class=\"FUNCTION_IDENTIFIER\">len</code><code class=\"ANY\">(</code><code class=\"ANY\">bitmaps</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"LITERAL\">0</code> <code class=\"KEYWORD\">or</code> <code class=\"FUNCTION_IDENTIFIER\">len</code><code class=\"ANY\">(</code><code class=\"ANY\">bitmaps</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"LITERAL\">2</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">labels</code> <code class=\"ANY\">=</code> <code class=\"ANY\">labels</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">bitmaps</code> <code class=\"ANY\">=</code> <code class=\"ANY\">bitmaps</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">bitmap_pos</code> <code class=\"ANY\">=</code> <code class=\"ANY\">bitmap_pos</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_stage</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">0</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_set_layout</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_set_layout</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetLabel</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">labels</code><code class=\"ANY\">[</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_stage</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"FUNCTION_IDENTIFIER\">len</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">bitmaps</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetBitmap</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">bitmaps</code><code class=\"ANY\">[</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_stage</code><code class=\"ANY\">]</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">bitmap_pos</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">change_stage</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_stage</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">0</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_stage</code> <code class=\"KEYWORD\">else</code> <code class=\"LITERAL\">1</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_set_layout</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">set_stage</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">new_stage</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"KEYWORD\">assert</code> <code class=\"ANY\">new_stage</code> <code class=\"ANY\">==</code> <code class=\"LITERAL\">0</code> <code class=\"KEYWORD\">or</code> <code class=\"ANY\">new_stage</code> <code class=\"ANY\">==</code> <code class=\"LITERAL\">1</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_stage</code> <code class=\"ANY\">=</code> <code class=\"ANY\">new_stage</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_set_layout</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">ButtonsChoiceDialog</code><code class=\"ANY\">(</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">Dialog</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n\n<code class=\"ANY\">    </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">os</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">name</code> <code class=\"ANY\">==</code> <code class=\"CHAR_STRING_LITERAL\">\"nt\"</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">STYLE</code> <code class=\"ANY\">=</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">DEFAULT_DIALOG_STYLE</code>\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">STYLE</code> <code class=\"ANY\">=</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">DEFAULT_DIALOG_STYLE</code> <code class=\"ANY\">|</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">MAXIMIZE_BOX</code>\n\n   <code class=\"ANY\"> </code><code class=\"ANY\">BORDER</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">10</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">__init__</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">parent</code><code class=\"ANY\">,</code> <code class=\"ANY\">choices</code><code class=\"ANY\">,</code> <code class=\"ANY\">message</code><code class=\"ANY\">,</code> <code class=\"ANY\">*</code><code class=\"ANY\">args</code><code class=\"ANY\">,</code> <code class=\"ANY\">**</code><code class=\"ANY\">kwargs</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"FUNCTION_IDENTIFIER\">super</code><code class=\"ANY\">(</code><code class=\"ANY\">ButtonsChoiceDialog</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">__init__</code><code class=\"ANY\">(</code><code class=\"ANY\">parent</code><code class=\"ANY\">,</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ID_ANY</code><code class=\"ANY\">,</code> <code class=\"ANY\">*</code><code class=\"ANY\">args</code><code class=\"ANY\">,</code> <code class=\"ANY\">style</code><code class=\"ANY\">=</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">STYLE</code><code class=\"ANY\">,</code> <code class=\"ANY\">**</code><code class=\"ANY\">kwargs</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">buttons</code> <code class=\"ANY\">=</code> <code class=\"ANY\">[</code><code class=\"ANY\">]</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># Create components</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">panel</code> <code class=\"ANY\">=</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Panel</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">info_bmp</code> <code class=\"ANY\">=</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ArtProvider</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">GetBitmap</code><code class=\"ANY\">(</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ART_INFORMATION</code><code class=\"ANY\">,</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ART_MESSAGE_BOX</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">info_icon</code> <code class=\"ANY\">=</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">StaticBitmap</code><code class=\"ANY\">(</code><code class=\"ANY\">panel</code><code class=\"ANY\">,</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ID_ANY</code><code class=\"ANY\">,</code> <code class=\"ANY\">info_bmp</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">msg_text</code> <code class=\"ANY\">=</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">StaticText</code><code class=\"ANY\">(</code><code class=\"ANY\">panel</code><code class=\"ANY\">,</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ID_ANY</code><code class=\"ANY\">,</code> <code class=\"ANY\">message</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">buttons</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">append</code><code class=\"ANY\">(</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Button</code><code class=\"ANY\">(</code><code class=\"ANY\">panel</code><code class=\"ANY\">,</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ID_CANCEL</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Cancel\"</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">index</code><code class=\"ANY\">,</code> <code class=\"ANY\">label</code> <code class=\"KEYWORD\">in</code> <code class=\"FUNCTION_IDENTIFIER\">enumerate</code><code class=\"ANY\">(</code><code class=\"ANY\">choices</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">buttons</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">append</code><code class=\"ANY\">(</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Button</code><code class=\"ANY\">(</code><code class=\"ANY\">panel</code><code class=\"ANY\">,</code> <code class=\"ANY\">index</code> <code class=\"ANY\">+</code> <code class=\"LITERAL\">1</code><code class=\"ANY\">,</code> <code class=\"ANY\">label</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># Get the maximum button width & height</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">max_width</code> <code class=\"ANY\">=</code> <code class=\"ANY\">max_height</code> <code class=\"ANY\">=</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">button</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">buttons</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">button_width</code><code class=\"ANY\">,</code> <code class=\"ANY\">button_height</code> <code class=\"ANY\">=</code> <code class=\"ANY\">button</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">GetSize</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">button_width</code> <code class=\"ANY\">></code> <code class=\"ANY\">max_width</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">max_width</code> <code class=\"ANY\">=</code> <code class=\"ANY\">button_width</code>\n\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">button_height</code> <code class=\"ANY\">></code> <code class=\"ANY\">max_height</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">max_height</code> <code class=\"ANY\">=</code> <code class=\"ANY\">button_height</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">max_width</code> <code class=\"ANY\">+=</code> <code class=\"LITERAL\">10</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># Set buttons width & bind events</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">button</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">buttons</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">button</code> <code class=\"ANY\">!=</code> <code class=\"ANY\">buttons</code><code class=\"ANY\">[</code><code class=\"LITERAL\">0</code><code class=\"ANY\">]</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">button</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetMinSize</code><code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"ANY\">max_width</code><code class=\"ANY\">,</code> <code class=\"ANY\">max_height</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"COMMENT\"># On Close button change only the height</code>\n               <code class=\"ANY\"> </code><code class=\"ANY\">button</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetMinSize</code><code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">,</code> <code class=\"ANY\">max_height</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n\n           <code class=\"ANY\"> </code><code class=\"ANY\">button</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Bind</code><code class=\"ANY\">(</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">EVT_BUTTON</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_on_close</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># Set sizers</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">vertical_sizer</code> <code class=\"ANY\">=</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">BoxSizer</code><code class=\"ANY\">(</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">VERTICAL</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">message_sizer</code> <code class=\"ANY\">=</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">BoxSizer</code><code class=\"ANY\">(</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">HORIZONTAL</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">message_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Add</code><code class=\"ANY\">(</code><code class=\"ANY\">info_icon</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">message_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">AddSpacer</code><code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"LITERAL\">10</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">10</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">message_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Add</code><code class=\"ANY\">(</code><code class=\"ANY\">msg_text</code><code class=\"ANY\">,</code> <code class=\"ANY\">flag</code><code class=\"ANY\">=</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">EXPAND</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">vertical_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Add</code><code class=\"ANY\">(</code><code class=\"ANY\">message_sizer</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">1</code><code class=\"ANY\">,</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ALL</code><code class=\"ANY\">,</code> <code class=\"ANY\">border</code><code class=\"ANY\">=</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">BORDER</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">buttons_sizer</code> <code class=\"ANY\">=</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">BoxSizer</code><code class=\"ANY\">(</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">HORIZONTAL</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">button</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">buttons</code><code class=\"ANY\">[</code><code class=\"LITERAL\">1</code><code class=\"ANY\">:</code><code class=\"ANY\">]</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">buttons_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Add</code><code class=\"ANY\">(</code><code class=\"ANY\">button</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">buttons_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">AddSpacer</code><code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"LITERAL\">5</code><code class=\"ANY\">,</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">buttons_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">AddSpacer</code><code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">,</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">1</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">buttons_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Add</code><code class=\"ANY\">(</code><code class=\"ANY\">buttons</code><code class=\"ANY\">[</code><code class=\"LITERAL\">0</code><code class=\"ANY\">]</code><code class=\"ANY\">,</code> <code class=\"ANY\">flag</code><code class=\"ANY\">=</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ALIGN_RIGHT</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">vertical_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Add</code><code class=\"ANY\">(</code><code class=\"ANY\">buttons_sizer</code><code class=\"ANY\">,</code> <code class=\"ANY\">flag</code><code class=\"ANY\">=</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">EXPAND</code> <code class=\"ANY\">|</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ALL</code><code class=\"ANY\">,</code> <code class=\"ANY\">border</code><code class=\"ANY\">=</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">BORDER</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">panel</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetSizer</code><code class=\"ANY\">(</code><code class=\"ANY\">vertical_sizer</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">width</code><code class=\"ANY\">,</code> <code class=\"ANY\">height</code> <code class=\"ANY\">=</code> <code class=\"ANY\">panel</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">GetBestSize</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetSize</code><code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"ANY\">width</code><code class=\"ANY\">,</code> <code class=\"ANY\">height</code> <code class=\"ANY\">*</code> <code class=\"LITERAL\">1.3</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Center</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_on_close</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">event</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">EndModal</code><code class=\"ANY\">(</code><code class=\"ANY\">event</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">GetEventObject</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">GetId</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">ButtonsGroup</code><code class=\"ANY\">(</code><code class=\"ANY\">object</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n\n<code class=\"ANY\">    </code><code class=\"ANY\">WIDTH</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">0</code>\n   <code class=\"ANY\"> </code><code class=\"ANY\">HEIGHT</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">1</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">__init__</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">buttons_list</code><code class=\"ANY\">=</code><code class=\"KEYWORD\">None</code><code class=\"ANY\">,</code> <code class=\"ANY\">squared</code><code class=\"ANY\">=</code><code class=\"LITERAL\">False</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">buttons_list</code> <code class=\"KEYWORD\">is</code> <code class=\"KEYWORD\">None</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_buttons_list</code> <code class=\"ANY\">=</code> <code class=\"ANY\">[</code><code class=\"ANY\">]</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_buttons_list</code> <code class=\"ANY\">=</code> <code class=\"ANY\">buttons_list</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_squared</code> <code class=\"ANY\">=</code> <code class=\"ANY\">squared</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">set_size</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">size</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"KEYWORD\">assert</code> <code class=\"FUNCTION_IDENTIFIER\">len</code><code class=\"ANY\">(</code><code class=\"ANY\">size</code><code class=\"ANY\">)</code> <code class=\"ANY\">==</code> <code class=\"LITERAL\">2</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">width</code><code class=\"ANY\">,</code> <code class=\"ANY\">height</code> <code class=\"ANY\">=</code> <code class=\"ANY\">size</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">width</code> <code class=\"ANY\">==</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">button</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_buttons_list</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">cur_width</code> <code class=\"ANY\">=</code> <code class=\"ANY\">button</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">GetSize</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">[</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">WIDTH</code><code class=\"ANY\">]</code>\n\n               <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">cur_width</code> <code class=\"ANY\">></code> <code class=\"ANY\">width</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                    </code><code class=\"ANY\">width</code> <code class=\"ANY\">=</code> <code class=\"ANY\">cur_width</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">height</code> <code class=\"ANY\">==</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">button</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_buttons_list</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">cur_height</code> <code class=\"ANY\">=</code> <code class=\"ANY\">button</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">GetSize</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">[</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">HEIGHT</code><code class=\"ANY\">]</code>\n\n               <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">cur_height</code> <code class=\"ANY\">></code> <code class=\"ANY\">height</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                    </code><code class=\"ANY\">height</code> <code class=\"ANY\">=</code> <code class=\"ANY\">cur_height</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_squared</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">width</code> <code class=\"ANY\">=</code> <code class=\"ANY\">height</code> <code class=\"ANY\">=</code> <code class=\"ANY\">(</code><code class=\"ANY\">width</code> <code class=\"KEYWORD\">if</code> <code class=\"ANY\">width</code> <code class=\"ANY\">></code> <code class=\"ANY\">height</code> <code class=\"KEYWORD\">else</code> <code class=\"ANY\">height</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">button</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_buttons_list</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">button</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetMinSize</code><code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"ANY\">width</code><code class=\"ANY\">,</code> <code class=\"ANY\">height</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">create_sizer</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">orient</code><code class=\"ANY\">=</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">HORIZONTAL</code><code class=\"ANY\">,</code> <code class=\"ANY\">space</code><code class=\"ANY\">=</code><code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">box_sizer</code> <code class=\"ANY\">=</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">BoxSizer</code><code class=\"ANY\">(</code><code class=\"ANY\">orient</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">button</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_buttons_list</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">box_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Add</code><code class=\"ANY\">(</code><code class=\"ANY\">button</code><code class=\"ANY\">)</code>\n\n           <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">space</code> <code class=\"ANY\">!=</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">                </code><code class=\"ANY\">box_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">AddSpacer</code><code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"ANY\">space</code><code class=\"ANY\">,</code> <code class=\"ANY\">space</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">box_sizer</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">bind_event</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">event</code><code class=\"ANY\">,</code> <code class=\"ANY\">event_handler</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">button</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_buttons_list</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">button</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Bind</code><code class=\"ANY\">(</code><code class=\"ANY\">event</code><code class=\"ANY\">,</code> <code class=\"ANY\">event_handler</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">disable_all</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">button</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_buttons_list</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">button</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Enable</code><code class=\"ANY\">(</code><code class=\"LITERAL\">False</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">enable_all</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">button</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_buttons_list</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">button</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Enable</code><code class=\"ANY\">(</code><code class=\"LITERAL\">True</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">add</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">button</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_buttons_list</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">append</code><code class=\"ANY\">(</code><code class=\"ANY\">button</code><code class=\"ANY\">)</code>\n\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">ShutdownDialog</code><code class=\"ANY\">(</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">Dialog</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n\n<code class=\"ANY\">    </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">os</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">name</code> <code class=\"ANY\">==</code> <code class=\"CHAR_STRING_LITERAL\">\"nt\"</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">STYLE</code> <code class=\"ANY\">=</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">DEFAULT_DIALOG_STYLE</code>\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">else</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">STYLE</code> <code class=\"ANY\">=</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">DEFAULT_DIALOG_STYLE</code> <code class=\"ANY\">|</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">MAXIMIZE_BOX</code>\n\n   <code class=\"ANY\"> </code><code class=\"ANY\">TIMER_INTERVAL</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">1000</code>  <code class=\"COMMENT\"># milliseconds</code>\n\n   <code class=\"ANY\"> </code><code class=\"ANY\">BORDER</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">10</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">__init__</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">parent</code><code class=\"ANY\">,</code> <code class=\"ANY\">timeout</code><code class=\"ANY\">,</code> <code class=\"ANY\">message</code><code class=\"ANY\">,</code> <code class=\"ANY\">*</code><code class=\"ANY\">args</code><code class=\"ANY\">,</code> <code class=\"ANY\">**</code><code class=\"ANY\">kwargs</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"FUNCTION_IDENTIFIER\">super</code><code class=\"ANY\">(</code><code class=\"ANY\">ShutdownDialog</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">__init__</code><code class=\"ANY\">(</code><code class=\"ANY\">parent</code><code class=\"ANY\">,</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ID_ANY</code><code class=\"ANY\">,</code> <code class=\"ANY\">*</code><code class=\"ANY\">args</code><code class=\"ANY\">,</code> <code class=\"ANY\">style</code><code class=\"ANY\">=</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">STYLE</code><code class=\"ANY\">,</code> <code class=\"ANY\">**</code><code class=\"ANY\">kwargs</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">assert</code> <code class=\"ANY\">timeout</code> <code class=\"ANY\">></code> <code class=\"LITERAL\">0</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">timeout</code> <code class=\"ANY\">=</code> <code class=\"ANY\">timeout</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">message</code> <code class=\"ANY\">=</code> <code class=\"ANY\">message</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># Create components</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">panel</code> <code class=\"ANY\">=</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Panel</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">info_bmp</code> <code class=\"ANY\">=</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ArtProvider</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">GetBitmap</code><code class=\"ANY\">(</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ART_INFORMATION</code><code class=\"ANY\">,</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ART_MESSAGE_BOX</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">info_icon</code> <code class=\"ANY\">=</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">StaticBitmap</code><code class=\"ANY\">(</code><code class=\"ANY\">panel</code><code class=\"ANY\">,</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ID_ANY</code><code class=\"ANY\">,</code> <code class=\"ANY\">info_bmp</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">msg_text</code> <code class=\"ANY\">=</code> <code class=\"ANY\">msg_text</code> <code class=\"ANY\">=</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">StaticText</code><code class=\"ANY\">(</code><code class=\"ANY\">panel</code><code class=\"ANY\">,</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ID_ANY</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_get_message</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">ok_button</code> <code class=\"ANY\">=</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Button</code><code class=\"ANY\">(</code><code class=\"ANY\">panel</code><code class=\"ANY\">,</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ID_OK</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"OK\"</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">cancel_button</code> <code class=\"ANY\">=</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Button</code><code class=\"ANY\">(</code><code class=\"ANY\">panel</code><code class=\"ANY\">,</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ID_CANCEL</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">_</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"Cancel\"</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># Set layout</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">vertical_sizer</code> <code class=\"ANY\">=</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">BoxSizer</code><code class=\"ANY\">(</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">VERTICAL</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">message_sizer</code> <code class=\"ANY\">=</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">BoxSizer</code><code class=\"ANY\">(</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">HORIZONTAL</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">message_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Add</code><code class=\"ANY\">(</code><code class=\"ANY\">info_icon</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">message_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">AddSpacer</code><code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"LITERAL\">10</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">10</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">message_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Add</code><code class=\"ANY\">(</code><code class=\"ANY\">msg_text</code><code class=\"ANY\">,</code> <code class=\"ANY\">flag</code><code class=\"ANY\">=</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">EXPAND</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">vertical_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Add</code><code class=\"ANY\">(</code><code class=\"ANY\">message_sizer</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">1</code><code class=\"ANY\">,</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ALL</code><code class=\"ANY\">,</code> <code class=\"ANY\">border</code><code class=\"ANY\">=</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">BORDER</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">buttons_sizer</code> <code class=\"ANY\">=</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">BoxSizer</code><code class=\"ANY\">(</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">HORIZONTAL</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">buttons_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Add</code><code class=\"ANY\">(</code><code class=\"ANY\">ok_button</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">buttons_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">AddSpacer</code><code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"LITERAL\">5</code><code class=\"ANY\">,</code> <code class=\"ANY\">-</code><code class=\"LITERAL\">1</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">buttons_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Add</code><code class=\"ANY\">(</code><code class=\"ANY\">cancel_button</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">vertical_sizer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Add</code><code class=\"ANY\">(</code><code class=\"ANY\">buttons_sizer</code><code class=\"ANY\">,</code> <code class=\"ANY\">flag</code><code class=\"ANY\">=</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ALIGN_RIGHT</code> <code class=\"ANY\">|</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ALL</code><code class=\"ANY\">,</code> <code class=\"ANY\">border</code><code class=\"ANY\">=</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">BORDER</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">panel</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetSizer</code><code class=\"ANY\">(</code><code class=\"ANY\">vertical_sizer</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">width</code><code class=\"ANY\">,</code> <code class=\"ANY\">height</code> <code class=\"ANY\">=</code> <code class=\"ANY\">panel</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">GetBestSize</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetSize</code><code class=\"ANY\">(</code><code class=\"ANY\">(</code><code class=\"ANY\">width</code> <code class=\"ANY\">*</code> <code class=\"LITERAL\">1.3</code><code class=\"ANY\">,</code> <code class=\"ANY\">height</code> <code class=\"ANY\">*</code> <code class=\"LITERAL\">1.3</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Center</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># Set up timer</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">timer</code> <code class=\"ANY\">=</code> <code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Timer</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Bind</code><code class=\"ANY\">(</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">EVT_TIMER</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_on_timer</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">timer</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">timer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Start</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">TIMER_INTERVAL</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_get_message</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"KEYWORD\">return</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">message</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">format</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">timeout</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">_on_timer</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">,</code> <code class=\"ANY\">event</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">timeout</code> <code class=\"ANY\">-=</code> <code class=\"LITERAL\">1</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">msg_text</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">SetLabel</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_get_message</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">timeout</code> <code class=\"ANY\"><=</code> <code class=\"LITERAL\">0</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">EndModal</code><code class=\"ANY\">(</code><code class=\"ANY\">wx</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ID_OK</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">Destroy</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">timer</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Stop</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">return</code> <code class=\"FUNCTION_IDENTIFIER\">super</code><code class=\"ANY\">(</code><code class=\"ANY\">ShutdownDialog</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">Destroy</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code>\n</pre>\n</html>"},{"_id":{"language":"PYTHON3","lexingTokens":[99,41,99,41,3,41,9,42,10,42,41,10,42,41,10,42,51,42,41,10,42,41,42,60,42,51,42,51,42,54,42,51,42,51,42,54,42,55,55,41,42,51,42,51,42,54,4,56,42,51,42,51,42,54,42,51,42,51,42,54,42,55,55,55,41,21,57,1,41,9,42,51,42,10,42,2,24,42,11,42,57,1,41,42,42,41,42,51,42,54,4,55,2,33,42,54,42,51,42,55,57,1,41,3,41,6,42,54,42,55,57,1,41,42,60,3,41,42,60,61,3,56,3,62,41,42,60,42,54,42,56,42,55,41,42,51,42,54,42,51,42,56,3,55,41,42,51,42,54,42,51,42,56,42,55,41,42,51,42,54,42,51,42,56,42,55,41,42,51,42,54,42,51,42,56,42,54,42,68,42,54,42,55,55,55,41,42,51,42,54,42,51,42,56,3,55,41,42,51,42,54,42,51,42,56,61,62,55,41,42,51,42,54,42,51,42,56,61,62,55,41,42,51,42,54,42,51,42,56,61,62,55,41,42,51,42,54,42,51,42,56,74,3,57,42,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,75,55,2,33,42,54,42,51,42,55,57,1,41,3,41,6,42,54,42,55,57,1,41,42,51,42,60,42,54,3,56,61,3,56,3,62,55,2,6,42,54,42,55,57,1,41,42,60,42,51,42,51,42,54,3,56,3,56,3,55,41,42,51,42,51,42,60,42,41,42,51,42,51,42,60,61,3,56,3,62,41,42,51,42,51,42,60,61,3,56,3,62,41,42,51,42,54,42,51,42,51,42,54,55,56,61,42,51,42,51,42,54,42,56,3,68,3,55,56,42,51,42,51,42,54,42,56,3,68,3,55,62,55,2,6,42,54,42,55,57,1,41,42,51,42,54,42,51,42,51,42,54,55,56,61,62,55,2,33,42,54,42,51,42,55,57,1,41,3,41,6,42,54,42,55,57,1,41,42,60,42,54,3,56,61,3,56,3,62,55,41,42,60,42,54,3,56,61,3,56,3,62,55,41,42,51,42,54,42,78,42,55,2,6,42,54,42,55,57,1,41,42,60,42,54,3,56,61,3,56,3,62,55,41,42,60,42,54,3,56,61,3,56,3,62,55,41,42,51,42,54,42,78,42,55,41,42,60,42,54,3,56,61,3,56,3,62,55,41,42,60,42,54,3,56,61,3,56,3,62,55,41,42,51,42,54,42,78,42,55,2,33,42,54,42,51,42,55,57,1,41,3,41,6,42,54,42,55,57,1,41,42,51,42,60,42,54,3,56,61,3,56,3,62,55,2,6,42,54,42,55,57,1,41,42,51,42,51,42,60,3,41,42,51,42,54,42,51,42,51,42,56,3,55,41,42,51,42,54,42,51,42,51,42,61,3,62,56,3,55,41,42,51,42,51,42,60,3,41,42,51,42,54,42,51,42,51,42,56,3,55,41,42,51,42,54,42,51,42,51,42,61,3,62,56,3,55,41,42,51,42,51,42,60,3,41,42,51,42,54,42,51,42,51,42,56,3,55,41,42,51,42,54,42,51,42,51,42,61,3,62,56,3,55,41,42,51,42,51,42,60,3,41,42,51,42,54,42,51,42,51,42,56,3,55,41,42,51,42,54,42,51,42,51,42,61,3,62,56,3,55,41,42,51,42,51,42,60,3,41,42,51,42,54,42,51,42,51,42,56,3,55,41,42,51,42,54,42,51,42,51,42,61,3,62,56,3,55,2,6,42,54,42,55,57,1,41,42,60,32,41,21,57,1,41,42,51,42,51,42,60,3,2,24,42,57,1,41,42,60,31,2,42,51,42,54,42,55,2,33,42,54,42,51,42,55,57,1,41,3,41,6,42,54,42,55,57,1,41,42,51,42,60,42,54,3,56,61,3,56,3,62,55,2,6,42,54,42,55,57,1,41,42,60,42,51,42,51,42,54,3,56,3,55,41,99,41,42,51,42,51,42,54,74,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,42,56,3,57,3,56,3,57,3,75,55,41,42,51,42,54,42,51,42,51,42,56,42,55,41,42,51,42,54,42,51,42,51,42,56,61,3,62,55,41,42,51,42,54,42,51,42,51,42,56,61,3,62,55,41,99,41,99,41,42,51,42,54,42,51,42,51,42,56,61,62,55,41,42,51,42,54,42,51,42,51,42,56,74,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,75,55,41,99,41,42,51,42,51,42,54,74,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,75,55,41,42,51,42,54,42,51,42,51,42,56,61,4,62,55,41,42,51,42,51,42,54,74,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,42,75,55,41,42,51,42,54,42,51,42,51,42,56,42,55,41,42,51,42,54,42,51,42,51,42,56,61,3,56,3,62,55,41,42,51,42,54,42,51,42,51,42,56,61,3,56,3,62,55,41,42,51,42,54,42,51,42,51,42,56,61,4,62,55,41,42,51,42,54,42,51,42,51,42,56,74,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,75,55,41,99,41,42,51,42,51,42,54,74,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,75,55,41,42,51,42,54,42,51,42,51,42,56,61,4,56,4,62,55,41,99,41,42,51,42,51,42,54,74,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,42,56,3,57,3,56,3,57,3,75,55,41,99,41,99,41,42,51,42,54,42,51,42,51,42,56,61,3,62,55,41,42,51,42,54,42,51,42,51,42,56,61,3,62,55,41,42,51,42,54,42,51,42,51,42,56,61,62,55,41,42,51,42,54,42,51,42,51,42,56,74,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,75,55,41,99,41,42,51,42,51,42,54,74,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,75,55,41,42,51,42,54,42,51,42,51,42,56,61,4,62,55,41,42,51,42,51,42,54,74,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,42,75,55,41,42,51,42,54,42,51,42,51,42,56,42,55,41,42,51,42,54,42,51,42,51,42,56,61,3,56,3,62,55,41,42,51,42,54,42,51,42,51,42,56,61,3,56,3,62,55,41,42,51,42,54,42,51,42,51,42,56,61,4,62,55,41,42,51,42,54,42,51,42,51,42,56,74,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,75,55,41,99,41,42,51,42,51,42,54,74,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,75,55,41,42,51,42,54,42,51,42,51,42,56,61,4,56,4,62,55,41,99,41,99,41,99,41,99,41,42,51,42,51,42,54,74,3,57,3,56,3,57,3,56,3,57,3,75,55,41,42,51,42,54,42,51,42,51,42,56,61,3,56,3,62,55,41,42,51,42,54,42,51,42,51,42,56,61,3,56,3,62,55,41,42,51,42,54,42,51,42,51,42,56,61,4,56,4,62,55,41,42,51,42,54,42,51,42,51,42,56,74,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,75,55,2,6,42,54,42,55,57,1,41,42,51,42,54,42,56,42,51,42,51,42,56,61,62,55,2,6,42,54,42,55,57,1,41,42,51,42,51,42,54,74,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,75,55,41,42,51,42,54,42,51,42,51,42,56,74,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,75,55,2,6,42,54,42,55,57,1,41,42,51,42,51,42,54,74,3,57,30,56,3,57,4,56,3,57,32,75,55,41,42,51,42,54,42,51,42,51,42,61,3,62,56,3,55,41,42,51,42,54,42,51,42,51,42,61,3,62,56,3,55,41,42,51,42,54,42,51,42,51,42,61,3,62,56,3,55,2,33,42,54,42,51,42,55,57,1,41,3,41,6,42,54,42,55,57,1,41,42,60,42,54,3,56,61,3,56,3,62,55,41,42,60,61,3,56,3,56,3,62,41,42,60,61,3,56,3,56,3,62,41,42,60,61,3,56,3,56,3,62,41,19,42,20,42,57,1,41,42,51,42,54,42,55,41,42,51,42,54,42,51,42,56,3,55,2,19,42,20,42,57,1,41,42,51,42,54,42,55,41,42,51,42,54,42,51,42,56,3,55,2,19,42,20,42,57,1,41,42,51,42,54,42,55,41,42,51,42,54,42,51,42,56,3,55,2,6,42,54,42,55,57,1,41,99,41,99,41,42,60,42,54,3,56,61,3,56,3,62,55,41,42,51,42,54,74,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,75,55,41,42,51,42,54,74,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,75,55,41,99,41,42,51,42,54,74,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,75,55,41,42,51,42,54,42,51,42,56,61,4,56,4,56,4,62,55,41,42,51,42,54,42,51,42,56,74,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,75,55,2,33,42,54,42,51,42,55,57,1,41,3,41,6,42,54,42,55,57,1,41,42,51,42,60,42,54,3,56,61,3,56,3,62,55,2,6,42,54,42,55,57,1,41,42,51,42,51,42,60,3,41,42,51,42,51,42,60,42,51,42,51,42,54,3,56,3,55,41,42,51,42,51,42,60,61,3,62,41,42,51,42,51,42,60,61,3,62,41,42,51,42,51,42,60,61,4,62,41,42,51,42,51,42,60,74,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,75,41,42,51,42,51,42,54,55,41,42,51,42,54,42,51,42,51,42,56,3,55,41,42,51,42,54,42,51,42,51,42,56,3,55,41,42,51,42,54,42,51,42,51,42,56,61,62,55,41,42,51,42,54,42,51,42,51,42,56,61,62,55,41,42,51,42,54,42,51,42,51,42,56,61,62,55,41,42,51,42,54,42,51,42,51,42,56,74,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,75,55,2,6,42,54,42,55,57,1,41,42,51,42,51,42,60,3,41,42,51,42,51,42,60,42,51,42,51,42,54,3,56,3,55,41,42,51,42,51,42,60,61,3,56,3,56,3,62,41,42,51,42,51,42,60,61,3,56,3,56,3,62,41,42,51,42,51,42,60,61,4,56,4,56,4,62,41,42,51,42,51,42,60,74,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,75,41,42,51,42,51,42,54,55,41,42,51,42,54,42,51,42,51,42,56,3,55,41,42,51,42,54,42,51,42,51,42,56,3,55,41,42,51,42,54,42,51,42,51,42,56,61,62,55,41,42,51,42,54,42,51,42,51,42,56,61,62,55,41,42,51,42,54,42,51,42,51,42,56,61,62,55,41,42,51,42,54,42,51,42,51,42,56,74,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,75,55,2,6,42,54,42,55,57,1,41,42,51,42,51,42,60,3,41,99,41,99,41,42,51,42,51,42,54,55,41,42,51,42,54,42,51,42,51,42,56,3,55,2,6,42,54,42,55,57,1,41,42,51,42,51,42,60,3,41,42,51,42,51,42,60,42,51,42,51,42,54,3,56,3,55,41,42,51,42,51,42,60,61,3,62,41,42,51,42,51,42,60,61,3,62,41,42,51,42,51,42,60,61,62,41,42,51,42,51,42,60,74,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,56,3,57,3,75,41,42,51,42,54,42,56,42,51,42,51,42,55,2,6,42,54,55,57,1,41,42,51,42,54,55,2,15,42,78,3,57,1,41,42,54,55,2,-1]},"sourceCode":"#!/usr/bin/env python\n# -*- coding: UTF-8 -*-\n\n\"\"\"Contains test cases for the DownloadItem object.\"\"\"\n\nfrom __future__ import unicode_literals\n\nimport sys\nimport os.path\nimport unittest\n\nPATH = os.path.realpath(os.path.abspath(__file__))\nsys.path.insert(0, os.path.dirname(os.path.dirname(PATH)))\n\ntry:\n    from youtube_dl_gui.downloadmanager import DownloadItem\nexcept ImportError as error:\n    print error\n    sys.exit(1)\n\n\nclass TestItemInit(unittest.TestCase):\n\n    \"\"\"Test case for DownloadItem init.\"\"\"\n\n    def test_init(self):\n        url = \"url\"\n        options = [\"-f\", \"flv\"]\n\n        ditem = DownloadItem(url, options)\n\n        self.assertEqual(ditem.stage, \"Queued\")\n        self.assertEqual(ditem.url, url)\n        self.assertEqual(ditem.options, options)\n        self.assertEqual(ditem.object_id, hash(url + unicode(options)))\n\n        self.assertEqual(ditem.path, \"\")\n        self.assertEqual(ditem.filenames, [])\n        self.assertEqual(ditem.extensions, [])\n        self.assertEqual(ditem.filesizes, [])\n\n        self.assertEqual(\n            ditem.progress_stats,\n            {\"filename\": url,\n             \"extension\": \"-\",\n             \"filesize\": \"-\",\n             \"percent\": \"0%\",\n             \"speed\": \"-\",\n             \"eta\": \"-\",\n             \"status\": \"Queued\",\n             \"playlist_size\": \"\",\n             \"playlist_index\": \"\"}\n        )\n\n\nclass TestGetFiles(unittest.TestCase):\n\n    \"\"\"Test case for DownloadItem get_files method.\"\"\"\n\n    def setUp(self):\n        self.ditem = DownloadItem(\"url\", [\"-f\", \"flv\"])\n\n    def test_get_files(self):\n        path = os.path.join(\"/home\", \"user\", \"downloads\")\n\n        self.ditem.path = path\n        self.ditem.filenames = [\"file1\", \"file2\"]\n        self.ditem.extensions = [\".mp4\", \".m4a\"]\n\n        self.assertEqual(self.ditem.get_files(), [os.path.join(path, \"file1\" + \".mp4\"), os.path.join(path, \"file2\" + \".m4a\")])\n\n    def test_get_files_no_data(self):\n        self.assertEqual(self.ditem.get_files(), [])\n\n\nclass TestItemComparison(unittest.TestCase):\n\n    \"\"\"Test case for DownloadItem __eq__ method.\"\"\"\n\n    def test_equal_true(self):\n        ditem1 = DownloadItem(\"url\", [\"-f\", \"flv\"])\n        ditem2 = DownloadItem(\"url\", [\"-f\", \"flv\"])\n\n        self.assertTrue(ditem1 == ditem2)\n\n    def test_equal_false(self):\n        ditem1 = DownloadItem(\"url\", [\"-f\", \"flv\"])\n        ditem2 = DownloadItem(\"url2\", [\"-f\", \"flv\"])\n\n        self.assertFalse(ditem1 == ditem2)\n\n        ditem1 = DownloadItem(\"url\", [\"-f\", \"flv\"])\n        ditem2 = DownloadItem(\"url\", [\"-f\", \"mp4\"])\n\n        self.assertFalse(ditem1 == ditem2)\n\n\nclass TestSetItemStage(unittest.TestCase):\n\n    \"\"\"Test case for DownloadItem stage setter.\"\"\"\n\n    def setUp(self):\n        self.ditem = DownloadItem(\"url\", [\"-f\", \"flv\"])\n\n    def test_set_stage_valid(self):\n        self.ditem.stage = \"Queued\"\n        self.assertEqual(self.ditem.stage, \"Queued\")\n        self.assertEqual(self.ditem.progress_stats[\"status\"], \"Queued\")\n\n        self.ditem.stage = \"Active\"\n        self.assertEqual(self.ditem.stage, \"Active\")\n        self.assertEqual(self.ditem.progress_stats[\"status\"], \"Pre Processing\")\n\n        self.ditem.stage = \"Completed\"\n        self.assertEqual(self.ditem.stage, \"Completed\")\n        self.assertEqual(self.ditem.progress_stats[\"status\"], \"Finished\")\n\n        self.ditem.stage = \"Paused\"\n        self.assertEqual(self.ditem.stage, \"Paused\")\n        self.assertEqual(self.ditem.progress_stats[\"status\"], \"Paused\")\n\n        self.ditem.stage = \"Error\"\n        self.assertEqual(self.ditem.stage, \"Error\")\n        self.assertEqual(self.ditem.progress_stats[\"status\"], \"Error\")\n\n    def test_set_stage_invalid(self):\n        raised = False\n\n        try:\n            self.ditem.stage = \"some other status\"\n        except ValueError:\n            raised = True\n\n        self.assertTrue(raised)\n\n\nclass TestUpdateStats(unittest.TestCase):\n\n    \"\"\"Test case for DownloadItem update_stats method.\"\"\"\n\n    def setUp(self):\n        self.ditem = DownloadItem(\"url\", [\"-f\", \"flv\"])\n\n    def test_update_stats(self):\n        path = os.path.join(\"/home\", \"user\")\n\n        # 1st playlist item\n\n        self.ditem.update_stats({\"filename\": \"somefilename.f1\",\n                                 \"extension\": \".mp4\",\n                                 \"filesize\": \"9.45MiB\",\n                                 \"percent\": \"2.0%\",\n                                 \"speed\": \"200.00KiB/s\",\n                                 \"eta\": \"00:38\",\n                                 \"status\": \"Downloading\",\n                                 \"path\": path,\n                                 \"playlist_size\": \"10\",\n                                 \"playlist_index\": \"1\"})\n\n        self.assertEqual(self.ditem.path, path)\n        self.assertEqual(self.ditem.filenames, [\"somefilename.f1\"])\n        self.assertEqual(self.ditem.extensions, [\".mp4\"])\n\n        # Do not update filesizes unless percentage is 100%\n        # See https://github.com/MrS0m30n3/youtube-dl-gui/issues/162\n        self.assertEqual(self.ditem.filesizes, [])\n\n        self.assertEqual(\n            self.ditem.progress_stats,\n            {\"filename\": \"somefilename.f1\",\n             \"extension\": \".mp4\",\n             \"filesize\": \"9.45MiB\",\n             \"percent\": \"2.0%\",\n             \"speed\": \"200.00KiB/s\",\n             \"eta\": \"00:38\",\n             \"status\": \"Downloading\",\n             \"playlist_size\": \"10\",\n             \"playlist_index\": \"1\"}\n        )\n\n        # Since the percentage is 100% this should update the filesizes list\n        self.ditem.update_stats({\"filesize\": \"9.45MiB\",\n                                 \"percent\": \"100%\",\n                                 \"speed\": \"\",\n                                 \"eta\": \"\",\n                                 \"status\": \"Downloading\"})\n\n        self.assertEqual(self.ditem.filesizes, [9909043.20])\n\n\n        self.ditem.update_stats({\"filename\": \"somefilename.f2\",\n                                 \"extension\": \".m4a\",\n                                 \"filesize\": \"2.22MiB\",\n                                 \"percent\": \"33.0%\",\n                                 \"speed\": \"200.00KiB/s\",\n                                 \"eta\": \"00:20\",\n                                 \"status\": \"Downloading\",\n                                 \"path\": path})\n\n        self.assertEqual(self.ditem.path, path)\n        self.assertEqual(self.ditem.filenames, [\"somefilename.f1\", \"somefilename.f2\"])\n        self.assertEqual(self.ditem.extensions, [\".mp4\", \".m4a\"])\n        self.assertEqual(self.ditem.filesizes, [9909043.20])\n\n        self.assertEqual(\n            self.ditem.progress_stats,\n            {\"filename\": \"somefilename.f2\",\n             \"extension\": \".m4a\",\n             \"filesize\": \"2.22MiB\",\n             \"percent\": \"33.0%\",\n             \"speed\": \"200.00KiB/s\",\n             \"eta\": \"00:20\",\n             \"status\": \"Downloading\",\n             \"playlist_size\": \"10\",\n             \"playlist_index\": \"1\"}\n        )\n\n        # Since the percentage is 100% this should update the filesizes list\n        self.ditem.update_stats({\"filesize\": \"2.22MiB\",\n                                 \"percent\": \"100%\",\n                                 \"speed\": \"\",\n                                 \"eta\": \"\",\n                                 \"status\": \"Downloading\"})\n\n        self.assertEqual(self.ditem.filesizes, [9909043.20, 2327838.72])\n\n        # Moving to the 2nd playlist item\n\n        self.ditem.update_stats({\"filename\": \"someotherfilename.f1\",\n                                 \"extension\": \".mp4\",\n                                 \"filesize\": \"10.25MiB\",\n                                 \"percent\": \"50.0%\",\n                                 \"speed\": \"200.00KiB/s\",\n                                 \"eta\": \"00:38\",\n                                 \"status\": \"Downloading\",\n                                 \"path\": path,\n                                 \"playlist_size\": \"10\",\n                                 \"playlist_index\": \"2\"})\n\n        # We must reset filenames, extensions & filesizes lists when changing playlist index\n        # else the filesizes for the post processed files will be wrong\n        self.assertEqual(self.ditem.filenames, [\"someotherfilename.f1\"])\n        self.assertEqual(self.ditem.extensions, [\".mp4\"])\n        self.assertEqual(self.ditem.filesizes, [])\n\n        self.assertEqual(\n            self.ditem.progress_stats,\n            {\"filename\": \"someotherfilename.f1\",\n             \"extension\": \".mp4\",\n             \"filesize\": \"10.25MiB\",\n             \"percent\": \"50.0%\",\n             \"speed\": \"200.00KiB/s\",\n             \"eta\": \"00:38\",\n             \"status\": \"Downloading\",\n             \"playlist_size\": \"10\",\n             \"playlist_index\": \"2\"}\n        )\n\n        # Since the percentage is 100% this should update the filesizes list\n        self.ditem.update_stats({\"filesize\": \"10.25MiB\",\n                                 \"percent\": \"100%\",\n                                 \"speed\": \"\",\n                                 \"eta\": \"\",\n                                 \"status\": \"Downloading\"})\n\n        self.assertEqual(self.ditem.filesizes, [10747904.0])\n\n\n        self.ditem.update_stats({\"filename\": \"someotherfilename.f2\",\n                                 \"extension\": \".m4a\",\n                                 \"filesize\": \"3.33MiB\",\n                                 \"percent\": \"33.0%\",\n                                 \"speed\": \"200.00KiB/s\",\n                                 \"eta\": \"00:30\",\n                                 \"status\": \"Downloading\",\n                                 \"path\": path})\n\n        self.assertEqual(self.ditem.path, path)\n        self.assertEqual(self.ditem.filenames, [\"someotherfilename.f1\", \"someotherfilename.f2\"])\n        self.assertEqual(self.ditem.extensions, [\".mp4\", \".m4a\"])\n        self.assertEqual(self.ditem.filesizes, [10747904.0])\n\n        self.assertEqual(\n            self.ditem.progress_stats,\n            {\"filename\": \"someotherfilename.f2\",\n             \"extension\": \".m4a\",\n             \"filesize\": \"3.33MiB\",\n             \"percent\": \"33.0%\",\n             \"speed\": \"200.00KiB/s\",\n             \"eta\": \"00:30\",\n             \"status\": \"Downloading\",\n             \"playlist_size\": \"10\",\n             \"playlist_index\": \"2\"}\n        )\n\n        # Since the percentage is 100% this should update the filesizes list\n        self.ditem.update_stats({\"filesize\": \"3.33MiB\",\n                                 \"percent\": \"100%\",\n                                 \"speed\": \"\",\n                                 \"eta\": \"\",\n                                 \"status\": \"Downloading\"})\n\n        self.assertEqual(self.ditem.filesizes, [10747904.0, 3491758.08])\n\n        # Let's move to the 3rd playlist item\n\n        # Here we mimic youtube-dl's \"max downloads limit reached\"\n        # this line should not reset the filenames, extensions & filesizes lists\n        # since we will lose the ability to play the last playlist item\n        self.ditem.update_stats({\"status\": \"Downloading\",\n                                 \"playlist_size\": \"10\",\n                                 \"playlist_index\": \"3\"})\n\n        self.assertEqual(self.ditem.filenames, [\"someotherfilename.f1\", \"someotherfilename.f2\"])\n        self.assertEqual(self.ditem.extensions, [\".mp4\", \".m4a\"])\n        self.assertEqual(self.ditem.filesizes, [10747904.0, 3491758.08])\n        self.assertEqual(\n            self.ditem.progress_stats,\n            {\"filename\": \"someotherfilename.f2\",\n             \"extension\": \".m4a\",\n             \"filesize\": \"3.33MiB\",\n             \"percent\": \"100%\",\n             \"speed\": \"-\",\n             \"eta\": \"-\",\n             \"status\": \"Downloading\",\n             \"playlist_size\": \"10\",\n             \"playlist_index\": \"3\"}\n        )\n\n    def test_update_stats_invalid_input(self):\n        self.assertRaises(AssertionError, self.ditem.update_stats, [])\n\n    def test_update_stats_empty_strings(self):\n        self.ditem.update_stats({\"filename\": \"\",\n                                 \"extension\": \"\",\n                                 \"filesize\": \"\",\n                                 \"percent\": \"\",\n                                 \"speed\": \"\",\n                                 \"eta\": \"\",\n                                 \"status\": \"\",\n                                 \"playlist_size\": \"\",\n                                 \"playlist_index\": \"\"})\n\n        self.assertEqual(\n            self.ditem.progress_stats,\n            {\"filename\": \"url\",\n             \"extension\": \"-\",\n             \"filesize\": \"-\",\n             \"percent\": \"0%\",\n             \"speed\": \"-\",\n             \"eta\": \"-\",\n             \"status\": \"Queued\",\n             \"playlist_size\": \"\",\n             \"playlist_index\": \"\"}\n        )\n\n    def test_update_stats_not_string(self):\n        self.ditem.update_stats({\"filename\": None, \"status\": 1234, \"eta\": False})\n\n        self.assertEqual(self.ditem.progress_stats[\"filename\"], \"url\")\n        self.assertEqual(self.ditem.progress_stats[\"status\"], \"Queued\")\n        self.assertEqual(self.ditem.progress_stats[\"eta\"], \"-\")\n\n\nclass TestDownloadItemPrivate(unittest.TestCase):\n\n    \"\"\"Test case for private method of the DownloadItem.\"\"\"\n\n    def test_set_stage(self):\n        ditem = DownloadItem(\"url\", [\"-f\", \"flv\"])\n\n        active_status = [\"Pre Processing\", \"Downloading\", \"Post Processing\"]\n        complete_status = [\"Finished\", \"Warning\", \"Already Downloaded\"]\n        error_status = [\"Error\", \"Stopped\", \"Filesize Abort\"]\n\n        for status in active_status:\n            ditem._set_stage(status)\n            self.assertEqual(ditem.stage, \"Active\")\n\n        for status in complete_status:\n            ditem._set_stage(status)\n            self.assertEqual(ditem.stage, \"Completed\")\n\n        for status in error_status:\n            ditem._set_stage(status)\n            self.assertEqual(ditem.stage, \"Error\")\n\n    def test_calc_post_proc_size(self):\n        # REFACTOR Not an actual method\n        # should transfer to TestUpdateStats\n        ditem = DownloadItem(\"url\", [\"-f\", \"flv\"])\n\n        ditem.update_stats({\"filename\": \"file.f123\",\n                            \"extension\": \".webm\",\n                            \"filesize\": \"10.00MiB\",\n                            \"percent\": \"100%\",\n                            \"speed\": \"\",\n                            \"eta\": \"\",\n                            \"status\": \"Downloading\",\n                            \"path\": \"/home/user\"})\n\n        ditem.update_stats({\"filename\": \"file.f456\",\n                            \"extension\": \".m4a\",\n                            \"filesize\": \"3.45MiB\",\n                            \"percent\": \"100%\",\n                            \"speed\": \"\",\n                            \"eta\": \"\",\n                            \"status\": \"Downloading\",\n                            \"path\": \"/home/user\"})\n\n        # Mimic youtube-dl post process behaviour\n        ditem.update_stats({\"filename\": \"file\",\n                            \"extension\": \".webm\",\n                            \"percent\": \"100%\",\n                            \"speed\": \"\",\n                            \"eta\": \"\",\n                            \"status\": \"Post Processing\"})\n\n        self.assertEqual(ditem.filesizes, [10485760.00, 3617587.20, 14103347.20])\n\n        self.assertEqual(\n            ditem.progress_stats,\n            {\"filename\": \"file\",\n             \"extension\": \".webm\",\n             \"filesize\": \"13.45MiB\",\n             \"percent\": \"100%\",\n             \"speed\": \"-\",\n             \"eta\": \"-\",\n             \"status\": \"Post Processing\",\n             \"playlist_size\": \"\",\n             \"playlist_index\": \"\"}\n        )\n\n\nclass TestReset(unittest.TestCase):\n\n    \"\"\"Test case for the DownloadItem reset method.\"\"\"\n\n    def setUp(self):\n        self.ditem = DownloadItem(\"url\", [\"-f\", \"flv\"])\n\n    def test_reset_completed_stage(self):\n        self.ditem._stage = \"Completed\"\n        self.ditem.path = os.path.join(\"/home\", \"user\")\n        self.ditem.filenames = [\"file\"]\n        self.ditem.extensions = [\".mp4\"]\n        self.ditem.filesizes = [123456.00]\n        self.ditem.progress_stats = {\n            \"filename\": \"file\",\n            \"extension\": \".mp4\",\n            \"filsize\": \"6.66MiB\",\n            \"percent\": \"100%\",\n            \"speed\": \"-\",\n            \"eta\": \"-\",\n            \"status\": \"Finished\",\n            \"playlist_size\": \"\",\n            \"playlist_index\": \"\"\n        }\n\n        self.ditem.reset()\n\n        self.assertEqual(self.ditem._stage, \"Queued\")\n        self.assertEqual(self.ditem.path, \"\")\n        self.assertEqual(self.ditem.filenames, [])\n        self.assertEqual(self.ditem.extensions, [])\n        self.assertEqual(self.ditem.filesizes, [])\n        self.assertEqual(\n            self.ditem.progress_stats,\n            {\"filename\": \"url\",\n             \"extension\": \"-\",\n             \"filesize\": \"-\",\n             \"percent\": \"0%\",\n             \"speed\": \"-\",\n             \"eta\": \"-\",\n             \"status\": \"Queued\",\n             \"playlist_size\": \"\",\n             \"playlist_index\": \"\"}\n        )\n\n    def test_reset_error_stage(self):\n        self.ditem._stage = \"Error\"\n        self.ditem.path = os.path.join(\"/home\", \"user\")\n        self.ditem.filenames = [\"file1\", \"file2\", \"file\"]\n        self.ditem.extensions = [\".mp4\", \".m4a\", \".mp4\"]\n        self.ditem.filesizes = [1234.00, 3421.00, 4655.00]\n        self.ditem.progress_stats = {\n            \"filename\": \"file\",\n            \"extension\": \".mp4\",\n            \"filsize\": \"9.45MiB\",\n            \"percent\": \"100%\",\n            \"speed\": \"-\",\n            \"eta\": \"-\",\n            \"status\": \"Error\",\n            \"playlist_size\": \"10\",\n            \"playlist_index\": \"8\"\n        }\n\n        self.ditem.reset()\n\n        self.assertEqual(self.ditem._stage, \"Queued\")\n        self.assertEqual(self.ditem.path, \"\")\n        self.assertEqual(self.ditem.filenames, [])\n        self.assertEqual(self.ditem.extensions, [])\n        self.assertEqual(self.ditem.filesizes, [])\n        self.assertEqual(\n            self.ditem.progress_stats,\n            {\"filename\": \"url\",\n             \"extension\": \"-\",\n             \"filesize\": \"-\",\n             \"percent\": \"0%\",\n             \"speed\": \"-\",\n             \"eta\": \"-\",\n             \"status\": \"Queued\",\n             \"playlist_size\": \"\",\n             \"playlist_index\": \"\"}\n        )\n\n    def test_reset_paused_stage(self):\n        self.ditem._stage = \"Paused\"\n        # No need to change filanames, extension, etc\n        # since everything in pause state has the default value\n\n        self.ditem.reset()\n        self.assertEqual(self.ditem._stage, \"Queued\")\n\n    def test_reset_active_stage(self):\n        self.ditem._stage = \"Active\"\n        self.ditem.path = os.path.join(\"/home\", \"user\")\n        self.ditem.filenames = [\"file1\"]\n        self.ditem.extensions = [\".mp4\"]\n        self.ditem.filesizes = []\n        self.ditem.progress_stats = {\n            \"filename\": \"file1\",\n            \"extension\": \".mp4\",\n            \"filsize\": \"9.45MiB\",\n            \"percent\": \"75.5%\",\n            \"speed\": \"200.00KiB/s\",\n            \"eta\": \"00:10\",\n            \"status\": \"Downloading\"\n        }\n\n        self.assertRaises(RuntimeError, self.ditem.reset)\n\n\ndef main():\n    unittest.main()\n\n\nif __name__ == '__main__':\n    main()\n","highlightingTokens":[4,0,4,0,3,0,1,0,1,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,10,0,9,0,0,0,10,0,9,0,0,0,0,0,0,0,10,0,9,0,2,0,0,0,10,0,9,0,0,0,10,0,9,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,9,0,2,0,0,1,5,0,0,0,10,0,0,0,0,3,0,1,6,0,0,0,0,0,0,0,0,3,0,0,0,0,3,0,3,0,0,0,0,9,0,0,0,0,0,0,0,0,9,0,0,0,10,0,3,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,9,0,0,0,10,0,9,0,0,0,9,0,0,0,0,0,0,0,0,9,0,0,0,10,0,3,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,9,0,0,0,10,0,0,3,0,0,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,0,0,1,5,0,0,0,10,0,0,0,0,3,0,1,6,0,0,0,0,0,0,0,0,10,0,9,0,3,0,0,3,0,3,0,0,0,1,6,0,0,0,0,0,0,0,0,0,0,10,0,9,0,3,0,3,0,3,0,0,0,0,10,0,10,0,0,0,0,0,10,0,10,0,0,3,0,3,0,0,0,0,10,0,10,0,0,3,0,3,0,0,0,0,9,0,0,0,10,0,9,0,0,0,0,0,0,10,0,9,0,0,0,3,0,3,0,0,0,0,10,0,9,0,0,0,3,0,3,0,0,0,0,1,6,0,0,0,0,0,0,0,0,9,0,0,0,10,0,9,0,0,0,0,0,0,0,1,5,0,0,0,10,0,0,0,0,3,0,1,6,0,0,0,0,0,0,0,0,9,0,3,0,0,3,0,3,0,0,0,0,0,9,0,3,0,0,3,0,3,0,0,0,0,0,9,0,0,0,0,0,0,1,6,0,0,0,0,0,0,0,0,9,0,3,0,0,3,0,3,0,0,0,0,0,9,0,3,0,0,3,0,3,0,0,0,0,0,9,0,0,0,0,0,0,0,0,9,0,3,0,0,3,0,3,0,0,0,0,0,9,0,3,0,0,3,0,3,0,0,0,0,0,9,0,0,0,0,0,0,1,5,0,0,0,10,0,0,0,0,3,0,1,6,0,0,0,0,0,0,0,0,10,0,9,0,3,0,0,3,0,3,0,0,0,1,6,0,0,0,0,0,0,0,0,10,0,10,0,3,0,0,0,9,0,0,0,10,0,10,0,3,0,0,0,0,9,0,0,0,10,0,10,0,3,0,0,3,0,0,0,0,10,0,10,0,3,0,0,0,9,0,0,0,10,0,10,0,3,0,0,0,0,9,0,0,0,10,0,10,0,3,0,0,3,0,0,0,0,10,0,10,0,3,0,0,0,9,0,0,0,10,0,10,0,3,0,0,0,0,9,0,0,0,10,0,10,0,3,0,0,3,0,0,0,0,10,0,10,0,3,0,0,0,9,0,0,0,10,0,10,0,3,0,0,0,0,9,0,0,0,10,0,10,0,3,0,0,3,0,0,0,0,10,0,10,0,3,0,0,0,9,0,0,0,10,0,10,0,3,0,0,0,0,9,0,0,0,10,0,10,0,3,0,0,3,0,0,1,6,0,0,0,0,0,0,0,0,2,0,1,0,0,0,0,0,10,0,10,0,3,0,1,0,0,0,0,0,0,2,0,0,0,9,0,0,0,0,1,5,0,0,0,10,0,0,0,0,3,0,1,6,0,0,0,0,0,0,0,0,10,0,9,0,3,0,0,3,0,3,0,0,0,1,6,0,0,0,0,0,0,0,0,0,0,10,0,9,0,3,0,3,0,0,4,0,0,0,10,0,9,0,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,0,0,3,0,3,0,3,0,3,0,0,0,0,0,9,0,0,0,10,0,10,0,0,0,0,0,0,9,0,0,0,10,0,10,0,0,3,0,0,0,0,0,9,0,0,0,10,0,10,0,0,3,0,0,0,4,0,4,0,0,0,9,0,0,0,10,0,10,0,0,0,0,0,0,0,9,0,0,0,10,0,10,0,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,0,0,4,0,0,0,10,0,9,0,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,0,0,0,0,9,0,0,0,10,0,10,0,0,2,0,0,0,0,0,10,0,9,0,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,0,0,0,0,0,0,9,0,0,0,10,0,10,0,0,0,0,0,0,9,0,0,0,10,0,10,0,0,3,0,3,0,0,0,0,0,9,0,0,0,10,0,10,0,0,3,0,3,0,0,0,0,0,9,0,0,0,10,0,10,0,0,2,0,0,0,0,0,9,0,0,0,10,0,10,0,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,0,0,4,0,0,0,10,0,9,0,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,0,0,0,0,9,0,0,0,10,0,10,0,0,2,0,2,0,0,0,4,0,0,0,10,0,9,0,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,0,0,3,0,3,0,3,0,3,0,0,0,4,0,4,0,0,0,9,0,0,0,10,0,10,0,0,3,0,0,0,0,0,9,0,0,0,10,0,10,0,0,3,0,0,0,0,0,9,0,0,0,10,0,10,0,0,0,0,0,0,0,9,0,0,0,10,0,10,0,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,0,0,4,0,0,0,10,0,9,0,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,0,0,0,0,9,0,0,0,10,0,10,0,0,2,0,0,0,0,0,10,0,9,0,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,0,0,0,0,0,0,9,0,0,0,10,0,10,0,0,0,0,0,0,9,0,0,0,10,0,10,0,0,3,0,3,0,0,0,0,0,9,0,0,0,10,0,10,0,0,3,0,3,0,0,0,0,0,9,0,0,0,10,0,10,0,0,2,0,0,0,0,0,9,0,0,0,10,0,10,0,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,0,0,4,0,0,0,10,0,9,0,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,0,0,0,0,9,0,0,0,10,0,10,0,0,2,0,2,0,0,0,4,0,4,0,4,0,4,0,0,0,10,0,9,0,0,3,0,3,0,3,0,3,0,3,0,3,0,0,0,0,0,9,0,0,0,10,0,10,0,0,3,0,3,0,0,0,0,0,9,0,0,0,10,0,10,0,0,3,0,3,0,0,0,0,0,9,0,0,0,10,0,10,0,0,2,0,2,0,0,0,0,0,9,0,0,0,10,0,10,0,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,0,0,1,6,0,0,0,0,0,0,0,0,9,0,0,0,0,0,10,0,10,0,0,0,0,0,1,6,0,0,0,0,0,0,0,0,10,0,9,0,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,0,0,0,0,9,0,0,0,10,0,10,0,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,0,0,1,6,0,0,0,0,0,0,0,0,10,0,9,0,0,3,0,1,0,3,0,2,0,3,0,2,0,0,0,0,0,9,0,0,0,10,0,10,0,3,0,0,3,0,0,0,0,9,0,0,0,10,0,10,0,3,0,0,3,0,0,0,0,9,0,0,0,10,0,10,0,3,0,0,3,0,0,1,5,0,0,0,10,0,0,0,0,3,0,1,6,0,0,0,0,0,0,0,0,9,0,3,0,0,3,0,3,0,0,0,0,0,0,3,0,3,0,3,0,0,0,0,0,3,0,3,0,3,0,0,0,0,0,3,0,3,0,3,0,0,1,0,1,0,0,0,0,0,0,9,0,0,0,0,0,0,9,0,0,0,10,0,3,0,0,1,0,1,0,0,0,0,0,0,9,0,0,0,0,0,0,9,0,0,0,10,0,3,0,0,1,0,1,0,0,0,0,0,0,9,0,0,0,0,0,0,9,0,0,0,10,0,3,0,0,1,6,0,0,0,0,0,0,4,0,4,0,0,0,9,0,3,0,0,3,0,3,0,0,0,0,0,9,0,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,0,0,0,0,9,0,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,0,0,4,0,0,0,9,0,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,0,0,0,0,9,0,0,0,10,0,0,2,0,2,0,2,0,0,0,0,0,9,0,0,0,10,0,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,0,0,1,5,0,0,0,10,0,0,0,0,3,0,1,6,0,0,0,0,0,0,0,0,10,0,9,0,3,0,0,3,0,3,0,0,0,1,6,0,0,0,0,0,0,0,0,10,0,10,0,3,0,0,0,10,0,10,0,0,0,10,0,9,0,3,0,3,0,0,0,0,10,0,10,0,0,3,0,0,0,0,10,0,10,0,0,3,0,0,0,0,10,0,10,0,0,2,0,0,0,0,10,0,10,0,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,0,0,0,10,0,9,0,0,0,0,0,9,0,0,0,10,0,10,0,3,0,0,0,0,9,0,0,0,10,0,10,0,3,0,0,0,0,9,0,0,0,10,0,10,0,0,0,0,0,0,0,9,0,0,0,10,0,10,0,0,0,0,0,0,0,9,0,0,0,10,0,10,0,0,0,0,0,0,0,9,0,0,0,10,0,10,0,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,0,0,1,6,0,0,0,0,0,0,0,0,10,0,10,0,3,0,0,0,10,0,10,0,0,0,10,0,9,0,3,0,3,0,0,0,0,10,0,10,0,0,3,0,3,0,3,0,0,0,0,10,0,10,0,0,3,0,3,0,3,0,0,0,0,10,0,10,0,0,2,0,2,0,2,0,0,0,0,10,0,10,0,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,0,0,0,10,0,9,0,0,0,0,0,9,0,0,0,10,0,10,0,3,0,0,0,0,9,0,0,0,10,0,10,0,3,0,0,0,0,9,0,0,0,10,0,10,0,0,0,0,0,0,0,9,0,0,0,10,0,10,0,0,0,0,0,0,0,9,0,0,0,10,0,10,0,0,0,0,0,0,0,9,0,0,0,10,0,10,0,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,0,0,1,6,0,0,0,0,0,0,0,0,10,0,10,0,3,0,4,0,4,0,0,0,10,0,9,0,0,0,0,0,9,0,0,0,10,0,10,0,3,0,0,1,6,0,0,0,0,0,0,0,0,10,0,10,0,3,0,0,0,10,0,10,0,0,0,10,0,9,0,3,0,3,0,0,0,0,10,0,10,0,0,3,0,0,0,0,10,0,10,0,0,3,0,0,0,0,10,0,10,0,0,0,0,0,0,10,0,10,0,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,0,0,0,9,0,0,0,0,0,10,0,10,0,0,1,6,0,0,0,0,0,0,0,9,0,0,0,1,0,0,3,0,0,0,9,0,0,0,0],"highlightingCode":"<!DOCTYPE html>\n<html>\n<style>\n.ANY {\n    color: black;\n    font-weight: normal;\n    font-style: normal;\n}\n.KEYWORD {\n    color: blue;\n    font-weight: bold;\n    font-style: normal;\n}\n.LITERAL {\n    color: lightskyblue;\n    font-weight: bold;\n    font-style: normal;\n}\n.CHAR_STRING_LITERAL {\n    color: darkgoldenrod;\n    font-weight: normal;\n    font-style: normal;\n}\n.COMMENT {\n    color: grey;\n    font-weight: normal;\n    font-style: italic;\n}\n.CLASS_DECLARATOR {\n    color: crimson;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_DECLARATOR {\n    color: fuchsia;\n    font-weight: bold;\n    font-style: normal;\n}\n.VARIABLE_DECLARATOR {\n    color: purple;\n    font-weight: bold;\n    font-style: normal;\n}\n.TYPE_IDENTIFIER {\n    color: darkgreen;\n    font-weight: bold;\n    font-style: normal;\n}\n.FUNCTION_IDENTIFIER {\n    color: dodgerblue;\n    font-weight: normal;\n    font-style: normal;\n}\n.FIELD_IDENTIFIER {\n    color: coral;\n    font-weight: normal;\n    font-style: normal;\n}\n.ANNOTATION_DECLARATOR {\n    color: lightslategray;\n    font-weight: lighter;\n    font-style: italic;\n}\n</style>\n<pre>\n<code class=\"COMMENT\">#!/usr/bin/env python</code><code class=\"ANY\">\n</code><code class=\"COMMENT\"># -*- coding: UTF-8 -*-</code>\n<code class=\"ANY\">\n</code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Contains test cases for the DownloadItem object.\"\"\"</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">from</code> <code class=\"ANY\">__future__</code> <code class=\"KEYWORD\">import</code> <code class=\"ANY\">unicode_literals</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code> <code class=\"ANY\">sys</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code> <code class=\"ANY\">os</code><code class=\"ANY\">.</code><code class=\"ANY\">path</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">import</code> <code class=\"ANY\">unittest</code>\n<code class=\"ANY\">\n</code><code class=\"ANY\">PATH</code> <code class=\"ANY\">=</code> <code class=\"ANY\">os</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">path</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">realpath</code><code class=\"ANY\">(</code><code class=\"ANY\">os</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">path</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">abspath</code><code class=\"ANY\">(</code><code class=\"ANY\">__file__</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code><code class=\"ANY\">sys</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">path</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">insert</code><code class=\"ANY\">(</code><code class=\"LITERAL\">0</code><code class=\"ANY\">,</code> <code class=\"ANY\">os</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">path</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">dirname</code><code class=\"ANY\">(</code><code class=\"ANY\">os</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">path</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">dirname</code><code class=\"ANY\">(</code><code class=\"ANY\">PATH</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">try</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">    </code><code class=\"KEYWORD\">from</code> <code class=\"ANY\">youtube_dl_gui</code><code class=\"ANY\">.</code><code class=\"ANY\">downloadmanager</code> <code class=\"KEYWORD\">import</code> <code class=\"ANY\">DownloadItem</code><code class=\"ANY\">\n</code><code class=\"KEYWORD\">except</code> <code class=\"ANY\">ImportError</code> <code class=\"KEYWORD\">as</code> <code class=\"ANY\">error</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">    </code><code class=\"ANY\">print</code> <code class=\"ANY\">error</code>\n   <code class=\"ANY\"> </code><code class=\"ANY\">sys</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">exit</code><code class=\"ANY\">(</code><code class=\"LITERAL\">1</code><code class=\"ANY\">)</code>\n\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">TestItemInit</code><code class=\"ANY\">(</code><code class=\"ANY\">unittest</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">TestCase</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n\n<code class=\"ANY\">    </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Test case for DownloadItem init.\"\"\"</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">test_init</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">url</code> <code class=\"ANY\">=</code> <code class=\"CHAR_STRING_LITERAL\">\"url\"</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">options</code> <code class=\"ANY\">=</code> <code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"-f\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"flv\"</code><code class=\"ANY\">]</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">ditem</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">DownloadItem</code><code class=\"ANY\">(</code><code class=\"ANY\">url</code><code class=\"ANY\">,</code> <code class=\"ANY\">options</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">stage</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"Queued\"</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">url</code><code class=\"ANY\">,</code> <code class=\"ANY\">url</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">options</code><code class=\"ANY\">,</code> <code class=\"ANY\">options</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">object_id</code><code class=\"ANY\">,</code> <code class=\"FUNCTION_IDENTIFIER\">hash</code><code class=\"ANY\">(</code><code class=\"ANY\">url</code> <code class=\"ANY\">+</code> <code class=\"FUNCTION_IDENTIFIER\">unicode</code><code class=\"ANY\">(</code><code class=\"ANY\">options</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">path</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"\"</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">filenames</code><code class=\"ANY\">,</code> <code class=\"ANY\">[</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">extensions</code><code class=\"ANY\">,</code> <code class=\"ANY\">[</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">filesizes</code><code class=\"ANY\">,</code> <code class=\"ANY\">[</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code>\n            <code class=\"ANY\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">progress_stats</code><code class=\"ANY\">,</code>\n            <code class=\"ANY\">{</code><code class=\"CHAR_STRING_LITERAL\">\"filename\"</code><code class=\"ANY\">:</code> <code class=\"ANY\">url</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"extension\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"-\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"filesize\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"-\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"percent\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"0%\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"speed\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"-\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"eta\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"-\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"status\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"Queued\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"playlist_size\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"playlist_index\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"\"</code><code class=\"ANY\">}</code>\n        <code class=\"ANY\">)</code>\n\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">TestGetFiles</code><code class=\"ANY\">(</code><code class=\"ANY\">unittest</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">TestCase</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n\n<code class=\"ANY\">    </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Test case for DownloadItem get_files method.\"\"\"</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">setUp</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">DownloadItem</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"url\"</code><code class=\"ANY\">,</code> <code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"-f\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"flv\"</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">test_get_files</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">path</code> <code class=\"ANY\">=</code> <code class=\"ANY\">os</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">path</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">join</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"/home\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"user\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"downloads\"</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">path</code> <code class=\"ANY\">=</code> <code class=\"ANY\">path</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">filenames</code> <code class=\"ANY\">=</code> <code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"file1\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"file2\"</code><code class=\"ANY\">]</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">extensions</code> <code class=\"ANY\">=</code> <code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\".mp4\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\".m4a\"</code><code class=\"ANY\">]</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get_files</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"ANY\">[</code><code class=\"ANY\">os</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">path</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">join</code><code class=\"ANY\">(</code><code class=\"ANY\">path</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"file1\"</code> <code class=\"ANY\">+</code> <code class=\"CHAR_STRING_LITERAL\">\".mp4\"</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"ANY\">os</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">path</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">join</code><code class=\"ANY\">(</code><code class=\"ANY\">path</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"file2\"</code> <code class=\"ANY\">+</code> <code class=\"CHAR_STRING_LITERAL\">\".m4a\"</code><code class=\"ANY\">)</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">test_get_files_no_data</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">get_files</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">,</code> <code class=\"ANY\">[</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">TestItemComparison</code><code class=\"ANY\">(</code><code class=\"ANY\">unittest</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">TestCase</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n\n<code class=\"ANY\">    </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Test case for DownloadItem __eq__ method.\"\"\"</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">test_equal_true</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">ditem1</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">DownloadItem</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"url\"</code><code class=\"ANY\">,</code> <code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"-f\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"flv\"</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">ditem2</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">DownloadItem</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"url\"</code><code class=\"ANY\">,</code> <code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"-f\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"flv\"</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertTrue</code><code class=\"ANY\">(</code><code class=\"ANY\">ditem1</code> <code class=\"ANY\">==</code> <code class=\"ANY\">ditem2</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">test_equal_false</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">ditem1</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">DownloadItem</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"url\"</code><code class=\"ANY\">,</code> <code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"-f\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"flv\"</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">ditem2</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">DownloadItem</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"url2\"</code><code class=\"ANY\">,</code> <code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"-f\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"flv\"</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertFalse</code><code class=\"ANY\">(</code><code class=\"ANY\">ditem1</code> <code class=\"ANY\">==</code> <code class=\"ANY\">ditem2</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">ditem1</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">DownloadItem</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"url\"</code><code class=\"ANY\">,</code> <code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"-f\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"flv\"</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">ditem2</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">DownloadItem</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"url\"</code><code class=\"ANY\">,</code> <code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"-f\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"mp4\"</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertFalse</code><code class=\"ANY\">(</code><code class=\"ANY\">ditem1</code> <code class=\"ANY\">==</code> <code class=\"ANY\">ditem2</code><code class=\"ANY\">)</code>\n\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">TestSetItemStage</code><code class=\"ANY\">(</code><code class=\"ANY\">unittest</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">TestCase</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n\n<code class=\"ANY\">    </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Test case for DownloadItem stage setter.\"\"\"</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">setUp</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">DownloadItem</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"url\"</code><code class=\"ANY\">,</code> <code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"-f\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"flv\"</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">test_set_stage_valid</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">stage</code> <code class=\"ANY\">=</code> <code class=\"CHAR_STRING_LITERAL\">\"Queued\"</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">stage</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"Queued\"</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">progress_stats</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"status\"</code><code class=\"ANY\">]</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"Queued\"</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">stage</code> <code class=\"ANY\">=</code> <code class=\"CHAR_STRING_LITERAL\">\"Active\"</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">stage</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"Active\"</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">progress_stats</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"status\"</code><code class=\"ANY\">]</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"Pre Processing\"</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">stage</code> <code class=\"ANY\">=</code> <code class=\"CHAR_STRING_LITERAL\">\"Completed\"</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">stage</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"Completed\"</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">progress_stats</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"status\"</code><code class=\"ANY\">]</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"Finished\"</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">stage</code> <code class=\"ANY\">=</code> <code class=\"CHAR_STRING_LITERAL\">\"Paused\"</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">stage</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"Paused\"</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">progress_stats</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"status\"</code><code class=\"ANY\">]</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"Paused\"</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">stage</code> <code class=\"ANY\">=</code> <code class=\"CHAR_STRING_LITERAL\">\"Error\"</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">stage</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"Error\"</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">progress_stats</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"status\"</code><code class=\"ANY\">]</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"Error\"</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">test_set_stage_invalid</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">raised</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">False</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">try</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">stage</code> <code class=\"ANY\">=</code> <code class=\"CHAR_STRING_LITERAL\">\"some other status\"</code>\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">except</code> <code class=\"ANY\">ValueError</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">raised</code> <code class=\"ANY\">=</code> <code class=\"LITERAL\">True</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertTrue</code><code class=\"ANY\">(</code><code class=\"ANY\">raised</code><code class=\"ANY\">)</code>\n\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">TestUpdateStats</code><code class=\"ANY\">(</code><code class=\"ANY\">unittest</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">TestCase</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n\n<code class=\"ANY\">    </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Test case for DownloadItem update_stats method.\"\"\"</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">setUp</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">DownloadItem</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"url\"</code><code class=\"ANY\">,</code> <code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"-f\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"flv\"</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">test_update_stats</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">path</code> <code class=\"ANY\">=</code> <code class=\"ANY\">os</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">path</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">join</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"/home\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"user\"</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># 1st playlist item</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">update_stats</code><code class=\"ANY\">(</code><code class=\"ANY\">{</code><code class=\"CHAR_STRING_LITERAL\">\"filename\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"somefilename.f1\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"extension\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\".mp4\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"filesize\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"9.45MiB\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"percent\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"2.0%\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"speed\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"200.00KiB/s\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"eta\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"00:38\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"status\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"Downloading\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"path\"</code><code class=\"ANY\">:</code> <code class=\"ANY\">path</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"playlist_size\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"10\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"playlist_index\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"1\"</code><code class=\"ANY\">}</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">path</code><code class=\"ANY\">,</code> <code class=\"ANY\">path</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">filenames</code><code class=\"ANY\">,</code> <code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"somefilename.f1\"</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">extensions</code><code class=\"ANY\">,</code> <code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\".mp4\"</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># Do not update filesizes unless percentage is 100%</code>\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># See https://github.com/MrS0m30n3/youtube-dl-gui/issues/162</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">filesizes</code><code class=\"ANY\">,</code> <code class=\"ANY\">[</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code>\n            <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">progress_stats</code><code class=\"ANY\">,</code>\n            <code class=\"ANY\">{</code><code class=\"CHAR_STRING_LITERAL\">\"filename\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"somefilename.f1\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"extension\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\".mp4\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"filesize\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"9.45MiB\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"percent\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"2.0%\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"speed\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"200.00KiB/s\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"eta\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"00:38\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"status\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"Downloading\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"playlist_size\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"10\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"playlist_index\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"1\"</code><code class=\"ANY\">}</code>\n        <code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># Since the percentage is 100% this should update the filesizes list</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">update_stats</code><code class=\"ANY\">(</code><code class=\"ANY\">{</code><code class=\"CHAR_STRING_LITERAL\">\"filesize\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"9.45MiB\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"percent\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"100%\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"speed\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"eta\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"status\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"Downloading\"</code><code class=\"ANY\">}</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">filesizes</code><code class=\"ANY\">,</code> <code class=\"ANY\">[</code><code class=\"LITERAL\">9909043.20</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">update_stats</code><code class=\"ANY\">(</code><code class=\"ANY\">{</code><code class=\"CHAR_STRING_LITERAL\">\"filename\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"somefilename.f2\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"extension\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\".m4a\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"filesize\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"2.22MiB\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"percent\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"33.0%\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"speed\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"200.00KiB/s\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"eta\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"00:20\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"status\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"Downloading\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"path\"</code><code class=\"ANY\">:</code> <code class=\"ANY\">path</code><code class=\"ANY\">}</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">path</code><code class=\"ANY\">,</code> <code class=\"ANY\">path</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">filenames</code><code class=\"ANY\">,</code> <code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"somefilename.f1\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"somefilename.f2\"</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">extensions</code><code class=\"ANY\">,</code> <code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\".mp4\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\".m4a\"</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">filesizes</code><code class=\"ANY\">,</code> <code class=\"ANY\">[</code><code class=\"LITERAL\">9909043.20</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code>\n            <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">progress_stats</code><code class=\"ANY\">,</code>\n            <code class=\"ANY\">{</code><code class=\"CHAR_STRING_LITERAL\">\"filename\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"somefilename.f2\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"extension\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\".m4a\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"filesize\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"2.22MiB\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"percent\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"33.0%\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"speed\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"200.00KiB/s\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"eta\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"00:20\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"status\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"Downloading\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"playlist_size\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"10\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"playlist_index\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"1\"</code><code class=\"ANY\">}</code>\n        <code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># Since the percentage is 100% this should update the filesizes list</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">update_stats</code><code class=\"ANY\">(</code><code class=\"ANY\">{</code><code class=\"CHAR_STRING_LITERAL\">\"filesize\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"2.22MiB\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"percent\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"100%\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"speed\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"eta\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"status\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"Downloading\"</code><code class=\"ANY\">}</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">filesizes</code><code class=\"ANY\">,</code> <code class=\"ANY\">[</code><code class=\"LITERAL\">9909043.20</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">2327838.72</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># Moving to the 2nd playlist item</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">update_stats</code><code class=\"ANY\">(</code><code class=\"ANY\">{</code><code class=\"CHAR_STRING_LITERAL\">\"filename\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"someotherfilename.f1\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"extension\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\".mp4\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"filesize\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"10.25MiB\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"percent\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"50.0%\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"speed\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"200.00KiB/s\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"eta\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"00:38\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"status\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"Downloading\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"path\"</code><code class=\"ANY\">:</code> <code class=\"ANY\">path</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"playlist_size\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"10\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"playlist_index\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"2\"</code><code class=\"ANY\">}</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># We must reset filenames, extensions & filesizes lists when changing playlist index</code>\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># else the filesizes for the post processed files will be wrong</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">filenames</code><code class=\"ANY\">,</code> <code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"someotherfilename.f1\"</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">extensions</code><code class=\"ANY\">,</code> <code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\".mp4\"</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">filesizes</code><code class=\"ANY\">,</code> <code class=\"ANY\">[</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code>\n            <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">progress_stats</code><code class=\"ANY\">,</code>\n            <code class=\"ANY\">{</code><code class=\"CHAR_STRING_LITERAL\">\"filename\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"someotherfilename.f1\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"extension\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\".mp4\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"filesize\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"10.25MiB\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"percent\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"50.0%\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"speed\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"200.00KiB/s\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"eta\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"00:38\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"status\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"Downloading\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"playlist_size\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"10\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"playlist_index\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"2\"</code><code class=\"ANY\">}</code>\n        <code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># Since the percentage is 100% this should update the filesizes list</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">update_stats</code><code class=\"ANY\">(</code><code class=\"ANY\">{</code><code class=\"CHAR_STRING_LITERAL\">\"filesize\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"10.25MiB\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"percent\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"100%\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"speed\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"eta\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"status\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"Downloading\"</code><code class=\"ANY\">}</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">filesizes</code><code class=\"ANY\">,</code> <code class=\"ANY\">[</code><code class=\"LITERAL\">10747904.0</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">update_stats</code><code class=\"ANY\">(</code><code class=\"ANY\">{</code><code class=\"CHAR_STRING_LITERAL\">\"filename\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"someotherfilename.f2\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"extension\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\".m4a\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"filesize\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"3.33MiB\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"percent\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"33.0%\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"speed\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"200.00KiB/s\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"eta\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"00:30\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"status\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"Downloading\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"path\"</code><code class=\"ANY\">:</code> <code class=\"ANY\">path</code><code class=\"ANY\">}</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">path</code><code class=\"ANY\">,</code> <code class=\"ANY\">path</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">filenames</code><code class=\"ANY\">,</code> <code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"someotherfilename.f1\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"someotherfilename.f2\"</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">extensions</code><code class=\"ANY\">,</code> <code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\".mp4\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\".m4a\"</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">filesizes</code><code class=\"ANY\">,</code> <code class=\"ANY\">[</code><code class=\"LITERAL\">10747904.0</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code>\n            <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">progress_stats</code><code class=\"ANY\">,</code>\n            <code class=\"ANY\">{</code><code class=\"CHAR_STRING_LITERAL\">\"filename\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"someotherfilename.f2\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"extension\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\".m4a\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"filesize\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"3.33MiB\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"percent\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"33.0%\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"speed\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"200.00KiB/s\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"eta\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"00:30\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"status\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"Downloading\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"playlist_size\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"10\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"playlist_index\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"2\"</code><code class=\"ANY\">}</code>\n        <code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># Since the percentage is 100% this should update the filesizes list</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">update_stats</code><code class=\"ANY\">(</code><code class=\"ANY\">{</code><code class=\"CHAR_STRING_LITERAL\">\"filesize\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"3.33MiB\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"percent\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"100%\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"speed\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"eta\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"status\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"Downloading\"</code><code class=\"ANY\">}</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">filesizes</code><code class=\"ANY\">,</code> <code class=\"ANY\">[</code><code class=\"LITERAL\">10747904.0</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">3491758.08</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># Let's move to the 3rd playlist item</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># Here we mimic youtube-dl's \"max downloads limit reached\"</code>\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># this line should not reset the filenames, extensions & filesizes lists</code>\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># since we will lose the ability to play the last playlist item</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">update_stats</code><code class=\"ANY\">(</code><code class=\"ANY\">{</code><code class=\"CHAR_STRING_LITERAL\">\"status\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"Downloading\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"playlist_size\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"10\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"playlist_index\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"3\"</code><code class=\"ANY\">}</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">filenames</code><code class=\"ANY\">,</code> <code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"someotherfilename.f1\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"someotherfilename.f2\"</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">extensions</code><code class=\"ANY\">,</code> <code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\".mp4\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\".m4a\"</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">filesizes</code><code class=\"ANY\">,</code> <code class=\"ANY\">[</code><code class=\"LITERAL\">10747904.0</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">3491758.08</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code>\n            <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">progress_stats</code><code class=\"ANY\">,</code>\n            <code class=\"ANY\">{</code><code class=\"CHAR_STRING_LITERAL\">\"filename\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"someotherfilename.f2\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"extension\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\".m4a\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"filesize\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"3.33MiB\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"percent\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"100%\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"speed\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"-\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"eta\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"-\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"status\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"Downloading\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"playlist_size\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"10\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"playlist_index\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"3\"</code><code class=\"ANY\">}</code>\n        <code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">test_update_stats_invalid_input</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertRaises</code><code class=\"ANY\">(</code><code class=\"ANY\">AssertionError</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">update_stats</code><code class=\"ANY\">,</code> <code class=\"ANY\">[</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">test_update_stats_empty_strings</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">update_stats</code><code class=\"ANY\">(</code><code class=\"ANY\">{</code><code class=\"CHAR_STRING_LITERAL\">\"filename\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"extension\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"filesize\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"percent\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"speed\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"eta\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"status\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"playlist_size\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"\"</code><code class=\"ANY\">,</code>\n                                 <code class=\"CHAR_STRING_LITERAL\">\"playlist_index\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"\"</code><code class=\"ANY\">}</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code>\n            <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">progress_stats</code><code class=\"ANY\">,</code>\n            <code class=\"ANY\">{</code><code class=\"CHAR_STRING_LITERAL\">\"filename\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"url\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"extension\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"-\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"filesize\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"-\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"percent\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"0%\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"speed\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"-\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"eta\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"-\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"status\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"Queued\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"playlist_size\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"playlist_index\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"\"</code><code class=\"ANY\">}</code>\n        <code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">test_update_stats_not_string</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">update_stats</code><code class=\"ANY\">(</code><code class=\"ANY\">{</code><code class=\"CHAR_STRING_LITERAL\">\"filename\"</code><code class=\"ANY\">:</code> <code class=\"KEYWORD\">None</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"status\"</code><code class=\"ANY\">:</code> <code class=\"LITERAL\">1234</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"eta\"</code><code class=\"ANY\">:</code> <code class=\"LITERAL\">False</code><code class=\"ANY\">}</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">progress_stats</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"filename\"</code><code class=\"ANY\">]</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"url\"</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">progress_stats</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"status\"</code><code class=\"ANY\">]</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"Queued\"</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">progress_stats</code><code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"eta\"</code><code class=\"ANY\">]</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"-\"</code><code class=\"ANY\">)</code>\n\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">TestDownloadItemPrivate</code><code class=\"ANY\">(</code><code class=\"ANY\">unittest</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">TestCase</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n\n<code class=\"ANY\">    </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Test case for private method of the DownloadItem.\"\"\"</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">test_set_stage</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">ditem</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">DownloadItem</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"url\"</code><code class=\"ANY\">,</code> <code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"-f\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"flv\"</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">active_status</code> <code class=\"ANY\">=</code> <code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"Pre Processing\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"Downloading\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"Post Processing\"</code><code class=\"ANY\">]</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">complete_status</code> <code class=\"ANY\">=</code> <code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"Finished\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"Warning\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"Already Downloaded\"</code><code class=\"ANY\">]</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">error_status</code> <code class=\"ANY\">=</code> <code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"Error\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"Stopped\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"Filesize Abort\"</code><code class=\"ANY\">]</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">status</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">active_status</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">ditem</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_set_stage</code><code class=\"ANY\">(</code><code class=\"ANY\">status</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">stage</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"Active\"</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">status</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">complete_status</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">ditem</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_set_stage</code><code class=\"ANY\">(</code><code class=\"ANY\">status</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">stage</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"Completed\"</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"KEYWORD\">for</code> <code class=\"ANY\">status</code> <code class=\"KEYWORD\">in</code> <code class=\"ANY\">error_status</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">            </code><code class=\"ANY\">ditem</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">_set_stage</code><code class=\"ANY\">(</code><code class=\"ANY\">status</code><code class=\"ANY\">)</code>\n           <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">stage</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"Error\"</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">test_calc_post_proc_size</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"COMMENT\"># REFACTOR Not an actual method</code>\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># should transfer to TestUpdateStats</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">ditem</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">DownloadItem</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"url\"</code><code class=\"ANY\">,</code> <code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"-f\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"flv\"</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">ditem</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">update_stats</code><code class=\"ANY\">(</code><code class=\"ANY\">{</code><code class=\"CHAR_STRING_LITERAL\">\"filename\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"file.f123\"</code><code class=\"ANY\">,</code>\n                            <code class=\"CHAR_STRING_LITERAL\">\"extension\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\".webm\"</code><code class=\"ANY\">,</code>\n                            <code class=\"CHAR_STRING_LITERAL\">\"filesize\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"10.00MiB\"</code><code class=\"ANY\">,</code>\n                            <code class=\"CHAR_STRING_LITERAL\">\"percent\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"100%\"</code><code class=\"ANY\">,</code>\n                            <code class=\"CHAR_STRING_LITERAL\">\"speed\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"\"</code><code class=\"ANY\">,</code>\n                            <code class=\"CHAR_STRING_LITERAL\">\"eta\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"\"</code><code class=\"ANY\">,</code>\n                            <code class=\"CHAR_STRING_LITERAL\">\"status\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"Downloading\"</code><code class=\"ANY\">,</code>\n                            <code class=\"CHAR_STRING_LITERAL\">\"path\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"/home/user\"</code><code class=\"ANY\">}</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">ditem</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">update_stats</code><code class=\"ANY\">(</code><code class=\"ANY\">{</code><code class=\"CHAR_STRING_LITERAL\">\"filename\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"file.f456\"</code><code class=\"ANY\">,</code>\n                            <code class=\"CHAR_STRING_LITERAL\">\"extension\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\".m4a\"</code><code class=\"ANY\">,</code>\n                            <code class=\"CHAR_STRING_LITERAL\">\"filesize\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"3.45MiB\"</code><code class=\"ANY\">,</code>\n                            <code class=\"CHAR_STRING_LITERAL\">\"percent\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"100%\"</code><code class=\"ANY\">,</code>\n                            <code class=\"CHAR_STRING_LITERAL\">\"speed\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"\"</code><code class=\"ANY\">,</code>\n                            <code class=\"CHAR_STRING_LITERAL\">\"eta\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"\"</code><code class=\"ANY\">,</code>\n                            <code class=\"CHAR_STRING_LITERAL\">\"status\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"Downloading\"</code><code class=\"ANY\">,</code>\n                            <code class=\"CHAR_STRING_LITERAL\">\"path\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"/home/user\"</code><code class=\"ANY\">}</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># Mimic youtube-dl post process behaviour</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">ditem</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">update_stats</code><code class=\"ANY\">(</code><code class=\"ANY\">{</code><code class=\"CHAR_STRING_LITERAL\">\"filename\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"file\"</code><code class=\"ANY\">,</code>\n                            <code class=\"CHAR_STRING_LITERAL\">\"extension\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\".webm\"</code><code class=\"ANY\">,</code>\n                            <code class=\"CHAR_STRING_LITERAL\">\"percent\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"100%\"</code><code class=\"ANY\">,</code>\n                            <code class=\"CHAR_STRING_LITERAL\">\"speed\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"\"</code><code class=\"ANY\">,</code>\n                            <code class=\"CHAR_STRING_LITERAL\">\"eta\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"\"</code><code class=\"ANY\">,</code>\n                            <code class=\"CHAR_STRING_LITERAL\">\"status\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"Post Processing\"</code><code class=\"ANY\">}</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">filesizes</code><code class=\"ANY\">,</code> <code class=\"ANY\">[</code><code class=\"LITERAL\">10485760.00</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">3617587.20</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">14103347.20</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code>\n            <code class=\"ANY\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">progress_stats</code><code class=\"ANY\">,</code>\n            <code class=\"ANY\">{</code><code class=\"CHAR_STRING_LITERAL\">\"filename\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"file\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"extension\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\".webm\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"filesize\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"13.45MiB\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"percent\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"100%\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"speed\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"-\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"eta\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"-\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"status\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"Post Processing\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"playlist_size\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"playlist_index\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"\"</code><code class=\"ANY\">}</code>\n        <code class=\"ANY\">)</code>\n\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">class</code> <code class=\"CLASS_DECLARATOR\">TestReset</code><code class=\"ANY\">(</code><code class=\"ANY\">unittest</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">TestCase</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n\n<code class=\"ANY\">    </code><code class=\"CHAR_STRING_LITERAL\">\"\"\"Test case for the DownloadItem reset method.\"\"\"</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">setUp</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code> <code class=\"ANY\">=</code> <code class=\"FUNCTION_IDENTIFIER\">DownloadItem</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"url\"</code><code class=\"ANY\">,</code> <code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"-f\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"flv\"</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">test_reset_completed_stage</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_stage</code> <code class=\"ANY\">=</code> <code class=\"CHAR_STRING_LITERAL\">\"Completed\"</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">path</code> <code class=\"ANY\">=</code> <code class=\"ANY\">os</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">path</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">join</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"/home\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"user\"</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">filenames</code> <code class=\"ANY\">=</code> <code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"file\"</code><code class=\"ANY\">]</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">extensions</code> <code class=\"ANY\">=</code> <code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\".mp4\"</code><code class=\"ANY\">]</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">filesizes</code> <code class=\"ANY\">=</code> <code class=\"ANY\">[</code><code class=\"LITERAL\">123456.00</code><code class=\"ANY\">]</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">progress_stats</code> <code class=\"ANY\">=</code> <code class=\"ANY\">{</code>\n            <code class=\"CHAR_STRING_LITERAL\">\"filename\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"file\"</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">\"extension\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\".mp4\"</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">\"filsize\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"6.66MiB\"</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">\"percent\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"100%\"</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">\"speed\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"-\"</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">\"eta\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"-\"</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">\"status\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"Finished\"</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">\"playlist_size\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"\"</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">\"playlist_index\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"\"</code>\n        <code class=\"ANY\">}</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">reset</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_stage</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"Queued\"</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">path</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"\"</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">filenames</code><code class=\"ANY\">,</code> <code class=\"ANY\">[</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">extensions</code><code class=\"ANY\">,</code> <code class=\"ANY\">[</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">filesizes</code><code class=\"ANY\">,</code> <code class=\"ANY\">[</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code>\n            <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">progress_stats</code><code class=\"ANY\">,</code>\n            <code class=\"ANY\">{</code><code class=\"CHAR_STRING_LITERAL\">\"filename\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"url\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"extension\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"-\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"filesize\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"-\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"percent\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"0%\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"speed\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"-\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"eta\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"-\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"status\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"Queued\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"playlist_size\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"playlist_index\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"\"</code><code class=\"ANY\">}</code>\n        <code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">test_reset_error_stage</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_stage</code> <code class=\"ANY\">=</code> <code class=\"CHAR_STRING_LITERAL\">\"Error\"</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">path</code> <code class=\"ANY\">=</code> <code class=\"ANY\">os</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">path</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">join</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"/home\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"user\"</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">filenames</code> <code class=\"ANY\">=</code> <code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"file1\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"file2\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"file\"</code><code class=\"ANY\">]</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">extensions</code> <code class=\"ANY\">=</code> <code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\".mp4\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\".m4a\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\".mp4\"</code><code class=\"ANY\">]</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">filesizes</code> <code class=\"ANY\">=</code> <code class=\"ANY\">[</code><code class=\"LITERAL\">1234.00</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">3421.00</code><code class=\"ANY\">,</code> <code class=\"LITERAL\">4655.00</code><code class=\"ANY\">]</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">progress_stats</code> <code class=\"ANY\">=</code> <code class=\"ANY\">{</code>\n            <code class=\"CHAR_STRING_LITERAL\">\"filename\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"file\"</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">\"extension\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\".mp4\"</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">\"filsize\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"9.45MiB\"</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">\"percent\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"100%\"</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">\"speed\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"-\"</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">\"eta\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"-\"</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">\"status\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"Error\"</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">\"playlist_size\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"10\"</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">\"playlist_index\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"8\"</code>\n        <code class=\"ANY\">}</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">reset</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_stage</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"Queued\"</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">path</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"\"</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">filenames</code><code class=\"ANY\">,</code> <code class=\"ANY\">[</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">extensions</code><code class=\"ANY\">,</code> <code class=\"ANY\">[</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">filesizes</code><code class=\"ANY\">,</code> <code class=\"ANY\">[</code><code class=\"ANY\">]</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code>\n            <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">progress_stats</code><code class=\"ANY\">,</code>\n            <code class=\"ANY\">{</code><code class=\"CHAR_STRING_LITERAL\">\"filename\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"url\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"extension\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"-\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"filesize\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"-\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"percent\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"0%\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"speed\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"-\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"eta\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"-\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"status\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"Queued\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"playlist_size\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"\"</code><code class=\"ANY\">,</code>\n             <code class=\"CHAR_STRING_LITERAL\">\"playlist_index\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"\"</code><code class=\"ANY\">}</code>\n        <code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">test_reset_paused_stage</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_stage</code> <code class=\"ANY\">=</code> <code class=\"CHAR_STRING_LITERAL\">\"Paused\"</code>\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># No need to change filanames, extension, etc</code>\n       <code class=\"ANY\"> </code><code class=\"COMMENT\"># since everything in pause state has the default value</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">reset</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertEqual</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_stage</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"Queued\"</code><code class=\"ANY\">)</code>\n\n   <code class=\"ANY\"> </code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">test_reset_active_stage</code><code class=\"ANY\">(</code><code class=\"ANY\">self</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">        </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">_stage</code> <code class=\"ANY\">=</code> <code class=\"CHAR_STRING_LITERAL\">\"Active\"</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">path</code> <code class=\"ANY\">=</code> <code class=\"ANY\">os</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">path</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">join</code><code class=\"ANY\">(</code><code class=\"CHAR_STRING_LITERAL\">\"/home\"</code><code class=\"ANY\">,</code> <code class=\"CHAR_STRING_LITERAL\">\"user\"</code><code class=\"ANY\">)</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">filenames</code> <code class=\"ANY\">=</code> <code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\"file1\"</code><code class=\"ANY\">]</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">extensions</code> <code class=\"ANY\">=</code> <code class=\"ANY\">[</code><code class=\"CHAR_STRING_LITERAL\">\".mp4\"</code><code class=\"ANY\">]</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">filesizes</code> <code class=\"ANY\">=</code> <code class=\"ANY\">[</code><code class=\"ANY\">]</code>\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">progress_stats</code> <code class=\"ANY\">=</code> <code class=\"ANY\">{</code>\n            <code class=\"CHAR_STRING_LITERAL\">\"filename\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"file1\"</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">\"extension\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\".mp4\"</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">\"filsize\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"9.45MiB\"</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">\"percent\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"75.5%\"</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">\"speed\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"200.00KiB/s\"</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">\"eta\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"00:10\"</code><code class=\"ANY\">,</code>\n            <code class=\"CHAR_STRING_LITERAL\">\"status\"</code><code class=\"ANY\">:</code> <code class=\"CHAR_STRING_LITERAL\">\"Downloading\"</code>\n        <code class=\"ANY\">}</code>\n\n       <code class=\"ANY\"> </code><code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">assertRaises</code><code class=\"ANY\">(</code><code class=\"ANY\">RuntimeError</code><code class=\"ANY\">,</code> <code class=\"ANY\">self</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">ditem</code><code class=\"ANY\">.</code><code class=\"FIELD_IDENTIFIER\">reset</code><code class=\"ANY\">)</code>\n\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">def</code> <code class=\"FUNCTION_DECLARATOR\">main</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">    </code><code class=\"ANY\">unittest</code><code class=\"ANY\">.</code><code class=\"FUNCTION_IDENTIFIER\">main</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code>\n\n<code class=\"ANY\">\n</code><code class=\"KEYWORD\">if</code> <code class=\"ANY\">__name__</code> <code class=\"ANY\">==</code> <code class=\"CHAR_STRING_LITERAL\">'__main__'</code><code class=\"ANY\">:</code>\n<code class=\"ANY\">    </code><code class=\"FUNCTION_IDENTIFIER\">main</code><code class=\"ANY\">(</code><code class=\"ANY\">)</code><code class=\"ANY\">\n</code>\n</pre>\n</html>"}]
