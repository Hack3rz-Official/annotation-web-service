name: Training Service
on:
  push:
    branches:
      - develop
      - feature/setup-ci-sonarqube
    paths:
      - 'training-service/**'
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  env:
    name: Load ENV variables
    runs-on: ubuntu-latest
    outputs:
      env: ${{ steps.import-env.outputs.result }}

    steps:
    - uses: actions/checkout@v2
    - name: Import environment variables from a file
      id: import-env
      shell: bash
      run: |
        while read line; do
          echo "$line" >> $GITHUB_ENV
        done < ${{ env.ENV_FILE }}

    - name: Print environment variable
      run: echo $ABC
      env: ${{ fromJson(steps.import-env.outputs.result) }} # step-level env

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest

    needs: [env]
    env: ${{ fromJson(needs.env.outputs.env) }}

    services:
      mongodb:
        image: mongo:5.0.6
        ports:
          - "27017:${MONGO_PORT}"

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up Python
        working-directory: training-service
        run: sudo apt-get install python3
      - name: Install dependencies
        working-directory: training-service
        run: |
           sudo pip install coverage
           python3 -m pip install --upgrade pip
           pip install -r requirements.txt
      - name: Test with unittest
        working-directory: training-service
        run: coverage run -m unittest discover
      - name: Generate Coverage Report
        working-directory: training-service
        run: coverage xml
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: training-service
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}