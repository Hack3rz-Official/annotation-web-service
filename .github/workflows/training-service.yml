name: Training Service
on:
  push:
    branches:
      - develop
      - feature/setup-ci-sonarqube
    paths:
      - 'training-service/**'
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: training-service

    services:
      mongodb:
        image: mongo:5.0.6
        env:
          PUID: 1000
          PGID: 1000
          MONGO_INITDB_ROOT_USERNAME: admin
          MONGO_INITDB_ROOT_PASSWORD: palm_tree_poppin_out_the_powder_blue_sky
          MONGO_USERNAME: hack3rz
          MONGO_PASSWORD=: alm_tree_poppin_out_the_powder_blue_sky
          MONGO_DATABASE_NAME: aws
          MONGO_DATABASE_TEST_NAME: aws_test
          MONGO_PORT: 27017
          MONGO_HOST: mongodb
          MONGO_AUTH_DATABASE: admin
          TRAINING_BATCH_SIZE: 100
          MODEL_NAME: best
        ports:
          - "27017:27017"
        volumes:
          - ./data:/data/db
          - ./mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up Python
        run: sudo apt-get install python3
      - name: Install dependencies
        run: |
           sudo pip install coverage
           python3 -m pip install --upgrade pip
           pip install -r requirements.txt
      - name: Test with unittest
        run: |
           cd test
           coverage run -m unittest discover
      - name: Generate Coverage Report
        run: coverage xml
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: training-service
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}