events {
    worker_connections   1000;
}
http {
    # defines the servers that are used to balance the traffic
    upstream annotation-service {
        #URL of the docker instance
        # first part refers to the name of the service in docker-compose
        server annotation-web-service-annotation-1:${ANNOTATION_SERVICE_PORT};
        server annotation-web-service-annotation-2:${ANNOTATION_SERVICE_PORT};
    }

    upstream prediction-service {
        # URL of the docker instance
        # first part refers to the name of the service in docker-compose
        server annotation-web-service-prediction-1:${PREDICTION_SERVICE_PORT};
        server annotation-web-service-prediction-2:${PREDICTION_SERVICE_PORT};
    }

    # defines a virtual server running on nginx
    # /annotation will be forwarded to the annotation service
    server {

        listen ${NGINX_PORT};



        location /api/v1/annotation {

            if ($http_origin = ''){
                set $http_origin "*";
            }

            proxy_hide_header Access-Control-Allow-Origin;
            add_header Access-Control-Allow-Origin $http_origin;

            # Simple requests
            if ($request_method ~* "(GET|POST)") {
                add_header "Access-Control-Allow-Origin"  *;
            }

            # Preflighted requests
            if ($request_method = OPTIONS ) {
                add_header "Access-Control-Allow-Origin"  *;
                add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
                add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
                return 200;
            }

            allow all;
            # will use the upstream "annotation-service" defined above
            proxy_pass http://annotation-service;
        }
        location /api/v1/prediction {

            if ($http_origin = ''){
                set $http_origin "*";
            }

            proxy_hide_header Access-Control-Allow-Origin;
            add_header Access-Control-Allow-Origin $http_origin;

            # Simple requests
            if ($request_method ~* "(GET|POST)") {
                add_header "Access-Control-Allow-Origin"  *;
            }

            # Preflighted requests
            if ($request_method = OPTIONS ) {
                add_header "Access-Control-Allow-Origin"  *;
                add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
                add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
                return 200;
            }


            allow all;
            proxy_pass http://prediction-service;
        }
    }
}